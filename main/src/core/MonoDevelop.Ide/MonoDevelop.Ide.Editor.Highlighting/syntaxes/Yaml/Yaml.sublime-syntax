%YAML 1.2
---
# Yaml.sublime-syntax
# 
#  Author:
#    Mike Kr√ºger <mkrueger@novell.com>
# 
#  Copyright (c) 2016 Microsoft Corporation
# 
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
# 
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
# 
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#  THE SOFTWARE.

name: "Yaml"
file_extensions:
  - yaml
  - sublime-syntax
scope: source.yaml
contexts:
  main:
    - include: comments
    - include: structures
    - include: directives
    - include: tags
  comments:
    - match: '\s#|^#'
      scope: comment.line.source.yaml
      push:
        - include: commenttags
        - match: $\n?
          pop: true
  commenttags:
    - match: '\b((?i:todo)|(?i:fixme)|(?i:hack)|(?i:undone))\b'
      scope: markup.other.source.yaml
  structures:
    - match: '^(---|\.\.\.)'
      scope: keyword.source.yaml
  directives:
    - match: '^(%)(\S*)\s+(.*)$'
      captures:
        1: source.yaml
        2: string.quoted.single.source.yaml
        3: entity.name.tag.source.yaml
  tags:
    - match: '^\s*(-)\s+(\S*[\w\d_])(:)?'
      captures:
        1: source.yaml
        2: entity.name.tag.source.yaml
        3: source.yaml
      push:
        - meta_content_scope: string.quoted.single.source.yaml
        - match: '(?=^\s*(?:(-\s+\S*:?)|(?:\S+:)))'
          pop: true
    - match: '^\s*(\S*[\w\d_])(:)'
      captures:
        1: entity.name.tag.source.yaml
        2: source.yaml
      push:
        - meta_content_scope: string.quoted.single.source.yaml
        - match: '(?=^\s*(?:(-\s+\S*:?)|(?:\S+:)))'
          pop: true