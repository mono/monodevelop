%YAML 1.2
---
# AppleStrings.sublime-syntax
# 
#  Author:
#    Mike Krüger <mikkrg@microsoft.com>
# 
#  Copyright (c) 2016 Microsoft Corporation
# 
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
# 
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
# 
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#  THE SOFTWARE.

name: "IL"
file_extensions:
  - strings
scope: source.strings
contexts:
  main:
    - include: comments
    - include: numbers
    - include: strings
  comments:
    - match: '//'
      scope: comment.line.source.strings
      push:
        - include: commenttags
        - match: $\n?
          pop: true
    - match: '/\*'
      scope: comment.block.source.strings
      push:
        - include: commenttags
        - match: '\*/\n?'
          pop: true
  commenttags:
    - match: '\b((?i:todo)|(?i:fixme)|(?i:hack)|(?i:undone))\b'
      scope: markup.other.source.strings
  numbers:
    - match: '((\b\d+\.?\d+)|(\.\d+))([eE][+-]?\d*)?(F|f|D|d|M|m)?\b'
      scope: constant.numeric.float.source.strings
    - match: '\b(0[xX][0-9a-fA-F]+?|\d+)(U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?\b'
      scope: constant.numeric.source.strings
  strings:
    - match: "'"
      scope: string.quoted.single.source.strings
      push:
        - match: '\\.'
          scope: constant.character.escape.source.strings
        - match: "('|$\n?)"
          pop: true
    - match: '"'
      scope: string.quoted.double.source.strings
      push:
        - match: '\\.'
          scope: constant.character.escape.source.strings
        - match: '("|$\n?)'
          pop: true