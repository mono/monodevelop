<Addin id          = "Core"
       namespace   = "MonoDevelop"
       name        = "MonoDevelop Runtime"
       copyright   = "MIT/X11"
       url         = "http://www.monodevelop.com"
       description = "Provides the core services of the MonoDevelop platform"
       category    = "MonoDevelop Core"
       isroot      = "true"
       version     = "2.6"
       compatVersion = "2.6">
       
	<ConditionType id="PackageInstalled" type="MonoDevelop.Core.AddIns.PackageInstalledCondition" />
	<ConditionType id="PackageNotInstalled" type="MonoDevelop.Core.AddIns.PackageNotInstalledCondition" />
	<ConditionType id="Platform" type="MonoDevelop.Core.AddIns.PlatformCondition" />

	
	<!-- Extension points -->
	
	
	<ExtensionPoint path = "/MonoDevelop/Core/ExecutionModes" name = "Execution modes">
		<Description>Execution modes such as default, debug, profiler, etc.</Description>
		<ExtensionNode name="Mode" type="MonoDevelop.Core.AddIns.ExecutionModeNode" />
		<ExtensionNode name="ModeSet" type="MonoDevelop.Core.AddIns.ExecutionModeSetNode" />
		<ExtensionNode name="ModeSetType" />
	</ExtensionPoint>

	<ExtensionPoint path = "/MonoDevelop/Core/ExecutionHandlers" name = "Execution handlers">
		<Description>Execution handlers for the default execution mode. Specified types must implement IExecutionHandler.</Description>
		<ExtensionNode name="ExecutionHandler"/>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/Core/FileSystemExtensions" name = "File system extensions">
		<Description>File system extensions which can provide specific behavior when handling files. Specified classes must implement MonoDevelop.Core.FileSystem.FileSystemExtension.</Description>
		<ExtensionNode name="Class" objectType="MonoDevelop.Core.FileSystem.FileSystemExtension"/>
	</ExtensionPoint>

	<ExtensionPoint path = "/MonoDevelop/Core/Applications" name = "Applications">
		<Description>MonoDevelop tools.</Description>
		<ExtensionNode name="Application" type="MonoDevelop.Core.AddIns.ApplicationExtensionNode"/>
	</ExtensionPoint>

	<ExtensionPoint path = "/MonoDevelop/Core/SupportPackages">
		<ExtensionNode name="Package" type="MonoDevelop.Core.AddIns.PackageExtensionNode"/>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/Core/Runtimes">
		<Description>Runtime factories.</Description>
		<ExtensionNode name="Class" objectType="MonoDevelop.Core.AddIns.ITargetRuntimeFactory"/>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/Core/Frameworks">
		<Description>Target frameworks.</Description>
		<ExtensionNode name="Framework" type="MonoDevelop.Core.AddIns.TargetFrameworkNode" objectType="MonoDevelop.Core.Assemblies.TargetFramework">
			<Description>Definition of a framework. The list of assemblies of the framework is defined in the referenced resource file.</Description>
			<ExtensionNode name="Backend" objectType="MonoDevelop.Core.Assemblies.TargetFrameworkBackend">
				<Description>A framework backend. Provides support for a framework for a runtime.</Description>
			</ExtensionNode>
		</ExtensionNode>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/Core/UserDataMigration">
		<Description>Defines data to be migrated from the previous version of MonoDevelop.</Description>
		<ExtensionNode name="Migration" type="MonoDevelop.Core.AddIns.UserDataMigrationNode" />
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/ProjectModel/Ambiences" name = "Language ambiences">
		<Description>Language ambiences. Specified classes must implement IAmbience.</Description>
		<ExtensionNode name="Class" />
	</ExtensionPoint>

	<ExtensionPoint path = "/MonoDevelop/ProjectModel/ProjectBindings" name = "Project bindings">
		<Description>Project bindings</Description>
		<ExtensionNode name="ProjectBinding" type="MonoDevelop.Projects.Extensions.ProjectBindingCodon">
			<Description>A project binding. The specified class must implement MonoDevelop.Projects.IProjectBinding.</Description>
		</ExtensionNode>	
	</ExtensionPoint>

	<ExtensionPoint path = "/MonoDevelop/ProjectModel/FileFormats" name = "Solution file format handlers">
		<Description>File format handlers for workspaces, solutions and projects</Description>
		<ExtensionNode name="FileFormat" type="MonoDevelop.Projects.Extensions.FileFormatNode">
			<Description>A file format handler. The specified class must implement MonoDevelop.Projects.IFileFormat.</Description>
		</ExtensionNode>	
	</ExtensionPoint>

	<ExtensionPoint path = "/MonoDevelop/ProjectModel/SerializableClasses" name = "Serializable classes">
		<Description>Classes to be registered for serialization.</Description>
		<ExtensionNode name="DataType" type="MonoDevelop.Projects.Extensions.DataTypeCodon" customAttributeType="MonoDevelop.Projects.ProjectModelDataItemAttribute">
			<Description>A type name.</Description>
		</ExtensionNode>
	</ExtensionPoint>

	<ExtensionPoint path = "/MonoDevelop/ProjectModel/ExtendedProperties" name = "Serializable classes">
		<Description>Custom properties for projects and other types.</Description>
		<ExtensionNode name="ItemProperty" type="MonoDevelop.Projects.Extensions.ItemPropertyCodon">
			<Description>A custom property. The type specified in the 'class' property is the type to which the property has to be added. Only types which implement IExtendedDataItem can be extended in this way.</Description>
		</ExtensionNode>
	</ExtensionPoint>

	<ExtensionPoint path = "/MonoDevelop/ProjectModel/ProjectServiceExtensions" name = "Project service extensions">
		<Description>Project service extensions. Specified classes must be a subclass of ProjectServiceExtension</Description>
		<ConditionType id="ItemType" type="MonoDevelop.Core.Gui.Dialogs.OptionPanels.ItemTypeCondition">
			<Description>Type of the item. If no namespace is provided, MonoDevelop.Projects is assumed.</Description>
		</ConditionType>
		<ConditionType id="ActiveLanguage" type="MonoDevelop.Projects.Extensions.ItemTypeCondition">
			<Description>Language of the project. It will evaluate to false if the project is not a .NET project.</Description>
		</ConditionType>
		<ExtensionNode name="Class">
			<Description>A subclass of ProjectServiceExtension.</Description>
		</ExtensionNode>
	</ExtensionPoint>

	<ExtensionPoint path = "/MonoDevelop/ProjectModel/LanguageBindings" name = "Language bindings">
		<Description>Language bindings.</Description>
		<ExtensionNode name="LanguageBinding" type="MonoDevelop.Projects.Extensions.LanguageBindingCodon"/>
	</ExtensionPoint>

	<ExtensionPoint path = "/MonoDevelop/ProjectModel/MSBuildItemTypes" name = "MSBuild item types">
		<Description>Item types supported by MSBuild</Description>
		<ExtensionNode name="SolutionItem" type="MonoDevelop.Projects.Extensions.SolutionItemNode"/>
		<ExtensionNode name="DotNetProject" type="MonoDevelop.Projects.Extensions.DotNetProjectNode"/>
		<ExtensionNode name="DotNetProjectSubtype" type="MonoDevelop.Projects.Extensions.DotNetProjectSubtypeNode"/>
	</ExtensionPoint>

	<ExtensionPoint path = "/MonoDevelop/ProjectModel/MD1SerializationMaps">
		<Description>Serialization maps for the MonoDevelop 1.0 file format</Description>
		<ExtensionNode name="SerializationMap" type="MonoDevelop.Projects.Extensions.SerializationMapNode"/>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/ProjectModel/DomParser" name = "Parsers">
		<ExtensionNode name="Parser" type="MonoDevelop.Projects.Extensions.ParserNode"/>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/ProjectModel/PolicyTypes" name = "Policy types">
		<Description>Types for per-project policies language binding. These types must be serializable.</Description>
		<ExtensionNode name="PolicyType" customAttributeType="MonoDevelop.Projects.Policies.PolicyTypeAttribute" objectType="System.Object"/>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/ProjectModel/PolicySets" name = "Named policy sets">
		<ExtensionNode name="PolicySet" type="MonoDevelop.Projects.Extensions.PolicySetNode" >
			<ExtensionNode name="Policies" type="MonoDevelop.Projects.Extensions.PolicyResourceNode" />
		</ExtensionNode>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/ProjectModel/MSBuildImportProviders" name = "MSBuild Import Providers">
		<ExtensionNode objectType="MonoDevelop.Projects.Formats.MSBuild.IMSBuildImportProvider"/>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/ProjectModel/MonoDocSources" name = "MonoDoc Sources">
		<ExtensionNode name="Source" type="MonoDevelop.Projects.Extensions.MonoDocSourceNode" />
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/ProjectModel/CodeGenerators">
		<ExtensionNode name="Generator" type="MonoDevelop.Projects.CodeGeneration.MimeTypeExtensionNode"/>
	</ExtensionPoint>

	<ExtensionPoint path = "/MonoDevelop/ProjectModel/DocumentationGenerator">
		<ExtensionNode name="Class"/>
	</ExtensionPoint>
	<!-- Extensions -->
	
	
	<Extension path = "/MonoDevelop/Core/ExecutionModes">
<!--		<Mode id="Default" _name="Default" class="MonoDevelop.Core.Execution.DefaultExecutionHandlerFactory"/>-->
		<ModeSetType class="MonoDevelop.Core.Assemblies.CustomRuntimeExecutionModeSet"/>
	</Extension>
	
	<Extension path = "/MonoDevelop/Core/Runtimes">
		<Class class="MonoDevelop.Core.Assemblies.MsNetTargetRuntimeFactory"/>
		<Class class="MonoDevelop.Core.Assemblies.MonoTargetRuntimeFactory"/>
	</Extension>
	
	<Extension path = "/MonoDevelop/Core/Frameworks">
		<Framework id="Net_4.0" resource="framework_NET_4_0.xml"/>
		<Framework id="Net_3.5" resource="framework_NET_3_5.xml"/>
		<Framework id="Net_3.0" resource="framework_NET_3_0.xml"/>
		<Framework id="Net_2.0" resource="framework_NET_2_0.xml"/>
		<Framework id="Net_1.1" resource="framework_NET_1_1.xml"/>
	</Extension>
	
	<Extension path = "/MonoDevelop/Core/ExecutionHandlers">
		<ExecutionHandler id="Mono"
		                  class = "MonoDevelop.Core.Execution.DotNetExecutionHandler"/>
		<ExecutionHandler id="Native"
		                  class = "MonoDevelop.Core.Execution.NativePlatformExecutionHandler"/>
	</Extension>
	
	<Extension path = "/MonoDevelop/Core/UserDataMigration">
		<Migration sourceVersion="2.4" kind="Config" sourcePath="mono-runtimes.xml" />
		<Migration sourceVersion="2.4" kind="Data" sourcePath="DefaultPolicies.xml" targetPath="Policies/Default.mdpolicy.xml" />
		<!-- the following file belongs to the instrumetaion viewer but it's not an addin so can't register for migrations -->
		<Migration sourceVersion="2.4" kind="Config" sourcePath="monitor-views.xml" />
	</Extension>

	<Extension path = "/MonoDevelop/Core/Applications">
		<Application id = "build" class = "MonoDevelop.Projects.BuildTool" description = "Project build tool"/>
		<Application id = "dbgen" class = "MonoDevelop.Projects.Parser.DatabaseGeneratorTool" description = "Parser database generation tool"/>
		<Application id = "project-export" class = "MonoDevelop.Projects.ProjectConvertTool" description = "Project conversion tool"/>
	</Extension>
	
	<Extension path = "/MonoDevelop/ProjectModel/ProjectBindings">
		<ProjectBinding id = "DotNet" class = "MonoDevelop.Projects.DotNetProjectBinding" />
		<ProjectBinding id = "GenericProject" class = "MonoDevelop.Projects.GenericProjectBinding" />
	</Extension>
	  
	<Extension path = "/MonoDevelop/ProjectModel/FileFormats">
		<FileFormat id = "MSBuild08" 
			class = "MonoDevelop.Projects.Formats.MSBuild.MSBuildFileFormatVS08"
			name = "MSBuild (Visual Studio 2008)" />
		<FileFormat id = "MSBuild05" 
			class = "MonoDevelop.Projects.Formats.MSBuild.MSBuildFileFormatVS05"
			name = "MSBuild (Visual Studio 2005)" />
		<FileFormat id = "MSBuild10" 
			class = "MonoDevelop.Projects.Formats.MSBuild.MSBuildFileFormatVS10"
			name = "MSBuild (Visual Studio 2010)" />
		<FileFormat id = "MD1" 
			class = "MonoDevelop.Projects.Formats.MD1.MD1FileFormat"
			name = "MonoDevelop 1.0"/>
	</Extension>

	<Extension path = "/MonoDevelop/ProjectModel/ExtendedProperties">
	</Extension>

	<Extension path = "/MonoDevelop/ProjectModel/ProjectServiceExtensions">
		<Class id="InitialStep" class = "MonoDevelop.Projects.ProjectServiceExtension" />
		<Class class = "MonoDevelop.Projects.CompiledAssemblyExtension" />
		<Class id="MidStep" class = "MonoDevelop.Projects.ProjectServiceExtension" />
		<Class id="FinalStep" class = "MonoDevelop.Projects.ProjectServiceExtension" />
	</Extension>
	
	<Extension path = "/MonoDevelop/ProjectModel/MD1SerializationMaps">
		<SerializationMap resource="md1format.xml" />
	</Extension>
	
	<Extension path = "/MonoDevelop/ProjectModel/PolicySets" >
		<PolicySet id="Mono" _name="Mono" allowDiffSerialize="true">
		<!--	<Policies resource="" /> -->
		</PolicySet>
		<PolicySet id="VisualStudio" _name="Microsoft Visual Studio" allowDiffSerialize="true">
		<!--	<Policies resource="" /> -->
		</PolicySet>
		<PolicySet id="Invariant" _name="Invariant" visible="false"/>
	</Extension>
	
	<Extension path = "/MonoDevelop/ProjectModel/MSBuildItemTypes">
		<SolutionItem guid = "{8BC9CEB9-8B4A-11D0-8D11-00A0C91BC942}"
			type = "MonoDevelop.Projects.CompiledAssemblyProject"
			handlerType = "MonoDevelop.Projects.Formats.MSBuild.CompiledAssemblyProjectMSBuildHandler" />
	</Extension>

</Addin>
