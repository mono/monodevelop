<!--

HtmlSyntaxMode.xml
 
Author:
      Mike KrÃ¼ger <mkrueger@xamarin.com>

Copyright (c) 2013 Xamarin Inc. (http://xamarin.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<SyntaxMode name = "Html" mimeTypes="application/xhtml+xml;text/html">
	<Property name="BlockCommentStart">&lt;!--</Property>
	<Property name="BlockCommentEnd">--&gt;</Property>
	<Property name="StringQuote">"</Property>
	<Property name="StringQuote">'</Property>
	
	<Span tagColor = "Html Tag Delimiter" color = "Xml Comment" rule = "Comment">
		<Begin>&lt;!--</Begin>
		<End>--&gt;</End>
	</Span>
	
	<Span color = "Html Entity" rule = "Comment">
		<Begin>&amp;</Begin>
	
		<End>;</End>
	</Span>
	
	<Span tagColor = "Html Tag Delimiter" color = "Html Attribute Name" rule = "InDocType">
		<Begin>&lt;!</Begin>
		<End>&gt;</End>
	</Span>
	
	<Span color = "Xml Delimiter" rule = "InJavascript" >
		<Begin>&lt;script</Begin>
		<End>&lt;/script&gt;</End>
	</Span>
	
	<!-- processing instructions -->
	<Span tagColor = "Keyword(Declaration)" color = "Html Tag Delimiter" rule = "InTag">
		<Begin>&lt;?</Begin>
		<End>?&gt;</End>
	</Span>
	
	<Span tagColor = "Html Tag Delimiter" color = "Html Element Name" rule = "InTag">
		<Begin>&lt;/</Begin>
		<End>&gt;</End>
	</Span>
	
	<Span tagColor = "Html Tag Delimiter" color = "Html Element Name" rule = "InTag">
		<Begin>&lt;/</Begin>
		<End>&gt;</End>
	</Span>
	
	<Span tagColor = "Html Tag Delimiter" color = "Html Element Name" rule = "InTag">
		<Begin>&lt;</Begin>
		<Exit>&gt;</Exit>
		<End>/&gt;</End>
	</Span>
	
	<Rule name = "Comment">
		<Span color = "Html Entity">
			<Begin>&amp;</Begin>
			<End>;</End>
		</Span>
	</Rule>
	
	<Rule name = "InDocType" >
		<Span color = "Xml Attribute">
			<Begin>&amp;</Begin>
			<End>;</End>
		</Span>
		<Keywords color = "Html Element Name">
			<Word>DOCTYPE</Word>
		</Keywords>
	</Rule>
	
	<Rule name = "InTag">
		<Span color = "Html Entity">
			<Begin>&amp;</Begin>
			<End>;</End>
		</Span>
	
		<Span color = "Html Attribute Value" rule="InLiteral">
			<Begin>&quot;</Begin>
			<Exit>&lt;</Exit>
			<End>&quot;</End>
		</Span>
		
		<Span color = "Html Entity" rule="InLiteral">
			<Begin>&apos;</Begin>
			<Exit>&lt;</Exit>
			<End>&apos;</End>
		</Span>
		
		<!-- attributes -->
		<Match expression="([A-Za-z0-9_]+[:[A-Za-z0-9_]+]?)([\s\n\r]*=)" ignorecase="True">
			<Group color = "Html Attribute Name"/>
			<Group color = "Html Operator"/>
		</Match>
	</Rule>
	
	<Rule name = "InLiteral">
		<Span color = "Html Entity">
			<Begin>&amp;</Begin>
			<End>;</End>
		</Span>
	</Rule>
	
	<Rule name = "InJavascript">
		<EolSpan color = "Comment(Line)" rule="Comment">//</EolSpan>
		<Span color = "Comment(Line)" rule="Comment">
			<Begin>/*</Begin>
			<End>*/</End>
		</Span>
		
		<Span color = "String" stopateol = "true" escape="\">
			<Begin>"</Begin>
			<End>"</End>
		</Span>
		
		<Span color = "String" stopateol = "true" escape="\">
			<Begin>&apos;</Begin>
			<End>&apos;</End>
		</Span>
		
		<Match color = "Number">CSharpNumber</Match>
		
		<Keywords color = "Keyword(Access)">
			<Word>this</Word>
		</Keywords>
		
		<Keywords color = "Keyword(Operator)">
			<Word>new</Word>
			<Word>typeof</Word>
		</Keywords>
		
		<Keywords color = "Keyword(Selection)">
			<Word>else</Word>
			<Word>if</Word>
		</Keywords>
		
		<Keywords color = "Keyword(Iteration)">
			<Word>do</Word>
			<Word>for</Word>
			<Word>while</Word>
		</Keywords>
		
		<Keywords color = "Keyword(Jump)">
			<Word>break</Word>
			<Word>continue</Word>
			<Word>return</Word>
		</Keywords>
		
		<Keywords color = "Keyword(Exception)">
			<Word>try</Word>
			<Word>throw</Word>
			<Word>catch</Word>
			<Word>finally</Word>
		</Keywords>
		
		<Keywords color = "Keyword(Constants)">
			<Word>true</Word>
			<Word>false</Word>
			<Word>null</Word>
		</Keywords>
			
		<Keywords color = "Keyword(Type)">
			<Word>var</Word>
			<Word>function</Word>
		</Keywords>
	</Rule>
	
</SyntaxMode>
