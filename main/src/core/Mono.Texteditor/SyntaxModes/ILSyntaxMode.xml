<!-- ILSyntaxMode.xml

 Authors:
   Mike KrÃ¼ger <mkrueger@novell.com>
   Alex Roenne Petersen <xtzgzorex@gmail.com>

 Copyright (c) 2009 Novell, Inc (http://www.novell.com)
 Copyright (c) 2011 Xamarin, Inc (http://www.xamarin.com)

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE. -->
 
<SyntaxMode name = "IL" mimeTypes="text/x-ilasm">
	
	<Property name="LineComment">//</Property>
	<Property name="BlockCommentStart">/*</Property>
	<Property name="BlockCommentEnd">*/</Property>
	
	<Delimiters>&amp;&lt;&gt;~!@%^*()-+=|\#/{}[]:;"' ,	?</Delimiters>
	
	<EolSpan color = "comment.line" rule="Comment" tagColor="comment.tag.line">//</EolSpan>
	
	<Span color = "comment.block" rule="Comment" tagColor="comment.tag.block">
		<Begin>/*</Begin>
		<End>*/</End>
	</Span>
	
	<Span color = "string.double" rule="String" stopateol = "true" escape='\'>
		<Begin>"</Begin>
		<End>"</End>
	</Span>
	
	<Span color = "string.single" rule="String" stopateol = "true" escape="\">
		<Begin>&apos;</Begin>
		<End>&apos;</End>
	</Span>
	
	<Match color = "constant.digit">CSharpNumber</Match>
	
	<Keywords color = "keyword.iteration">
		<Word>nop</Word>
		<Word>break</Word>
		<Word>ldarg.0</Word>
		<Word>ldarg.1</Word>
		<Word>ldarg.2</Word>
		<Word>ldarg.3</Word>
		<Word>ldloc.0</Word>
		<Word>ldloc.1</Word>
		<Word>ldloc.2</Word>
		<Word>ldloc.3</Word>
		<Word>stloc.0</Word>
		<Word>stloc.1</Word>
		<Word>stloc.2</Word>
		<Word>stloc.3</Word>
		<Word>ldnull</Word>
		<Word>ldc.i4.m1</Word>
		<Word>ldc.i4.M1</Word>
		<Word>ldc.i4.0</Word>
		<Word>ldc.i4.1</Word>
		<Word>ldc.i4.2</Word>
		<Word>ldc.i4.3</Word>
		<Word>ldc.i4.4</Word>
		<Word>ldc.i4.5</Word>
		<Word>ldc.i4.6</Word>
		<Word>ldc.i4.7</Word>
		<Word>ldc.i4.8</Word>
		<Word>dup</Word>
		<Word>pop</Word>
		<Word>ret</Word>
		<Word>ldind.i1</Word>
		<Word>ldind.u1</Word>
		<Word>ldind.i2</Word>
		<Word>ldind.u2</Word>
		<Word>ldind.i4</Word>
		<Word>ldind.u4</Word>
		<Word>ldind.i</Word>
		<Word>ldind.r4</Word>
		<Word>ldind.r8</Word>
		<Word>ldind.ref</Word>
		<Word>stind.ref</Word>
		<Word>stind.i1</Word>
		<Word>stind.i2</Word>
		<Word>stind.i4</Word>
		<Word>stind.i8</Word>
		<Word>stind.r4</Word>
		<Word>stind.r8</Word>
		<Word>add</Word>
		<Word>sub</Word>
		<Word>mul</Word>
		<Word>div</Word>
		<Word>div.un</Word>
		<Word>rem</Word>
		<Word>rem.un</Word>
		<Word>and</Word>
		<Word>or</Word>
		<Word>xor</Word>
		<Word>shl</Word>
		<Word>shr</Word>
		<Word>shr.un</Word>
		<Word>neg</Word>
		<Word>not</Word>
		<Word>conv.i1</Word>
		<Word>conv.i2</Word>
		<Word>conv.i4</Word>
		<Word>conv.i8</Word>
		<Word>conv.r4</Word>
		<Word>conv.r8</Word>
		<Word>conv.u4</Word>
		<Word>conv.u8</Word>
		<Word>conv.r.un</Word>
		<Word>throw</Word>
		<Word>conv.ovf.i1.un</Word>
		<Word>conv.ovf.i2.un</Word>
		<Word>conv.ovf.i4.un</Word>
		<Word>conv.ovf.i8.un</Word>
		<Word>conv.ovf.u1.un</Word>
		<Word>conv.ovf.u2.un</Word>
		<Word>conv.ovf.u4.un</Word>
		<Word>conv.ovf.u8.un</Word>
		<Word>conv.ovf.i.un</Word>
		<Word>conf.ovf.u.un</Word>
		<Word>ldlen</Word>
		<Word>ldelem.i1</Word>
		<Word>ldelem.u1</Word>
		<Word>ldelem.i2</Word>
		<Word>ldelem.u2</Word>
		<Word>ldelem.i4</Word>
		<Word>ldelem.u4</Word>
		<Word>ldelem.i8</Word>
		<Word>ldelem.u8</Word>
		<Word>ldelem.i</Word>
		<Word>ldelem.r4</Word>
		<Word>ldelem.r8</Word>
		<Word>ldelem.ref</Word>
		<Word>stelem.i</Word>
		<Word>stelem.i1</Word>
		<Word>stelem.i2</Word>
		<Word>stelem.i4</Word>
		<Word>stelem.i8</Word>
		<Word>stelem.r4</Word>
		<Word>stelem.r8</Word>
		<Word>stelem.ref</Word>
		<Word>conv.ovf.i1</Word>
		<Word>conv.ovf.u1</Word>
		<Word>conv.ovf.i2</Word>
		<Word>conv.ovf.u2</Word>
		<Word>conv.ovf.i4</Word>
		<Word>conv.ovf.u4</Word>
		<Word>conv.ovf.i8</Word>
		<Word>conv.ovf.u8</Word>
		<Word>ckfinite</Word>
		<Word>conv.u2</Word>
		<Word>conv.u1</Word>
		<Word>conv.i</Word>
		<Word>conv.ovf.i</Word>
		<Word>conv.ovf.u</Word>
		<Word>add.ovf</Word>
		<Word>add.ovf.un</Word>
		<Word>mul.ovf</Word>
		<Word>mul.ovf.un</Word>
		<Word>sub.ovf</Word>
		<Word>sub.ovf.un</Word>
		<Word>endfinally</Word>
		<Word>endfault</Word>
		<Word>stind.i</Word>
		<Word>conv.u</Word>
		<Word>arglist</Word>
		<Word>ceq</Word>
		<Word>cgt</Word>
		<Word>cgt.un</Word>
		<Word>clt</Word>
		<Word>clt.un</Word>
		<Word>localloc</Word>
		<Word>endfilter</Word>
		<Word>volatile.</Word>
		<Word>tail.</Word>
		<Word>cpblk</Word>
		<Word>initblk</Word>
		<Word>rethrow</Word>
		<Word>refanytype</Word>
		<Word>readonly.</Word>
		<Word>ldarg</Word>
		<Word>ldarga</Word>
		<Word>starg</Word>
		<Word>ldarg.s</Word>
		<Word>ldarga.s</Word>
		<Word>starg.s</Word>
		<Word>ldloc</Word>
		<Word>ldloca</Word>
		<Word>stloc</Word>
		<Word>ldloc.s</Word>
		<Word>ldloca.s</Word>
		<Word>stloc.s</Word>
		<Word>ldc.i4.s</Word>
		<Word>ldc.i4</Word>
		<Word>unaligned.</Word>
		<Word>cpobj</Word>
		<Word>ldobj</Word>
		<Word>castclass</Word>
		<Word>isinst</Word>
		<Word>unbox</Word>
		<Word>unbox.any</Word>
		<Word>stobj</Word>
		<Word>box</Word>
		<Word>newarr</Word>
		<Word>ldelema</Word>
		<Word>refanyval</Word>
		<Word>mkrefany</Word>
		<Word>initobj</Word>
		<Word>sizeof</Word>
		<Word>stelem</Word>
		<Word>ldelem</Word>
		<Word>stelem.any</Word>
		<Word>ldelem.any</Word>
		<Word>constrained.</Word>
		<Word>jmp</Word>
		<Word>call</Word>
		<Word>callvirt</Word>
		<Word>newobj</Word>
		<Word>ldftn</Word>
		<Word>ldvirtftn</Word>
		<Word>ldfld</Word>
		<Word>ldflda</Word>
		<Word>stfld</Word>
		<Word>ldsfld</Word>
		<Word>ldsflda</Word>
		<Word>stsfld</Word>
		<Word>br</Word>
		<Word>brfalse</Word>
		<Word>brzero</Word>
		<Word>brnull</Word>
		<Word>brtrue</Word>
		<Word>beq</Word>
		<Word>bge</Word>
		<Word>bgt</Word>
		<Word>ble</Word>
		<Word>blt</Word>
		<Word>bne.un</Word>
		<Word>bge.un</Word>
		<Word>bgt.un</Word>
		<Word>ble.un</Word>
		<Word>blt.un</Word>
		<Word>leave</Word>
		<Word>br.s</Word>
		<Word>brfalse.s</Word>
		<Word>brtrue.s</Word>
		<Word>beq.s</Word>
		<Word>bge.s</Word>
		<Word>bgt.s</Word>
		<Word>ble.s</Word>
		<Word>blt.s</Word>
		<Word>bne.un.s</Word>
		<Word>bge.un.s</Word>
		<Word>bgt.un.s</Word>
		<Word>ble.un.s</Word>
		<Word>blt.un.s</Word>
		<Word>leave.s</Word>
		<Word>ldstr</Word>
		<Word>ldc.r4</Word>
		<Word>ldc.r8</Word>
		<Word>ldc.i8</Word>
		<Word>switch</Word>
		<Word>calli</Word>
		<Word>ldtoken</Word>
		<Word>no.</Word>
		<Word>prefix1</Word>
		<Word>prefix2</Word>
		<Word>prefix3</Word>
		<Word>prefix4</Word>
		<Word>prefix5</Word>
		<Word>prefix6</Word>
		<Word>prefix7</Word>
		<Word>prefixref</Word>
	</Keywords>
	
	<Keywords color = "keyword.type">
		<Word>void</Word>
		<Word>object</Word>
		<Word>bool</Word>
		<Word>char</Word>
		<Word>string</Word>
		<Word>int</Word>
		<Word>int8</Word>
		<Word>int16</Word>
		<Word>int32</Word>
		<Word>int64</Word>
		<Word>uint</Word>
		<Word>uint8</Word>
		<Word>uint16</Word>
		<Word>uint32</Word>
		<Word>uint64</Word>
		<Word>float</Word>
		<Word>float32</Word>
		<Word>float64</Word>
		<Word>typedref</Word>
	</Keywords>
	
	<Keywords color = "keyword.modifier">
		<Word>at</Word>
		<Word>as</Word>
		<Word>implicitcom</Word>
		<Word>implicitres</Word>
		<Word>extern</Word>
		<Word>instance</Word>
		<Word>explicit</Word>
		<Word>default</Word>
		<Word>vararg</Word>
		<Word>unmanaged</Word>
		<Word>cdecl</Word>
		<Word>stdcall</Word>
		<Word>thiscall</Word>
		<Word>fastcall</Word>
		<Word>marshal</Word>
		<Word>in</Word>
		<Word>out</Word>
		<Word>opt</Word>
		<Word>static</Word>
		<Word>public</Word>
		<Word>private</Word>
		<Word>family</Word>
		<Word>initonly</Word>
		<Word>rtspecialname</Word>
		<Word>specialname</Word>
		<Word>assembly</Word>
		<Word>famandassem</Word>
		<Word>famorassem</Word>
		<Word>privatescope</Word>
		<Word>literal</Word>
		<Word>notserialized</Word>
		<Word>value</Word>
		<Word>not_in_gc_heap</Word>
		<Word>interface</Word>
		<Word>sealed</Word>
		<Word>abstract</Word>
		<Word>auto</Word>
		<Word>sequential</Word>
		<Word>ansi</Word>
		<Word>unicode</Word>
		<Word>autochar</Word>
		<Word>bestfit</Word>
		<Word>charmaperror</Word>
		<Word>import</Word>
		<Word>serializable</Word>
		<Word>nested</Word>
		<Word>extends</Word>
		<Word>implements</Word>
		<Word>final</Word>
		<Word>virtual</Word>
		<Word>hidebysig</Word>
		<Word>newslot</Word>
		<Word>unmanagedexp</Word>
		<Word>pinvokeimpl</Word>
		<Word>nomangle</Word>
		<Word>lasterr</Word>
		<Word>winapi</Word>
		<Word>platformapi</Word>
		<Word>native</Word>
		<Word>il</Word>
		<Word>cil</Word>
		<Word>optil</Word>
		<Word>managed</Word>
		<Word>forwardref</Word>
		<Word>runtime</Word>
		<Word>internalcall</Word>
		<Word>synchronized</Word>
		<Word>noinlining</Word>
		<Word>nooptimization</Word>
		<Word>custom</Word>
		<Word>fixed</Word>
		<Word>sysstring</Word>
		<Word>array</Word>
		<Word>variant</Word>
		<Word>currency</Word>
		<Word>syschar</Word>
		<Word>error</Word>
		<Word>unsigned</Word>
		<Word>decimal</Word>
		<Word>date</Word>
		<Word>bstr</Word>
		<Word>lpstr</Word>
		<Word>lpwstr</Word>
		<Word>lptstr</Word>
		<Word>objectref</Word>
		<Word>iunknown</Word>
		<Word>idispatch</Word>
		<Word>struct</Word>
		<Word>safearray</Word>
		<Word>byvalstr</Word>
		<Word>tbstr</Word>
		<Word>lpvoid</Word>
		<Word>any</Word>
		<Word>lpstruct</Word>
		<Word>null</Word>
		<Word>vector</Word>
		<Word>hresult</Word>
		<Word>carray</Word>
		<Word>userdefined</Word>
		<Word>record</Word>
		<Word>filetime</Word>
		<Word>blob</Word>
		<Word>stream</Word>
		<Word>storage</Word>
		<Word>streamed_object</Word>
		<Word>stored_object</Word>
		<Word>blob_object</Word>
		<Word>cf</Word>
		<Word>clsid</Word>
		<Word>method</Word>
		<Word>class</Word>
		<Word>pinned</Word>
		<Word>modreq</Word>
		<Word>modopt</Word>
		<Word>property</Word>
		<Word>type</Word>
		<Word>refany</Word>
		<Word>wchar</Word>
		<Word>fromunmanaged</Word>
		<Word>callmostderived</Word>
		<Word>retainappdomain</Word>
		<Word>bytearray</Word>
		<Word>with</Word>
		<Word>init</Word>
		<Word>to</Word>
		<Word>catch</Word>
		<Word>filter</Word>
		<Word>finally</Word>
		<Word>fault</Word>
		<Word>handler</Word>
		<Word>tls</Word>
		<Word>field</Word>
		<Word>nometadata</Word>
		<Word>algorithm</Word>
		<Word>retargetable</Word>
		<Word>legacy</Word>
		<Word>library</Word>
		<Word>x86</Word>
		<Word>amd64</Word>
		<Word>ia64</Word>
		<Word>preservesig</Word>
		<Word>beforefieldinit</Word>
		<Word>alignment</Word>
		<Word>nullref</Word>
		<Word>valuetype</Word>
		<Word>compilercontrolled</Word>
		<Word>reqsecobj</Word>
		<Word>enum</Word>
		<Word>on</Word>
		<Word>off</Word>
		<Word>strict</Word>
		<Word>mdtoken</Word>
		<Word>noappdomain</Word>
		<Word>noprocess</Word>
		<Word>nomachine</Word>
		<Word>illegal</Word>
		<Word>unused</Word>
		<Word>wrapper</Word>
		<Word>forwarder</Word>
		<Word>callconv</Word>
		<Word>flags</Word>
	</Keywords>
	
	<Keywords color = "constant.language">
		<Word>true</Word>
		<Word>false</Word>
	</Keywords>
	
	<Keywords color = "keyword.namespace">
		<Word>.assembly</Word>
		<Word>.cctor</Word>
		<Word>.class</Word>
		<Word>.imagebase</Word>
		<Word>.corflags</Word>
		<Word>.ctor</Word>
		<Word>.custom</Word>
		<Word>.data</Word>
		<Word>.emitbyte</Word>
		<Word>.entrypoint</Word>
		<Word>.event</Word>
		<Word>.export</Word>
		<Word>.field</Word>
		<Word>.file</Word>
		<Word>.fire</Word>
		<Word>.get</Word>
		<Word>.hash</Word>
		<Word>.language</Word>
		<Word>.line</Word>
		<Word>.locale</Word>
		<Word>.locals</Word>
		<Word>.maxstack</Word>
		<Word>.method</Word>
		<Word>.module</Word>
		<Word>.mresource</Word>
		<Word>.manifestres</Word>
		<Word>.namespace</Word>
		<Word>.other</Word>
		<Word>.override</Word>
		<Word>.pack</Word>
		<Word>.param</Word>
		<Word>.permission</Word>
		<Word>.permissionset</Word>
		<Word>.property</Word>
		<Word>.publickey</Word>
		<Word>.publickeytoken</Word>
		<Word>.addon</Word>
		<Word>.removeon</Word>
		<Word>.set</Word>
		<Word>.size</Word>
		<Word>.stackreserve</Word>
		<Word>.subsystem</Word>
		<Word>.try</Word>
		<Word>.ver</Word>
		<Word>.vtable</Word>
		<Word>.vtentry</Word>
		<Word>.vtfixup</Word>
		<Word>.zeroinit</Word>
		<Word>.this</Word>
		<Word>.base</Word>
		<Word>.nester</Word>
		<Word>.typelist</Word>
		<Word>.mscorlib</Word>
		<Word>.localized</Word>
		<Word>.pdirect</Word>
		<Word>.typedef</Word>
	</Keywords>
	
	<Keywords color = "keyword.context">
		<Word>request</Word>
		<Word>demand</Word>
		<Word>assert</Word>
		<Word>deny</Word>
		<Word>permitonly</Word>
		<Word>linkcheck</Word>
		<Word>inheritcheck</Word>
		<Word>reqmin</Word>
		<Word>reqopt</Word>
		<Word>reqrefuse</Word>
		<Word>prejitgrant</Word>
		<Word>prejitdeny</Word>
		<Word>noncasdemand</Word>
		<Word>noncaslinkdemand</Word>
		<Word>noncasinheritance</Word>
	</Keywords>
	
	<Keywords color = "keyword.access">
		<Word>#line</Word>
		<Word>#define</Word>
		<Word>#undef</Word>
		<Word>#ifdef</Word>
		<Word>#ifndef</Word>
		<Word>#else</Word>
		<Word>#endif</Word>
		<Word>#include</Word>
	</Keywords>
	
	<Rule name = "Comment">
		<Keywords color="comment.keyword.todo" ignorecase="True">
			<Word>TODO</Word>
			<Word>FIXME</Word>
			<Word>HACK</Word>
			<Word>UNDONE</Word>
		</Keywords>	
	</Rule>
</SyntaxMode>
