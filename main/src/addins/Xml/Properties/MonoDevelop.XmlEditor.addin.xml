<ExtensionModel>

	<Runtime>
		<Import file="schemas/appconfig.xsd" />
		<Import file="schemas/MonoDevelopAddIn.xsd" />
		<Import file="schemas/readme.txt" />
		<Import file="schemas/XMLSchema.xsd" />
		<Import file="schemas/W3C-License.html" />
		<Import file="schemas/xslt.xsd" />
		<Import file="schemas/manifest.xsd" />
		<Import file="schemas/nant.xsd" />
	</Runtime>

	<ExtensionPoint path = "/MonoDevelop/Xml/Editor/XmlFileAssociations">
		<ExtensionNode name = "Association" type = "MonoDevelop.Xml.Editor.XmlFileAssociationNode"/>
	</ExtensionPoint>

	<ExtensionPoint path = "/MonoDevelop/Xml/Editor/XmlSchemas">
		<ExtensionNode name = "Schema" type = "MonoDevelop.Xml.Editor.XmlSchemaNode" />
	</ExtensionPoint>

	<!-- Additional file extensions that will be opened in the XML editor -->
	<Extension path = "/MonoDevelop/Xml/Editor/XmlFileAssociations">
		<Association extension = ".build"  namespaceUri="http://nant.sf.net/release/0.85-rc3/nant.xsd" />
		<Association extension = ".config" namespaceUri="urn:app-config" />
		<Association extension = ".manifest" namespaceUri="schemas-microsoft-com:asm.v1" />
		<Association extension = ".xsd"    namespaceUri="http://www.w3.org/2001/XMLSchema" namespacePrefix="xs" />
		<Association extension = ".xsl"    namespaceUri="http://www.w3.org/1999/XSL/Transform" namespacePrefix="xsl" />
		<Association extension = ".xslt"   namespaceUri="http://www.w3.org/1999/XSL/Transform" namespacePrefix="xsl" />
		<Association extension = ".stetic" />
	</Extension>

	<Extension path = "/MonoDevelop/Xml/Editor/XmlSchemas">
		<Schema file="schemas/appconfig.xsd" />
		<Schema file="schemas/MonoDevelopAddIn.xsd" />
		<Schema file="schemas/XMLSchema.xsd" />
		<Schema file="schemas/xslt.xsd" />
		<Schema file="schemas/manifest.xsd" />
		<Schema file="schemas/nant.xsd" />
	</Extension>

	<Extension path = "/MonoDevelop/Ide/TextEditorExtensions">
		<Class id="MSBuildTextEditorExtension" mimeTypes="application/x-msbuild" class = "MonoDevelop.Xml.MSBuild.MSBuildTextEditorExtension" />
		<Class id="XmlTextEditorExtension" class = "MonoDevelop.Xml.Editor.XmlTextEditorExtension" />
	</Extension>

	<!-- Commands -->
	<Extension path = "/MonoDevelop/Ide/Commands">
		<Category _name = "Xml Editor" id="XmlEditor">
			<Command id = "MonoDevelop.Xml.Editor.XmlCommands.CreateSchema"
					_label = "Create _Schema"
					description = "Creates a schema from XML"/>
			<Command id = "MonoDevelop.Xml.Editor.XmlCommands.Validate"
					_label = "_Validate"
					description = "Validates the XML against a schema"/>
			<Command id = "MonoDevelop.Xml.Editor.XmlCommands.AssignStylesheet"
					_label = "_Assign XSLT..."
					description = "Assigns a stylesheet to the current xml document"/>
			<Command id = "MonoDevelop.Xml.Editor.XmlCommands.OpenStylesheet"
					_label = "_Open XSLT"
					description = "Opens the assigned stylesheet"/>
			<Command id = "MonoDevelop.Xml.Editor.XmlCommands.RunXslTransform"
					_label = "Run XSL_T"
					shortcut = "Alt|Control|T"
					description = "Runs an XSL transform"/>
			<Command id = "MonoDevelop.Xml.Editor.XmlCommands.GoToSchemaDefinition"
					_label = "_Go to Schema Definition"
					description = "Jumps to the schema definition"/>
		</Category>
	</Extension>

	<!-- XML menu -->
	<Extension path = "/MonoDevelop/Ide/MainMenu/Tools">
		<ItemSet id = "XmlMenu" insertafter = "AddinManagerSeparator" _label = "_XML" >
			<CommandItem id = "MonoDevelop.Xml.Editor.XmlCommands.CreateSchema" />
			<CommandItem id = "MonoDevelop.Xml.Editor.XmlCommands.GoToSchemaDefinition" />
			<CommandItem id = "MonoDevelop.Xml.Editor.XmlCommands.Validate" />
			<CommandItem id = "MonoDevelop.Xml.Editor.XmlCommands.AssignStylesheet"/>
			<CommandItem id = "MonoDevelop.Xml.Editor.XmlCommands.OpenStylesheet"/>
			<CommandItem id = "MonoDevelop.Xml.Editor.XmlCommands.RunXslTransform"/>
			<SeparatorItem/>
		</ItemSet>
	</Extension>

	<Extension path = "/MonoDevelop/Ide/GlobalOptionsDialog/TextEditor/Behavior">
		<Section id="XmlFormattingOptions" insertbefore="Formatting" _label="XML" fill="true" class="MonoDevelop.Xml.Editor.XmlEditorOptionsPanel" icon="md-prefs-xml" />
	</Extension>
	<Extension path = "/MonoDevelop/Ide/GlobalOptionsDialog/TextEditor">
		<Section id="XmlSchemas" _label="XML Schemas" fill="true" class="MonoDevelop.Xml.Editor.XmlSchemasPanel" icon="md-prefs-xml-schemas" />
	</Extension>

	<Extension path = "/MonoDevelop/TypeSystem/Parser">
		<Parser class = "MonoDevelop.Xml.MSBuild.MSBuildDocumentParser" mimeType = "application/x-msbuild" id = "XmlParser"/>
		<Parser class = "MonoDevelop.Xml.Editor.XmlDocumentParser" mimeType = "application/xml" id = "XmlParser"/>
	</Extension>

	<Extension path = "/MonoDevelop/Ide/CodeFormatters">
		<Formatter mimeType="text/xml" class="MonoDevelop.Xml.Formatting.XmlFormatter" />
		<Formatter mimeType="application/xml" class="MonoDevelop.Xml.Formatting.XmlFormatter" />
	</Extension>

	<Extension path = "/MonoDevelop/ProjectModel/PolicySets/Mono" >
		<Policies resource="MonoXmlPolicy.xml" />
	</Extension>

	<Extension path = "/MonoDevelop/ProjectModel/Gui/MimeTypePolicyPanels">
		<Panel id = "XmlFormatting" _label = "XML Format" mimeType="application/xml" class = "MonoDevelop.Xml.Formatting.XmlFormattingPolicyPanel" />
	</Extension>

	<Extension path = "/MonoDevelop/Ide/CompletionCharacters">
		<Complete language="Xml" commitOnSpace="True" commitChars="{}[]().,:;+-*/%&amp;|^!~=&lt;&gt;?@#'&quot;\"/>
	</Extension>

	<Extension path = "/MonoDevelop/Core/UserDataMigration">
		<!-- 2.4 -->
		<Migration sourceVersion="2.4" kind="UserData" path="schemas" targetPath="XmlSchemas" isDirectory="true" />
		<!-- 2.6+ -->
		<Migration sourceVersion="2.6+" kind="UserData" path="XmlSchemas" isDirectory="true" />
	</Extension>
  
	<Extension path="/MonoDevelop/Core/StockIcons">
		<StockIcon stockid="md-prefs-xml" resource="prefs-xml-16.png" size="Menu" />
		<StockIcon stockid="md-prefs-xml-schemas" resource="prefs-xml-schemas-16.png" size="Menu" />
	</Extension>
</ExtensionModel>
