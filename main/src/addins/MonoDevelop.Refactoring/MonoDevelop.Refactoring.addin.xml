<Addin
        id = "Refactoring"
        namespace = "MonoDevelop"
        name = "Refactoring Support"
        author = "Mike KrÃ¼ger"
        copyright = "X11"
        url = "http://www.monodevelop.com/"
        description = "Provides refactoring support to MonoDevelop"
        category = "IDE extensions"
        version = "2.6">

	<Runtime>
		<Import assembly = "MonoDevelop.Refactoring.dll"/>
	</Runtime>

	<Dependencies>
		<Addin id="Core" version="2.6"/>
		<Addin id="Ide" version="2.6"/>
		<Addin id="DesignerSupport" version="2.6"/>
		<Addin id="Autotools" version="2.6"/>
		<Addin id="Deployment" version="2.6"/>
		<Addin id="SourceEditor2" version="2.6"/>
	</Dependencies>
	
	<!-- Extension Points -->
	<ExtensionPoint path = "/MonoDevelop/Refactoring/Refactorings" name = "Refactorings">
		<ExtensionNode name="Class"/>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/Refactoring/CodeGenerators" name = "Code Generators">
		<ExtensionNode name="Class"/>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/Refactoring/ASTProvider" name = "ASTProviders">
		<ExtensionNode name="Class"/>
	</ExtensionPoint>
	<!--
	<ExtensionPoint path = "/MonoDevelop/Refactoring/ContextActions" name = "ContextAction">
		<ExtensionNode name="Action" type ="MonoDevelop.ContextAction.ContextActionAddinNode"/>
	</ExtensionPoint>
	-->
	<ExtensionPoint path = "/MonoDevelop/Refactoring/Inspectors" name = "Inspector">
		<ExtensionNode name="Inspector" type ="MonoDevelop.Inspection.InspectorAddinNode"/>
	</ExtensionPoint>
	<!-- Extensions -->
	
	<Extension path = "/MonoDevelop/Refactoring/Refactorings">
		<Class id="Rename" class = "MonoDevelop.Refactoring.Rename.RenameRefactoring" />
		<Class id="IntegrateTemporaryVariable" class = "MonoDevelop.Refactoring.IntegrateTemporaryVariable.IntegrateTemporaryVariableRefactoring" />
		<Class id="IntroduceConstant" class = "MonoDevelop.Refactoring.IntroduceConstant.IntroduceConstantRefactoring" />
		<Class id="CreateClass" class = "MonoDevelop.Refactoring.CreateClass.CreateClassCodeGenerator" />
		<Class id="CreateStruct" class = "MonoDevelop.Refactoring.CreateClass.CreateStructCodeGenerator" />
		<Class id="ImplementImplicit" class = "MonoDevelop.Refactoring.ImplementInterface.ImplementImplicit" />
		<Class id="ImplementExplicit" class = "MonoDevelop.Refactoring.ImplementInterface.ImplementExplicit" />
		<Class id="ImplementExplicit" class = "MonoDevelop.Refactoring.ImplementInterface.ImplementAbstractMembers" />
	</Extension>
	
	<Extension path = "/MonoDevelop/Refactoring/CodeGenerators">
		<Class class = "MonoDevelop.CodeGeneration.CreateConstructorGenerator" />
		<Class class = "MonoDevelop.CodeGeneration.ReadonlyPropertyGenerator" />
		<Class class = "MonoDevelop.CodeGeneration.PropertyGenerator" />
		<Class class = "MonoDevelop.CodeGeneration.OverrideMembersGenerator" />
		<Class class = "MonoDevelop.CodeGeneration.ToStringGenerator" />
		<Class class = "MonoDevelop.CodeGeneration.RaiseEventMethodGenerator" />
		<Class class = "MonoDevelop.CodeGeneration.EqualityMembersGenerator" />
		<Class class = "MonoDevelop.CodeGeneration.WriteLineGenerator" />
		<Class class = "MonoDevelop.CodeGeneration.NullCheckGenerator" />
	</Extension>
	
	
	<ExtensionNodeSet id="MonoDevelop.AnalysisCore.Rules">
		<ExtensionNode name="Category" type="MonoDevelop.Ide.Codons.CategoryNode">
			<ExtensionNodeSet id="MonoDevelop.AnalysisCore.Rules" />
		</ExtensionNode>
		<ExtensionNode name="Rule" type="MonoDevelop.AnalysisCore.Extensions.NamedAnalysisRuleAddinNode" />
		<ExtensionNode name="Adaptor" type="MonoDevelop.AnalysisCore.Extensions.AdaptorAnalysisRuleAddinNode" />
	</ExtensionNodeSet>
	
	<ExtensionPoint path = "/MonoDevelop/AnalysisCore/Rules" name = "Analysis Rules">
		<Description>Analysis rules.</Description>
		<ExtensionNodeSet id="MonoDevelop.AnalysisCore.Rules" />
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/AnalysisCore/Types" name = "Analysis rule input/output types">
		<Description>Analysis rule input/output types.</Description>
		<ExtensionNode name="Type" type="MonoDevelop.AnalysisCore.Extensions.AnalysisTypeExtensionNode" />
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/AnalysisCore/FixHandlers" name = "Fix handlers">
		<Description>Fix handlers. Classes must implement IAnalysisFixHandler.</Description>
		<ExtensionNode name="Handler" type="MonoDevelop.AnalysisCore.Extensions.FixHandlerExtensionNode" />
	</ExtensionPoint>
	
	<!-- Text editor integration -->
	
	<Extension path = "/MonoDevelop/Ide/TextEditorExtensions">
		<Class class = "MonoDevelop.AnalysisCore.Gui.ResultsEditorExtension" />
	</Extension>
	
	<Extension path = "/MonoDevelop/SourceEditor2/TooltipProviders">
		<Class id="AnalysisResults" class="MonoDevelop.AnalysisCore.Gui.ResultTooltipProvider" insertafter="Debug" />
	</Extension>
	
	
	<!-- RefactoryCommands -->
	<Extension path = "/MonoDevelop/Ide/Commands">
	
		<Category _name = "Code Navigation" id = "CodeNavigation">
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.GotoDeclaration"
					defaultHandler = "MonoDevelop.Refactoring.GotoDeclarationHandler"
					_label = "_Go to declaration" 
					shortcut = "F12"
					macShortcut = "Meta|D"/>
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.FindReferences"
					defaultHandler = "MonoDevelop.Refactoring.FindReferencesHandler"
					_label = "_Find references" 
					shortcut = "Shift|F12"
					macShortcut = "Shift|Meta|D"/>
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.FindDerivedClasses"
					defaultHandler = "MonoDevelop.Refactoring.FindDerivedClassesHandler"
					_label = "Find _derived classes" />
		</Category>
		
		<Category _name = "Refactoring" id = "Refactoring">
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.CurrentRefactoryOperations"
				defaultHandler = "MonoDevelop.Refactoring.CurrentRefactoryOperationsHandler"
				type="array"
				_label = "Refactory Operations" /> 
		
		<Command id = "MonoDevelop.CodeGeneration.CodeGenerationCommands.ShowCodeGenerationWindow"
				defaultHandler = "MonoDevelop.CodeGeneration.ShowCodeGenerationWindowHandler"
				_label = "S_how Code Generation Window" 
				shortcut = "Alt|Insert" />
		
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.RemoveUnusedImports"
					defaultHandler = "MonoDevelop.Refactoring.RefactorImports.RemoveUnusedImportsHandler"
					icon = "md-remove-namespace"
					_label = "_Remove unused usings"/>
		
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.SortImports"
					defaultHandler = "MonoDevelop.Refactoring.RefactorImports.SortImportsHandler"
					icon = "md-sort-namespace"
					_label = "_Sort usings"/>
					
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.RemoveSortImports"
					defaultHandler = "MonoDevelop.Refactoring.RefactorImports.RemoveSortImportsHandler"
					_label = "R_emove and Sort usings"/>
		
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.IntroduceConstant"
					defaultHandler = "MonoDevelop.Refactoring.CreateMethod.IntroduceConstantHandler"
					_label = "_Introduce Constant..."/>
		
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.QuickFix"
					_label = "Quick fix..."
					shortcut = "Alt|Return"
					macShortcut = "Alt|Return" />
		
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.IntegrateTemporaryVariable"
					defaultHandler = "MonoDevelop.Refactoring.IntegrateTemporaryVariable.IntegrateTemporaryVariableHandler"
					_label = "Integrate Temporary Variable"
					shortcut = "Control|Alt|I" />
					
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.ImportSymbol"
					defaultHandler = "MonoDevelop.Refactoring.ImportSymbolHandler"
					_label = "Import Symbol..."
					shortcut = "Control|Alt|space"
					macShortcut = "Control|Alt|space" />
					
		</Category>
	</Extension>
	
	<Extension path = "/MonoDevelop/SourceEditor2/ContextMenu/Editor">
<!--		<SeparatorItem id = "OrganizeUsingsSeparator" />
		<ItemSet id = "OrganizeUsings" _label = "_Organize Usings">
			<CommandItem id = "MonoDevelop.Refactoring.RefactoryCommands.RemoveUnusedImports"/>
			<CommandItem id = "MonoDevelop.Refactoring.RefactoryCommands.SortImports"/>
			<CommandItem id = "MonoDevelop.Refactoring.RefactoryCommands.RemoveSortImports"/>
		</ItemSet>-->
		<ItemSet id = "Fix" _label = "Fix" autohide="true"
			insertafter="MonoDevelop.SourceEditor.SourceEditorCommands.MarkerOperations" insertbefore="MonoDevelop.Debugger.DebugCommands.ExpressionEvaluator">
			<CommandItem id = "MonoDevelop.AnalysisCore.AnalysisCommands.FixOperations" />
		</ItemSet>
	
	
		<CommandItem id = "MonoDevelop.Refactoring.RefactoryCommands.CurrentRefactoryOperations" insertafter="MonoDevelop.SourceEditor.SourceEditorCommands.MarkerOperations" insertbefore="MonoDevelop.Debugger.DebugCommands.ExpressionEvaluator"/>
		<CommandItem id = "MonoDevelop.CodeGeneration.CodeGenerationCommands.ShowCodeGenerationWindow"
		             insertafter="MonoDevelop.Ide.Commands.TextEditorCommands.ShowCodeTemplateWindow" />
	</Extension>
	
	<Extension path = "/MonoDevelop/Ide/TextEditorExtensions">
		<Class class = "MonoDevelop.Refactoring.Rename.RenameTextEditorExtension" />
		<Class class = "MonoDevelop.ContextAction.ContextActionEditorExtension" />
	</Extension>
	
	<Extension path = "/MonoDevelop/Ide/MainMenu/Edit">
		<CommandItem id = "MonoDevelop.CodeGeneration.CodeGenerationCommands.ShowCodeGenerationWindow"
		             insertafter="MonoDevelop.Ide.Commands.TextEditorCommands.ShowCodeTemplateWindow" />
	</Extension>
	
	<!-- Quick fix commands -->

	<Extension path = "/MonoDevelop/Ide/Commands/Refactoring">
		<Command id = "MonoDevelop.AnalysisCore.AnalysisCommands.FixOperations" type="array" 
			defaultHandler="MonoDevelop.AnalysisCore.FixOperationsHandler"
			_label = "Fixes" />
		<Command id = "MonoDevelop.AnalysisCore.AnalysisCommands.ShowFixes"
			defaultHandler="MonoDevelop.AnalysisCore.ShowFixesHandler"
			_label = "Show Fixes"
			_description="Shows a list of fixes for problems at the current location"
			macShortcut="Control|."
			shortcut = "Control|." />
	</Extension>
	
	<!-- Options panels -->
	
	<Extension path = "/MonoDevelop/Ide/GlobalOptionsDialog/SourceCode">
		<Section id = "C#" _label = "C#">
			<Section id = "Inspection" _label = "Code inspection" fill="true"
				class="MonoDevelop.Inspection.InspectionPanel"/>
			<Section id = "ContextActions" _label = "Context Actions" fill="true"
				class="MonoDevelop.ContextAction.ContextActionPanel"/>
		</Section>
	</Extension>
	
	<Extension path = "/MonoDevelop/Ide/GlobalOptionsDialog/Other">
		<Section id = "Analysis" _label = "Source Analysis" fill="true"
			class="MonoDevelop.AnalysisCore.Gui.AnalysisOptionsPanel"/>
	</Extension>
	
	<!-- Extensions to the addin points defined by this addin -->
	
	<Extension path = "/MonoDevelop/AnalysisCore/Types">
		<Type name="Document" class="MonoDevelop.Ide.Gui.Document" />
		<Type name="CompilationUnit" class="MonoDevelop.Projects.Dom.ICompilationUnit" />
	</Extension>
	
	<Extension path = "/MonoDevelop/AnalysisCore/Rules">
		<Adaptor func="MonoDevelop.AnalysisCore.Rules.Adapters.GetCompilationUnit"
			input="Document" output="CompilationUnit" />
		<Category _name="Design Guidelines" id="Design">
<!--			<Rule _name="Naming Conventions" input="CompilationUnit" 
				func="MonoDevelop.AnalysisCore.Rules.NamingConventions.ClassNaming" />-->
		</Category>
	</Extension>
	
	<Extension path = "/MonoDevelop/AnalysisCore/FixHandlers">
		<Handler fixName="RenameMember" class = "MonoDevelop.AnalysisCore.Fixes.RenameMemberHandler" />
		<Handler fixName="Generic" class = "MonoDevelop.AnalysisCore.Fixes.GenericFixHandler" />
	</Extension>
</Addin>
