<ExtensionModel>
	
	<!-- Extension Points -->
	<ExtensionPoint path = "/MonoDevelop/Refactoring/Refactorings" name = "Refactorings">
		<ExtensionNode name="Class"/>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/Refactoring/CodeGenerators" name = "Code Generators">
		<ExtensionNode name="Class"/>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/Refactoring/ASTProvider" name = "ASTProviders">
		<ExtensionNode name="Class"/>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/Refactoring/CodeActions" name = "CodeAction">
		<ExtensionNode name="Action" type ="MonoDevelop.CodeActions.CodeActionAddinNode"/>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/Refactoring/CodeActionSource" name = "CodeActionSource">
		<ExtensionNode name="Source"/>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/Refactoring/CodeIssues" name = "CodeIssue">
		<ExtensionNode name="CodeIssue" type ="MonoDevelop.CodeIssues.CodeIssueAddinNode"/>
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/Refactoring/CodeIssueSource" name = "CodeIssueSource">
		<ExtensionNode name="Source"/>
	</ExtensionPoint>

	<ExtensionNodeSet id="MonoDevelop.AnalysisCore.Rules">
		<ExtensionNode name="Category" type="MonoDevelop.Ide.Codons.CategoryNode">
			<ExtensionNodeSet id="MonoDevelop.AnalysisCore.Rules" />
		</ExtensionNode>
		<ExtensionNode name="Rule" type="MonoDevelop.AnalysisCore.Extensions.NamedAnalysisRuleAddinNode" />
		<ExtensionNode name="Adaptor" type="MonoDevelop.AnalysisCore.Extensions.AdaptorAnalysisRuleAddinNode" />
	</ExtensionNodeSet>
	
	<ExtensionPoint path = "/MonoDevelop/AnalysisCore/Rules" name = "Analysis Rules">
		<Description>Analysis rules.</Description>
		<ExtensionNodeSet id="MonoDevelop.AnalysisCore.Rules" />
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/AnalysisCore/Types" name = "Analysis rule input/output types">
		<Description>Analysis rule input/output types.</Description>
		<ExtensionNode name="Type" type="MonoDevelop.AnalysisCore.Extensions.AnalysisTypeExtensionNode" />
	</ExtensionPoint>
	
	<ExtensionPoint path = "/MonoDevelop/AnalysisCore/FixHandlers" name = "Fix handlers">
		<Description>Fix handlers. Classes must implement IAnalysisFixHandler.</Description>
		<ExtensionNode name="Handler" type="MonoDevelop.AnalysisCore.Extensions.FixHandlerExtensionNode" />
	</ExtensionPoint>

	<!-- Extensions -->

	<!--
	<Extension path = "/MonoDevelop/Ide/Pads">
		<Pad id="MonoDevelop.Refactoring.CodeIssuePad" _label="Code Issues" class="MonoDevelop.CodeIssues.CodeIssuePad" defaultPlacement = "Bottom"/>
	</Extension> -->
 	
	<!-- Text editor integration -->
	<Extension path = "/MonoDevelop/Ide/TextEditorExtensions">
		<Class class = "MonoDevelop.AnalysisCore.Gui.ResultsEditorExtension" />
	</Extension>
	
	<Extension path = "/MonoDevelop/SourceEditor2/TooltipProviders">
		<Class id="AnalysisResults" class="MonoDevelop.AnalysisCore.Gui.ResultTooltipProvider" insertafter="Debug" />
	</Extension>
	
	<!-- RefactoryCommands -->
	<Extension path = "/MonoDevelop/Ide/Commands">
	
		<Category _name = "Code Navigation" id = "CodeNavigation">
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.GotoDeclaration"
					defaultHandler = "MonoDevelop.Refactoring.GotoDeclarationHandler"
					_label = "_Go to Declaration" 
					shortcut = "F12"
					macShortcut = "Meta|D"/>
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.FindReferences"
					defaultHandler = "MonoDevelop.Refactoring.FindReferencesHandler"
					_label = "_Find References" 
					shortcut = "Shift|F12"
					macShortcut = "Shift|Meta|R"/>
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.FindAllReferences"
					defaultHandler = "MonoDevelop.Refactoring.FindAllReferencesHandler"
					_label = "_Find References of All Overloads" />
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.FindDerivedClasses"
					defaultHandler = "MonoDevelop.Refactoring.FindDerivedClassesHandler"
					_label = "Find _Derived Symbols" />
		</Category>
		
		<Category _name = "Refactoring" id = "Refactoring">
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.Resolve"
				defaultHandler = "MonoDevelop.Refactoring.ResolveCommandHandler"
				type="array"
				_label = "Resolve"/> 

		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.CurrentRefactoryOperations"
				defaultHandler = "MonoDevelop.Refactoring.CurrentRefactoryOperationsHandler"
				type="array"
				_label = "Refactory Operations" /> 
		
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.QuickFix"
					_label = "Quick Fix..."
					shortcut = "Alt|Return"
					macShortcut = "Alt|Return" />
		
		<Command id = "MonoDevelop.Refactoring.RefactoryCommands.ImportSymbol"
					defaultHandler = "MonoDevelop.Refactoring.ImportSymbolHandler"
					_label = "Import Symbol..."
					shortcut = "Control|Alt|space"
					macShortcut = "Control|Alt|space" />

		<Command id = "MonoDevelop.AnalysisCore.AnalysisCommands.ExportRules"
					defaultHandler = "MonoDevelop.AnalysisCore.ExportRulesHandler"
					_label = "Export C# Code Rules to a File" 
					_description = "Generates an HTML file that contains a list of all code rules"
					/>
		</Category>
	</Extension>
	
	<Extension path = "/MonoDevelop/SourceEditor2/ContextMenu/Editor">
		<CommandItem id = "MonoDevelop.Refactoring.RefactoryCommands.Resolve" insertbefore="MonoDevelop.SourceEditor.SourceEditorCommands.MarkerOperations"/>
		
		<ItemSet id = "Fix" _label = "Fix" autohide="true"
			insertafter="MonoDevelop.SourceEditor.SourceEditorCommands.MarkerOperations" insertbefore="MonoDevelop.Debugger.DebugCommands.ExpressionEvaluator">
			<CommandItem id = "MonoDevelop.AnalysisCore.AnalysisCommands.FixOperations" />
		</ItemSet>
		
		
		<CommandItem id = "MonoDevelop.Refactoring.RefactoryCommands.CurrentRefactoryOperations" insertafter="MonoDevelop.SourceEditor.SourceEditorCommands.MarkerOperations" insertbefore="MonoDevelop.Debugger.DebugCommands.ExpressionEvaluator"/>
	</Extension>
	
	<Extension path = "/MonoDevelop/Ide/TextEditorExtensions">
		<Class class = "MonoDevelop.Refactoring.Rename.RenameTextEditorExtension" />
		<Class class = "MonoDevelop.CodeActions.CodeActionEditorExtension" />
	</Extension>
	
	<Extension path = "/MonoDevelop/Ide/MainMenu/Edit">
		<CommandItem id = "MonoDevelop.CodeGeneration.CodeGenerationCommands.ShowCodeGenerationWindow"
		             insertafter="MonoDevelop.Ide.Commands.TextEditorCommands.ShowCodeTemplateWindow" />
	</Extension>
	
	<!-- Quick fix commands -->

	<Extension path = "/MonoDevelop/Ide/Commands/Refactoring">
		<Command id = "MonoDevelop.AnalysisCore.AnalysisCommands.FixOperations" type="array" 
			defaultHandler="MonoDevelop.AnalysisCore.FixOperationsHandler"
			_label = "Fixes" />
		<Command id = "MonoDevelop.AnalysisCore.AnalysisCommands.ShowFixes"
			defaultHandler="MonoDevelop.AnalysisCore.ShowFixesHandler"
			_label = "Show Fixes"
			_description="Shows a list of fixes for problems at the current location"
			macShortcut="Control|."
			shortcut = "Control|." />
	</Extension>
	
	<!-- Options panels -->
	
	<Extension path = "/MonoDevelop/Ide/GlobalOptionsDialog/TextEditor">
		<Section id="Analysis" _label="Source Analysis" fill="true" class="MonoDevelop.AnalysisCore.Gui.AnalysisOptionsPanel" icon="md-prefs-code-analysis" >
			<Section id="C#" _label="C#" icon="md-prefs-csharp">
				<Panel id="CodeIssuePanel" _label="Code Rules" fill="true" class="MonoDevelop.CodeIssues.CodeIssuePanel" grouping="Tab" icon="md-prefs-code-rules" />
				<Panel id="CodeActions" _label="Code Actions" fill="true" class="MonoDevelop.CodeActions.CodeActionPanel" grouping="Tab" icon="md-prefs-code-actions" />
			</Section>
		</Section>
	</Extension>
	
	<!-- Extensions to the addin points defined by this addin -->
	
	<Extension path = "/MonoDevelop/AnalysisCore/Types">
		<Type name="Document" class="MonoDevelop.Ide.Gui.Document" />
		<Type name="CompilationUnit" class="MonoDevelop.Projects.Dom.ICompilationUnit" />
	</Extension>
	
	<Extension path = "/MonoDevelop/AnalysisCore/Rules">
		<Adaptor func="MonoDevelop.AnalysisCore.Rules.Adapters.GetCompilationUnit"
			input="Document" output="CompilationUnit" />
		<Category _name="Design Guidelines" id="Design">
<!--			<Rule _name="Naming Conventions" input="CompilationUnit" 
				func="MonoDevelop.AnalysisCore.Rules.NamingConventions.ClassNaming" />-->
		</Category>
	</Extension>

	<Extension path = "/MonoDevelop/AnalysisCore/FixHandlers">
		<Handler fixName="RenameMember" class = "MonoDevelop.AnalysisCore.Fixes.RenameMemberHandler" />
		<Handler fixName="Generic" class = "MonoDevelop.AnalysisCore.Fixes.GenericFixHandler" />
	</Extension>
    
	<Extension path="/MonoDevelop/Core/StockIcons">
		<StockIcon stockid="md-prefs-code-actions" resource="prefs-code-actions-16.png" size="Menu" />
		<StockIcon stockid="md-prefs-code-rules" resource="prefs-code-rules-16.png" size="Menu" />
		<StockIcon stockid="md-prefs-code-analysis" resource="prefs-code-analysis-16.png" size="Menu" />
	</Extension>
</ExtensionModel>
