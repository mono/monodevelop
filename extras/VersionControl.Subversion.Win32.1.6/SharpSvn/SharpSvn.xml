<?xml version="1.0"?>
<doc>
    <assembly>
        "SharpSvn"
    </assembly>
    <members>
        <member name="T:SharpSvn.SvnUnlockArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.Unlock(System.String,SharpSvn.SvnUnlockArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnGetCapabilitiesArgs">
            <summary>Extended Parameter container for SvnClient.Blame</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnReplayRevisionArgs.RetrieveContent">
            <summary>Gets or sets a boolean indicating whether to retrieve real property
and content changes. If set to false only marker changes are sent. (Changes on ""
property and empty file deltas</summary>
        </member>
        <member name="P:SharpSvn.SvnReplayRevisionArgs.LowWatermarkRevision">
            <summary>Gets or sets the maximum version the client knows about. Deltas will be
based on this version</summary>
        </member>
        <member name="T:SharpSvn.SvnReplayRevisionArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnClient" />.ReplayRevision</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="M:sharpsvn_found_entry(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_entry_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*)">
An @a entry was found at @a path. 
</member>
        <member name="P:SharpSvn.SvnWorkingCopyEntriesArgs.CommandType">
            <summary>Gets the <see cref="T:SharpSvn.SvnCommandType" /> of the command</summary>
        </member>
        <member name="P:SharpSvn.SvnWorkingCopyEntriesArgs.Depth">
            <summary>The depth to walk for entries; reeds all entries in path when depth is unknown (default)</summary>
        </member>
        <member name="P:SharpSvn.SvnWorkingCopyEntriesArgs.RetrieveHidden">
            <summary>Gets or sets a boolean indicating whether to return deleted or absent entries</summary>
        </member>
        <member name="T:SharpSvn.SvnRecoverRepositoryArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnRepositoryClient" />'s RecoverRepository method</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnSwitchArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.Switch(System.String,SharpSvn.SvnUriTarget,SharpSvn.SvnSwitchArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnCommitArgs.ChangeLists">
            <summary>Gets the list of changelist-names to commit</summary>
        </member>
        <member name="T:SharpSvn.SvnCommitArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.Commit(System.String,SharpSvn.SvnCommitArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnDeleteArgs.Force">
            <summary>If Force is not set then this operation will fail if any path contains locally modified
and/or unversioned items. If Force is set such items will be deleted.</summary>
        </member>
        <member name="T:SharpSvn.SvnDeleteArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.Delete(System.String,SharpSvn.SvnDeleteArgs)" /> and <see cref="M:SharpSvn.SvnClient.RemoteDelete(System.Uri,SharpSvn.SvnDeleteArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnRevertArgs.ChangeLists">
            <summary>Gets the list of changelist-names</summary>
        </member>
        <member name="T:SharpSvn.SvnRevertArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.Revert(System.String,SharpSvn.SvnRevertArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnAddToChangeListArgs.ChangeLists">
            <summary>Gets the list of changelist-names</summary>
        </member>
        <member name="T:SharpSvn.SvnAddToChangeListArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.AddToChangeList(System.String,System.String,SharpSvn.SvnAddToChangeListArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="M:svn_wc__entry_versioned_internal(svn_wc_entry_t!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_wc.h
 @brief Subversion's working copy library

 Requires:
            - A working copy

 Provides:
            - Ability to manipulate working copy's versioned data.
            - Ability to manipulate working copy's administrative files.

 Used By:
            - Clients.

 Notes:
            The 'path' parameters to most of these functions can be
            absolute or relative (relative to current working
            directory).  If there are any cases where they are
            relative to the path associated with the
            'svn_wc_adm_access_t *adm_access' baton passed along
            with the path, those cases should be explicitly
            documented, and if they are not, please fix it.

</member>
        <member name="P:SharpSvn.SvnWorkingCopyInstallConflictArgs.CommandType">
            <summary>Gets the <see cref="T:SharpSvn.SvnCommandType" /> of the command</summary>
        </member>
        <member name="T:SharpSvn.SvnCreateDirectoryArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.CreateDirectory(System.String,SharpSvn.SvnCreateDirectoryArgs)" /> and <see cref="M:SharpSvn.SvnClient.RemoteCreateDirectory(System.Uri,SharpSvn.SvnCreateDirectoryArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnChangedArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnLookClient" />'s Changed method</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnStatusArgs.ChangeLists">
            <summary>Gets the list of changelist-names</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusArgs.IgnoreExternals">
            <summary>Gets or sets a boolean indicating whether externals should be ignored</summary>
            <remarks>
If IgnoreExternals is not set, then recurse into externals
definitions (if any exist) after handling the main target.  This
calls the client notification function (in @a ctx) with the @c
svn_wc_notify_status_external action before handling each externals
definition, and with @c svn_wc_notify_status_completed
after each.
</remarks>
        </member>
        <member name="P:SharpSvn.SvnStatusArgs.RetrieveIgnoredEntries">
            <summary>Gets or sets a boolean indicating whether ignored files should be retrieved</summary>
            <remarks>If RetrieveIgnoredEntries is set add files or directories that match ignore patterns.</remarks>
        </member>
        <member name="P:SharpSvn.SvnStatusArgs.RetrieveRemoteStatus">
            <summary>Gets or sets a boolean indicating whether the repository should be contacted to retrieve out of date information</summary>
            <remarks>
If Update is set, contact the repository and augment the
status structures with information about out-of-dateness (with
respect to @a revision).  Also, if @a result_rev is not @c NULL,
set @a *result_rev to the actual revision against which the
working copy was compared (result_rev is not meaningful unless
update is set
</remarks>
        </member>
        <member name="P:SharpSvn.SvnStatusArgs.RetrieveAllEntries">
            <summary>Gets or sets a boolean indicating whether all status properties should be retrieved</summary>
            <remarks>
If @a get_all is set, retrieve all entries; otherwise,
retrieve only "interesting" entries (local mods and/or
out of date
</remarks>
        </member>
        <member name="T:SharpSvn.SvnStatusArgs">
            <summary>Extended Parameter container for SvnClient.Status</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnRevisionPropertyListArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnClient" />'s GetRevisionPropertyList</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnImportArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.Import(System.String,System.Uri,SharpSvn.SvnImportArgs)" /> and <see cref="M:SharpSvn.SvnClient.RemoteImport(System.String,System.Uri,SharpSvn.SvnImportArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.VerifyEnumFailed">
            <summary>
  Looks up a localized string similar to The value {0} is not a valid {1}.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.UriIsNotAbsolute">
            <summary>
  Looks up a localized string similar to The passed Uri is not absolute.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.TheTargetIsNotAValidUriTarget">
            <summary>
  Looks up a localized string similar to The specified target is not a valid Uri target.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.TheTargetIsNotAValidUriOrPathTarget">
            <summary>
  Looks up a localized string similar to The specified target is not a value Uri or Path target.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.TheTargetIsNotAValidPathTarget">
            <summary>
  Looks up a localized string similar to The specified target is not a valid Path target.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.TargetMustContainExplicitRevision">
            <summary>
  Looks up a localized string similar to The passed target must contain an explicit revision.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.SvnMalfunctionPrefix">
            <summary>
  Looks up a localized string similar to Subversion reported a malfunction '{0}' on line {2} of '{1}'..
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.SvnClientOperationInProgress">
            <summary>
  Looks up a localized string similar to Svn operation in progress; an SvnClient instance can handle only one command at a time.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.SvnAuthManagedPlaceholder">
            <summary>
  Looks up a localized string similar to This function is not available from managed code. .
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.SessionAlreadyOpen">
            <summary>
  Looks up a localized string similar to The session is already open.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.RevisionTypeMustBeHeadDateOrSpecific">
            <summary>
  Looks up a localized string similar to Revision type must be head, date or a specific revision number.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.RevisionTypeCantBeWorking">
            <summary>
  Looks up a localized string similar to The Working revision type is not supported here.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.RevisionNumberMustBeAtLeast0">
            <summary>
  Looks up a localized string similar to Revision number must be at least 0.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.RevisionMustBeGreaterThanOrEqualToZero">
            <summary>
  Looks up a localized string similar to Revision must be &gt;= 0.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.RemoteSessionMustBeOpenToPerformCommand">
            <summary>
  Looks up a localized string similar to The remote session must be open before it can perform commands.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.PropertyNameIsNotValid">
            <summary>
  Looks up a localized string similar to Property name is not valid.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.PleaseRestartThisApplicationBeforeContinuing">
            <summary>
  Looks up a localized string similar to Please restart this application before continuing.\n\nStack trace:\n{0}.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.PathXTooLongAndNotRooted">
            <summary>
  Looks up a localized string similar to Paths with a length above MAX_PATH (like '{0}') must be rooted..
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.PathXContainsInvalidCharacters">
            <summary>
  Looks up a localized string similar to Path '{0}' contains invalid characters.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.PathCountDoesNotMatchRevisions">
            <summary>
  Looks up a localized string similar to The number of elements in the paths collection does not match the number in revisions.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyXUnlocked">
            <summary>
  Looks up a localized string similar to '{0}' unlocked..
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyXLockedByUserY">
            <summary>
  Looks up a localized string similar to '{0}' locked by user '{1}'..
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyUpdatedToRevisionX">
            <summary>
  Looks up a localized string similar to Updated to revision {0}..
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyUpdatedExternalToRevisionX">
            <summary>
  Looks up a localized string similar to Updated external to revision {0}..
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyTransmittingFileData">
            <summary>
  Looks up a localized string similar to Transmitting file data.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyStatusAgainstRevisionX">
            <summary>
  Looks up a localized string similar to Status against revision: {0}.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifySkippedMissingX">
            <summary>
  Looks up a localized string similar to Skipped missing '{0}'.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifySkippedMissingTargetX">
            <summary>
  Looks up a localized string similar to Skipped missing target '{0}'.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyRevertedX">
            <summary>
  Looks up a localized string similar to Reverted '{0}'.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyReverseMergingRXToRYIntoZ">
            <summary>
  Looks up a localized string similar to --- Reverse-merging r{0} through r{1} into '{2}':.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyReverseMergingRXIntoY">
            <summary>
  Looks up a localized string similar to --- Reverse-merging r{0} into '{1}':.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyRestoredX">
            <summary>
  Looks up a localized string similar to Restored '{0}'.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyResolvedConflictedStateOfX">
            <summary>
  Looks up a localized string similar to Resolved conflicted state of '{0}'.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyPerformingStatusOnExternalItemAtX">
            <summary>
  Looks up a localized string similar to Performing status on external item at '{0}'.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyPathXIsNowAMemberOfChangeListY">
            <summary>
  Looks up a localized string similar to Path '{0}' is now a member of change list '{1}'..
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyPathXIsNoLongerAMemberOfAChangeList">
            <summary>
  Looks up a localized string similar to Path '{0}' is no longer a member of a change list..
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyMergingRXToRYIntoZ">
            <summary>
  Looks up a localized string similar to --- Merging r{0} through r{1} into '{2}':.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyMergingRXIntoY">
            <summary>
  Looks up a localized string similar to --- Merging r{0} into '{1}':.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyMergingDifferencesBetweenRepositoryUrlsIntoX">
            <summary>
  Looks up a localized string similar to --- Merging differences between repository URLs into '{0}':.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyFetchExternalItemIntoX">
            <summary>
  Looks up a localized string similar to Fetching external item into '{0}'.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyFailedToRevertX">
            <summary>
  Looks up a localized string similar to Failed to revert '{0}' -- try updating instead.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyExternalAtRevisionX">
            <summary>
  Looks up a localized string similar to External at revision {0}..
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyExportedRevisionX">
            <summary>
  Looks up a localized string similar to Exported revision {0}..
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyExportedExternalAtRevisionX">
            <summary>
  Looks up a localized string similar to Exported external at revision {0}..
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyCheckedOutRevisionX">
            <summary>
  Looks up a localized string similar to Checked out revision {0}..
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyCheckedOutExternalAtRevisionX">
            <summary>
  Looks up a localized string similar to Checked out external at revision {0}..
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NotifyAtRevisionX">
            <summary>
  Looks up a localized string similar to At revision {0}..
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.NonUtf8ConvertableLine">
            <summary>
  Looks up a localized string similar to {This line does contain non-Utf8 characters}.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.LoadingMimeTypesMapFileFailed">
            <summary>
  Looks up a localized string similar to The loading of the subversion mime mapping file failed.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.ItemInListIsNull">
            <summary>
  Looks up a localized string similar to One or more items in the list are null.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.IOThreadBlocked">
            <summary>
  Looks up a localized string similar to The IO Thread Blocked -- Do you have a deadlock?.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.InvalidUri">
            <summary>
  Looks up a localized string similar to Invalid Uri string.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.InvalidSvnRevisionTypeValue">
            <summary>
  Looks up a localized string similar to Invalid SvnRevisionType value specified.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.InvalidCharacterInClientName">
            <summary>
  Looks up a localized string similar to Invalid character in client name.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.HandlerIsNotRegisteredAtThisTime">
            <summary>
  Looks up a localized string similar to The handler is not registered at this time.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.FileXNotFound">
            <summary>
  Looks up a localized string similar to File '{0}' not found.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.FatalExceptionInSubversionApi">
            <summary>
  Looks up a localized string similar to A fatal error occurred within the subversion API - (Use Ctrl+C to copy message).
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.CropToValidDepth">
            <summary>
  Looks up a localized string similar to You can only crop a node to a depth between empty and files..
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.CollectionMustContainAtLeastOneItem">
            <summary>
  Looks up a localized string similar to The collection must at least contain one item.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.CanOnlyResolveHeadDateandExplicitRevisions">
            <summary>
  Looks up a localized string similar to Can only resolve head, number and date revisions.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.ArgumentMustBeAValidRepositoryUri">
            <summary>
  Looks up a localized string similar to The argument must be a valid absolute repository Uri.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.ArgumentMustBeAPathNotAUri">
            <summary>
  Looks up a localized string similar to This argument is not a valid path. A Uri was specified.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.AllUrisMustBeOnTheSameServer">
            <summary>
  Looks up a localized string similar to All provided Uri's must be on the same server.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.AllTargetsMustBeUriOrPath">
            <summary>
  Looks up a localized string similar to All targets must either be Uri or Path.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.Culture">
            <summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
        </member>
        <member name="P:SharpSvn.SharpSvnStrings.ResourceManager">
            <summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
        </member>
        <member name="T:SharpSvn.SharpSvnStrings">
            <summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
        </member>
        <member name="M:svn_repos_version">
 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_io.h
 @brief General file I/O for Subversion

 @copyright
 ====================================================================
 Copyright (c) 2006-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_mergeinfo.h
 @brief mergeinfo handling and processing

</member>
        <member name="M:svn_fs_pack(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,=FUNC:svn_error_t*(System.Void*,System.Int64,svn_fs_pack_notify_action_t,apr_pool_t*),System.Void*,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
 Possibly update the filesystem located in the directory @a path
 to use disk space more efficiently.

 @since New in 1.6.

</member>
        <member name="D:svn_fs_pack_notify_t">
The type of a pack notification function.  @a shard is the shard being
 * acted upon; @a action is the type of action being performed.  @a baton is
 * the corresponding baton for the notification function, and @a pool can
 * be used for temporary allocations, but will be cleared between invocations.

</member>
        <member name="F:svn_fs_pack_notify_end">
packing of the shard is completed 
</member>
        <member name="F:svn_fs_pack_notify_start">
packing of the shard has commenced 
</member>
        <member name="M:svn_fs_print_modules(svn_stringbuf_t*,apr_pool_t*)">
@} 
 Append a textual list of all available FS modules to the stringbuf
 @a output.

 @since New in 1.2.

</member>
        <member name="M:svn_fs_get_locks(svn_fs_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,=FUNC:svn_error_t*(System.Void*,svn_lock_t*,apr_pool_t*),System.Void*,apr_pool_t*)">
Report locks on or below @a path in @a fs using the @a
 * get_locks_func / @a get_locks_baton.  Use @a pool for necessary
 * allocations.
 *
 * If the @a get_locks_func callback implementation returns an error,
 * lock iteration will terminate and that error will be returned by
 * this function.

</member>
        <member name="D:svn_fs_get_locks_callback_t">
The type of a lock discovery callback function.  @a baton is the
 * value specified in the call to svn_fs_get_locks(); the filesystem
 * passes it through to the callback.  @a lock is a lock structure.
 * @a pool is a temporary subpool for use by the callback
 * implementation -- it is cleared after invocation of the callback.

</member>
        <member name="M:svn_fs_get_lock(svn_lock_t**,svn_fs_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
If @a path is locked in @a fs, set @a *lock to an svn_lock_t which
 *  represents the lock, allocated in @a pool.
 *
 * If @a path is not locked, set @a *lock to NULL.

</member>
        <member name="M:svn_fs_unlock(svn_fs_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Remove the lock on @a path represented by @a token in @a fs.
 *
 * If @a token doesn't point to a lock, return @c SVN_ERR_FS_BAD_LOCK_TOKEN.
 * If @a token points to an expired lock, return @c SVN_ERR_FS_LOCK_EXPIRED.
 * If @a fs has no username associated with it, return @c SVN_ERR_FS_NO_USER
 * unless @a break_lock is specified.
 *
 * If @a token points to a lock, but the username of @a fs's access
 * context doesn't match the lock's owner, return @c
 * SVN_ERR_FS_LOCK_OWNER_MISMATCH.  If @a break_lock is TRUE, however, don't
 * return error;  allow the lock to be "broken" in any case.  In the latter
 * case, @a token shall be @c NULL.
 *
 * Use @a pool for temporary allocations.

</member>
        <member name="M:svn_fs_generate_lock_token(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,svn_fs_t*,apr_pool_t*)">
Generate a unique lock-token using @a fs. Return in @a *token,
 * allocated in @a pool.
 *
 * This can be used in to populate lock-&gt;token before calling
 * svn_fs_attach_lock().

</member>
        <member name="M:svn_fs_lock(svn_lock_t**,svn_fs_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int64,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32,apr_pool_t*)">
@defgroup svn_fs_locks Filesystem locks
 * @{
 * @since New in 1.2. 
A lock represents one user's exclusive right to modify a path in a
 * filesystem.  In order to create or destroy a lock, a username must
 * be associated with the filesystem's access context (see @c
 * svn_fs_access_t).
 *
 * When a lock is created, a 'lock-token' is returned.  The lock-token
 * is a unique URI that represents the lock (treated as an opaque
 * string by the client), and is required to make further use of the
 * lock (including removal of the lock.)  A lock-token can also be
 * queried to return a svn_lock_t structure that describes the details
 * of the lock.  lock-tokens must not contain any newline character,
 * mainly due to the serialization for tokens for pre-commit hook.
 *
 * Locks are not secret; anyone can view existing locks in a
 * filesystem.  Locks are not omnipotent: they can broken and stolen
 * by people who don't "own" the lock.  (Though admins can tailor a
 * custom break/steal policy via libsvn_repos pre-lock hook script.)
 *
 * Locks can be created with an optional expiration date.  If a lock
 * has an expiration date, then the act of fetching/reading it might
 * cause it to automatically expire, returning either nothing or an
 * expiration error (depending on the API).

Lock @a path in @a fs, and set @a *lock to a lock
 * representing the new lock, allocated in @a pool.
 *
 * @warning You may prefer to use svn_repos_fs_lock() instead,
 * which see.
 *
 * @a fs must have a username associated with it (see @c
 * svn_fs_access_t), else return @c SVN_ERR_FS_NO_USER.  Set the
 * 'owner' field in the new lock to the fs username.
 *
 * @a comment is optional: it's either an xml-escapable UTF8 string
 * which describes the lock, or it is @c NULL.
 *
 * @a is_dav_comment describes whether the comment was created by a
 * generic DAV client; only mod_dav_svn's autoversioning feature needs
 * to use it.  If in doubt, pass 0.
 *
 * If path is already locked, then return @c SVN_ERR_FS_PATH_ALREADY_LOCKED,
 * unless @a steal_lock is TRUE, in which case "steal" the existing
 * lock, even if the FS access-context's username does not match the
 * current lock's owner: delete the existing lock on @a path, and
 * create a new one.
 *
 * @a token is a lock token such as can be generated using
 * svn_fs_generate_lock_token() (indicating that the caller wants to
 * dictate the lock token used), or it is @c NULL (indicating that the
 * caller wishes to have a new token generated by this function).  If
 * @a token is not @c NULL, and represents an existing lock, then @a
 * path must match the path associated with that existing lock.
 *
 * If @a expiration_date is zero, then create a non-expiring lock.
 * Else, the lock will expire at @a expiration_date.
 *
 * If @a current_rev is a valid revnum, then do an out-of-dateness
 * check.  If the revnum is less than the last-changed-revision of @a
 * path (or if @a path doesn't exist in HEAD), return @c
 * SVN_ERR_FS_OUT_OF_DATE.
 *
 * @note At this time, only files can be locked.

</member>
        <member name="M:svn_fs_set_uuid(svn_fs_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
If not @c NULL, associate @a *uuid with @a fs.  Otherwise (if @a
 * uuid is @c NULL), generate a new UUID for @a fs.  Use @a pool for
 * any scratchwork.

</member>
        <member name="M:svn_fs_get_uuid(svn_fs_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,apr_pool_t*)">
Populate @a *uuid with the UUID associated with @a fs.  Allocate
    @a *uuid in @a pool.  
</member>
        <member name="M:svn_fs_get_file_delta_stream(svn_txdelta_stream_t**,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *stream_p to a pointer to a delta stream that will turn the
 * contents of the file @a source into the contents of the file @a target.
 * If @a source_root is zero, use a file with zero length as the source.
 *
 * This function does not compare the two files' properties.
 *
 * Allocate @a *stream_p, and do any necessary temporary allocation, in
 * @a pool.

</member>
        <member name="M:svn_fs_change_rev_prop(svn_fs_t*,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Change a revision's property's value, or add/delete a property.
 *
 * - @a fs is a filesystem, and @a rev is the revision in that filesystem
 *   whose property should change.
 * - @a name is the name of the property to change.
 * - @a value is the new value of the property, or zero if the property should
 *   be removed altogether.
 *
 * Note that revision properties are non-historied --- you can change
 * them after the revision has been committed.  They are not protected
 * via transactions.
 *
 * Do any necessary temporary allocation in @a pool.

</member>
        <member name="M:svn_fs_revision_proplist(apr_hash_t**,svn_fs_t*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_pool_t*)">
Set @a *table_p to the entire property list of revision @a rev in
 * filesystem @a fs, as an APR hash table allocated in @a pool.  The table
 * maps <tt>char *</tt> property names to @c svn_string_t * values; the names
 * and values are allocated in @a pool.

</member>
        <member name="M:svn_fs_revision_prop(svn_string_t**,svn_fs_t*,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *value_p to the value of the property named @a propname on
 * revision @a rev in the filesystem @a fs.  If @a rev has no property by
 * that name, set @a *value_p to zero.  Allocate the result in @a pool.

</member>
        <member name="M:svn_fs_deltify_revision(svn_fs_t*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_pool_t*)">
Provide filesystem @a fs the opportunity to compress storage relating to
 * associated with  @a revision in filesystem @a fs.  Use @a pool for all
 * allocations.
 *
 * @note This can be a time-consuming process, depending the breadth
 * of the changes made in @a revision, and the depth of the history of
 * those changed paths.  This may also be a no op.

</member>
        <member name="M:svn_fs_youngest_rev(System.Int32!System.Runtime.CompilerServices.IsLong*,svn_fs_t*,apr_pool_t*)">
Set @a *youngest_p to the number of the youngest revision in filesystem
 * @a fs.  Use @a pool for all temporary allocation.
 *
 * The oldest revision in any filesystem is numbered zero.

</member>
        <member name="M:svn_fs_contents_changed(System.Int32*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Check if the contents of two root/path combos have changed.
 *
 * Set @a *changed_p to 1 if the contents at @a path1 under @a root1 differ
 * from those at @a path2 under @a root2, or set it to 0 if they are the
 * same.  Both paths must exist under their respective roots, and both
 * roots must be in the same filesystem.

</member>
        <member name="M:svn_fs_apply_text(svn_stream_t**,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Write data directly to the file @a path in @a root.  @a root must be the
 * root of a transaction, not a revision.
 *
 * Set @a *contents_p to a stream ready to receive full textual data.
 * When the caller closes this stream, the data replaces the previous
 * contents of the file.  The caller must write all file data and close
 * the stream before making further changes to the transaction.
 *
 * If @a path does not exist in @a root, return an error.  (You cannot use
 * this routine to create new files;  use svn_fs_make_file() to create
 * an empty file first.)
 *
 * @a result_checksum is the hex MD5 digest for the final fulltext
 * written to the stream.  It is ignored if NULL, but if not null, it
 * must match the checksum of the result; if it does not, then the @a
 * *contents_p call which detects the mismatch will return the error
 * @c SVN_ERR_CHECKSUM_MISMATCH.
 *
 * Do any necessary temporary allocation in @a pool.
 *
 * ### This is like svn_fs_apply_textdelta(), but takes the text
 * straight.  It is currently used only by the loader, see
 * libsvn_repos/load.c.  It should accept a checksum, of course, which
 * would come from an (optional) header in the dump file.  See
 * http://subversion.tigris.org/issues/show_bug.cgi?id=1102 for more.

</member>
        <member name="M:svn_fs_apply_textdelta(=FUNC:svn_error_t*(svn_txdelta_window_t*,System.Void*)*,System.Void**,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Apply a text delta to the file @a path in @a root.  @a root must be the
 * root of a transaction, not a revision.
 *
 * Set @a *contents_p to a function ready to receive text delta windows
 * describing how to change the file's contents, relative to its
 * current contents.  Set @a *contents_baton_p to a baton to pass to
 * @a *contents_p.
 *
 * If @a path does not exist in @a root, return an error.  (You cannot use
 * this routine to create new files;  use svn_fs_make_file() to create
 * an empty file first.)
 *
 * @a base_checksum is the hex MD5 digest for the base text against
 * which the delta is to be applied; it is ignored if NULL, and may be
 * ignored even if not NULL.  If it is not ignored, it must match the
 * checksum of the base text against which svndiff data is being
 * applied; if not, svn_fs_apply_textdelta() or the @a *contents_p call
 * which detects the mismatch will return the error
 * @c SVN_ERR_CHECKSUM_MISMATCH (if there is no base text, there may
 * still be an error if @a base_checksum is neither NULL nor the
 * checksum of the empty string).
 *
 * @a result_checksum is the hex MD5 digest for the fulltext that
 * results from this delta application.  It is ignored if NULL, but if
 * not NULL, it must match the checksum of the result; if it does not,
 * then the @a *contents_p call which detects the mismatch will return
 * the error @c SVN_ERR_CHECKSUM_MISMATCH.
 *
 * The caller must send all delta windows including the terminating
 * NULL window to @a *contents_p before making further changes to the
 * transaction.
 *
 * Do temporary allocation in @a pool.

</member>
        <member name="M:svn_fs_make_file(svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Create a new file named @a path in @a root.  The file's initial contents
 * are the empty string, and it has no properties.  @a root must be the
 * root of a transaction, not a revision.
 *
 * Do any necessary temporary allocation in @a pool.

</member>
        <member name="M:svn_fs_file_contents(svn_stream_t**,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *contents to a readable generic stream that will yield the
 * contents of the file @a path in @a root.  Allocate the stream in
 * @a pool.  You can only use @a *contents for as long as the underlying
 * filesystem is open.  If @a path is not a file, return
 * @c SVN_ERR_FS_NOT_FILE.
 *
 * If @a root is the root of a transaction, it is possible that the
 * contents of the file @a path will change between calls to
 * svn_fs_file_contents().  In that case, the result of reading from
 * @a *contents is undefined.
 *
 * ### @todo kff: I am worried about lifetime issues with this pool vs
 * the trail created farther down the call stack.  Trace this function
 * to investigate...

</member>
        <member name="M:svn_fs_file_md5_checksum(System.Byte*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Same as svn_fs_file_checksum(), only always put the MD5 checksum of file
 @a path into @a digest, which should point to @c APR_MD5_DIGESTSIZE bytes
 of storage.  If the checksum doesn't exist, put all 0's into @a digest.

 @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="M:svn_fs_file_checksum(svn_checksum_t**,svn_checksum_kind_t,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Set @a *checksum to the checksum of type @a kind for the file @a path.
 * @a *checksum will be allocated out of @a pool, which will also be used
 * for temporary allocations.
 *
 * If the filesystem does not have a prerecorded checksum of @a kind for
 * @a path, and @a force is not TRUE, do not calculate a checksum
 * dynamically, just put NULL into @a checksum.  (By convention, the NULL
 * checksum is considered to match any checksum.)
 *
 * Notes:
 *
 * You might wonder, why do we only provide this interface for file
 * contents, and not for properties or directories?
 *
 * The answer is that property lists and directory entry lists are
 * essentially data structures, not text.  We serialize them for
 * transmission, but there is no guarantee that the consumer will
 * parse them into the same form, or even the same order, as the
 * producer.  It's difficult to find a checksumming method that
 * reaches the same result given such variation in input.  (I suppose
 * we could calculate an independent MD5 sum for each propname and
 * value, and XOR them together; same with directory entry names.
 * Maybe that's the solution?)  Anyway, for now we punt.  The most
 * important data, and the only data that goes through svndiff
 * processing, is file contents, so that's what we provide
 * checksumming for.
 *
 * Internally, of course, the filesystem checksums everything, because
 * it has access to the lowest level storage forms: strings behind
 * representations.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_fs_file_length(System.Int64*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *length_p to the length of the file @a path in @a root, in bytes.
 * Do any necessary temporary allocation in @a pool.

</member>
        <member name="M:svn_fs_revision_link(svn_fs_root_t*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Like svn_fs_copy(), but doesn't record copy history, and preserves
 * the PATH.  You cannot use svn_fs_copied_from() later to find out
 * where this copy came from.
 *
 * Use svn_fs_revision_link() in situations where you don't care
 * about the copy history, and where @a to_path and @a from_path are
 * the same, because it is cheaper than svn_fs_copy().

</member>
        <member name="M:svn_fs_copy(svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Create a copy of @a from_path in @a from_root named @a to_path in
 * @a to_root.  If @a from_path in @a from_root is a directory, copy the
 * tree it refers to recursively.
 *
 * The copy will remember its source; use svn_fs_copied_from() to
 * access this information.
 *
 * @a to_root must be the root of a transaction; @a from_root must be the
 * root of a revision.  (Requiring @a from_root to be the root of a
 * revision makes the implementation trivial: there is no detectable
 * difference (modulo node revision ID's) between copying @a from and
 * simply adding a reference to it.  So the operation takes place in
 * constant time.  However, there's no reason not to extend this to
 * mutable nodes --- it's just more code.)  Further, @a to_root and @a
 * from_root must represent the same filesystem.
 *
 * @note To do a copy without preserving copy history, use
 * svn_fs_revision_link().
 *
 * Do any necessary temporary allocation in @a pool.

</member>
        <member name="M:svn_fs_delete(svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Delete the node named @a path in @a root.  If the node being deleted is
 * a directory, its contents will be deleted recursively.  @a root must be
 * the root of a transaction, not of a revision.  Use @a pool for
 * temporary allocation.
 *
 * This function may be more efficient than making the equivalent
 * series of calls to svn_fs_delete(), because it takes advantage of the
 * fact that, to delete an immutable subtree, shared with some
 * committed revision, you need only remove the directory entry.  The
 * dumb algorithm would recurse into the subtree and end up cloning
 * each non-empty directory it contains, only to delete it later.
 *
 * If return @c SVN_ERR_FS_NO_SUCH_ENTRY, then the basename of @a path is
 * missing from its parent, that is, the final target of the deletion
 * is missing.
 *
 * Attempting to remove the root dir also results in an error,
 * @c SVN_ERR_FS_ROOT_DIR, even if the dir is empty.

</member>
        <member name="M:svn_fs_make_dir(svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Create a new directory named @a path in @a root.  The new directory has
 * no entries, and no properties.  @a root must be the root of a transaction,
 * not a revision.
 *
 * Do any necessary temporary allocation in @a pool.

</member>
        <member name="M:svn_fs_dir_entries(apr_hash_t**,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *entries_p to a newly allocated APR hash table containing the
 * entries of the directory at @a path in @a root.  The keys of the table
 * are entry names, as byte strings, excluding the final NULL
 * character; the table's values are pointers to @c svn_fs_dirent_t
 * structures.  Allocate the table and its contents in @a pool.

</member>
        <member name="F:svn_fs_dirent_t.kind">
The node kind. 
</member>
        <member name="F:svn_fs_dirent_t.id">
The node revision ID it names.  
</member>
        <member name="F:svn_fs_dirent_t.name">
The name of this directory entry.  
</member>
        <member name="T:svn_fs_dirent_t">
The type of a Subversion directory entry.  
</member>
        <member name="M:svn_fs_merge(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Merge changes between two nodes into a third node.
 *
 * Given nodes @a source and @a target, and a common ancestor @a ancestor,
 * modify @a target to contain all the changes made between @a ancestor and
 * @a source, as well as the changes made between @a ancestor and @a target.
 * @a target_root must be the root of a transaction, not a revision.
 *
 * @a source, @a target, and @a ancestor are generally directories; this
 * function recursively merges the directories' contents.  If they are
 * files, this function simply returns an error whenever @a source,
 * @a target, and @a ancestor are all distinct node revisions.
 *
 * If there are differences between @a ancestor and @a source that conflict
 * with changes between @a ancestor and @a target, this function returns an
 * @c SVN_ERR_FS_CONFLICT error.
 *
 * If the merge is successful, @a target is left in the merged state, and
 * the base root of @a target's txn is set to the root node of @a source.
 * If an error is returned (whether for conflict or otherwise), @a target
 * is left unaffected.
 *
 * If @a conflict_p is non-NULL, then: a conflict error sets @a *conflict_p
 * to the name of the node in @a target which couldn't be merged,
 * otherwise, success sets @a *conflict_p to NULL.
 *
 * Do any necessary temporary allocation in @a pool.

</member>
        <member name="M:svn_fs_get_mergeinfo(apr_hash_t**,svn_fs_root_t*,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,svn_mergeinfo_inheritance_t,System.Int32,apr_pool_t*)">
Retrieve mergeinfo for multiple nodes.
 *
 * @a *catalog is a catalog for @a paths.  It will never be @c NULL,
 * but may be empty.
 *
 * @a root is revision root to use when looking up paths.
 *
 * @a paths are the paths you are requesting information for.
 *
 * @a inherit indicates whether to retrieve explicit,
 * explicit-or-inherited, or only inherited mergeinfo.
 *
 * If @a include_descendants is TRUE, then additionally return the
 * mergeinfo for any descendant of any element of @a paths which has
 * the @c SVN_PROP_MERGEINFO property explicitly set on it.  (Note
 * that inheritance is only taken into account for the elements in @a
 * paths; descendants of the elements in @a paths which get their
 * mergeinfo via inheritance are not included in @a *mergeoutput.)
 *
 * Do any necessary temporary allocation in @a pool.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_fs_closest_copy(svn_fs_root_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *root_p and @a *path_p to the revision root and path of the
 * destination of the most recent copy event that caused @a path to
 * exist where it does in @a root, or to NULL if no such copy exists.
 * When non-NULL, allocate @a *root_p and @a *path_p in @a pool.
 *
 * @a *path_p might be a parent of @a path, rather than @a path
 * itself.  However, it will always be the deepest relevant path.
 * That is, if a copy occurs underneath another copy in the same txn,
 * this function makes sure to set @a *path_p to the longest copy
 * destination path that is still a parent of or equal to @a path.
 *
 * @since New in 1.3.

</member>
        <member name="M:svn_fs_copied_from(System.Int32!System.Runtime.CompilerServices.IsLong*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Discover a node's copy ancestry, if any.
 *
 * If the node at @a path in @a root was copied from some other node, set
 * @a *rev_p and @a *path_p to the revision and path of the other node,
 * allocating @a *path_p in @a pool.
 *
 * Else if there is no copy ancestry for the node, set @a *rev_p to
 * @c SVN_INVALID_REVNUM and @a *path_p to NULL.
 *
 * If an error is returned, the values of @a *rev_p and @a *path_p are
 * undefined, but otherwise, if one of them is set as described above,
 * you may assume the other is set correspondingly.
 *
 * @a root may be a revision root or a transaction root.
 *
 * Notes:
 *    - Copy ancestry does not descend.  After copying directory D to
 *      E, E will have copy ancestry referring to D, but E's children
 *      may not.  See also svn_fs_copy().
 *
 *    - Copy ancestry *under* a copy is preserved.  That is, if you
 *      copy /A/D/G/pi to /A/D/G/pi2, and then copy /A/D/G to /G, then
 *      /G/pi2 will still have copy ancestry pointing to /A/D/G/pi.
 *      We don't know if this is a feature or a bug yet; if it turns
 *      out to be a bug, then the fix is to make svn_fs_copied_from()
 *      observe the following logic, which currently callers may
 *      choose to follow themselves: if node X has copy history, but
 *      its ancestor A also has copy history, then you may ignore X's
 *      history if X's revision-of-origin is earlier than A's --
 *      because that would mean that X's copy history was preserved in
 *      a copy-under-a-copy scenario.  If X's revision-of-origin is
 *      the same as A's, then it was copied under A during the same
 *      transaction that created A.  (X's revision-of-origin cannot be
 *      greater than A's, if X has copy history.)  @todo See how
 *      people like this, it can always be hidden behind the curtain
 *      if necessary.
 *
 *    - Copy ancestry is not stored as a regular subversion property
 *      because it is not inherited.  Copying foo to bar results in a
 *      revision of bar with copy ancestry; but committing a text
 *      change to bar right after that results in a new revision of
 *      bar without copy ancestry.

</member>
        <member name="M:svn_fs_props_changed(System.Int32*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Determine if the properties of two path/root combinations are different.
 *
 * Set @a *changed_p to 1 if the properties at @a path1 under @a root1 differ
 * from those at @a path2 under @a root2, or set it to 0 if they are the
 * same.  Both paths must exist under their respective roots, and both
 * roots must be in the same filesystem.

</member>
        <member name="M:svn_fs_change_node_prop(svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Change a node's property's value, or add/delete a property.
 *
 * - @a root and @a path indicate the node whose property should change.
 *   @a root must be the root of a transaction, not the root of a revision.
 * - @a name is the name of the property to change.
 * - @a value is the new value of the property, or zero if the property should
 *   be removed altogether.
 * Do any necessary temporary allocation in @a pool.

</member>
        <member name="M:svn_fs_node_proplist(apr_hash_t**,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *table_p to the entire property list of @a path in @a root,
 * as an APR hash table allocated in @a pool.  The resulting table maps
 * property names to pointers to @c svn_string_t objects containing the
 * property value.

</member>
        <member name="M:svn_fs_node_prop(svn_string_t**,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *value_p to the value of the property named @a propname of
 * @a path in @a root.  If the node has no property by that name, set
 * @a *value_p to zero.  Allocate the result in @a pool.

</member>
        <member name="M:svn_fs_node_created_path(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *created_path to the path at which @a path under @a root was
 * created.  Use @a pool for all allocations.  Callers may use this
 * function in conjunction with svn_fs_node_created_rev() to perform a
 * reverse lookup of the mapping of (path, revision) -&gt; node-id that
 * svn_fs_node_id() performs.

</member>
        <member name="M:svn_fs_node_origin_rev(System.Int32!System.Runtime.CompilerServices.IsLong*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *revision to the revision in which the line of history
 * represented by @a path under @a root originated.  Use @a pool for
 * any temporary allocations.  If @a root is a transaction root, @a
 * *revision will be set to @c SVN_INVALID_REVNUM for any nodes newly
 * added in that transaction (brand new files or directories created
 * using @c svn_fs_make_dir or @c svn_fs_make_file).
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_fs_node_created_rev(System.Int32!System.Runtime.CompilerServices.IsLong*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *revision to the revision in which @a path under @a root was
 * created.  Use @a pool for any temporary allocations.  @a *revision will
 * be set to @c SVN_INVALID_REVNUM for uncommitted nodes (i.e. modified nodes
 * under a transaction root).  Note that the root of an unmodified transaction
 * is not itself considered to be modified; in that case, return the revision
 * upon which the transaction was based.

</member>
        <member name="M:svn_fs_node_id(svn_fs_id_t!System.Runtime.CompilerServices.IsConst**,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Get the id of a node.
 *
 * Set @a *id_p to the node revision ID of @a path in @a root, allocated in
 * @a pool.
 *
 * If @a root is the root of a transaction, keep in mind that other
 * changes to the transaction can change which node @a path refers to,
 * and even whether the path exists at all.

</member>
        <member name="M:svn_fs_is_file(System.Int32*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *is_file to @c TRUE iff @a path in @a root is a file.
 * Do any necessary temporary allocation in @a pool.

</member>
        <member name="M:svn_fs_is_dir(System.Int32*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *is_dir to @c TRUE iff @a path in @a root is a directory.
 * Do any necessary temporary allocation in @a pool.

</member>
        <member name="M:svn_fs_history_location(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.Int32!System.Runtime.CompilerServices.IsLong*,svn_fs_history_t*,apr_pool_t*)">
Set @a *path and @a *revision to the path and revision,
 * respectively, of the @a history object.  Use @a pool for all
 * allocations.

</member>
        <member name="M:svn_fs_history_prev(svn_fs_history_t**,svn_fs_history_t*,System.Int32,apr_pool_t*)">
Set @a *prev_history_p to an opaque node history object which
 * represents the previous (or "next oldest") interesting history
 * location for the filesystem node represented by @a history, or @c
 * NULL if no such previous history exists.  If @a cross_copies is @c
 * FALSE, also return @c NULL if stepping backwards in history to @a
 * *prev_history_p would cross a filesystem copy operation.
 *
 * @note If this is the first call to svn_fs_history_prev() for the @a
 * history object, it could return a history object whose location is
 * the same as the original.  This will happen if the original
 * location was an interesting one (where the node was modified, or
 * took place in a copy event).  This behavior allows looping callers
 * to avoid the calling svn_fs_history_location() on the object
 * returned by svn_fs_node_history(), and instead go ahead and begin
 * calling svn_fs_history_prev().
 *
 * @note This function uses node-id ancestry alone to determine
 * modifiedness, and therefore does NOT claim that in any of the
 * returned revisions file contents changed, properties changed,
 * directory entries lists changed, etc.
 *
 * @note The revisions returned for @a path will be older than or
 * the same age as the revision of that path in @a root.  That is, if
 * @a root is a revision root based on revision X, and @a path was
 * modified in some revision(s) younger than X, those revisions
 * younger than X will not be included for @a path.  
</member>
        <member name="M:svn_fs_node_history(svn_fs_history_t**,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *history_p to an opaque node history object which
 * represents @a path under @a root.  @a root must be a revision root.
 * Use @a pool for all allocations.

</member>
        <member name="T:svn_fs_history_t">
An opaque node history object. 
</member>
        <member name="M:svn_fs_check_path(svn_node_kind_t*,svn_fs_root_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
@} 
Set @a *kind_p to the type of node present at @a path under @a
 * root.  If @a path does not exist under @a root, set @a *kind_p to @c
 * svn_node_none.  Use @a pool for temporary allocation.

</member>
        <member name="M:svn_fs_paths_changed(apr_hash_t**,svn_fs_root_t*,apr_pool_t*)">
Same as svn_fs_paths_changed2(), only with @c svn_fs_path_change_t * values
 * in the hash (and thus no kind or copyfrom data).
 *
 * @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="M:svn_fs_paths_changed2(apr_hash_t**,svn_fs_root_t*,apr_pool_t*)">
Determine what has changed under a @a root.
 *
 * Allocate and return a hash @a *changed_paths2_p containing descriptions
 * of the paths changed under @a root.  The hash is keyed with
 * <tt>const char *</tt> paths, and has @c svn_fs_path_change2_t * values.
 *
 * Callers can assume that this function takes time proportional to
 * the amount of data output, and does not need to do tree crawls;
 * however, it is possible that some of the @c node_kind fields in the
 * @c svn_fs_path_change2_t * values will be @c svn_node_unknown or
 * that and some of the @c copyfrom_known fields will be FALSE.
 *
 * Use @c pool for all allocations, including the hash and its values.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_fs_path_change2_create(svn_fs_id_t!System.Runtime.CompilerServices.IsConst*,svn_fs_path_change_kind_t,apr_pool_t*)">
 Allocate an @c svn_fs_path_change2_t structure in @a pool, initialize and
 return it.

 Set the @c node_rev_id field of the created struct to @a node_rev_id, and
 @c change_kind to @a change_kind.  Set all other fields to their
 @c _unknown, @c NULL or invalid value, respectively.

 @since New in 1.6.

</member>
        <member name="F:svn_fs_path_change_t.prop_mod">
were there property mods? 
</member>
        <member name="F:svn_fs_path_change_t.text_mod">
were there text mods? 
</member>
        <member name="F:svn_fs_path_change_t.change_kind">
kind of change 
</member>
        <member name="F:svn_fs_path_change_t.node_rev_id">
node revision id of changed path 
</member>
        <member name="T:svn_fs_path_change_t">
Similar to @c svn_fs_path_change2_t, but without kind and copyfrom
 * information.
 *
 * @deprecated Provided for backwards compatibility with the 1.5 API.

</member>
        <member name="F:svn_fs_path_change2_t.copyfrom_known">
Copyfrom revision and path; this is only valid if copyfrom_known
   * is true. 
</member>
        <member name="F:svn_fs_path_change2_t.node_kind">
what node kind is the path?
      (Note: it is legal for this to be @c svn_node_unknown.) 
</member>
        <member name="F:svn_fs_path_change2_t.prop_mod">
were there property mods? 
</member>
        <member name="F:svn_fs_path_change2_t.text_mod">
were there text mods? 
</member>
        <member name="F:svn_fs_path_change2_t.change_kind">
kind of change 
</member>
        <member name="F:svn_fs_path_change2_t.node_rev_id">
node revision id of changed path 
</member>
        <member name="T:svn_fs_path_change2_t">
Change descriptor.
 *
 * @note Fields may be added to the end of this structure in future
 * versions.  Therefore, to preserve binary compatibility, users
 * should not directly allocate structures of this type.
 *
 * @since New in 1.6. 
</member>
        <member name="F:svn_fs_path_change_reset">
ignore all previous change items for path (internal-use only) 
</member>
        <member name="F:svn_fs_path_change_replace">
path removed and re-added in txn 
</member>
        <member name="F:svn_fs_path_change_delete">
path removed in txn 
</member>
        <member name="F:svn_fs_path_change_add">
path added in txn 
</member>
        <member name="F:svn_fs_path_change_modify">
path modified in txn 
</member>
        <member name="M:svn_fs_revision_root_revision(svn_fs_root_t*)">
If @a root is the root of a revision, return the revision number.
 * Otherwise, return @c SVN_INVALID_REVNUM.

</member>
        <member name="M:svn_fs_txn_root_base_revision(svn_fs_root_t*)">
If @a root is the root of a transaction, return the number of the
 * revision on which is was based when created.  Otherwise, return @c
 * SVN_INVALID_REVNUM.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_fs_txn_root_name(svn_fs_root_t*,apr_pool_t*)">
If @a root is the root of a transaction, return the name of the
 * transaction, allocated in @a pool; otherwise, return NULL.

</member>
        <member name="M:svn_fs_is_revision_root(svn_fs_root_t*)">
Return @c TRUE iff @a root is a revision root.  
</member>
        <member name="M:svn_fs_is_txn_root(svn_fs_root_t*)">
Return @c TRUE iff @a root is a transaction root.  
</member>
        <member name="M:svn_fs_root_fs(svn_fs_root_t*)">
Return the filesystem to which @a root belongs.  
</member>
        <member name="M:svn_fs_close_root(svn_fs_root_t*)">
Free the root directory @a root.  Simply clearing or destroying the
 * pool @a root was allocated in will have the same effect as calling
 * this function.

</member>
        <member name="M:svn_fs_txn_root(svn_fs_root_t**,svn_fs_txn_t*,apr_pool_t*)">
Set @a *root_p to the root directory of @a txn.  Allocate @a *root_p in
 * @a pool.

</member>
        <member name="M:svn_fs_revision_root(svn_fs_root_t**,svn_fs_t*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_pool_t*)">
Set @a *root_p to the root directory of revision @a rev in filesystem
 * @a fs.  Allocate @a *root_p in @a pool.

</member>
        <member name="T:svn_fs_root_t">
@} 
Roots.
 *
 * An @c svn_fs_root_t object represents the root directory of some
 * revision or transaction in a filesystem.  To refer to particular
 * node, you provide a root, and a directory path relative that root.
 *
 * @defgroup svn_fs_roots Filesystem roots
 * @{

The Filesystem Root object. 
</member>
        <member name="M:svn_fs_change_txn_props(svn_fs_txn_t*,apr_array_header_t*,apr_pool_t*)">
Change, add, and/or delete transaction property values in
 * transaction @a txn.  @a props is an array of <tt>svn_prop_t</tt>
 * elements.  This is equivalent to calling svn_fs_change_txp_prop
 * multiple times with the @c name and @c value fields of each
 * successive <tt>svn_prop_t</tt>, but may be more efficient.
 * (Properties not mentioned are left alone.)  Do any necessary
 * temporary allocation in @a pool.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_fs_change_txn_prop(svn_fs_txn_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Change a transactions @a txn's property's value, or add/delete a
 * property.  @a name is the name of the property to change, and @a value
 * is the new value of the property, or zero if the property should be
 * removed altogether.  Do any necessary temporary allocation in @a pool.

</member>
        <member name="M:svn_fs_txn_proplist(apr_hash_t**,svn_fs_txn_t*,apr_pool_t*)">
Set @a *table_p to the entire property list of transaction @a txn, as
 * an APR hash table allocated in @a pool.  The resulting table maps property
 * names to pointers to @c svn_string_t objects containing the property value.

</member>
        <member name="M:svn_fs_txn_prop(svn_string_t**,svn_fs_txn_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *value_p to the value of the property named @a propname on
 * transaction @a txn.  If @a txn has no property by that name, set
 * @a *value_p to zero.  Allocate the result in @a pool.

</member>
        <member name="M:svn_fs_list_transactions(apr_array_header_t**,svn_fs_t*,apr_pool_t*)">
Set @a *names_p to an array of <tt>const char *</tt> ids which are the
 * names of all the currently active transactions in the filesystem @a fs.
 * Allocate the array in @a pool.

</member>
        <member name="M:svn_fs_open_txn(svn_fs_txn_t**,svn_fs_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Open the transaction named @a name in the filesystem @a fs.  Set @a *txn
 * to the transaction.
 *
 * If there is no such transaction, @c SVN_ERR_FS_NO_SUCH_TRANSACTION is
 * the error returned.
 *
 * Allocate the new transaction in @a pool; when @a pool is freed, the new
 * transaction will be closed (neither committed nor aborted).

</member>
        <member name="M:svn_fs_txn_base_revision(svn_fs_txn_t*)">
Return @a txn's base revision. 
</member>
        <member name="M:svn_fs_txn_name(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,svn_fs_txn_t*,apr_pool_t*)">
Set @a *name_p to the name of the transaction @a txn, as a
 * NULL-terminated string.  Allocate the name in @a pool.

</member>
        <member name="M:svn_fs_purge_txn(svn_fs_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Cleanup the dead transaction in @a fs whose ID is @a txn_id.  Use
 * @a pool for all allocations.  If the transaction is not yet dead,
 * the error @c SVN_ERR_FS_TRANSACTION_NOT_DEAD is returned.  (The
 * caller probably forgot to abort the transaction, or the cleanup
 * step of that abort failed for some reason.)

</member>
        <member name="M:svn_fs_abort_txn(svn_fs_txn_t*,apr_pool_t*)">
Abort the transaction @a txn.  Any changes made in @a txn are
 * discarded, and the filesystem is left unchanged.  Use @a pool for
 * any necessary allocations.
 *
 * @note This function first sets the state of @a txn to "dead", and
 * then attempts to purge it and any related data from the filesystem.
 * If some part of the cleanup process fails, @a txn and some portion
 * of its data may remain in the database after this function returns.
 * Use svn_fs_purge_txn() to retry the transaction cleanup.

</member>
        <member name="M:svn_fs_commit_txn(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.Int32!System.Runtime.CompilerServices.IsLong*,svn_fs_txn_t*,apr_pool_t*)">
Commit @a txn.
 *
 * @note You usually don't want to call this directly.
 * Instead, call svn_repos_fs_commit_txn(), which honors the
 * repository's hook configurations.
 *
 * If the transaction conflicts with other changes committed to the
 * repository, return an @c SVN_ERR_FS_CONFLICT error.  Otherwise, create
 * a new filesystem revision containing the changes made in @a txn,
 * storing that new revision number in @a *new_rev, and return zero.
 *
 * If @a conflict_p is non-zero, use it to provide details on any
 * conflicts encountered merging @a txn with the most recent committed
 * revisions.  If a conflict occurs, set @a *conflict_p to the path of
 * the conflict in @a txn, with the same lifetime as @a txn;
 * otherwise, set @a *conflict_p to NULL.
 *
 * If the commit succeeds, @a txn is invalid.
 *
 * If the commit fails for any reason, @a *new_rev is an invalid
 * revision number, an error other than #SVN_NO_ERROR is returned and
 * @a txn is still valid; you can make more operations to resolve the
 * conflict, or call svn_fs_abort_txn() to abort the transaction.
 *
 * @note Success or failure of the commit of @a txn is determined by
 * examining the value of @a *new_rev upon this function's return.  If
 * the value is a valid revision number, the commit was successful,
 * even though a non-@c NULL function return value may indicate that
 * something else went wrong in post commit FS processing.

</member>
        <member name="M:svn_fs_begin_txn(svn_fs_txn_t**,svn_fs_t*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_pool_t*)">
 Same as svn_fs_begin_txn2(), but with @a flags set to 0.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_fs_begin_txn2(svn_fs_txn_t**,svn_fs_t*,System.Int32!System.Runtime.CompilerServices.IsLong,System.UInt32,apr_pool_t*)">
@defgroup svn_fs_begin_txn2_flags Bitmask flags for svn_fs_begin_txn2()
 * @since New in 1.2.
 * @{ 
Do on-the-fly out-of-dateness checks.  That is, an fs routine may
 * throw error if a caller tries to edit an out-of-date item in the
 * transaction.
 *
 * @warning ### Not yet implemented.

Do on-the-fly lock checks.  That is, an fs routine may throw error
 * if a caller tries to edit a locked item without having rights to the lock.

@} 
 Begin a new transaction on the filesystem @a fs, based on existing
 revision @a rev.  Set @a *txn_p to a pointer to the new transaction.
 When committed, this transaction will create a new revision.

 Allocate the new transaction in @a pool; when @a pool is freed, the new
 transaction will be closed (neither committed nor aborted).

 @a flags determines transaction enforcement behaviors, and is composed
 from the constants SVN_FS_TXN_* (@c SVN_FS_TXN_CHECK_OOD etc.).

 @note If you're building a txn for committing, you probably
 don't want to call this directly.  Instead, call
 svn_repos_fs_begin_txn_for_commit(), which honors the
 repository's hook configurations.

 @since New in 1.2.

</member>
        <member name="T:svn_fs_txn_t">
@} 
Filesystem Transactions.
 *
 * To make a change to a Subversion filesystem:
 * - Create a transaction object, using svn_fs_begin_txn().
 * - Call svn_fs_txn_root(), to get the transaction's root directory.
 * - Make whatever changes you like in that tree.
 * - Commit the transaction, using svn_fs_commit_txn().
 *
 * The filesystem implementation guarantees that your commit will
 * either:
 * - succeed completely, so that all of the changes are committed to
 *   create a new revision of the filesystem, or
 * - fail completely, leaving the filesystem unchanged.
 *
 * Until you commit the transaction, any changes you make are
 * invisible.  Only when your commit succeeds do they become visible
 * to the outside world, as a new revision of the filesystem.
 *
 * If you begin a transaction, and then decide you don't want to make
 * the change after all (say, because your net connection with the
 * client disappeared before the change was complete), you can call
 * svn_fs_abort_txn(), to cancel the entire transaction; this
 * leaves the filesystem unchanged.
 *
 * The only way to change the contents of files or directories, or
 * their properties, is by making a transaction and creating a new
 * revision, as described above.  Once a revision has been committed, it
 * never changes again; the filesystem interface provides no means to
 * go back and edit the contents of an old revision.  Once history has
 * been recorded, it is set in stone.  Clients depend on this property
 * to do updates and commits reliably; proxies depend on this property
 * to cache changes accurately; and so on.
 *
 * There are two kinds of nodes in the filesystem: mutable, and
 * immutable.  Revisions in the filesystem consist entirely of
 * immutable nodes, whose contents never change.  A transaction in
 * progress, which the user is still constructing, uses mutable nodes
 * for those nodes which have been changed so far, and refers to
 * immutable nodes from existing revisions for portions of the tree
 * which haven't been changed yet in that transaction.
 *
 * Immutable nodes, as part of revisions, never refer to mutable
 * nodes, which are part of uncommitted transactions.  Mutable nodes
 * may refer to immutable nodes, or other mutable nodes.
 *
 * Note that the terms "immutable" and "mutable" describe whether or
 * not the nodes have been changed as part of a transaction --- not
 * the permissions on the nodes they refer to.  Even if you aren't
 * authorized to modify the filesystem's root directory, you might be
 * authorized to change some descendant of the root; doing so would
 * create a new mutable copy of the root directory.  Mutability refers
 * to the role of the node: part of an existing revision, or part of a
 * new one.  This is independent of your authorization to make changes
 * to a given node.
 *
 * Transactions are actually persistent objects, stored in the
 * database.  You can open a filesystem, begin a transaction, and
 * close the filesystem, and then a separate process could open the
 * filesystem, pick up the same transaction, and continue work on it.
 * When a transaction is successfully committed, it is removed from
 * the database.
 *
 * Every transaction is assigned a name.  You can open a transaction
 * by name, and resume work on it, or find out the name of a
 * transaction you already have open.  You can also list all the
 * transactions currently present in the database.
 *
 * You may assign properties to transactions; these are name/value
 * pairs.  When you commit a transaction, all of its properties become
 * unversioned revision properties of the new revision.  (There is one
 * exception: the svn:date property will be automatically set on new
 * transactions to the date that the transaction was created, and will
 * be overwritten when the transaction is committed by the current
 * time; changes to a transaction's svn:date property will not affect
 * its committed value.)
 *
 * Transaction names are guaranteed to contain only letters (upper-
 * and lower-case), digits, `-', and `.', from the ASCII character
 * set.
 *
 * The Subversion filesystem will make a best effort to not reuse
 * transaction names.  The Berkeley DB backend generates transaction
 * names using a sequence, or a counter, which is stored in the BDB
 * database.  Each new transaction increments the counter.  The
 * current value of the counter is not serialized into a filesystem
 * dump file, so dumping and restoring the repository will reset the
 * sequence and reuse transaction names.  The FSFS backend generates a
 * transaction name using the hostname, process ID and current time in
 * microseconds since 00:00:00 January 1, 1970 UTC.  So it is
 * extremely unlikely that a transaction name will be reused.
 *
 * @defgroup svn_fs_txns Filesystem transactions
 * @{

The type of a Subversion transaction object.  
</member>
        <member name="M:svn_fs_unparse_id(svn_fs_id_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Return a Subversion string containing the unparsed form of the
 * node or node revision id @a id.  Allocate the string containing the
 * unparsed form in @a pool.

</member>
        <member name="M:svn_fs_parse_id(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.UInt32,apr_pool_t*)">
 @note This function is not guaranteed to work with all filesystem
 types.  There is currently no un-deprecated equivalent; contact the
 Subversion developers if you have a need for it.

 @deprecated Provided for backward compatibility with the 1.0 API.

</member>
        <member name="M:svn_fs_check_related(svn_fs_id_t!System.Runtime.CompilerServices.IsConst*,svn_fs_id_t!System.Runtime.CompilerServices.IsConst*)">
Return non-zero IFF the nodes associated with @a id1 and @a id2 are
 * related, else return zero.

</member>
        <member name="M:svn_fs_compare_ids(svn_fs_id_t!System.Runtime.CompilerServices.IsConst*,svn_fs_id_t!System.Runtime.CompilerServices.IsConst*)">
Return -1, 0, or 1 if node revisions @a a and @a b are unrelated,
 * equivalent, or otherwise related (respectively).

</member>
        <member name="T:svn_fs_id_t">
@} 
Filesystem Nodes.
 *
 * In a Subversion filesystem, a `node' corresponds roughly to an
 * `inode' in a Unix filesystem:
 * - A node is either a file or a directory.
 * - A node's contents change over time.
 * - When you change a node's contents, it's still the same node; it's
 *   just been changed.  So a node's identity isn't bound to a specific
 *   set of contents.
 * - If you rename a node, it's still the same node, just under a
 *   different name.  So a node's identity isn't bound to a particular
 *   filename.
 *
 * A `node revision' refers to a node's contents at a specific point in
 * time.  Changing a node's contents always creates a new revision of that
 * node.  Once created, a node revision's contents never change.
 *
 * When we create a node, its initial contents are the initial revision of
 * the node.  As users make changes to the node over time, we create new
 * revisions of that same node.  When a user commits a change that deletes
 * a file from the filesystem, we don't delete the node, or any revision
 * of it --- those stick around to allow us to recreate prior revisions of
 * the filesystem.  Instead, we just remove the reference to the node
 * from the directory.
 *
 * @defgroup svn_fs_nodes Filesystem nodes
 * @{

An object representing a node-id.  
</member>
        <member name="M:svn_fs_access_add_lock_token(svn_fs_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
 Same as svn_fs_access_add_lock_token2(), but with @a path set to value 1.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_fs_access_add_lock_token2(svn_fs_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Push a lock-token @a token associated with path @a path into the
 * context @a access_ctx.  The context remembers all tokens it
 * receives, and makes them available to fs functions.  The token and
 * path are not duplicated into @a access_ctx's pool; make sure the
 * token's lifetime is at least as long as @a access_ctx.
 *
 * @since New in 1.6. 
</member>
        <member name="M:svn_fs_access_get_username(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,svn_fs_access_t*)">
Accessors for the access context: 
Set @a *username to the name represented by @a access_ctx. 
</member>
        <member name="M:svn_fs_get_access(svn_fs_access_t**,svn_fs_t*)">
Set @a *access_ctx to the current @a fs access context, or NULL if
 * there is no current fs access context.

</member>
        <member name="M:svn_fs_set_access(svn_fs_t*,svn_fs_access_t*)">
Associate @a access_ctx with an open @a fs.
 *
 * This function can be run multiple times on the same open
 * filesystem, in order to change the filesystem access context for
 * different filesystem operations.  Pass a NULL value for @a
 * access_ctx to disassociate the current access context from the
 * filesystem.

</member>
        <member name="M:svn_fs_create_access(svn_fs_access_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *access_ctx to a new @c svn_fs_access_t object representing
 *  @a username, allocated in @a pool.  @a username is presumed to
 *  have been authenticated by the caller.
 *
 *  Make a deep copy of @a username.

</member>
        <member name="T:svn_fs_access_t">
@} 
@} 
Filesystem Access Contexts.
 *
 * @since New in 1.2.
 *
 * At certain times, filesystem functions need access to temporary
 * user data.  For example, which user is changing a file?  If the
 * file is locked, has an appropriate lock-token been supplied?
 *
 * This temporary user data is stored in an "access context" object,
 * and the access context is then connected to the filesystem object.
 * Whenever a filesystem function requires information, it can pull
 * things out of the context as needed.
 *
 * @defgroup svn_fs_access_ctx Filesystem access contexts
 * @{

An opaque object representing temporary user data. 
</member>
        <member name="M:svn_fs_berkeley_recover(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
@deprecated Provided for backward compatibility with the 1.4 API. 
</member>
        <member name="M:svn_fs_hotcopy_berkeley(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
@deprecated Provided for backward compatibility with the 1.0 API. 
</member>
        <member name="M:svn_fs_delete_berkeley(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
@deprecated Provided for backward compatibility with the 1.0 API. 
</member>
        <member name="M:svn_fs_berkeley_path(svn_fs_t*,apr_pool_t*)">
@deprecated Provided for backward compatibility with the 1.0 API. 
</member>
        <member name="M:svn_fs_open_berkeley(svn_fs_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
@deprecated Provided for backward compatibility with the 1.0 API. 
</member>
        <member name="M:svn_fs_create_berkeley(svn_fs_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
@deprecated Provided for backward compatibility with the 1.0 API. 
</member>
        <member name="M:svn_fs_new(apr_hash_t*,apr_pool_t*)">
 The following functions are similar to their generic counterparts.

 In Subversion 1.2 and earlier, they only work on Berkeley DB filesystems.
 In Subversion 1.3 and later, they perform largely as aliases for their
 generic counterparts (with the exception of recover, which only gained
 a generic counterpart in 1.5).

 @defgroup svn_fs_bdb_deprecated Berkeley DB filesystem compatibility
 @{

@deprecated Provided for backward compatibility with the 1.0 API. 
</member>
        <member name="M:svn_fs_berkeley_logfiles(apr_array_header_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Set @a *logfiles to an array of <tt>const char *</tt> log file names
 * of Berkeley DB-based Subversion filesystem.
 *
 * If @a only_unused is @c TRUE, set @a *logfiles to an array which
 * contains only the names of Berkeley DB log files no longer in use
 * by the filesystem.  Otherwise, all log files (used and unused) are
 * returned.

 * This function wraps the Berkeley DB 'log_archive' function
 * called by the db_archive binary.  Repository administrators may
 * want to run this function periodically and delete the unused log
 * files, as a way of reclaiming disk space.

</member>
        <member name="M:svn_fs_set_berkeley_errcall(svn_fs_t*,=FUNC:System.Void(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*))">
Subversion filesystems based on Berkeley DB.
 *
 * The following functions are specific to Berkeley DB filesystems.
 *
 * @defgroup svn_fs_bdb Berkeley DB filesystems
 * @{

Register an error handling function for Berkeley DB error messages.
 *
 * @deprecated Provided for backward compatibility with the 1.2 API.
 *
 * Despite being first declared deprecated in Subversion 1.3, this API
 * is redundant in versions 1.1 and 1.2 as well.
 *
 * Berkeley DB's error codes are seldom sufficiently informative to allow
 * adequate troubleshooting.  Berkeley DB provides extra messages through
 * a callback function - if an error occurs, the @a handler will be called
 * with two strings: an error message prefix, which will be zero, and
 * an error message.  @a handler might print it out, log it somewhere,
 * etc.
 *
 * Subversion 1.1 and later install their own handler internally, and
 * wrap the messages from Berkeley DB into the standard svn_error_t object,
 * making any information gained through this interface redundant.
 *
 * It is only worth using this function if your program will be used
 * with Subversion 1.0.
 *
 * This function connects to the Berkeley DB @c DBENV-&gt;set_errcall interface.
 * Since that interface supports only a single callback, Subversion's internal
 * callback is registered with Berkeley DB, and will forward notifications to
 * a user provided callback after performing its own processing.

</member>
        <member name="M:svn_fs_recover(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
Perform any necessary non-catastrophic recovery on the Subversion
 * filesystem located at @a path.
 *
 * If @a cancel_func is not @c NULL, it is called periodically with
 * @a cancel_baton as argument to see if the client wishes to cancel
 * recovery.  BDB filesystems do not currently support cancellation.
 *
 * Do any necessary allocation within @a pool.
 *
 * For FSFS filesystems, recovery is currently limited to recreating
 * the db/current file, and does not require exclusive access.
 *
 * For BDB filesystems, recovery requires exclusive access, and is
 * described in detail below.
 *
 * After an unexpected server exit, due to a server crash or a system
 * crash, a Subversion filesystem based on Berkeley DB needs to run
 * recovery procedures to bring the database back into a consistent
 * state and release any locks that were held by the deceased process.
 * The recovery procedures require exclusive access to the database
 * --- while they execute, no other process or thread may access the
 * database.
 *
 * In a server with multiple worker processes, like Apache, if a
 * worker process accessing the filesystem dies, you must stop the
 * other worker processes, and run recovery.  Then, the other worker
 * processes can re-open the database and resume work.
 *
 * If the server exited cleanly, there is no need to run recovery, but
 * there is no harm in it, either, and it take very little time.  So
 * it's a fine idea to run recovery when the server process starts,
 * before it begins handling any requests.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_fs_hotcopy(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
 Copy a possibly live Subversion filesystem from @a src_path to
 @a dest_path.  If @a clean is @c TRUE, perform cleanup on the
 source filesystem as part of the copy operation; currently, this
 means deleting copied, unused logfiles for a Berkeley DB source
 filesystem.

 @since New in 1.1.

</member>
        <member name="M:svn_fs_delete_fs(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Delete the filesystem at @a path.

 @since New in 1.1.

</member>
        <member name="M:svn_fs_path(svn_fs_t*,apr_pool_t*)">
 Return the path to @a fs's repository, allocated in @a pool.
 @note This is just what was passed to svn_fs_create() or
 svn_fs_open() -- might be absolute, might not.

 @since New in 1.1.

</member>
        <member name="M:svn_fs_type(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return, in @a *fs_type, a string identifying the back-end type of
 the Subversion filesystem located in @a path.  Allocate @a *fs_type
 in @a pool.

 The string should be equal to one of the @c SVN_FS_TYPE_* defined
 constants, unless the filesystem is a new back-end type added in
 a later version of Subversion.

 In general, the type should make no difference in the filesystem's
 semantics, but there are a few situations (such as backups) where
 it might matter.

 @since New in 1.3.

</member>
        <member name="M:svn_fs_upgrade(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Upgrade the Subversion filesystem located in the directory @a path
 to the latest version supported by this library.  Return @c
 SVN_ERR_FS_UNSUPPORTED_UPGRADE and make no changes to the
 filesystem if the requested upgrade is not supported.  Use @a pool
 for necessary allocations.

 @note You probably don't want to use this directly.  Take a look at
 svn_repos_upgrade() instead.

 @since New in 1.5.

</member>
        <member name="M:svn_fs_open(svn_fs_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_hash_t*,apr_pool_t*)">
 Open a Subversion filesystem located in the directory @a path, and
 return a pointer to it in @a *fs_p.  If @a fs_config is not @c
 NULL, the options it contains modify the behavior of the
 filesystem.  The interpretation of @a fs_config is specific to the
 filesystem back-end.  The opened filesystem may be closed by
 destroying @a pool.

 @note The lifetime of @a fs_config must not be shorter than @a
 pool's. It's a good idea to allocate @a fs_config from @a pool or
 one of its ancestors.

 Only one thread may operate on any given filesystem object at once.
 Two threads may access the same filesystem simultaneously only if
 they open separate filesystem objects.

 @note You probably don't want to use this directly.  Take a look at
 svn_repos_open() instead.

 @since New in 1.1.

</member>
        <member name="M:svn_fs_create(svn_fs_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_hash_t*,apr_pool_t*)">
 Create a new, empty Subversion filesystem, stored in the directory
 @a path, and return a pointer to it in @a *fs_p.  @a path must not
 currently exist, but its parent must exist.  If @a fs_config is not
 @c NULL, the options it contains modify the behavior of the
 filesystem.  The interpretation of @a fs_config is specific to the
 filesystem back-end.  The new filesystem may be closed by
 destroying @a pool.

 @note The lifetime of @a fs_config must not be shorter than @a
 pool's. It's a good idea to allocate @a fs_config from @a pool or
 one of its ancestors.

 If @a fs_config contains a value for @c SVN_FS_CONFIG_FS_TYPE, that
 value determines the filesystem type for the new filesystem.
 Currently defined values are:

   SVN_FS_TYPE_BDB   Berkeley-DB implementation
   SVN_FS_TYPE_FSFS  Native-filesystem implementation

 If @a fs_config is @c NULL or does not contain a value for
 @c SVN_FS_CONFIG_FS_TYPE then the default filesystem type will be used.
 This will typically be BDB for version 1.1 and FSFS for later versions,
 though the caller should not rely upon any particular default if they
 wish to ensure that a filesystem of a specific type is created.

 @since New in 1.1.

</member>
        <member name="M:svn_fs_set_warning_func(svn_fs_t*,=FUNC:System.Void(System.Void*,svn_error_t*),System.Void*)">
Provide a callback function, @a warning, that @a fs should use to
 * report (non-fatal) errors.  To print an error, the filesystem will call
 * @a warning, passing it @a warning_baton and the error.
 *
 * By default, this is set to a function that will crash the process.
 * Dumping to @c stderr or <tt>/dev/tty</tt> is not acceptable default
 * behavior for server processes, since those may both be equivalent to
 * <tt>/dev/null</tt>.

</member>
        <member name="D:svn_fs_warning_callback_t">
The type of a warning callback function.  @a baton is the value specified
 * in the call to svn_fs_set_warning_func(); the filesystem passes it through
 * to the callback.  @a err contains the warning message.
 *
 * The callback function should not clear the error that is passed to it;
 * its caller should do that.

</member>
        <member name="M:svn_fs_initialize(apr_pool_t*)">
@name Filesystem configuration options
@{

@since New in 1.1. 
@since New in 1.1. 
@since New in 1.1. 
Create repository format compatible with Subversion versions
 * earlier than 1.4.
 *
 *  @since New in 1.4.

Create repository format compatible with Subversion versions
 * earlier than 1.5.
 *
 * @since New in 1.5.

Create repository format compatible with Subversion versions
 * earlier than 1.6.
 *
 * @since New in 1.6.

@} 
 Callers should invoke this function to initialize global state in
 the FS library before creating FS objects.  If this function is
 invoked, no FS objects may be created in another thread at the same
 time as this invocation, and the provided @a pool must last longer
 than any FS object created subsequently.

 If this function is not called, the FS library will make a best
 effort to bootstrap a mutex for protecting data common to FS
 objects; however, there is a small window of failure.  Also, a
 small amount of data will be leaked if the Subversion FS library is
 dynamically unloaded, and using the bdb FS can potentially segfault
 or invoke other undefined behavior if this function is not called
 with an appropriate pool (such as the pool the module was loaded into)
 when loaded dynamically.

 If this function is called multiple times before the pool passed to
 the first call is destroyed or cleared, the later calls will have
 no effect.

 @since New in 1.2.

</member>
        <member name="T:svn_fs_t">
@defgroup fs_handling Filesystem interaction subsystem
@{

An object representing a Subversion filesystem.  
</member>
        <member name="M:svn_client_version">
 @copyright
 ====================================================================
 Copyright (c) 2002-2009 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_auth.h
 @brief Subversion's authentication system

</member>
        <member name="M:svn_diff_mem_string_output_merge(svn_stream_t*,svn_diff_t*,svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,apr_pool_t*)">
Similar to svn_diff_mem_string_output_merge2, but with @a
 * display_original_in_conflict and @a display_resolved_conflicts
 * booleans instead of the @a conflict_style enum.
 *
 * If both booleans are false, acts like
 * svn_diff_conflict_display_modified_latest; if @a
 * display_original_in_conflict is true, acts like
 * svn_diff_conflict_display_modified_original_latest; if @a
 * display_resolved_conflicts is true, acts like
 * svn_diff_conflict_display_resolved_modified_latest.  The booleans
 * may not both be true.
 *
 * @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="M:svn_diff_mem_string_output_merge2(svn_stream_t*,svn_diff_t*,svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_diff_conflict_display_style_t,apr_pool_t*)">
Output the @a diff generated by svn_diff_mem_string_diff3() in diff3
 * format on @a output_stream, using @a original, @a modified and @a latest
 * for content changes.
 *
 * Use the conflict markers @a conflict_original, @a conflict_modified,
 * @a conflict_latest and @a conflict_separator or the default one for
 * each of these if @c NULL is passed.
 *
 * @a conflict_style dictates how conflicts are displayed.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_diff_mem_string_output_unified(svn_stream_t*,svn_diff_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Outputs the @a diff object generated by svn_diff_mem_string_diff()
 * in unified diff format on @a output_stream, using @a original
 * and @a modified for the text in the output.
 * Outputs the header and markers in @a header_encoding.
 *
 * @a original_header and @a modified header are
 * used to fill the field after the "---" and "+++" header markers.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_diff_mem_string_diff4(svn_diff_t**,svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_diff_file_options_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Generate @a diff output from the @a original, @a modified and @a latest
 * in-memory strings, using @a ancestor.  @a diff will be allocated in @a pool.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_diff_mem_string_diff3(svn_diff_t**,svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_diff_file_options_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Generate @a diff output from the @a orginal, @a modified and @a latest
 * in-memory strings.  @a diff will be allocated in @a pool.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_diff_mem_string_diff(svn_diff_t**,svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_diff_file_options_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Generate @a diff output from the @a original and @a modified
 * in-memory strings.  @a diff will be allocated from @a pool.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_diff_file_output_merge(svn_stream_t*,svn_diff_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.">
Similar to svn_diff_file_output_merge2, but with @a
 * display_original_in_conflict and @a display_resolved_conflicts
 * booleans instead of the @a conflict_style enum.
 *
 * If both booleans are false, acts like
 * svn_diff_conflict_display_modified_latest; if @a
 * display_original_in_conflict is true, acts like
 * svn_diff_conflict_display_modified_original_latest; if @a
 * display_resolved_conflicts is true, acts like
 * svn_diff_conflict_display_resolved_modified_latest.  The booleans
 * may not both be true.
 *
 * @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="M:svn_diff_file_output_merge2(svn_stream_t*,svn_diff_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System">
A convenience function to produce diff3 output from the
 * diff generated by svn_diff_file_diff3().
 *
 * Output a @a diff between @a original_path, @a modified_path and
 * @a latest_path in merged format to @a output_stream.  Optionally supply
 * @a conflict_modified, @a conflict_original, @a conflict_separator and/or
 * @a conflict_latest to be displayed as conflict markers in the output.
 * If @a conflict_original, @a conflict_modified, @a conflict_latest and/or
 * @a conflict_separator is @c NULL, a default marker will be displayed.
 * @a conflict_style dictates how conflicts are displayed.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_diff_file_output_unified(svn_stream_t*,svn_diff_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Similar to svn_diff_file_output_unified2(), but with @a header_encoding
 * set to @c APR_LOCALE_CHARSET.
 *
 * @deprecated Provided for backward compatibility with the 1.2 API.

</member>
        <member name="M:svn_diff_file_output_unified2(svn_stream_t*,svn_diff_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Similar to svn_diff_file_output_unified3(), but with @a relative_to_dir
 * set to NULL and @a show_c_function to false.
 *
 * @deprecated Provided for backwards compatibility with the 1.3 API.

</member>
        <member name="M:svn_diff_file_output_unified3(svn_stream_t*,svn_diff_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
A convenience function to produce unified diff output from the
 * diff generated by svn_diff_file_diff().
 *
 * @since New in 1.5.
 *
 * Output a @a diff between @a original_path and @a modified_path in unified
 * context diff format to @a output_stream.  Optionally supply
 * @a original_header and/or @a modified_header to be displayed in the header
 * of the output.  If @a original_header or @a modified_header is @c NULL, a
 * default header will be displayed, consisting of path and last modified time.
 * Output all headers and markers in @a header_encoding.  If @a relative_to_dir
 * is not @c NULL, the @a original_path and @a modified_path will have the
 * @a relative_to_dir stripped from the front of the respective paths.  If
 * @a relative_to_dir is @c NULL, paths will be not be modified.  If
 * @a relative_to_dir is not @c NULL but @a relative_to_dir is not a parent
 * path of the target, an error is returned. Finally, if @a relative_to_dir
 * is a URL, an error will be returned.

</member>
        <member name="M:svn_diff_file_diff4(svn_diff_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Simliar to svn_file_diff4_2(), but with @a options set to a struct with
 * default options.
 *
 * @deprecated Provided for backwards compatibility with the 1.3 API.

</member>
        <member name="M:svn_diff_file_diff4_2(svn_diff_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_diff_file_options_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
A convenience function to produce a diff between four files.
 *
 * @since New in 1.4.
 *
 * Return a diff object in @a *diff (allocated from @a pool) that represents
 * the difference between an @a original file, @a modified file, @a latest
 * and @a ancestor file. (The file arguments must be full paths to the files.)
 *
 * Compare lines according to the relevant fields of @a options.

</member>
        <member name="M:svn_diff_file_diff3(svn_diff_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Similar to svn_diff_file_diff3_2(), but with @a options set to a struct
 * with default options.
 *
 * @deprecated Provided for backwards compatibility with the 1.3 API.

</member>
        <member name="M:svn_diff_file_diff3_2(svn_diff_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_diff_file_options_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
A convenience function to produce a diff between three files.
 *
 * @since New in 1.4.
 *
 * Return a diff object in @a *diff (allocated from @a pool) that represents
 * the difference between an @a original file, @a modified file, and @a latest
 * file.
 *
 * Compare lines according to the relevant fields of @a options.

</member>
        <member name="M:svn_diff_file_diff(svn_diff_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Similar to svn_file_diff_2(), but with @a options set to a struct with
 * default options.
 *
 * @deprecated Provided for backwards compatibility with the 1.3 API.

</member>
        <member name="M:svn_diff_file_diff_2(svn_diff_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_diff_file_options_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
A convenience function to produce a diff between two files.
 *
 * @since New in 1.4.
 *
 * Return a diff object in @a *diff (allocated from @a pool) that represents
 * the difference between an @a original file and @a modified file.
 * (The file arguments must be full paths to the files.)
 *
 * Compare lines according to the relevant fields of @a options.

</member>
        <member name="M:svn_diff_file_options_parse(svn_diff_file_options_t*,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Parse @a args, an array of <tt>const char *</tt> command line switches
 and adjust @a options accordingly.  @a options is assumed to be initialized
 with default values.  @a pool is used for temporary allocation.

 @since New in 1.4.

 The following options are supported:
 - --ignore-space-change, -b
 - --ignore-all-space, -w
 - --ignore-eol-style
 - --unified, -u (for compatibility, does nothing).

</member>
        <member name="M:svn_diff_file_options_create(apr_pool_t*)">
Allocate a @c svn_diff_file_options_t structure in @a pool, initializing
 * it with default values.
 *
 * @since New in 1.4.

</member>
        <member name="F:svn_diff_file_options_t.show_c_function">
Whether the '@@' lines of the unified diff output should include a prefix
    * of the nearest preceding line that starts with a character that might be
    * the initial character of a C language identifier.  The default is
    * @c FALSE.

</member>
        <member name="F:svn_diff_file_options_t.ignore_eol_style">
Whether to treat all end-of-line markers the same when comparing lines.
   * The default is @c FALSE. 
</member>
        <member name="F:svn_diff_file_options_t.ignore_space">
To what extent whitespace should be ignored when comparing lines.
   * The default is @c svn_diff_file_ignore_space_none. 
</member>
        <member name="T:svn_diff_file_options_t">
Options to control the behaviour of the file diff routines.
 *
 * @since New in 1.4.
 *
 * @note This structure may be extended in the future, so to preserve binary
 * compatibility, users must not allocate structs of this type themselves.
 * @see svn_diff_file_options_create().
 *
 * @note Although its name suggests otherwise, this structure is used to
 *       pass options to file as well as in-memory diff functions.

</member>
        <member name="T:svn_diff_file_ignore_space_t">
To what extent whitespace should be ignored when comparing lines.
 *
 * @since New in 1.4.

</member>
        <member name="F:svn_diff_file_ignore_space_all">
Ignore all whitespace characters. 
</member>
        <member name="F:svn_diff_file_ignore_space_change">
Ignore changes in sequences of whitespace characters, treating each
   * sequence of whitespace characters as a single space. 
</member>
        <member name="F:svn_diff_file_ignore_space_none">
Ignore no whitespace. 
</member>
        <member name="M:svn_diff_output(svn_diff_t*,System.Void*,svn_diff_output_fns_t!System.Runtime.CompilerServices.IsConst*)">
Given a vtable of @a output_fns/@a output_baton for consuming
 * differences, output the differences in @a diff.

</member>
        <member name="T:svn_diff_conflict_display_style_t">
Style for displaying conflicts during diff3 output.
 *
 * @since New in 1.6.

</member>
        <member name="F:svn_diff_conflict_display_only_conflicts">
Like svn_diff_conflict_display_modified_original_latest, but
      *only* showing conflicts. 
</member>
        <member name="F:svn_diff_conflict_display_latest">
Just display latest, with no markers. 
</member>
        <member name="F:svn_diff_conflict_display_modified">
Just display modified, with no markers. 
</member>
        <member name="F:svn_diff_conflict_display_modified_original_latest">
Display modified, original, and latest, with conflict
      markers. 
</member>
        <member name="F:svn_diff_conflict_display_resolved_modified_latest">
Like svn_diff_conflict_display_modified_latest, but with an
      extra effort to identify common sequences between modified and
      latest. 
</member>
        <member name="F:svn_diff_conflict_display_modified_latest">
Display modified and latest, with conflict markers. 
</member>
        <member name="F:svn_diff_output_fns_t.output_conflict">
All three datasources have conflicting data ranges.  The range
   * @a latest_start, @a latest_length in the "latest" datasource conflicts
   * with the range @a original_start, @a original_length in the "original"
   * datasource, and also conflicts with the range @a modified_start,
   * @a modified_length in the "modified" datasource.
   * If there are common ranges in the "modified" and "latest" datasources
   * in this conflicting range, @a resolved_diff will contain a diff
   * which can be used to retrieve the common and conflicting ranges.

</member>
        <member name="F:svn_diff_output_fns_t.output_diff_common">
An identical data range was discovered between the "modified" and
   * "latest" datasources, but this conflicts with a range in the
   * "original" datasource.

</member>
        <member name="F:svn_diff_output_fns_t.output_diff_latest">
An identical data range was discovered between the "original" and
   * "modified" datasources, but this conflicts with a range in the
   * "latest" datasource.

</member>
        <member name="F:svn_diff_output_fns_t.output_diff_modified">
 If doing a two-way diff, then an *conflicting* data range was found
 between the "original" and "modified" datasources.  Specifically,
 the conflict starts at @a original_start and goes for @a original_length
 tokens in the original data, and at @a modified_start for
 @a modified_length tokens in the modified data.

 If doing a three-way diff, then an identical data range was discovered
 between the "original" and "latest" datasources, but this conflicts with
 a range in the "modified" datasource.

</member>
        <member name="F:svn_diff_output_fns_t.output_common">
 If doing a two-way diff, then an *identical* data range was found
 between the "original" and "modified" datasources.  Specifically,
 the match starts at @a original_start and goes for @a original_length
 tokens in the original data, and at @a modified_start for
 @a modified_length tokens in the modified data.

 If doing a three-way diff, then all three datasources have
 matching data ranges.  The range @a latest_start, @a latest_length in
 the "latest" datasource is identical to the range @a original_start,
 @a original_length in the original data, and is also identical to
 the range @a modified_start, @a modified_length in the modified data.

</member>
        <member name="T:svn_diff_output_fns_t">
A vtable for displaying (or consuming) differences between datasources.
 *
 * Differences, similarities, and conflicts are described by lining up
 * "ranges" of data.
 *
 * @note These callbacks describe data ranges in units of "tokens".
 * A "token" is whatever you've defined it to be in your datasource
 * @c svn_diff_fns_t vtable.

</member>
        <member name="M:svn_diff_contains_diffs(svn_diff_t*)">
Determine if a diff object contains actual differences between the
 * datasources.  If so, return @c TRUE, else return @c FALSE.

</member>
        <member name="M:svn_diff_contains_conflicts(svn_diff_t*)">
Determine if a diff object contains conflicts.  If it does, return
 * @c TRUE, else return @c FALSE.

</member>
        <member name="M:svn_diff_diff4(svn_diff_t**,System.Void*,svn_diff_fns_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Given a vtable of @a diff_fns/@a diff_baton for reading datasources,
 * return a diff object in @a *diff that represents a difference between
 * two datasources: "original" and "latest", adjusted to become a full
 * difference between "original", "modified" and "latest" using "ancestor".
 * Do all allocation in @a pool.

</member>
        <member name="M:svn_diff_diff3(svn_diff_t**,System.Void*,svn_diff_fns_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Given a vtable of @a diff_fns/@a diff_baton for reading datasources,
 * return a diff object in @a *diff that represents a difference between
 * three datasources: "original", "modified", and "latest".  Do all
 * allocation in @a pool.

</member>
        <member name="M:svn_diff_diff(svn_diff_t**,System.Void*,svn_diff_fns_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Given a vtable of @a diff_fns/@a diff_baton for reading datasources,
 * return a diff object in @a *diff that represents a difference between
 * an "original" and "modified" datasource.  Do all allocation in @a pool.

</member>
        <member name="F:svn_diff_fns_t.token_discard_all">
Free *all* tokens from memory, they're no longer needed. 
</member>
        <member name="F:svn_diff_fns_t.token_discard">
Free @a token from memory, the diff algorithm is done with it. 
</member>
        <member name="F:svn_diff_fns_t.datasource_get_next_token">
Get the next "token" from the datasource of type @a datasource.
   *  Return a "token" in @a *token.   Return a hash of "token" in @a *hash.
   *  Leave @a token and @a hash untouched when the datasource is exhausted.

</member>
        <member name="F:svn_diff_fns_t.datasource_close">
Close the datasource of type @a datasource. 
</member>
        <member name="F:svn_diff_fns_t.datasource_open">
Open the datasource of type @a datasource. 
</member>
        <member name="T:svn_diff_fns_t">
A vtable for reading data from the three datasources. 
</member>
        <member name="T:svn_diff_datasource_e">
There are four types of datasources.  In GNU diff3 terminology,
the first three types correspond to the phrases "older", "mine",
and "yours".

</member>
        <member name="F:svn_diff_datasource_ancestor">
The common ancestor of original and modified. 
</member>
        <member name="F:svn_diff_datasource_latest">
The latest version of the data, possibly different than the
   * user's modified version.

</member>
        <member name="F:svn_diff_datasource_modified">
The same data, but potentially changed by the user. 
</member>
        <member name="F:svn_diff_datasource_original">
The oldest form of the data. 
</member>
        <member name="T:svn_diff_t">
An opaque type that represents a difference between either two or
 * three datasources.   This object is returned by svn_diff_diff(),
 * svn_diff_diff3() and svn_diff_diff4(), and consumed by a number of
 * other routines.

</member>
        <member name="M:svn_wc_crop_tree(svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_depth_t,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
Crop @a target according to @a depth.
 *
 * Remove any item that exceeds the boundary of @a depth (relative to
 * @a target) from revision control.  Leave modified items behind
 * (unversioned), while removing unmodified ones completely.
 *
 * If @a target starts out with a shallower depth than @a depth, do not
 * upgrade it to @a depth (that would not be cropping); however, do
 * check children and crop them appropriately according to @a depth.
 *
 * Returns immediately with no error if @a target is not a directory,
 * or if @a depth is not restrictive (e.g., @c svn_depth_infinity).
 *
 * @a anchor is an access baton, with a tree lock, for the local path to the
 * working copy which will be used as the root of this operation.  If
 * @a target is not empty, it represents an entry in the @a anchor path;
 * otherwise, the @a anchor path is the target.  @a target may not be
 * @c NULL.
 *
 * If @a cancel_func is not @c NULL, call it with @a cancel_baton at
 * various points to determine if the client has cancelled the operation.
 *
 * If @a notify_func is not @c NULL, call it with @a notify_baton to
 * report changes as they are made.
 *
 * @note: svn_depth_exclude currently does nothing; passing it results
 * in immediate success with no side effects.
 *
 * @since New in 1.6

</member>
        <member name="M:svn_wc_set_changelist(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,=FUNC:svn_error_t*(System.Void*),System.Void*,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,apr_pool_t*)">
 Set @a path's entry's 'changelist' attribute to @a changelist iff
 @a changelist is not @c NULL; otherwise, remove any current
 changelist assignment from @a path.  @a changelist may not be the
 empty string.  @a adm_access is an access baton set that contains
 @a path.

 If @a cancel_func is not @c NULL, call it with @a cancel_baton to
 determine if the client has cancelled the operation.

 If @a notify_func is not @c NULL, call it with @a notify_baton to
 report the change (using notification types @c
 svn_wc_notify_changelist_set and @c svn_wc_notify_changelist_clear).

 @note For now, directories are NOT allowed to be associated with
 changelists; there is confusion about whether they should behave
 as depth-0 or depth-infinity objects.  If @a path is a directory,
 return @c SVN_ERR_UNSUPPORTED_FEATURE.

 @note This metadata is purely a client-side "bookkeeping"
 convenience, and is entirely managed by the working copy.

 @since New in 1.5.

</member>
        <member name="M:svn_wc_revision_status(svn_wc_revision_status_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
Set @a *result_p to point to a new @c svn_wc_revision_status_t structure
 * containing a summary of the revision range and status of the working copy
 * at @a wc_path (not including "externals").
 *
 * Set @a (*result_p)-&gt;min_rev and @a (*result_p)-&gt;max_rev respectively to the
 * lowest and highest revision numbers in the working copy.  If @a committed
 * is TRUE, summarize the last-changed revisions, else the base revisions.
 *
 * Set @a (*result_p)-&gt;switched to indicate whether any item in the WC is
 * switched relative to its parent.  If @a trail_url is non-NULL, use it to
 * determine if @a wc_path itself is switched.  It should be any trailing
 * portion of @a wc_path's expected URL, long enough to include any parts
 * that the caller considers might be changed by a switch.  If it does not
 * match the end of @a wc_path's actual URL, then report a "switched"
 * status.
 *
 * Set @a (*result_p)-&gt;modified to indicate whether any item is locally
 * modified.
 *
 * If @a cancel_func is non-NULL, call it with @a cancel_baton to determine
 * if the client has cancelled the operation.
 *
 * Allocate *result_p in @a pool.
 *
 * @since New in 1.4

</member>
        <member name="F:svn_wc_revision_status_t.sparse_checkout">
Whether any WC paths are at a depth other than @c svn_depth_infinity.
   * @since New in 1.5.

</member>
        <member name="T:svn_wc_revision_status_t">
A structure to report a summary of a working copy, including the
 * mix of revisions found within it, whether any parts are switched or
 * locally modified, and whether it is a sparse checkout.
 *
 * @note Fields may be added to the end of this structure in future
 * versions.  Therefore, to preserve binary compatibility, users
 * should not directly allocate structures of this type.
 *
 * @since New in 1.4

</member>
        <member name="M:svn_wc_remove_lock(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_pool_t*)">
Remove any lock from @a path.  @a adm_access must contain a
 * write-lock for @a path.  If @a path has a lock and the locking
 * so specifies, make the file read-only.  Don't return an error if @a
 * path didn't have a lock.  Perform temporary allocations in @a pool. 
</member>
        <member name="M:svn_wc_add_lock(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_lock_t!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_pool_t*)">
Add @a lock to the working copy for @a path.  @a adm_access must contain
 * a write lock for @a path.  If @a path is read-only, due to locking
 * properties, make it writable.  Perform temporary allocations in @a
 * pool. 
</member>
        <member name="M:svn_wc_match_ignore_list(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_array_header_t*,apr_pool_t*)">
Return TRUE iff @a str matches any of the elements of @a list, a
 * list of zero or more ignore patterns.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_wc_get_ignores(apr_array_header_t**,apr_hash_t*,svn_wc_adm_access_t*,apr_pool_t*)">
Get the list of ignore patterns from the @c svn_config_t's in the
 * @a config hash and the local ignore patterns from the directory
 * in @a adm_access, and store them in @a *patterns.
 * Allocate @a *patterns and its contents in @a pool.
 *
 * @since New in 1.3.

</member>
        <member name="M:svn_wc_get_default_ignores(apr_array_header_t**,apr_hash_t*,apr_pool_t*)">
Get the run-time configured list of ignore patterns from the
 * @c svn_config_t's in the @a config hash, and store them in @a *patterns.
 * Allocate @a *patterns and its contents in @a pool.

</member>
        <member name="M:svn_wc_transmit_prop_deltas(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,svn_wc_entry_t!System.Runtime.CompilerServices.IsConst*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,apr_pool_t*)">
Given a @a path with its accompanying @a entry, transmit all local
 * property modifications using the appropriate @a editor method (in
 * conjunction with @a baton). @a adm_access is an access baton set
 * that contains @a path.  Use @a pool for all allocations.
 *
 * If a temporary file remains after this function is finished, the
 * path to that file is returned in @a *tempfile (so the caller can
 * clean this up if it wishes to do so).
 *
 * @note Starting version 1.5, no tempfile will ever be returned
 *       anymore.  If @a *tempfile is passed, its value is set to @c NULL.

</member>
        <member name="M:svn_wc_transmit_text_deltas(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,apr_pool_t*)">
Similar to svn_wc_transmit_text_deltas2(), but with @a digest set to NULL.
 *
 * @deprecated Provided for backwards compatibility with the 1.3 API.

</member>
        <member name="M:svn_wc_transmit_text_deltas2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.Byte*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*)">
Send the local modifications for versioned file @a path (with
 * matching @a file_baton) through @a editor, then close @a file_baton
 * afterwards.  Use @a pool for any temporary allocation and
 * @a adm_access as an access baton for @a path.
 *
 * This process creates a copy of @a path with keywords and eol
 * untranslated.  If @a tempfile is non-NULL, set @a *tempfile to the
 * path to this copy.  Do not clean up the copy; caller can do that.
 * If @a digest is non-NULL, put the MD5 checksum of the
 * temporary file into @a digest, which must point to @c APR_MD5_DIGESTSIZE
 * bytes of storage.  (The purpose of handing back the tmp copy is that
 * it is usually about to become the new text base anyway, but the
 * installation of the new text base is outside the scope of this
 * function.)
 *
 * If @a fulltext, send the untranslated copy of @a path through @a editor
 * as full-text; else send it as svndiff against the current text base.
 *
 * If sending a diff, and the recorded checksum for @a path's text-base
 * does not match the current actual checksum, then remove the tmp
 * copy (and set @a *tempfile to NULL if appropriate), and return the
 * error @c SVN_ERR_WC_CORRUPT_TEXT_BASE.
 *
 * @note This is intended for use with both infix and postfix
 * text-delta styled editor drivers.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_wc_translated_stream(svn_stream_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.UInt32,apr_pool_t*)">
Returns a @a stream allocated in @a pool with access to the given
 * @a path taking the file properties from @a versioned_file using
 * @a adm_access.
 *
 * When translation from normal form is requested
 * (@c SVN_WC_TRANSLATE_FROM_NF is specified in @a flags), @a path
 * is used as target path and stream read operations are not supported.
 * Conversely, if translation to normal form is requested
 * (@c SVN_WC_TRANSLATE_TO_NF is specified in @a flags), @a path is
 * used as source path and stream write operations are not supported.
 *
 * The @a flags are the same constants as those used for
 * svn_wc_translated_file().
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_wc_translated_file(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,apr_pool_t*)">
Same as svn_wc_translated_file2, but will never clean up
 * temporary files.
 *
 * @deprecated Provided for compatibility with the 1.3 API

</member>
        <member name="M:svn_wc_translated_file2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.UInt32,apr_pool_t*)">
Set @a xlated_path to a translated copy of @a src
 * or to @a src itself if no translation is necessary.
 * That is, if @a versioned_file's properties indicate newline conversion or
 * keyword expansion, point @a *xlated_path to a copy of @a src
 * whose newlines and keywords are converted using the translation
 * as requested by @a flags.
 *
 * When translating to the normal form, inconsistent eol styles will be
 * repaired when appropriate for the given setting.  When translating
 * from normal form, no EOL repair is performed (consistency is assumed).
 * This behaviour can be overridden by specifying
 * @c SVN_WC_TRANSLATE_FORCE_EOL_REPAIR.
 *
 * The caller can explicitly request a new file to be returned by setting the
 * @c SVN_WC_TRANSLATE_FORCE_COPY flag in @a flags.
 *
 * This function is generally used to get a file that can be compared
 * meaningfully against @a versioned_file's text base, if
 * @c SVN_WC_TRANSLATE_TO_NF is specified, against @a versioned_file itself
 * if @c SVN_WC_TRANSLATE_FROM_NF is specified.
 *
 * Output files are created in the temp file area belonging to
 * @a versioned_file.  By default they will be deleted at pool cleanup.
 *
 * If @c SVN_WC_TRANSLATE_NO_OUTPUT_CLEANUP is specified, the default
 * pool cleanup handler to remove @a *xlated_path is not registered.
 *
 * If an error is returned, the effect on @a *xlated_path is undefined.
 *
 * @since New in 1.4

</member>
        <member name="M:svn_wc_create_tmp_file(apr_file_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Same as svn_wc_create_tmp_file2(), but with @a new_name set to @c NULL,
 * and without the ability to delete the file on pool cleanup.
 *
 * @deprecated For compatibility with 1.3 API

</member>
        <member name="M:svn_wc_create_tmp_file2(apr_file_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_io_file_del_t,apr_pool_t*)">
Create a unique temporary file in administrative tmp/ area of
 * directory @a path.  Return a handle in @a *fp and the path
 * in @a *new_name. Either @a fp or @a new_name can be NULL.
 *
 * The flags will be <tt>APR_WRITE | APR_CREATE | APR_EXCL</tt> and
 * optionally @c APR_DELONCLOSE (if the @a delete_when argument is
 * set to @c svn_io_file_del_on_close).
 *
 * This means that as soon as @a fp is closed, the tmp file will vanish.
 *
 * @since New in 1.4

</member>
        <member name="M:svn_wc_revert(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,=FUNC:System.Void(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_action_t,svn_node_kind_t,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_state_t,svn_wc_notify_state_t,System.Int32!System.Runtime.CompilerServices.IsLong),System.Void*,apr_pool_t*)">
 Similar to svn_wc_revert2(), but takes an @c svn_wc_notify_func_t instead.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_revert2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,apr_pool_t*)">
 Similar to svn_wc_revert3(), but with @a changelists passed as @c
 NULL, and @a depth set according to @a recursive: if @a recursive
 is TRUE, @a depth is @c svn_depth_infinity; if FALSE, @a depth is
 @c svn_depth_empty.

 @note Most APIs map @a recurse==FALSE to @a depth==svn_depth_files;
 revert is deliberately different.

 @deprecated Provided for backward compatibility with the 1.2 API.

</member>
        <member name="M:svn_wc_revert3(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,svn_depth_t,System.Int32,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,=FUNC:svn_error_t*(System.Void*),System.Void*,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,apr_pool_t*)">
 Revert changes to @a path.  Perform necessary allocations in @a pool.

 @a parent_access is an access baton for the directory containing @a
 path, unless @a path is a working copy root (as determined by @c
 svn_wc_is_wc_root), in which case @a parent_access refers to @a
 path itself.

 If @a depth is @c svn_depth_empty, revert just @a path (if a
 directory, then revert just the properties on that directory).
 Else if @c svn_depth_files, revert @a path and any files
 directly under @a path if it is directory.  Else if
 @c svn_depth_immediates, revert all of the preceding plus
 properties on immediate subdirectories; else if @c svn_depth_infinity,
 revert path and everything under it fully recursively.

 @a changelists is an array of <tt>const char *</tt> changelist
 names, used as a restrictive filter on items reverted; that is,
 don't revert any item unless it's a member of one of those
 changelists.  If @a changelists is empty (or altogether @c NULL),
 no changelist filtering occurs.

 If @a cancel_func is non-NULL, call it with @a cancel_baton at
 various points during the reversion process.  If it returns an
 error (typically @c SVN_ERR_CANCELLED), return that error
 immediately.

 If @a use_commit_times is TRUE, then all reverted working-files
 will have their timestamp set to the last-committed-time.  If
 FALSE, the reverted working-files will be touched with the 'now' time.

 For each item reverted, @a notify_func will be called with @a notify_baton
 and the path of the reverted item. @a notify_func may be @c NULL if this
 notification is not needed.

 If @a path is not under version control, return the error
 SVN_ERR_UNVERSIONED_RESOURCE.

 @since New in 1.5.

</member>
        <member name="M:svn_wc_relocate(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,=FUNC:svn_error_t*(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*),System.Void*,apr_pool_t*)">
Similar to svn_wc_relocate2(), but uses @c svn_wc_relocation_validator_t.
 *
 * @deprecated Provided for backwards compatibility with the 1.3 API. 
</member>
        <member name="M:svn_wc_relocate2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,=FUNC:svn_error_t*(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*),System.Void*,apr_pool_t*)">
Similar to svn_wc_relocate3(), but uses @c svn_wc_relocation_validator2_t.
 *
 * @deprecated Provided for backwards compatibility with the 1.4 API. 
</member>
        <member name="M:svn_wc_relocate3(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,=FUNC:svn_error_t*(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,apr_pool_t*)">
Change repository references at @a path that begin with @a from
 * to begin with @a to instead.  Perform necessary allocations in @a pool.
 * If @a recurse is TRUE, do so.  @a validator (and its baton,
 * @a validator_baton), will be called for each newly generated URL.
 *
 * @a adm_access is an access baton for the directory containing
 * @a path.
 *
 * @since New in 1.5.

</member>
        <member name="D:svn_wc_relocation_validator_t">
Similar to @c svn_wc_relocation_validator2_t, but without
 * the @a root and @a pool arguments.  @a uuid will not be NULL in this version
 * of the function.
 *
 * @deprecated Provided for backwards compatibility with the 1.3 API.

</member>
        <member name="D:svn_wc_relocation_validator2_t">
Similar to @c svn_wc_relocation_validator3_t, but without
 * the @a root_url arguments.
 *
 * @deprecated Provided for backwards compatibility with the 1.4 API.

</member>
        <member name="D:svn_wc_relocation_validator3_t">
Relocation validation callback typedef.
 *
 * Called for each relocated file/directory.  @a uuid, if non-NULL, contains
 * the expected repository UUID, @a url contains the tentative URL.
 *
 * @a baton is a closure object; it should be provided by the
 * implementation, and passed by the caller.
 *
 * If @a root is TRUE, then the implementation should make sure that @a url
 * is the repository root.  Else, it can be an URL inside the repository.
 * @a pool may be used for temporary allocations.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_wc_cleanup(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
 Similar to svn_wc_cleanup2(). @a optional_adm_access is an historic
 relic and not used, it may be NULL.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_cleanup2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
 Recurse from @a path, cleaning up unfinished log business.  Perform
 necessary allocations in @a pool.  Any working copy locks under @a path
 will be taken over and then cleared by this function.  If @a diff3_cmd
 is non-NULL, then use it as the diff3 command for any merging; otherwise,
 use the built-in merge code.

 WARNING: there is no mechanism that will protect locks that are still
 being used.

 If @a cancel_func is non-NULL, invoke it with @a cancel_baton at
 various points during the operation.  If it returns an error
 (typically @c SVN_ERR_CANCELLED), return that error immediately.

 @since New in 1.2.

</member>
        <member name="M:svn_wc_get_pristine_copy_path(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,apr_pool_t*)">
Returns a path to the pristine copy of @a path. Should use
 * svn_wc_get_pristine_contents() instead.
 *
 * @deprecated Provided for backwards compatibility with the 1.5 API.

</member>
        <member name="M:svn_wc_get_pristine_contents(svn_stream_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*,apr_pool_t*)">
Given a @a path to a wc file, return a stream to the @a contents of
 * the pristine copy of the file.  This is needed so clients can do
 * diffs.  If the WC has no text-base, return a @c NULL instead of a
 * stream.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_wc_merge_prop_diffs(svn_wc_notify_state_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,apr_pool_t*)">
 Similar to svn_wc_merge_props(), but no baseprops are given.
 Instead, it's assumed that the incoming propchanges are based
 against the working copy's own baseprops.  While this assumption is
 correct for 'svn update', it's incorrect for 'svn merge', and can
 cause flawed behavior.  (See issue #2035.)

 @deprecated Provided for backward compatibility with the 1.2 API.

</member>
        <member name="M:svn_wc_merge_props(svn_wc_notify_state_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_hash_t*,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,apr_pool_t*)">
 Same as svn_wc_merge_props2(), but with a @a conflict_func (and
 baton) of NULL.

 @deprecated Provided for backward compatibility with the 1.3 API.


</member>
        <member name="M:svn_wc_merge_props2(svn_wc_notify_state_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_hash_t*,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,=FUNC:svn_error_t*(svn_wc_conflict_result_t**,svn_wc_conflict_description_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*),System.Void*,apr_pool_t*)">
Given a @a path under version control, merge an array of @a
 * propchanges into the path's existing properties.  @a propchanges is
 * an array of @c svn_prop_t objects, and @a baseprops is a hash
 * representing the original set of properties that @a propchanges is
 * working against.  @a adm_access is an access baton for the directory
 * containing @a path.
 *
 * If @a base_merge is @c FALSE only the working properties will be changed,
 * if it is @c TRUE both the base and working properties will be changed.
 *
 * If @a state is non-NULL, set @a *state to the state of the properties
 * after the merge.
 *
 * If conflicts are found when merging working properties, they are
 * described in a temporary .prej file (or appended to an already-existing
 * .prej file), and the entry is marked "conflicted".  Base properties
 * are changed unconditionally, if @a base_merge is @c TRUE, they never result
 * in a conflict.
 *
 * If @a path is not under version control, return the error
 * SVN_ERR_UNVERSIONED_RESOURCE and don't touch anyone's properties.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_wc_merge(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,svn_wc_merge_outcome_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspe">
Similar to svn_wc_merge2(), but with @a merge_options set to NULL.
 *
 * @deprecated Provided for backwards compatibility with the 1.3 API.

</member>
        <member name="M:svn_wc_merge2(svn_wc_merge_outcome_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnsp">
Similar to svn_wc_merge3(), but with @a prop_diff, @a
 * conflict_func, @a conflict_baton set to NULL.
 *
 * @deprecated Provided for backwards compatibility with the 1.4 API.

</member>
        <member name="M:svn_wc_merge3(svn_wc_merge_outcome_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnsp">
Given paths to three fulltexts, merge the differences between @a left
 * and @a right into @a merge_target.  (It may help to know that @a left,
 * @a right, and @a merge_target correspond to "OLDER", "YOURS", and "MINE",
 * respectively, in the diff3 documentation.)  Use @a pool for any
 * temporary allocation.
 *
 * @a adm_access is an access baton with a write lock for the directory
 * containing @a merge_target.
 *
 * This function assumes that @a left and @a right are in repository-normal
 * form (linefeeds, with keywords contracted); if necessary,
 * @a merge_target is temporarily converted to this form to receive the
 * changes, then translated back again.
 *
 * If @a merge_target is absent, or present but not under version
 * control, then set @a *merge_outcome to @c svn_wc_merge_no_merge and
 * return success without merging anything.  (The reasoning is that if
 * the file is not versioned, then it is probably unrelated to the
 * changes being considered, so they should not be merged into it.)
 *
 * @a dry_run determines whether the working copy is modified.  When it
 * is @c FALSE the merge will cause @a merge_target to be modified, when it
 * is @c TRUE the merge will be carried out to determine the result but
 * @a merge_target will not be modified.
 *
 * If @a diff3_cmd is non-NULL, then use it as the diff3 command for
 * any merging; otherwise, use the built-in merge code.  If @a
 * merge_options is non-NULL, either pass its elements to @a diff3_cmd or
 * parse it and use as options to the internal merge code (see
 * svn_diff_file_options_parse()).  @a merge_options must contain
 * <tt>const char *</tt> elements.
 *
 * The outcome of the merge is returned in @a *merge_outcome. If there
 * is a conflict and @a dry_run is @c FALSE, then attempt to call @a
 * conflict_func with @a conflict_baton (if non-NULL).  If the
 * conflict callback cannot resolve the conflict, then:
 *
 *   * Put conflict markers around the conflicting regions in
 *     @a merge_target, labeled with @a left_label, @a right_label, and
 *     @a target_label.  (If any of these labels are @c NULL, default
 *     values will be used.)
 *
 *   * Copy @a left, @a right, and the original @a merge_target to unique
 *     names in the same directory as @a merge_target, ending with the
 *     suffixes ".LEFT_LABEL", ".RIGHT_LABEL", and ".TARGET_LABEL"
 *     respectively.
 *
 *   * Mark the entry for @a merge_target as "conflicted", and track the
 *     above mentioned backup files in the entry as well.
 *
 * Binary case:
 *
 *  If @a merge_target is a binary file, then no merging is attempted,
 *  the merge is deemed to be a conflict.  If @a dry_run is @c FALSE the
 *  working @a merge_target is untouched, and copies of @a left and
 *  @a right are created next to it using @a left_label and @a right_label.
 *  @a merge_target's entry is marked as "conflicted", and begins
 *  tracking the two backup files.  If @a dry_run is @c TRUE no files are
 *  changed.  The outcome of the merge is returned in @a *merge_outcome.
 *
 * @since New in 1.5.

</member>
        <member name="T:svn_wc_merge_outcome_t">
The outcome of a merge carried out (or tried as a dry-run) by
 * svn_wc_merge()

</member>
        <member name="F:svn_wc_merge_no_merge">
No merge was performed, probably because the target file was
    * either absent or not under version control.

</member>
        <member name="F:svn_wc_merge_conflict">
The working copy has been (or would be) changed, but there was (or
    * would be) a conflict

</member>
        <member name="F:svn_wc_merge_merged">
The working copy has been (or would be) changed. 
</member>
        <member name="F:svn_wc_merge_unchanged">
The working copy is (or would be) unchanged.  The changes to be
    * merged were already present in the working copy

</member>
        <member name="M:svn_wc_get_prop_diffs(apr_array_header_t**,apr_hash_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_pool_t*)">
Given a @a path to a file or directory under version control, discover
 * any local changes made to properties and/or the set of 'pristine'
 * properties.  @a adm_access is an access baton set for @a path.
 *
 * If @a propchanges is non-@c NULL, return these changes as an array of
 * @c svn_prop_t structures stored in @a *propchanges.  The structures and
 * array will be allocated in @a pool.  If there are no local property
 * modifications on @a path, then set @a *propchanges to @c NULL.
 *
 * If @a original_props is non-@c NULL, then set @a *original_props to
 * hashtable (<tt>const char *name</tt> -&gt; <tt>const svn_string_t *value</tt>)
 * that represents the 'pristine' property list of @a path.  This hashtable is
 * allocated in @a pool, and can be used to compare old and new values of
 * properties.

</member>
        <member name="M:svn_wc_diff(svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_diff_callbacks_t!System.Runtime.CompilerServices.IsConst*,System.Void*,System.Int32,apr_pool_t*)">
 Similar to svn_wc_diff2(), but with @a ignore_ancestry always set
 to @c FALSE.

 @deprecated Provided for backward compatibility with the 1.0 API.

</member>
        <member name="M:svn_wc_diff2(svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_diff_callbacks_t!System.Runtime.CompilerServices.IsConst*,System.Void*,System.Int32,System.Int32,apr_pool_t*)">
 Similar to svn_wc_diff3(), but with a @c svn_wc_diff_callbacks_t argument
 instead of @c svn_wc_diff_callbacks2_t.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_diff3(svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_diff_callbacks2_t!System.Runtime.CompilerServices.IsConst*,System.Void*,System.Int32,System.Int32,apr_pool_t*)">
 Similar to svn_wc_diff4(), but with @a changelists passed @c NULL,
 and @a depth set to @c svn_depth_infinity if @a recurse is TRUE, or
 @c svn_depth_files if @a recurse is FALSE.

 @deprecated Provided for backward compatibility with the 1.2 API.

</member>
        <member name="M:svn_wc_diff4(svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_diff_callbacks2_t!System.Runtime.CompilerServices.IsConst*,System.Void*,svn_depth_t,System.Int32,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Similar to svn_wc_diff5(), but with a @c svn_wc_diff_callbacks2_t argument
 instead of @c svn_wc_diff_callbacks3_t.

 @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="M:svn_wc_diff5(svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_diff_callbacks3_t!System.Runtime.CompilerServices.IsConst*,System.Void*,svn_depth_t,System.Int32,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Compare working copy against the text-base.

 @a anchor/@a target represent the base of the hierarchy to be compared.

 @a callbacks/@a callback_baton is the callback table to use when two
 files are to be compared.

 If @a depth is @c svn_depth_empty, just diff exactly @a target or
 @a anchor if @a target is empty.  If @c svn_depth_files then do the same
 and for top-level file entries as well (if any).  If
 @c svn_depth_immediates, do the same as @c svn_depth_files but also diff
 top-level subdirectories at @c svn_depth_empty.  If @c svn_depth_infinity,
 then diff fully recursively.  In the latter case, @a anchor should be part
 of an access baton set for the @a target hierarchy.

 @a ignore_ancestry determines whether paths that have discontinuous node
 ancestry are treated as delete/add or as simple modifications.  If
 @a ignore_ancestry is @c FALSE, then any discontinuous node ancestry will
 result in the diff given as a full delete followed by an add.

 @a changelists is an array of <tt>const char *</tt> changelist
 names, used as a restrictive filter on items whose differences are
 reported; that is, don't generate diffs about any item unless
 it's a member of one of those changelists.  If @a changelists is
 empty (or altogether @c NULL), no changelist filtering occurs.

 @since New in 1.6.

</member>
        <member name="M:svn_wc_get_diff_editor(svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_diff_callbacks_t!System.Runtime.CompilerServices.IsConst*,System.Void*,System.Int32,System.Int32,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,apr_pool_t*)">
 Similar to svn_wc_get_diff_editor2(), but with @a ignore_ancestry
 always set to @c FALSE.

 @deprecated Provided for backward compatibility with the 1.0 API.

</member>
        <member name="M:svn_wc_get_diff_editor2(svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_diff_callbacks_t!System.Runtime.CompilerServices.IsConst*,System.Void*,System.Int32,System.Int32,System.Int32,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,apr_pool_t*)">
 Similar to svn_wc_get_diff_editor3(), but with an
 @c svn_wc_diff_callbacks_t instead of @c svn_wc_diff_callbacks2_t.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_get_diff_editor3(svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_diff_callbacks2_t!System.Runtime.CompilerServices.IsConst*,System.Void*,System.Int32,System.Int32,System.Int32,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,apr_pool_t*)">
 * Similar to svn_wc_get_diff_editor4(), but with @a changelists
 * passed as @c NULL, and @a depth set to @c svn_depth_infinity if @a
 * recurse is TRUE, or @c svn_depth_files if @a recurse is FALSE.
 *
 * @deprecated Provided for backward compatibility with the 1.4 API.

 * @since New in 1.2.

</member>
        <member name="M:svn_wc_get_diff_editor4(svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_diff_callbacks2_t!System.Runtime.CompilerServices.IsConst*,System.Void*,svn_depth_t,System.Int32,System.Int32,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,apr_pool_t*)">
 Similar to svn_wc_get_diff_editor5(), but with an
 @c svn_wc_diff_callbacks2_t instead of @c svn_wc_diff_callbacks3_t.

 @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="M:svn_wc_get_diff_editor5(svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_diff_callbacks3_t!System.Runtime.CompilerServices.IsConst*,System.Void*,svn_depth_t,System.Int32,System.Int32,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,apr_pool_t*)">
 Return an @a editor/@a edit_baton for diffing a working copy against the
 repository.

 @a anchor/@a target represent the base of the hierarchy to be compared.

 @a callbacks/@a callback_baton is the callback table to use when two
 files are to be compared.

 If @a depth is @c svn_depth_empty, just diff exactly @a target or
 @a anchor if @a target is empty.  If @c svn_depth_files then do the same
 and for top-level file entries as well (if any).  If
 @c svn_depth_immediates, do the same as @c svn_depth_files but also diff
 top-level subdirectories at @c svn_depth_empty.  If @c svn_depth_infinity,
 then diff fully recursively.  In the latter case, @a anchor should be part
 of an access baton set for the @a target hierarchy.

 @a ignore_ancestry determines whether paths that have discontinuous node
 ancestry are treated as delete/add or as simple modifications.  If
 @a ignore_ancestry is @c FALSE, then any discontinuous node ancestry will
 result in the diff given as a full delete followed by an add.

 If @a use_text_base is TRUE, then compare the repository against
 the working copy's text-base files, rather than the working files.

 Normally, the difference from repository-&gt;working_copy is shown.
 If @a reverse_order is TRUE, then show working_copy-&gt;repository diffs.

 If @a cancel_func is non-NULL, it will be used along with @a cancel_baton
 to periodically check if the client has canceled the operation.

 @a changelists is an array of <tt>const char *</tt> changelist
 names, used as a restrictive filter on items whose differences are
 reported; that is, don't generate diffs about any item unless
 it's a member of one of those changelists.  If @a changelists is
 empty (or altogether @c NULL), no changelist filtering occurs.

 @since New in 1.6.

</member>
        <member name="M:svn_wc_canonicalize_svn_prop(svn_string_t!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_node_kind_t,System.Int32,=FUNC:svn_error_t*(svn_string_t!System.Runtime.CompilerServices.IsConst**,svn_stream_t*,System.Void*,apr_pool_t*),System.Void*,apr_pool_t*)">
Canonicalize the value of an svn:* property @a propname with
 * value @a propval.
 *
 * If the property is not appropriate for a node of kind @a kind, or
 * is otherwise invalid, throw an error.  Otherwise, set @a *propval_p
 * to a canonicalized version of the property value.  If @a
 * skip_some_checks is TRUE, only some validity checks are taken.
 *
 * Some validity checks require access to the contents and MIME type
 * of the target if it is a file; they will call @a prop_getter with @a
 * getter_baton, which then needs to set the MIME type and print the
 * contents of the file to the given stream.
 *
 * @a path should be the path of the file in question; it is only used
 * for error messages.
 *
 * ### This is not actually related to the WC, but it does need to call
 * ### svn_wc_parse_externals_description2.

</member>
        <member name="D:svn_wc_canonicalize_svn_prop_get_file_t">
Callback type used by @c svn_wc_canonicalize_svn_prop.
 *
 * If @a mime_type is non-null, it sets @a *mime_type to the value of
 * @c SVN_PROP_MIME_TYPE for the path passed to @c
 * svn_wc_canonicalize_svn_prop (allocated from @a pool).  If @a
 * stream is non-null, it writes the contents of the file to @a
 * stream.
 *
 * (Currently, this is used if you are attempting to set the @c
 * SVN_PROP_EOL_STYLE property, to make sure that the value matches
 * the mime type and contents.)

</member>
        <member name="M:svn_wc_is_entry_prop(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Return TRUE iff @a name is a 'entry' property name. 
</member>
        <member name="M:svn_wc_is_wc_prop(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Return TRUE iff @a name is a 'wc' property name. 
</member>
        <member name="M:svn_wc_is_normal_prop(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Return TRUE iff @a name is a 'normal' property name.  'Normal' is
 * defined as a user-visible and user-tweakable property that shows up
 * when you fetch a proplist.
 *
 * The function currently parses the namespace like so:
 *
 *   - 'svn:wc:'  ==&gt;  a wcprop, stored/accessed separately via different API.
 *
 *   - 'svn:entry:' ==&gt; an "entry" prop, shunted into the 'entries' file.
 *
 * If these patterns aren't found, then the property is assumed to be
 * Normal.

</member>
        <member name="M:svn_wc_prop_set(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_pool_t*)">
 Like svn_wc_prop_set2(), but with @a skip_checks always FALSE.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_prop_set2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,apr_pool_t*)">
 Like svn_wc_prop_set3(), but without the notification callbacks.

 @since New in 1.2.

</member>
        <member name="M:svn_wc_prop_set3(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,apr_pool_t*)">
 Set property @a name to @a value for @a path, or if @a value is
 NULL, remove property @a name from @a path.  @a adm_access is an
 access baton with a write lock for @a path.

 If @a skip_checks is TRUE, do no validity checking.  But if @a
 skip_checks is FALSE, and @a name is not a valid property for @a
 path, return an error, either @c SVN_ERR_ILLEGAL_TARGET (if the
 property is not appropriate for @a path), or @c
 SVN_ERR_BAD_MIME_TYPE (if @a name is "svn:mime-type", but @a value
 is not a valid mime-type).

 @a name may be a wc property or a regular property; but if it is an
 entry property, return the error @c SVN_ERR_BAD_PROP_KIND, even if
 @a skip_checks is TRUE.

 For each file or directory operated on, @a notify_func will be called
 with its path and the @a notify_baton.  @a notify_func may be @c NULL
 if you are not interested in this information.

 Use @a pool for temporary allocation.

 @since New in 1.6.

</member>
        <member name="M:svn_wc_prop_get(svn_string_t!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_pool_t*)">
Set @a *value to the value of property @a name for @a path, allocating
 * @a *value in @a pool.  If no such prop, set @a *value to @c NULL.
 * @a name may be a regular or wc property; if it is an entry property,
 * return the error @c SVN_ERR_BAD_PROP_KIND.  @a adm_access is an access
 * baton set that contains @a path.

</member>
        <member name="M:svn_wc_prop_list(apr_hash_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_pool_t*)">
Set @a *props to a hash table mapping <tt>char *</tt> names onto
 * <tt>svn_string_t *</tt> values for all the regular properties of
 * @a path.  Allocate the table, names, and values in @a pool.  If
 * the node has no properties, or does not exist in the working copy,
 * then an empty hash is returned.  @a adm_access is an access baton
 * set that contains @a path.

</member>
        <member name="M:svn_wc_get_switch_editor(System.Int32!System.Runtime.CompilerServices.IsLong*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,=FUNC:System.Void(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_action_t,svn_node_kind_t,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_state_t,svn_wc_notify_state_t,System.Int32!System.Runtime.CompilerServices.IsLong),System.Void*,=FUNC:svn_error_t*(System.Void*),Syste">
 Similar to svn_wc_get_switch_editor2(), but takes an
 @c svn_wc_notify_func_t instead.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_get_switch_editor2(System.Int32!System.Runtime.CompilerServices.IsLong*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,=FUNC:svn_error_t*(System.Void*),System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,svn_wc_traversal_info_t*,apr_pool_t*)">
 Similar to svn_wc_get_switch_editor3() but with the
 @a allow_unver_obstructions parameter always set to FALSE,
 @a preserved_exts set to NULL, @a conflict_func and baton set to NULL,
 @a depth_is_sticky set to FALSE, and @a depth set according to @a
 recurse: if @a recurse is TRUE, pass @c svn_depth_infinity, if
 FALSE, pass @c svn_depth_files.

 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_wc_get_switch_editor3(System.Int32!System.Runtime.CompilerServices.IsLong*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,svn_depth_t,System.Int32,System.Int32,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,=FUNC:svn_error_t*(System.Void*),System.Void*,=FUNC:svn_error_t*(svn_wc_conflict_result_t**,svn_wc_conflict_description_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*),System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerSe">
 A variant of svn_wc_get_update_editor().

 Set @a *editor and @a *edit_baton to an editor and baton for "switching"
 a working copy to a new @a switch_url.  (Right now, this URL must be
 within the same repository that the working copy already comes
 from.)  @a switch_url must not be @c NULL.

 If @a ti is non-NULL, record traversal info in @a ti, for use by
 post-traversal accessors such as svn_wc_edited_externals().

 @a anchor is an access baton, with a write lock, for the local path to the
 working copy which will be used as the root of our editor.  Further
 locks will be acquired if the switch creates new directories.  All
 locks, both those in @a anchor and newly acquired ones, will be released
 when the editor driver calls @c close_edit.

 @a target is the entry in @a anchor that will actually be updated, or
 empty if all of @a anchor should be updated.

 The editor invokes @a notify_func with @a notify_baton as the switch
 progresses, if @a notify_func is non-NULL.

 If @a cancel_func is non-NULL, it will be called with @a cancel_baton as
 the switch progresses to determine if it should continue.

 If @a conflict_func is non-NULL, then invoke it with @a
 conflict_baton whenever a conflict is encountered, giving the
 callback a chance to resolve the conflict before the editor takes
 more drastic measures (such as marking a file conflicted, or
 bailing out of the switch).

 If @a diff3_cmd is non-NULL, then use it as the diff3 command for
 any merging; otherwise, use the built-in merge code.

 @a preserved_exts is an array of filename patterns which, when
 matched against the extensions of versioned files, determine for
 which such files any related generated conflict files will preserve
 the original file's extension as their own.  If a file's extension
 does not match any of the patterns in @a preserved_exts (which is
 certainly the case if @a preserved_exts is @c NULL or empty),
 generated conflict files will carry Subversion's custom extensions.

 @a target_revision is a pointer to a revision location which, after
 successful completion of the drive of this editor, will be
 populated with the revision to which the working copy was updated.

 If @a use_commit_times is TRUE, then all edited/added files will
 have their working timestamp set to the last-committed-time.  If
 FALSE, the working files will be touched with the 'now' time.

 @a depth and @a depth_is_sticky behave as for svn_wc_get_update_editor3().

 If @a allow_unver_obstructions is TRUE, then allow unversioned
 obstructions when adding a path.

 @since New in 1.5.

</member>
        <member name="M:svn_wc_get_update_editor(System.Int32!System.Runtime.CompilerServices.IsLong*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,=FUNC:System.Void(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_action_t,svn_node_kind_t,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_state_t,svn_wc_notify_state_t,System.Int32!System.Runtime.CompilerServices.IsLong),System.Void*,=FUNC:svn_error_t*(System.Void*),System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.I">
 Similar to svn_wc_get_update_editor2(), but takes an svn_wc_notify_func_t
 instead.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_get_update_editor2(System.Int32!System.Runtime.CompilerServices.IsLong*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,=FUNC:svn_error_t*(System.Void*),System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,svn_wc_traversal_info_t*,apr_pool_t*)">
 Similar to svn_wc_get_update_editor3() but with the @a
 allow_unver_obstructions parameter always set to FALSE, @a
 conflict_func and baton set to NULL, @a fetch_func and baton set to
 NULL, @a preserved_exts set to NULL, @a depth_is_sticky set to
 FALSE, and @a depth set according to @a recurse: if @a recurse is
 TRUE, pass @c svn_depth_infinity, if FALSE, pass @c
 svn_depth_files.

 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_wc_get_update_editor3(System.Int32!System.Runtime.CompilerServices.IsLong*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,svn_depth_t,System.Int32,System.Int32,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,=FUNC:svn_error_t*(System.Void*),System.Void*,=FUNC:svn_error_t*(svn_wc_conflict_result_t**,svn_wc_conflict_description_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*),System.Void*,=FUNC:svn_error_t*(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,svn_stre">
 Set @a *editor and @a *edit_baton to an editor and baton for updating a
 working copy.

 If @a ti is non-NULL, record traversal info in @a ti, for use by
 post-traversal accessors such as svn_wc_edited_externals().

 @a anchor is an access baton, with a write lock, for the local path to the
 working copy which will be used as the root of our editor.  Further
 locks will be acquired if the update creates new directories.  All
 locks, both those in @a anchor and newly acquired ones, will be released
 when the editor driver calls @c close_edit.

 @a target is the entry in @a anchor that will actually be updated, or
 the empty string if all of @a anchor should be updated.

 The editor invokes @a notify_func with @a notify_baton as the update
 progresses, if @a notify_func is non-NULL.

 If @a cancel_func is non-NULL, the editor will invoke @a cancel_func with
 @a cancel_baton as the update progresses to see if it should continue.

 If @a conflict_func is non-NULL, then invoke it with @a
 conflict_baton whenever a conflict is encountered, giving the
 callback a chance to resolve the conflict before the editor takes
 more drastic measures (such as marking a file conflicted, or
 bailing out of the update).

 If @a fetch_func is non-NULL, then use it (with @a fetch_baton) as
 a fallback for retrieving repository files whenever 'copyfrom' args
 are sent into editor-&gt;add_file().

 If @a diff3_cmd is non-NULL, then use it as the diff3 command for
 any merging; otherwise, use the built-in merge code.

 @a preserved_exts is an array of filename patterns which, when
 matched against the extensions of versioned files, determine for
 which such files any related generated conflict files will preserve
 the original file's extension as their own.  If a file's extension
 does not match any of the patterns in @a preserved_exts (which is
 certainly the case if @a preserved_exts is @c NULL or empty),
 generated conflict files will carry Subversion's custom extensions.

 @a target_revision is a pointer to a revision location which, after
 successful completion of the drive of this editor, will be
 populated with the revision to which the working copy was updated.

 If @a use_commit_times is TRUE, then all edited/added files will
 have their working timestamp set to the last-committed-time.  If
 FALSE, the working files will be touched with the 'now' time.

 If @a allow_unver_obstructions is TRUE, then allow unversioned
 obstructions when adding a path.

 If @a depth is @c svn_depth_infinity, update fully recursively.
 Else if it is @c svn_depth_immediates, update the uppermost
 directory, its file entries, and the presence or absence of
 subdirectories (but do not descend into the subdirectories).
 Else if it is @c svn_depth_files, update the uppermost directory
 and its immediate file entries, but not subdirectories.
 Else if it is @c svn_depth_empty, update exactly the uppermost
 target, and don't touch its entries.

 If @a depth_is_sticky is set and @a depth is not @c
 svn_depth_unknown, then in addition to updating PATHS, also set
 their sticky ambient depth value to @a depth.

 @since New in 1.5.

</member>
        <member name="M:svn_wc_get_actual_target(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,apr_pool_t*)">
Conditionally split @a path into an @a anchor and @a target for the
 * purpose of updating and committing.
 *
 * @a anchor is the directory at which the update or commit editor
 * should be rooted.
 *
 * @a target is the actual subject (relative to the @a anchor) of the
 * update/commit, or "" if the @a anchor itself is the subject.
 *
 * Allocate @a anchor and @a target in @a pool.

</member>
        <member name="M:svn_wc_is_wc_root(System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_pool_t*)">
Set @a *wc_root to @c TRUE if @a path represents a "working copy root",
 * @c FALSE otherwise. Here, @a path is a "working copy root" if its parent
 * directory is not a WC or if its parent directory's repository URL is not
 * the parent of its own repository URL. Thus, a switched subtree is
 * considered to be a working copy root. Also, a deleted tree-conflict
 * victim is considered a "working copy root" because it has no URL.
 *
 * If @a path is not found, return the error @c SVN_ERR_ENTRY_NOT_FOUND.
 *
 * Use @a pool for any intermediate allocations.
 *
 * @note Due to the way in which "WC-root-ness" is calculated, passing
 * a @a path of `.' to this function will always return @c TRUE.

</member>
        <member name="M:svn_wc_crawl_revisions(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,svn_ra_reporter_t!System.Runtime.CompilerServices.IsConst*,System.Void*,System.Int32,System.Int32,System.Int32,=FUNC:System.Void(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_action_t,svn_node_kind_t,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_state_t,svn_wc_notify_state_t,System.Int32!System.Runtime.CompilerServices.IsLong),System.Void*,svn_wc_traversal_info_t*,apr_pool_t*)">
 Similar to svn_wc_crawl_revisions2(), but takes an svn_wc_notify_func_t
 and a @c svn_reporter_t instead.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_crawl_revisions2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,svn_ra_reporter2_t!System.Runtime.CompilerServices.IsConst*,System.Void*,System.Int32,System.Int32,System.Int32,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,svn_wc_traversal_info_t*,apr_pool_t*)">
 Similar to svn_wc_crawl_revisions3, but taking svn_ra_reporter2_t
 instead of svn_ra_reporter3_t, and therefore only able to report @c
 svn_depth_infinity for depths; and taking @a recurse instead of @a
 depth; and with @a depth_compatibility_trick always false.

 @deprecated Provided for compatibility with the 1.4 API.

</member>
        <member name="M:svn_wc_crawl_revisions3(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,svn_ra_reporter3_t!System.Runtime.CompilerServices.IsConst*,System.Void*,System.Int32,svn_depth_t,System.Int32,System.Int32,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,svn_wc_traversal_info_t*,apr_pool_t*)">
 Similar to svn_wc_crawl_revisions4, but with @a honor_depth_exclude always
 set to false.

 @deprecated Provided for compatibility with the 1.5 API.

</member>
        <member name="M:svn_wc_crawl_revisions4(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,svn_ra_reporter3_t!System.Runtime.CompilerServices.IsConst*,System.Void*,System.Int32,svn_depth_t,System.Int32,System.Int32,System.Int32,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,svn_wc_traversal_info_t*,apr_pool_t*)">
 Do a depth-first crawl in a working copy, beginning at @a path.

 Communicate the `state' of the working copy's revisions and depths
 to @a reporter/@a report_baton.  Obviously, if @a path is a file
 instead of a directory, this depth-first crawl will be a short one.

 No locks are or logs are created, nor are any animals harmed in the
 process.  No cleanup is necessary.  @a adm_access must be an access
 baton for the @a path hierarchy, it does not require a write lock.

 After all revisions are reported, @a reporter-&gt;finish_report() is
 called, which immediately causes the RA layer to update the working
 copy.  Thus the return value may very well reflect the result of
 the update!

 If @a depth is @c svn_depth_empty, then report state only for
 @a path itself.  If @c svn_depth_files, do the same and include
 immediate file children of @a path.  If @c svn_depth_immediates,
 then behave as if for @c svn_depth_files but also report the
 property states of immediate subdirectories.  If @a depth is
 @c svn_depth_infinity, then report state fully recursively.  All
 descents are only as deep as @a path's own depth permits, of
 course.  If @a depth is @c svn_depth_unknown, then just use
 @c svn_depth_infinity, which in practice means depth of @a path.

 Iff @a honor_depth_exclude is TRUE, the crawler will report paths
 whose ambient depth is @c svn_depth_exclude as being excluded, and
 thus prevent the server from pushing update data for those paths;
 therefore, don't set this flag if you wish to pull in excluded paths.
 Note that @c svn_depth_exclude on the target @a path is never
 honored, even if @a honor_depth_exclude is TRUE, because we need to
 be able to explicitly pull in a target.  For example, if this is
 the working copy...

    svn co greek_tree_repos wc_dir
    svn up --set-depth exclude wc_dir/A/B/E  # now A/B/E is excluded

 ...then 'svn up wc_dir/A/B' would report E as excluded (assuming
 @a honor_depth_exclude is TRUE), but 'svn up wc_dir/A/B/E' would
 not, because the latter is trying to explicitly pull in E.  In
 general, we never report the update target as excluded.

 Iff @a depth_compatibility_trick is TRUE, then set the @c start_empty
 flag on @a reporter-&gt;set_path() and @a reporter-&gt;link_path() calls
 as necessary to trick a pre-1.5 (i.e., depth-unaware) server into
 sending back all the items the client might need to upgrade a
 working copy from a shallower depth to a deeper one.

 If @a restore_files is TRUE, then unexpectedly missing working files
 will be restored from the administrative directory's cache. For each
 file restored, the @a notify_func function will be called with the
 @a notify_baton and the path of the restored file. @a notify_func may
 be @c NULL if this notification is not required.  If @a
 use_commit_times is TRUE, then set restored files' timestamps to
 their last-commit-times.

 If @a traversal_info is non-NULL, then record pre-update traversal
 state in it.  (Caller should obtain @a traversal_info from
 svn_wc_init_traversal_info().)

 @since New in 1.6.

</member>
        <member name="M:svn_wc_process_committed(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_array_header_t*,apr_pool_t*)">
@see svn_wc_process_committed4()
 *
 * @deprecated Use the svn_wc_committed_queue_* functions instead. Provided
 *   for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_process_committed2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_array_header_t*,System.Int32,apr_pool_t*)">
@see svn_wc_process_committed4()
 *
 * @deprecated Use the svn_wc_committed_queue_* functions instead. Provided
 *   for backwards compatibility with the 1.3 API.

</member>
        <member name="M:svn_wc_process_committed3(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_array_header_t*,System.Int32,System.Byte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
@see svn_wc_process_committed4()
 *
 * @deprecated Use the svn_wc_committed_queue_* functions instead. Provided
 *   for backwards compatibility with the 1.4 API.

</member>
        <member name="M:svn_wc_process_committed4(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_array_header_t*,System.Int32,System.Int32,System.Byte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 @note this function has improper expectations around the operation and
   execution of other parts of the Subversion WC library. The resulting
   coupling makes this interface near-impossible to support. Documentation
   has been removed, as a result.

 @deprecated Use the svn_wc_committed_queue_* functions instead. Provided
   for backwards compatibility with the 1.5 API.

</member>
        <member name="M:svn_wc_process_committed_queue(svn_wc_committed_queue_t*,svn_wc_adm_access_t*,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Bump all items in @a queue to @a new_revnum after a commit succeeds.
 @a rev_date and @a rev_author are the (server-side) date and author
 of the new revision; one or both may be @c NULL.

 @a adm_access must be associated with all affected directories, and
 must hold a write lock in each one.

 @since New in 1.5.

</member>
        <member name="M:svn_wc_queue_committed(svn_wc_committed_queue_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,apr_array_header_t*,System.Int32,System.Int32,System.Byte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Same as svn_wc_queue_committed2() but the @a queue parameter has an
 * extra indirection and @a digest is supplied instead of a checksum type.
 *
 * @note despite the extra indirection, this function does NOT allocate
 *   the queue for you. svn_wc_committed_queue_create() must be called.
 *
 * @since New in 1.5
 *
 * @deprecated Provided for backwards compatibility with 1.5

</member>
        <member name="M:svn_wc_queue_committed2(svn_wc_committed_queue_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,apr_array_header_t*,System.Int32,System.Int32,svn_checksum_t*,apr_pool_t*)">
 Queue committed items to be processed later by
 svn_wc_process_committed_queue().

 All pointer data passed to this function (@a path, @a adm_access,
 @a wcprop_changes and @a checksum) should remain valid until the queue
 has been processed by svn_wc_process_committed_queue().

 Record in @a queue that @a path will need to be bumped after a commit
 succeeds. @a adm_access must hold a write lock appropriate for @a path.

 If non-NULL, @a wcprop_changes is an array of <tt>svn_prop_t *</tt>
 changes to wc properties; if an @c svn_prop_t-&gt;value is NULL, then
 that property is deleted.

 If @a remove_lock is @c TRUE, any entryprops related to a repository
 lock will be removed.

 If @a remove_changelist is @c TRUE, any association with a
 changelist will be removed.

 If @a path is a file and @a checksum is non-NULL, use @a checksum as
 the checksum for the new text base. Otherwise, calculate the checksum
 if needed.

 If @a recurse is TRUE and @a path is a directory, then bump every
 versioned object at or under @a path.  This is usually done for
 copied trees.

 Temporary allocations will be performed in @a scratch_pool, and persistent
 allocations will use the same pool as @a queue used when it was created.

 @note the @a recurse parameter should be used with extreme care since
 it will bump ALL nodes under the directory, regardless of their
 actual inclusion in the new revision.

 @since New in 1.6.

</member>
        <member name="M:svn_wc_committed_queue_create(apr_pool_t*)">
 Create a queue for use with svn_wc_queue_committed() and
 svn_wc_process_committed_queue().

 The returned queue and all further allocations required for queueing
 new items will also be done from @a pool.

 @since New in 1.5.

</member>
        <member name="T:svn_wc_committed_queue_t">
 Storage type for queued post-commit data.

 @since New in 1.5.

</member>
        <member name="M:svn_wc_resolved_conflict(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,System.Int32,System.Int32,=FUNC:System.Void(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_action_t,svn_node_kind_t,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_state_t,svn_wc_notify_state_t,System.Int32!System.Runtime.CompilerServices.IsLong),System.Void*,apr_pool_t*)">
 Similar to svn_wc_resolved_conflict2(), but takes an
 svn_wc_notify_func_t and doesn't have cancellation support.

 @deprecated Provided for backward compatibility with the 1.0 API.

</member>
        <member name="M:svn_wc_resolved_conflict2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,System.Int32,System.Int32,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
 Similar to svn_wc_resolved_conflict3(), but without automatic conflict
 resolution support, and with @a depth set according to @a recurse:
 if @a recurse is TRUE, @a depth is @c svn_depth_infinity, else it is
 @c svn_depth_files.

 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_wc_resolved_conflict3(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,System.Int32,svn_depth_t,svn_wc_conflict_choice_t,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
 Similar to svn_wc_resolved_conflict4(), but without tree-conflict
 resolution support.

 @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="M:svn_wc_resolved_conflict4(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,System.Int32,System.Int32,svn_depth_t,svn_wc_conflict_choice_t,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
 Assuming @a path is under version control and in a state of conflict,
 then take @a path *out* of this state.  If @a resolve_text is TRUE then
 any text conflict is resolved, if @a resolve_props is TRUE then any
 property conflicts are resolved, if @a resolve_tree is TRUE then any
 tree conflicts are resolved.

 If @a depth is @c svn_depth_empty, act only on @a path; if
 @c svn_depth_files, resolve @a path and its conflicted file
 children (if any); if @c svn_depth_immediates, resolve @a path and
 all its immediate conflicted children (both files and directories,
 if any); if @c svn_depth_infinity, resolve @a path and every
 conflicted file or directory anywhere beneath it.

 If @a conflict_choice is @c svn_wc_conflict_choose_base, resolve the
 conflict with the old file contents; if
 @c svn_wc_conflict_choose_mine_full, use the original working contents;
 if @c svn_wc_conflict_choose_theirs_full, the new contents; and if
 @c svn_wc_conflict_choose_merged, don't change the contents at all,
 just remove the conflict status, which is the pre-1.5 behavior.

 @c svn_wc_conflict_choose_theirs_conflict and @c
 svn_wc_conflict_choose_mine_conflict are not legal for binary
 files or properties.

 @a adm_access is an access baton, with a write lock, for @a path.

 Needless to say, this function doesn't touch conflict markers or
 anything of that sort -- only a human can semantically resolve a
 conflict.  Instead, this function simply marks a file as "having
 been resolved", clearing the way for a commit.

 The implementation details are opaque, as our "conflicted" criteria
 might change over time.  (At the moment, this routine removes the
 three fulltext 'backup' files and any .prej file created in a conflict,
 and modifies @a path's entry.)

 If @a path is not under version control, return @c SVN_ERR_ENTRY_NOT_FOUND.
 If @a path isn't in a state of conflict to begin with, do nothing, and
 return @c SVN_NO_ERROR.

 If @c path was successfully taken out of a state of conflict, report this
 information to @c notify_func (if non-@c NULL.)  If only text, only
 property, or only tree conflict resolution was requested, and it was
 successful, then success gets reported.

 @since New in 1.6.

</member>
        <member name="M:svn_wc_remove_from_revision_control(svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
Remove entry @a name in @a adm_access from revision control.  @a name
 * must be either a file or @c SVN_WC_ENTRY_THIS_DIR.  @a adm_access must
 * hold a write lock.
 *
 * If @a name is a file, all its info will be removed from @a adm_access's
 * administrative directory.  If @a name is @c SVN_WC_ENTRY_THIS_DIR, then
 * @a adm_access's entire administrative area will be deleted, along with
 * *all* the administrative areas anywhere in the tree below @a adm_access.
 *
 * Normally, only administrative data is removed.  However, if
 * @a destroy_wf is TRUE, then all working file(s) and dirs are deleted
 * from disk as well.  When called with @a destroy_wf, any locally
 * modified files will *not* be deleted, and the special error
 * @c SVN_ERR_WC_LEFT_LOCAL_MOD might be returned.  (Callers only need to
 * check for this special return value if @a destroy_wf is TRUE.)
 *
 * If @a instant_error is TRUE, then return @c
 * SVN_ERR_WC_LEFT_LOCAL_MOD the instant a locally modified file is
 * encountered.  Otherwise, leave locally modified files in place and
 * return the error only after all the recursion is complete.
 *
 * If @a cancel_func is non-NULL, call it with @a cancel_baton at
 * various points during the removal.  If it returns an error
 * (typically @c SVN_ERR_CANCELLED), return that error immediately.
 *
 * WARNING:  This routine is exported for careful, measured use by
 * libsvn_client.  Do *not* call this routine unless you really
 * understand what the heck you're doing.

</member>
        <member name="M:svn_wc_add_repos_file(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_hash_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_pool_t*)">
Same as svn_wc_add_repos_file3(), except that it doesn't have the
 * BASE arguments or cancellation.
 *
 * @deprecated Provided for compatibility with the 1.3 API

</member>
        <member name="M:svn_wc_add_repos_file2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_hash_t*,apr_hash_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_pool_t*)">
Same as svn_wc_add_repos_file3(), except that it has pathnames rather
 * than streams for the text base, and actual text, and has no cancellation.
 *
 * @since New in 1.4.
 * @deprecated Provided for compatibility with the 1.5 API

</member>
        <member name="M:svn_wc_add_repos_file3(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,svn_stream_t*,svn_stream_t*,apr_hash_t*,apr_hash_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,=FUNC:svn_error_t*(System.Void*),System.Void*,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,apr_pool_t*)">
Add a file to a working copy at @a dst_path, obtaining the text-base's
 * contents from @a new_base_contents, the wc file's content from
 * @a new_contents, its base properties from @a new_base_props and
 * wc properties from @a new_props.
 *
 * The base text and props normally come from the repository file
 * represented by the copyfrom args, see below.  The new file will
 * be scheduled for addition with history.
 *
 * @a new_contents and @a new_props may be NULL, in which case
 * the working copy text and props are taken from the base files with
 * appropriate translation of the file's content.
 *
 * @a new_contents must be provided in Normal Form. This is required
 * in order to pass both special and non-special files through a stream.
 *
 * @a adm_access, or an access baton in its associated set, must
 * contain a write lock for the parent of @a dst_path.
 *
 * If @a copyfrom_url is non-NULL, then @a copyfrom_rev must be a
 * valid revision number, and together they are the copyfrom history
 * for the new file.
 *
 * The @a cancel_func and @a cancel_baton are a standard cancellation
 * callback, or NULL if no callback is needed. @a notify_func and
 * @a notify_baton are a notification callback, and will be notified
 * of the addition of this file.
 *
 * Use @a scratch_pool for temporary allocations.
 *
 * ### NOTE: the notification callback/baton is not yet used.
 *
 * ### This function is very redundant with svn_wc_add().  Ideally,
 * we'd merge them, so that svn_wc_add() would just take optional
 * new_props and optional copyfrom information.  That way it could be
 * used for both 'svn add somefilesittingonmydisk' and for adding
 * files from repositories, with or without copyfrom history.
 *
 * The problem with this Ideal Plan is that svn_wc_add() also takes
 * care of recursive URL-rewriting.  There's a whole comment in its
 * doc string about how that's really weird, outside its core mission,
 * etc, etc.  So another part of the Ideal Plan is that that
 * functionality of svn_wc_add() would move into a separate function.
 *
 * @since New in 1.6

</member>
        <member name="M:svn_wc_add(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,=FUNC:svn_error_t*(System.Void*),System.Void*,=FUNC:System.Void(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_action_t,svn_node_kind_t,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_state_t,svn_wc_notify_state_t,System.Int32!System.Runtime.CompilerServices.IsLong),System.Void*,apr_pool_t*)">
 Similar to svn_wc_add2(), but takes an @c svn_wc_notify_func_t instead.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_add2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,=FUNC:svn_error_t*(System.Void*),System.Void*,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,apr_pool_t*)">
 Similar to svn_wc_add3(), but with the @a depth parameter always
 @c svn_depth_infinity.

 @since New in 1.2.
 @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="M:svn_wc_add3(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,svn_depth_t,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,=FUNC:svn_error_t*(System.Void*),System.Void*,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,apr_pool_t*)">
 Put @a path under version control by adding an entry in its parent,
 and, if @a path is a directory, adding an administrative area.  The
 new entry and anything under it is scheduled for addition to the
 repository.  @a parent_access should hold a write lock for the parent
 directory of @a path.  If @a path is a directory then an access baton
 for @a path will be added to the set containing @a parent_access.

 If @a path does not exist, return @c SVN_ERR_WC_PATH_NOT_FOUND.

 If @a path is a directory, add it at @a depth; otherwise, ignore
 @a depth.

 If @a copyfrom_url is non-NULL, it and @a copyfrom_rev are used as
 `copyfrom' args.  This is for copy operations, where one wants
 to schedule @a path for addition with a particular history.

 If @a cancel_func is non-NULL, call it with @a cancel_baton at
 various points during the operation.  If it returns an error
 (typically @c SVN_ERR_CANCELLED), return that error immediately.

 When the @a path has been added, then @a notify_func will be called
 (if it is not @c NULL) with the @a notify_baton and the path.

 Return @c SVN_ERR_WC_NODE_KIND_CHANGE if @a path is both an unversioned
 directory and a file that is scheduled for deletion or in state deleted.

<pre> ### This function currently does double duty -- it is also
 ### responsible for "switching" a working copy directory over to a
 ### new copyfrom ancestry and scheduling it for addition.  Here is
 ### the old doc string from Ben, lightly edited to bring it
 ### up-to-date, explaining the TRUE, secret life of this function:</pre>

 Given a @a path within a working copy of type KIND, follow this algorithm:

    - if @a path is not under version control:
       - Place it under version control and schedule for addition;
         if @a copyfrom_url is non-NULL, use it and @a copyfrom_rev as
         'copyfrom' history

    - if @a path is already under version control:
          (This can only happen when a directory is copied, in which
           case ancestry must have been supplied as well.)

       -  Schedule the directory itself for addition with copyfrom history.
       -  Mark all its children with a 'copied' flag
       -  Rewrite all the URLs to what they will be after a commit.
       -  ### @todo Remove old wcprops too, see the '###' below.

<pre> ### I think possibly the "switchover" functionality should be
 ### broken out into a separate function, but its all intertwined in
 ### the code right now.  Ben, thoughts?  Hard?  Easy?  Mauve?</pre>

 ### Update: see "###" comment in svn_wc_add_repos_file3()'s doc
 string about this.

 @since New in 1.6.

</member>
        <member name="M:svn_wc_delete(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,=FUNC:svn_error_t*(System.Void*),System.Void*,=FUNC:System.Void(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_action_t,svn_node_kind_t,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_state_t,svn_wc_notify_state_t,System.Int32!System.Runtime.CompilerServices.IsLong),System.Void*,apr_pool_t*)">
 Similar to svn_wc_delete2(), but takes an @c svn_wc_notify_func_t instead.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_delete2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,=FUNC:svn_error_t*(System.Void*),System.Void*,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,apr_pool_t*)">
 Similar to svn_wc_delete3(), but with @a keep_local always set to FALSE.

 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_wc_delete3(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,=FUNC:svn_error_t*(System.Void*),System.Void*,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,System.Int32,apr_pool_t*)">
 Schedule @a path for deletion, it will be deleted from the repository on
 the next commit.  If @a path refers to a directory, then a recursive
 deletion will occur.  @a adm_access must hold a write lock for the parent
 of @a path.

 If @a keep_local is FALSE, this function immediately deletes all files,
 modified and unmodified, versioned and unversioned from the working copy.
 It also immediately deletes unversioned directories and directories that
 are scheduled to be added.  Only versioned directories will remain in the
 working copy, these get deleted by the update following the commit.

 If @a keep_local is TRUE, all files and directories will be kept in the
 working copy (and will become unversioned on the next commit).

 If @a cancel_func is non-NULL, call it with @a cancel_baton at
 various points during the operation.  If it returns an error
 (typically @c SVN_ERR_CANCELLED), return that error immediately.

 For each path marked for deletion, @a notify_func will be called with
 the @a notify_baton and that path. The @a notify_func callback may be
 @c NULL if notification is not needed.

 @since New in 1.5.

</member>
        <member name="M:svn_wc_copy(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,=FUNC:svn_error_t*(System.Void*),System.Void*,=FUNC:System.Void(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_action_t,svn_node_kind_t,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_state_t,svn_wc_notify_state_t,System.Int32!System.Runtime.CompilerServices.IsLong),System.Void*,apr_pool_t*)">
 Similar to svn_wc_copy2(), but takes an @c svn_wc_notify_func_t instead.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_copy2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,=FUNC:svn_error_t*(System.Void*),System.Void*,=FUNC:System.Void(System.Void*,svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,apr_pool_t*)">
@} 
 Copy @a src to @a dst_basename in @a dst_parent, and schedule
 @a dst_basename for addition to the repository, remembering the copy
 history.

 @a src must be a file or directory under version control; @a dst_parent
 must be a directory under version control in the same working copy;
 @a dst_basename will be the name of the copied item, and it must not
 exist already.

 If @a cancel_func is non-NULL, call it with @a cancel_baton at
 various points during the operation.  If it returns an error
 (typically @c SVN_ERR_CANCELLED), return that error immediately.

 For each file or directory copied, @a notify_func will be called
 with its path and the @a notify_baton.  @a notify_func may be @c NULL
 if you are not interested in this information.

 @par Important:
 This is a variant of svn_wc_add().  No changes will happen
 to the repository until a commit occurs.  This scheduling can be
 removed with svn_client_revert2().

 @since New in 1.2.

</member>
        <member name="M:svn_wc_status_set_repos_locks(System.Void*,apr_hash_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Associate @a locks, a hash table mapping <tt>const char*</tt>
 absolute repository paths to <tt>svn_lock_t</tt> objects, with a
 @a set_locks_baton returned by an earlier call to
 svn_wc_get_status_editor3().  @a repos_root is the repository root URL.
 Perform all allocations in @a pool.

 @note @a locks will not be copied, so it must be valid throughout the
 edit.  @a pool must also not be destroyed or cleared before the edit is
 finished.

 @since New in 1.2.

</member>
        <member name="M:svn_wc_get_status_editor(svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,System.Int32!System.Runtime.CompilerServices.IsLong*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_hash_t*,System.Int32,System.Int32,System.Int32,=FUNC:System.Void(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_status_t*),System.Void*,=FUNC:svn_error_t*(System.Void*),System.Void*,svn_wc_traversal_info_t*,apr_pool_t*)">
 Same as svn_wc_get_status_editor2(), but with @a set_locks_baton set
 to @c NULL, and taking a deprecated svn_wc_status_func_t argument.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_get_status_editor2(svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,System.Void**,System.Int32!System.Runtime.CompilerServices.IsLong*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_hash_t*,System.Int32,System.Int32,System.Int32,=FUNC:System.Void(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_status2_t*),System.Void*,=FUNC:svn_error_t*(System.Void*),System.Void*,svn_wc_traversal_info_t*,apr_pool_t*)">
 Like svn_wc_get_status_editor3(), but with @a ignore_patterns
 provided from the corresponding value in @a config, and @a recurse
 instead of @a depth.  If @a recurse is TRUE, behave as if for @c
 svn_depth_infinity; else if @a recurse is FALSE, behave as if for
 @c svn_depth_immediates.

 @since New in 1.2.
 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_wc_get_status_editor3(svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,System.Void**,System.Int32!System.Runtime.CompilerServices.IsLong*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_depth_t,System.Int32,System.Int32,apr_array_header_t*,=FUNC:System.Void(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_status2_t*),System.Void*,=FUNC:svn_error_t*(System.Void*),System.Void*,svn_wc_traversal_info_t*,apr_pool_t*)">
 Same as svn_wc_get_status_editor4(), but using @c svn_wc_status_func2_t
 instead of @c svn_wc_status_func3_t.

 @since New in 1.5.
 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_wc_get_status_editor4(svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,System.Void**,System.Int32!System.Runtime.CompilerServices.IsLong*,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_depth_t,System.Int32,System.Int32,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,=FUNC:svn_error_t*(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_status2_t*,apr_pool_t*),System.Void*,=FUNC:svn_error_t*(System.Void*),System.Void*,svn_wc_traversal_info_t*,apr_pool_t*)">
 Set @a *editor and @a *edit_baton to an editor that generates @c
 svn_wc_status2_t structures and sends them through @a status_func /
 @a status_baton.  @a anchor is an access baton, with a tree lock,
 for the local path to the working copy which will be used as the
 root of our editor.  If @a target is not empty, it represents an
 entry in the @a anchor path which is the subject of the editor
 drive (otherwise, the @a anchor is the subject).

 If @a set_locks_baton is non-@c NULL, it will be set to a baton that can
 be used in a call to the svn_wc_status_set_repos_locks() function.

 Callers drive this editor to describe working copy out-of-dateness
 with respect to the repository.  If this information is not
 available or not desired, callers should simply call the
 close_edit() function of the @a editor vtable.

 If the editor driver calls @a editor's set_target_revision() vtable
 function, then when the edit drive is completed, @a *edit_revision
 will contain the revision delivered via that interface.

 Assuming the target is a directory, then:

   - If @a get_all is FALSE, then only locally-modified entries will be
     returned.  If TRUE, then all entries will be returned.

   - If @a depth is @c svn_depth_empty, a status structure will
     be returned for the target only; if @c svn_depth_files, for the
     target and its immediate file children; if
     @c svn_depth_immediates, for the target and its immediate
     children; if @c svn_depth_infinity, for the target and
     everything underneath it, fully recursively.

     If @a depth is @c svn_depth_unknown, take depths from the
     working copy and behave as above in each directory's case.

     If the given @a depth is incompatible with the depth found in a
     working copy directory, the found depth always governs.

 If @a no_ignore is set, statuses that would typically be ignored
 will instead be reported.

 @a ignore_patterns is an array of file patterns matching
 unversioned files to ignore for the purposes of status reporting,
 or @c NULL if the default set of ignorable file patterns should be used.

 If @a cancel_func is non-NULL, call it with @a cancel_baton while building
 the @a statushash to determine if the client has cancelled the operation.

 If @a traversal_info is non-NULL, then record pre-update traversal
 state in it.  (Caller should obtain @a traversal_info from
 svn_wc_init_traversal_info().)

 Allocate the editor itself in @a pool, but the editor does temporary
 allocations in a subpool of @a pool.

 @since New in 1.6.

</member>
        <member name="D:svn_wc_status_func_t">
  Same as svn_wc_status_func2_t(), but for older svn_wc_status_t structures.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="D:svn_wc_status_func2_t">
 Same as svn_wc_status_func3_t(), but without a provided pool or
 the ability to propagate errors.

 @since New in 1.2.
 @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="D:svn_wc_status_func3_t">
 A callback for reporting a @a status about @a path.

 @a baton is a closure object; it should be provided by the
 implementation, and passed by the caller.

 @a pool will be cleared between invocations to the callback.

 @since New in 1.6.

</member>
        <member name="M:svn_wc_status(svn_wc_status_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_pool_t*)">
  Same as svn_wc_status2(), but for older svn_wc_status_t structures.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_status2(svn_wc_status2_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_pool_t*)">
 Fill @a *status for @a path, allocating in @a pool.
 @a adm_access must be an access baton for @a path.

 Here are some things to note about the returned structure.  A quick
 examination of the @c status-&gt;text_status after a successful return of
 this function can reveal the following things:

    - @c svn_wc_status_none : @a path is not versioned, and is either not
                              present on disk, or is ignored by svn's
                              default ignore regular expressions or the
                              svn:ignore property setting for @a path's
                              parent directory.

    - @c svn_wc_status_missing : @a path is versioned, but is missing from
                                 the working copy.

    - @c svn_wc_status_unversioned : @a path is not versioned, but is
                                     present on disk and not being
                                     ignored (see above).

 The other available results for the @c text_status field are more
 straightforward in their meanings.  See the comments on the
 @c svn_wc_status_kind structure for some hints.

 @since New in 1.2.

</member>
        <member name="M:svn_wc_dup_status(svn_wc_status_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Same as svn_wc_dup_status2(), but for older svn_wc_status_t structures.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_dup_status2(svn_wc_status2_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return a deep copy of the @a orig_stat status structure, allocated
 in @a pool.

 @since New in 1.2.

</member>
        <member name="F:svn_wc_status_t.switched">
a file or directory can be 'switched' if the switch command has been
   * used.

</member>
        <member name="F:svn_wc_status_t.copied">
a file or directory can be 'copied' if it's scheduled for
   * addition-with-history (or part of a subtree that is scheduled as such.).

</member>
        <member name="F:svn_wc_status_t.locked">
a directory can be 'locked' if a working copy update was interrupted. 
</member>
        <member name="F:svn_wc_status_t.entry">
Can be @c NULL if not under version control. 
</member>
        <member name="T:svn_wc_status_t">
 Same as @c svn_wc_status2_t, but without the svn_lock_t 'repos_lock' field.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="F:svn_wc_status2_t.file_external">
If the item is a file that was added to the working copy with an
   * svn:externals; if file_external is TRUE, then switched is always
   * FALSE.
   * @since New in 1.6

</member>
        <member name="F:svn_wc_status2_t.tree_conflict">
@} 
Non-NULL if the entry is the victim of a tree conflict.
   * @since New in 1.6

</member>
        <member name="F:svn_wc_status2_t.ood_last_cmt_author">
Set to the user name of the youngest commit, or @c NULL if not
   * out of date or non-existent.  Because a non-existent @c
   * svn:author property has the same behavior as an out-of-date
   * working copy, examine @c ood_last_cmt_rev to determine whether
   * the working copy is out of date.
   * @since New in 1.3

</member>
        <member name="F:svn_wc_status2_t.ood_kind">
Set to the node kind of the youngest commit, or @c svn_node_none
   * if not out of date.
   * @since New in 1.3

</member>
        <member name="F:svn_wc_status2_t.ood_last_cmt_date">
Set to the most recent commit date, or @c 0 if not out of date.
   * @since New in 1.3

</member>
        <member name="F:svn_wc_status2_t.ood_last_cmt_rev">
 @defgroup svn_wc_status_ood WC out-of-date info from the repository
 @{

 When the working copy item is out-of-date compared to the
 repository, the following fields represent the state of the
 youngest revision of the item in the repository.  If the working
 copy is not out of date, the fields are initialized as described
 below.

Set to the youngest committed revision, or @c SVN_INVALID_REVNUM
   * if not out of date.
   * @since New in 1.3

</member>
        <member name="F:svn_wc_status2_t.url">
Set to the URI (actual or expected) of the item.
   * @since New in 1.3

</member>
        <member name="F:svn_wc_status2_t.repos_lock">
The entry's lock in the repository, if any. 
</member>
        <member name="F:svn_wc_status2_t.switched">
a file or directory can be 'switched' if the switch command has been
   * used.  If this is TRUE, then file_external will be FALSE.

</member>
        <member name="F:svn_wc_status2_t.copied">
a file or directory can be 'copied' if it's scheduled for
   * addition-with-history (or part of a subtree that is scheduled as such.).

</member>
        <member name="F:svn_wc_status2_t.locked">
a directory can be 'locked' if a working copy update was interrupted. 
</member>
        <member name="F:svn_wc_status2_t.entry">
Can be @c NULL if not under version control. 
</member>
        <member name="T:svn_wc_status2_t">
 Structure for holding the "status" of a working copy item.

 The item's entry data is in @a entry, augmented and possibly shadowed
 by the other fields.  @a entry is @c NULL if this item is not under
 version control.

 @note Fields may be added to the end of this structure in future
 versions.  Therefore, to preserve binary compatibility, users
 should not directly allocate structures of this type.

 @since New in 1.2.

</member>
        <member name="T:svn_wc_status_kind">
 @defgroup svn_wc_status Working copy status.
 @{

 We have two functions for getting working copy status: one function
 for getting the status of exactly one thing, and another for
 getting the statuses of (potentially) multiple things.

 The concept of depth, as explained in the documentation for
 svn_depth_t, may be useful in understanding this.  Suppose we're
 getting the status of directory D:

 To offer all three levels, we could have one unified function,
 taking a `depth' parameter.  Unfortunately, because this function
 would have to handle multiple return values as well as the single
 return value case, getting the status of just one entity would
 become cumbersome: you'd have to roll through a hash to find one
 lone status.

 So we have svn_wc_status() for depth-empty (just D itself), and
 svn_wc_get_status_editor() for depth-immediates and depth-infinity,
 since the latter two involve multiple return values.

 @note The status structures may contain a @c NULL -&gt;entry field.
 This indicates an item that is not versioned in the working copy.

The type of status for the working copy. 

The status of the entries text. 

The status of the entries properties. 

The entry's text status in the repository. 

The entry's property status in the repository. 

The actual status of the text compared to the pristine base of the
   * file. This value isn't masked by other working copy statuses.
   * @c pristine_text_status is @c svn_wc_status_none if this value was
   * not calculated during the status walk.
   * @since New in 1.6


The actual status of the properties compared to the pristine base of
   * the node. This value isn't masked by other working copy statuses.
   * @c pristine_prop_status is @c svn_wc_status_none if this value was
   * not calculated during the status walk.
   * @since New in 1.6


The status of the entries text. 

The status of the entries properties. 

The entry's text status in the repository. 

The entry's property status in the repository. 
</member>
        <member name="F:svn_wc_status_incomplete">
a directory doesn't contain a complete entries list 
</member>
        <member name="F:svn_wc_status_external">
an unversioned directory path populated by an svn:externals
        property; this status is not used for file externals 
</member>
        <member name="F:svn_wc_status_obstructed">
an unversioned resource is in the way of the versioned resource 
</member>
        <member name="F:svn_wc_status_ignored">
is unversioned but configured to be ignored 
</member>
        <member name="F:svn_wc_status_conflicted">
local mods received conflicting repos mods 
</member>
        <member name="F:svn_wc_status_merged">
local mods received repos mods 
</member>
        <member name="F:svn_wc_status_modified">
text or props have been modified 
</member>
        <member name="F:svn_wc_status_replaced">
was deleted and then re-added 
</member>
        <member name="F:svn_wc_status_deleted">
scheduled for deletion 
</member>
        <member name="F:svn_wc_status_missing">
under v.c., but is missing 
</member>
        <member name="F:svn_wc_status_added">
is scheduled for addition 
</member>
        <member name="F:svn_wc_status_normal">
exists, but uninteresting 
</member>
        <member name="F:svn_wc_status_unversioned">
is not a versioned thing in this wc 
</member>
        <member name="F:svn_wc_status_none">
does not exist 
</member>
        <member name="M:svn_wc_maybe_set_repos_root(svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set the repository root URL of @a path to @a repos, if possible.
 *
 * @a adm_access must contain @a path and be write-locked, if @a path
 * is versioned.  Return no error if path is missing or unversioned.
 * Use @a pool for temporary allocations.
 *
 * @note In some circumstances, the repository root can't be set
 * without making the working copy corrupt.  In such cases, this
 * function just returns no error, without modifying the @a path entry.
 *
 * @note This function exists to make it possible to try to set the repository
 * root in old working copies; new working copies normally get this set at
 * creation time.
 *
 * @since New in 1.3.

</member>
        <member name="M:svn_wc_ensure_adm(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_pool_t*)">
 Similar to svn_wc_ensure_adm2(), but with @a repos set to @c NULL.

 @deprecated Provided for backwards compatibility with the 1.2 API.

</member>
        <member name="M:svn_wc_ensure_adm2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_pool_t*)">
 Similar to svn_wc_ensure_adm3(), but with @a depth set to
 @c svn_depth_infinity.

 @deprecated Provided for backwards compatibility with the 1.4 API.

 @since New in 1.3.

</member>
        <member name="M:svn_wc_ensure_adm3(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,svn_depth_t,apr_pool_t*)">
Ensure that an administrative area exists for @a path, so that @a
 * path is a working copy subdir based on @a url at @a revision, with
 * depth @a depth, and with repository UUID @a uuid and repository
 * root URL @a repos.
 *
 * @a depth must be a definite depth, it cannot be @c svn_depth_unknown.
 * @a uuid and @a repos may be @c NULL.  If non-@c NULL, @a repos must
 * be a prefix of @a url.
 *
 * If the administrative area does not exist, then create it and
 * initialize it to an unlocked state.
 *
 * If the administrative area already exists then the given @a url
 * must match the URL in the administrative area and the given
 * @a revision must match the BASE of the working copy dir unless
 * the admin directory is scheduled for deletion or the
 * SVN_ERR_WC_OBSTRUCTED_UPDATE error will be returned.
 *
 * Do not ensure existence of @a path itself; if @a path does not
 * exist, return error.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_wc_mark_missing_deleted(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_pool_t*)">
Mark missing @a path as 'deleted' in its @a parent's list of entries.
 *
 * Return @c SVN_ERR_WC_PATH_FOUND if @a path isn't actually missing.

</member>
        <member name="M:svn_wc_walk_entries(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,svn_wc_entry_callbacks_t!System.Runtime.CompilerServices.IsConst*,System.Void*,System.Int32,apr_pool_t*)">
 Similar to svn_wc_walk_entries2(), but without cancellation support.

 @deprecated Provided for backward compatibility with the 1.0 API.

</member>
        <member name="M:svn_wc_walk_entries2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,svn_wc_entry_callbacks_t!System.Runtime.CompilerServices.IsConst*,System.Void*,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
 Similar to svn_wc_walk_entries3(), but without cancellation support
 or error handling from @a walk_callbacks, and with @a depth always
 set to @c svn_depth_infinity.

 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_wc_walk_entries3(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,svn_wc_entry_callbacks2_t!System.Runtime.CompilerServices.IsConst*,System.Void*,svn_depth_t,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
 A generic entry-walker.

 Do a potentially recursive depth-first entry-walk beginning on
 @a path, which can be a file or dir.  Call callbacks in
 @a walk_callbacks, passing @a walk_baton to each.  Use @a pool for
 looping, recursion, and to allocate all entries returned.
 @a adm_access must be an access baton for @a path.

 If @a depth is @c svn_depth_empty, invoke the callbacks on @a path
 and return without recursing further.  If @c svn_depth_files, do
 the same and invoke the callbacks on file children (if any) of
 @a path, then return.  If @c svn_depth_immediates, do the preceding
 but also invoke callbacks on immediate subdirectories, then return.
 If @c svn_depth_infinity, recurse fully starting from @a path.

 If @a cancel_func is non-NULL, call it with @a cancel_baton to determine
 if the client has cancelled the operation.

 Like our other entries interfaces, entries that are in a 'excluded',
 'deleted' or 'absent' state (and not scheduled for re-addition) are not
 discovered, unless @a show_hidden is TRUE. Excluded entries are those with
 their depth set to @c svn_depth_exclude.

 When a new directory is entered, @c SVN_WC_ENTRY_THIS_DIR will always
 be returned first.

 @note Callers should be aware that each directory will be
 returned *twice*:  first as an entry within its parent, and
 subsequently as the '.' entry within itself.  The two calls can be
 distinguished by looking for @c SVN_WC_ENTRY_THIS_DIR in the 'name'
 field of the entry.

 @since New in 1.5.

</member>
        <member name="F:svn_wc_entry_callbacks_t.found_entry">
An @a entry was found at @a path. 
</member>
        <member name="T:svn_wc_entry_callbacks_t">
@deprecated Provided for backward compatibility with the 1.4 API. 
</member>
        <member name="F:svn_wc_entry_callbacks2_t.handle_error">
Handle the error @a err encountered while processing @a path.
   * Wrap or squelch @a err as desired, and return an @c svn_error_t
   * *, or @c SVN_NO_ERROR.

</member>
        <member name="F:svn_wc_entry_callbacks2_t.found_entry">
An @a entry was found at @a path. 
</member>
        <member name="T:svn_wc_entry_callbacks2_t">
A callback vtable invoked by the generic entry-walker function.
 * @since New in 1.5.

</member>
        <member name="M:svn_wc_get_ancestry(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte**,System.Int32!System.Runtime.CompilerServices.IsLong*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_pool_t*)">
Set @a *url and @a *rev to the ancestor URL and revision for @a path,
 * allocating in @a pool.  @a adm_access must be an access baton for @a path.
 *
 * If @a url or @a rev is NULL, then ignore it (just don't return the
 * corresponding information).

</member>
        <member name="M:svn_wc_conflicted_p(System.Int32*,System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_entry_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Given a @a dir_path under version control, decide if one of its entries
 * (@a entry) is in a state of conflict; return the answers in @a
 * text_conflicted_p and @a prop_conflicted_p. These pointers must not be
 * null.
 *
 * If the @a entry mentions that text conflict files (with suffix .mine,
 * .theirs, etc.) exist, but they cannot be found, assume the text conflict
 * has been resolved by the user and return FALSE in @a *text_conflicted_p.
 *
 * Similarly, if the @a entry mentions that a property conflicts file (.prej
 * suffix) exists, but it cannot be found, assume the property conflicts
 * have been resolved by the user and return FALSE in @a *prop_conflicted_p.
 *
 * The @a entry is not updated.
 *
 * @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="M:svn_wc_conflicted_p2(System.Int32*,System.Int32*,System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_pool_t*)">
Given a @a path in a dir under version control, decide if it is in a
 * state of conflict; return the answers in @a *text_conflicted_p, @a
 * *prop_conflicted_p, and @a *tree_conflicted_p.  If one or two of the
 * answers are uninteresting, simply pass @c NULL pointers for those.
 *
 * If @a path is unversioned or does not exist, @a *text_conflicted_p and
 * @a *prop_conflicted_p will be @c FALSE if non-NULL.
 *
 * @a adm_access is the admin access baton of the parent directory.
 *
 * If the @a path has corresponding text conflict files (with suffix .mine,
 * .theirs, etc.) that cannot be found, assume that the text conflict has
 * been resolved by the user and return @c FALSE in @a *text_conflicted_p.
 *
 * Similarly, if a property conflicts file (.prej suffix) is said to exist,
 * but it cannot be found, assume that the property conflicts have been
 * resolved by the user and return @c FALSE in @a *prop_conflicted_p.
 *
 * @a *tree_conflicted_p can't be auto-resolved in this fashion.  An
 * explicit `resolved' is needed.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_wc_entry_dup(svn_wc_entry_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Return a duplicate of @a entry, allocated in @a pool.  No part of the new
 * entry will be shared with @a entry.

</member>
        <member name="M:svn_wc_entries_read(apr_hash_t**,svn_wc_adm_access_t*,System.Int32,apr_pool_t*)">
Parse the `entries' file for @a adm_access and return a hash @a entries,
 * whose keys are (<tt>const char *</tt>) entry names and values are
 * (<tt>svn_wc_entry_t *</tt>).  The hash @a entries, and its keys and
 * values, are allocated from the pool used to open the @a adm_access
 * baton (that's how the entries caching works).  @a pool is used for
 * transient allocations.
 *
 * Entries that are in a 'excluded', 'deleted' or 'absent' state (and not
 * scheduled for re-addition) are not returned in the hash, unless
 * @a show_hidden is TRUE. Excluded entries are those with their depth set to
 * @c svn_depth_exclude.
 *
 * @par Important:
 * The @a entries hash is the entries cache in @a adm_access
 * and so usually the hash itself, the keys and the values should be treated
 * as read-only.  If any of these are modified then it is the caller's
 * responsibility to ensure that the entries file on disk is updated.  Treat
 * the hash values as type (<tt>const svn_wc_entry_t *</tt>) if you wish to
 * avoid accidental modification.  Modifying the schedule member is a
 * particularly bad idea, as the entries writing process relies on having
 * access to the original schedule.  Use a duplicate entry to modify the
 * schedule.
 *
 * @par Important:
 * Only the entry structures representing files and
 * @c SVN_WC_ENTRY_THIS_DIR contain complete information.  The entry
 * structures representing subdirs have only the `kind' and `state'
 * fields filled in.  If you want info on a subdir, you must use this
 * routine to open its @a path and read the @c SVN_WC_ENTRY_THIS_DIR
 * structure, or call svn_wc_entry() on its @a path.

</member>
        <member name="M:svn_wc_entry(svn_wc_entry_t!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,System.Int32,apr_pool_t*)">
How an entries file's owner dir is named in the entries file. 
Set @a *entry to an entry for @a path, allocated in the access baton pool.
 * If @a show_hidden is TRUE, return the entry even if it's in 'excluded',
 * 'deleted' or 'absent' state. Excluded entries are those with their depth
 * set to @c svn_depth_exclude. If @a path is not under revision control, or
 * if entry is hidden, not scheduled for re-addition, and @a show_hidden is @c
 * FALSE, then set @a *entry to @c NULL.
 *
 * @a *entry should not be modified, since doing so modifies the entries
 * cache in @a adm_access without changing the entries file on disk.
 *
 * If @a path is not a directory then @a adm_access must be an access baton
 * for the parent directory of @a path.  To avoid needing to know whether
 * @a path is a directory or not, if @a path is a directory @a adm_access
 * can still be an access baton for the parent of @a path so long as the
 * access baton for @a path itself is in the same access baton set.
 *
 * @a path can be relative or absolute but must share the same base used
 * to open @a adm_access.
 *
 * Note that it is possible for @a path to be absent from disk but still
 * under revision control; and conversely, it is possible for @a path to
 * be present, but not under revision control.
 *
 * Use @a pool only for local processing.

</member>
        <member name="F:svn_wc_entry_t.file_external_rev">
The entry is a intra-repository file external and this is the
   * operative revision number specified in the externals definition.
   * This field is only valid when the file_external_path field is
   * non-NULL.  The only permissible values are
   * svn_opt_revision_unspecified if the entry is not an external,
   * svn_opt_revision_head if the external revision is unspecified or
   * specified with -r HEAD or svn_opt_revision_number for a specific
   * revision number.
   *
   * @since New in 1.6. 
</member>
        <member name="F:svn_wc_entry_t.file_external_peg_rev">
The entry is a intra-repository file external and this is the
   * peg revision number specified in the externals definition.  This
   * field is only valid when the file_external_path field is
   * non-NULL.  The only permissible values are
   * svn_opt_revision_unspecified if the entry is not an external,
   * svn_opt_revision_head if the external revision is unspecified or
   * specified with -r HEAD or svn_opt_revision_number for a specific
   * revision number.
   *
   * @since New in 1.6. 
</member>
        <member name="F:svn_wc_entry_t.file_external_path">
The entry is a intra-repository file external and this is the
   * repository root relative path to the file specified in the
   * externals definition, otherwise NULL if the entry is not a file
   * external.
   *
   * @since New in 1.6. 
</member>
        <member name="F:svn_wc_entry_t.tree_conflict_data">
Serialized data for all of the tree conflicts detected in this_dir.
   *
   * @since New in 1.6. 
</member>
        <member name="F:svn_wc_entry_t.depth">
The depth of this entry.
   *
   * ### It's a bit annoying that we only use this on this_dir
   * ### entries, yet it will exist (with value svn_depth_infinity) on
   * ### all entries.  Maybe some future extensibility would make this
   * ### field meaningful on entries besides this_dir.
   *
   * @since New in 1.5. 
</member>
        <member name="F:svn_wc_entry_t.keep_local">
Whether a local copy of this entry should be kept in the working copy
   * after a deletion has been committed,  Only valid for the this-dir entry
   * when it is scheduled for deletion.
   *
   * @since New in 1.5. 
</member>
        <member name="F:svn_wc_entry_t.working_size">
Size of the file after being translated into local
   * representation, or @c SVN_WC_ENTRY_WORKING_SIZE_UNKNOWN if
   * unknown.
   *
   * @since New in 1.5.

</member>
        <member name="F:svn_wc_entry_t.changelist">
which changelist this item is part of, or NULL if not part of any.
   * @since New in 1.5.

</member>
        <member name="F:svn_wc_entry_t.present_props">
Cached property existence for this entry.
   * This is a space-separated list of property names.  If a name exists in
   * @c cachable_props but not in this list, this entry does not have that
   * property.  If a name exists in both lists, the property is present on this
   * entry.
   *
   * @since New in 1.4.
   * @deprecated This value will always be "" in version 1.7 and later. 
</member>
        <member name="F:svn_wc_entry_t.cachable_props">
A space-separated list of all properties whose presence/absence is cached
   * in this entry.
   *
   * @see @c present_props.
   *
   * @since New in 1.4.
   * @deprecated This value will always be "" in version 1.7 and later. 
</member>
        <member name="F:svn_wc_entry_t.has_prop_mods">
Whether this entry has property modifications.
   *
   * @note For working copies in older formats, this flag is not valid.
   *
   * @see svn_wc_props_modified_p().
   *
   * @since New in 1.4. 
</member>
        <member name="F:svn_wc_entry_t.has_props">
Whether this entry has any working properties.
   * False if this information is not stored in the entry.
   *
   * @since New in 1.4. 
</member>
        <member name="F:svn_wc_entry_t.lock_creation_date">
Lock creation date or 0 if not locked in this WC
   * @since New in 1.2.

</member>
        <member name="F:svn_wc_entry_t.lock_comment">
lock comment or NULL if not locked in this WC or no comment
   * @since New in 1.2.

</member>
        <member name="F:svn_wc_entry_t.lock_owner">
lock owner, or NULL if not locked in this WC
   * @since New in 1.2.

</member>
        <member name="F:svn_wc_entry_t.lock_token">
lock token or NULL if path not locked in this WC
   * @since New in 1.2.

</member>
        <member name="F:svn_wc_entry_t.cmt_author">
last commit author of this item 
</member>
        <member name="F:svn_wc_entry_t.cmt_date">
last date this was changed 
</member>
        <member name="F:svn_wc_entry_t.cmt_rev">
last revision this was changed 
</member>
        <member name="F:svn_wc_entry_t.checksum">
Hex MD5 checksum for the untranslated text base file,
   * can be @c NULL for backwards compatibility.

</member>
        <member name="F:svn_wc_entry_t.prop_time">
last up-to-date time for properties (0 means no information available)
   *
   * @deprecated This value will always be 0 in version 1.4 and later.

</member>
        <member name="F:svn_wc_entry_t.text_time">
last up-to-date time for text contents (0 means no information available)

</member>
        <member name="F:svn_wc_entry_t.prejfile">
property reject file. A file basename, relative to the user's
   * directory that the THIS_DIR entry refers to. 
</member>
        <member name="F:svn_wc_entry_t.conflict_wrk">
working version of conflicted file. A file basename, relative to the
   * user's directory that the THIS_DIR entry refers to. 
</member>
        <member name="F:svn_wc_entry_t.conflict_new">
new version of conflicted file. A file basename, relative to the
   * user's directory that the THIS_DIR entry refers to. 
</member>
        <member name="F:svn_wc_entry_t.conflict_old">
old version of conflicted file. A file basename, relative to the
   * user's directory that the THIS_DIR entry refers to. 
</member>
        <member name="F:svn_wc_entry_t.copyfrom_rev">
copyfrom revision 
</member>
        <member name="F:svn_wc_entry_t.copyfrom_url">
copyfrom location 
</member>
        <member name="F:svn_wc_entry_t.incomplete">
for THIS_DIR entry, implies whole entries file is incomplete 
</member>
        <member name="F:svn_wc_entry_t.absent">
absent -- we know an entry of this name exists, but that's all
      (usually this happens because of authz restrictions)  
</member>
        <member name="F:svn_wc_entry_t.deleted">
The directory containing this entry had a versioned child of this
   * name, but this entry represents a different revision or a switched
   * path at which no item exists in the repository. This typically
   * arises from committing or updating to a deletion of this entry
   * without committing or updating the parent directory.
   *
   * The schedule can be 'normal' or 'add'. 
</member>
        <member name="F:svn_wc_entry_t.copied">
in a copied state (possibly because the entry is a child of a
   *  path that is @c svn_wc_schedule_add or @c svn_wc_schedule_replace,
   *  when the entry itself is @c svn_wc_schedule_normal).
   *  COPIED is true for nodes under a directory that was copied, but
   *  COPYFROM_URL is null there. They are both set for the root
   *  destination of the copy.

</member>
        <member name="F:svn_wc_entry_t.schedule">
scheduling (add, delete, replace ...) 
</member>
        <member name="F:svn_wc_entry_t.kind">
node kind (file, dir, ...) 
</member>
        <member name="F:svn_wc_entry_t.uuid">
repository uuid 
</member>
        <member name="F:svn_wc_entry_t.repos">
canonical repository URL or NULL if not known 
</member>
        <member name="F:svn_wc_entry_t.url">
url in repository 
</member>
        <member name="F:svn_wc_entry_t.revision">
base revision 
</member>
        <member name="F:svn_wc_entry_t.name">
entry's name 
</member>
        <member name="T:svn_wc_entry_t">
 Values for the working_size field in svn_wc_entry_t
 when it isn't set to the actual size value of the unchanged
 working file.

 @defgroup svn_wc_entry_working_size_constants Working size constants

 @{

The value of the working size is unknown (hasn't been
 *  calculated and stored in the past for whatever reason).
 *
 * @since New in 1.5

@} 
A working copy entry -- that is, revision control information about
 * one versioned entity.

</member>
        <member name="T:svn_wc_schedule_t">
Administrative subdir.
 *
 * Ideally, this would be completely private to wc internals (in fact,
 * it used to be that adm_subdir() in adm_files.c was the only function
 * who knew the adm subdir's name).  However, import wants to protect
 * against importing administrative subdirs, so now the name is a
 * matter of public record.
 *
 * @deprecated Provided for backward compatibility with the 1.2 API.

The schedule states an entry can be in. 
</member>
        <member name="F:svn_wc_schedule_replace">
Slated for replacement (delete + add) 
</member>
        <member name="F:svn_wc_schedule_delete">
Slated for deletion 
</member>
        <member name="F:svn_wc_schedule_add">
Slated for addition 
</member>
        <member name="F:svn_wc_schedule_normal">
Nothing special here 
</member>
        <member name="M:svn_wc_props_modified_p(System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_pool_t*)">
Set @a *modified_p to non-zero if @a path's properties are modified
 * with regard to the base revision, else set @a modified_p to zero.
 * @a adm_access must be an access baton for @a path.

</member>
        <member name="M:svn_wc_text_modified_p(System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,svn_wc_adm_access_t*,apr_pool_t*)">
Set @a *modified_p to non-zero if @a filename's text is modified
 * with regard to the base revision, else set @a *modified_p to zero.
 * @a filename is a path to the file, not just a basename. @a adm_access
 * must be an access baton for @a filename.
 *
 * If @a force_comparison is @c TRUE, this function will not allow
 * early return mechanisms that avoid actual content comparison.
 * Instead, if there is a text base, a full byte-by-byte comparison
 * will be done, and the entry checksum verified as well.  (This means
 * that if the text base is much longer than the working file, every
 * byte of the text base will still be examined.)
 *
 * If @a filename does not exist, consider it unmodified.  If it exists
 * but is not under revision control (not even scheduled for
 * addition), return the error @c SVN_ERR_ENTRY_NOT_FOUND.
 *
 * If @a filename is unmodified but has a timestamp variation then this
 * function may "repair" @a filename's text-time by setting it to
 * @a filename's last modification time.

</member>
        <member name="M:svn_wc_has_binary_prop(System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_pool_t*)">
Set @a *has_binary_prop to @c TRUE iff @a path has been marked
 * with a property indicating that it is non-text (in other words, binary).
 * @a adm_access is an access baton set that contains @a path.

</member>
        <member name="M:svn_wc_check_wc(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32*,apr_pool_t*)">
Set @a *wc_format to @a path's working copy format version number if
 * @a path is a valid working copy directory, else set it to 0.
 * Return error @c APR_ENOENT if @a path does not exist at all.

</member>
        <member name="F:svn_wc_diff_callbacks_t.props_changed">
Similar to @c dir_props_changed in @c svn_wc_diff_callbacks2_t, but this
   * function is called for files as well as directories. 
</member>
        <member name="F:svn_wc_diff_callbacks_t.dir_deleted">
The same as @c dir_deleted in @c svn_wc_diff_callbacks2_t. 
</member>
        <member name="F:svn_wc_diff_callbacks_t.dir_added">
The same as @c dir_added in @c svn_wc_diff_callbacks2_t. 
</member>
        <member name="F:svn_wc_diff_callbacks_t.file_deleted">
Similar to @c file_deleted in @c svn_wc_diff_callbacks2_t, but without
   * the properties. 
</member>
        <member name="F:svn_wc_diff_callbacks_t.file_added">
Similar to @c file_added in @c svn_wc_diff_callbacks2_t, but without
   * property change information.  @a *state applies to the file contents. 
</member>
        <member name="F:svn_wc_diff_callbacks_t.file_changed">
Similar to @c file_changed in @c svn_wc_diff_callbacks2_t, but without
   * property change information.  @a tmpfile2 is never NULL. @a state applies
   * to the file contents. 
</member>
        <member name="T:svn_wc_diff_callbacks_t">
 Similar to @c svn_wc_diff_callbacks2_t, but with file additions/content
 changes and property changes split into different functions.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="F:svn_wc_diff_callbacks2_t.dir_props_changed">
The same as @c dir_props_changed in @c svn_wc_diff_callbacks3_t. 
</member>
        <member name="F:svn_wc_diff_callbacks2_t.dir_deleted">
The same as @c dir_deleted in @c svn_wc_diff_callbacks3_t. 
</member>
        <member name="F:svn_wc_diff_callbacks2_t.dir_added">
The same as @c dir_added in @c svn_wc_diff_callbacks3_t. 
</member>
        <member name="F:svn_wc_diff_callbacks2_t.file_deleted">
The same as @c file_deleted in @c svn_wc_diff_callbacks3_t. 
</member>
        <member name="F:svn_wc_diff_callbacks2_t.file_added">
The same as @c file_added in @c svn_wc_diff_callbacks3_t. 
</member>
        <member name="F:svn_wc_diff_callbacks2_t.file_changed">
The same as @c file_changed in @c svn_wc_diff_callbacks3_t. 
</member>
        <member name="T:svn_wc_diff_callbacks2_t">
 Similar to @c svn_wc_diff_callbacks3_t, but without the dir_opened()
 function, and without the 'tree_conflicted' argument to the functions.

 @deprecated Provided for backward compatibility with the 1.2 API.

</member>
        <member name="F:svn_wc_diff_callbacks3_t.dir_closed">
A directory @a path has been closed.

</member>
        <member name="F:svn_wc_diff_callbacks3_t.dir_opened">
 A directory @a path has been opened.  @a rev is the revision that the
 directory came from.

 This function is called for @a path before any of the callbacks are
 called for a child of @a path.

</member>
        <member name="F:svn_wc_diff_callbacks3_t.dir_props_changed">
 A list of property changes (@a propchanges) was applied to the
 directory @a path.

 The array is a list of (@c svn_prop_t) structures.

 The original list of properties is provided in @a original_props,
 which is a hash of @c svn_string_t values, keyed on the property
 name.

</member>
        <member name="F:svn_wc_diff_callbacks3_t.dir_deleted">
A directory @a path was deleted.

</member>
        <member name="F:svn_wc_diff_callbacks3_t.dir_added">
A directory @a path was added.  @a rev is the revision that the
directory came from.

</member>
        <member name="F:svn_wc_diff_callbacks3_t.file_deleted">
 A file @a path was deleted.  The [loss of] contents can be seen by
 comparing @a tmpfile1 and @a tmpfile2.  @a originalprops provides
 the properties of the file.
 ### Some existing callers include WC "entry props" in @a originalprops.

 If known, the @c svn:mime-type value of each file is passed into
 @a mimetype1 and @a mimetype2;  either or both of the values can
 be NULL.  The implementor can use this information to decide if
 (or how) to generate differences.

</member>
        <member name="F:svn_wc_diff_callbacks3_t.file_added">
 A file @a path was added.  The contents can be seen by comparing
 @a tmpfile1 and @a tmpfile2, which represent @a rev1 and @a rev2
 of the file, respectively.  (If either file is empty, the rev
 will be 0.)

 If known, the @c svn:mime-type value of each file is passed into
 @a mimetype1 and @a mimetype2;  either or both of the values can
 be NULL.  The implementor can use this information to decide if
 (or how) to generate differences.

 @a propchanges is an array of (@c svn_prop_t) structures.  If it contains
 any elements, the original list of properties is provided in
 @a originalprops, which is a hash of @c svn_string_t values, keyed on the
 property name.

</member>
        <member name="F:svn_wc_diff_callbacks3_t.file_changed">
 A file @a path has changed.  If @a tmpfile2 is non-NULL, the
 contents have changed and those changes can be seen by comparing
 @a tmpfile1 and @a tmpfile2, which represent @a rev1 and @a rev2 of
 the file, respectively.

 If known, the @c svn:mime-type value of each file is passed into
 @a mimetype1 and @a mimetype2;  either or both of the values can
 be NULL.  The implementor can use this information to decide if
 (or how) to generate differences.

 @a propchanges is an array of (@c svn_prop_t) structures. If it contains
 any elements, the original list of properties is provided in
 @a originalprops, which is a hash of @c svn_string_t values, keyed on the
 property name.


</member>
        <member name="T:svn_wc_diff_callbacks3_t">
@} 
 A callback vtable invoked by our diff-editors, as they receive
 diffs from the server.  'svn diff' and 'svn merge' both implement
 their own versions of this table.

 Common parameters:

 @a adm_access will be an access baton for the directory containing
 @a path, or @c NULL if the diff editor is not using access batons.

 If @a state is non-NULL, set @a *state to the state of the item
 after the operation has been performed.  (In practice, this is only
 useful with merge, not diff; diff callbacks will probably set
 @a *state to @c svn_wc_notify_state_unknown, since they do not change
 the state and therefore do not bother to know the state after the
 operation.)  By default, @a state refers to the item's content
 state.  Functions concerned with property state have separate
 @a contentstate and @a propstate arguments.

 If @a tree_conflicted is non-NULL, set @a *tree_conflicted to true if
 this operation caused a tree conflict, else to false. (Like with @a
 state, this is only useful with merge, not diff; diff callbacks
 should set this to false.)

 @since New in 1.6.

</member>
        <member name="D:svn_wc_conflict_resolver_func_t">
A callback used in svn_client_merge3(), svn_client_update3(), and
 * svn_client_switch2() for resolving conflicts during the application
 * of a tree delta to a working copy.
 *
 * @a description describes the exact nature of the conflict, and
 * provides information to help resolve it.  @a baton is a closure
 * object; it should be provided by the implementation, and passed by
 * the caller.  All allocations should be performed in @a pool.  When
 * finished, the callback signals its resolution by returning a
 * structure in @a *result.  (See @c svn_wc_conflict_result_t.)
 *
 * The values @c svn_wc_conflict_choose_mine_conflict and @c
 * svn_wc_conflict_choose_theirs_conflict are not legal for conflicts
 * in binary files or properties.
 *
 * Implementations of this callback are free to present the conflict
 * using any user interface.  This may include simple contextual
 * conflicts in a file's text or properties, or more complex
 * 'tree'-based conflcts related to obstructed additions, deletions,
 * and edits.  The callback implementation is free to decide which
 * sorts of conflicts to handle; it's also free to decide which types
 * of conflicts are automatically resolvable and which require user
 * interaction.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_wc_create_conflict_result(svn_wc_conflict_choice_t,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Allocate an @c svn_wc_conflict_result_t structure in @a pool,
 initialize and return it.

 Set the @c choice field of the structure to @a choice, and @c
 merged_file to @a merged_file.  Set all other fields to their @c
 _unknown, @c NULL or invalid value, respectively. Make only a shallow
 copy of the pointer argument @a merged_file.

 @since New in 1.5.

</member>
        <member name="F:svn_wc_conflict_result_t.save_merged">
If true, save a backup copy of merged_file (or the original
      merged_file from the conflict description, if merged_file is
      NULL) in the user's working copy. 
</member>
        <member name="F:svn_wc_conflict_result_t.merged_file">
If not NULL, this is a path to a file which contains the client's
      (or more likely, the user's) merging of the three values in
      conflict.  libsvn_wc accepts this file if (and only if) @c choice
      is set to @c svn_wc_conflict_choose_merged.
</member>
        <member name="F:svn_wc_conflict_result_t.choice">
A choice to either delay the conflict resolution or select a
      particular file to resolve the conflict. 
</member>
        <member name="T:svn_wc_conflict_result_t">
The final result returned by @c svn_wc_conflict_resolver_func_t.
 *
 * @note Fields may be added to the end of this structure in future
 * versions.  Therefore, to preserve binary compatibility, users
 * should not directly allocate structures of this type.  Instead,
 * construct this structure using @c svn_wc_create_conflict_result()
 * below.
 *
 * @since New in 1.5.

</member>
        <member name="T:svn_wc_conflict_choice_t">
The way in which the conflict callback chooses a course of action.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_wc_conflict_description_create_tree(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,svn_node_kind_t,svn_wc_operation_t,svn_wc_conflict_version_t*,svn_wc_conflict_version_t*,apr_pool_t*)">
 Allocate an @c svn_wc_conflict_description_t structure in @a pool,
 initialize to represent a tree conflict, and return it.

 Set the @c path field of the created struct to @a path, the @c access
 field to @a adm_access, the @c kind field to @c
 svn_wc_conflict_kind_tree, the @c node_kind to @a node_kind, the @c
 operation to @a operation, the @c src_left_version field to
 @a src_left_version, and the @c src_right_version field to
 @a src_right_version.
 Make only shallow copies of the pointer arguments.

 @note: It is the caller's responsibility to set the other required fields
 (such as the four file names and @c action and @c reason).

 @since New in 1.6.

</member>
        <member name="M:svn_wc_conflict_description_create_prop(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,svn_node_kind_t,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Allocate an @c svn_wc_conflict_description_t structure in @a pool,
 initialize to represent a property conflict, and return it.

 Set the @c path field of the created struct to @a path, the @c access
 field to @a adm_access, the @c kind field to @c
 svn_wc_conflict_kind_prop, the @c node_kind to @a node_kind, and the @c
 property_name to @a property_name. Make only shallow copies of the pointer
 arguments.

 @note: It is the caller's responsibility to set the other required fields
 (such as the four file names and @c action and @c reason).

 @since New in 1.6.

</member>
        <member name="M:svn_wc_conflict_description_create_text(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_adm_access_t*,apr_pool_t*)">
 Allocate an @c svn_wc_conflict_description_t structure in @a pool,
 initialize to represent a text conflict, and return it.

 Set the @c path field of the created struct to @a path, the @c access
 field to @a adm_access, the @c kind field to @c
 svn_wc_conflict_kind_text, the @c node_kind to @c svn_node_file, the @c
 action to @c svn_wc_conflict_action_edit, and the @c reason to @c
 svn_wc_conflict_reason_edited. Make only shallow copies of the pointer
 arguments.

 @note: It is the caller's responsibility to set the other required fields
 (such as the four file names and @c mime_type and @c is_binary).

 @since New in 1.6.

</member>
        <member name="F:svn_wc_conflict_description_t.src_right_version">
Info on the "merge-right source" or "their" version of incoming change.
   * @since New in 1.6. 
</member>
        <member name="F:svn_wc_conflict_description_t.src_left_version">
Info on the "merge-left source" or "older" version of incoming change.
   * @since New in 1.6. 
</member>
        <member name="F:svn_wc_conflict_description_t.operation">
The operation that exposed the conflict.
   * Used only for tree conflicts.
   *
   * @since New in 1.6.

</member>
        <member name="F:svn_wc_conflict_description_t.merged_file">
merged version; may contain conflict markers 
</member>
        <member name="F:svn_wc_conflict_description_t.my_file">
my locally-edited version of the file 
</member>
        <member name="F:svn_wc_conflict_description_t.their_file">
their version of the file 
</member>
        <member name="F:svn_wc_conflict_description_t.base_file">
If this is text-conflict and involves the merging of two files
   * descended from a common ancestor, here are the paths of up to
   * four fulltext files that can be used to interactively resolve the
   * conflict.  All four files will be in repository-normal form -- LF
   * line endings and contracted keywords.  (If any of these files are
   * not available, they default to NULL.)
   *
   * On the other hand, if this is a property-conflict, then these
   * paths represent temporary files that contain the three different
   * property-values in conflict.  The fourth path (@c merged_file)
   * may or may not be NULL;  if set, it represents libsvn_wc's
   * attempt to merge the property values together.  (Remember that
   * property values are technically binary values, and thus can't
   * always be merged.)

</member>
        <member name="F:svn_wc_conflict_description_t.reason">
The state of the target node or property, relative to its merge-left
   *  source, that is the reason for the conflict.
   *  (When @c kind is 'text', this reason must be 'edited'.) 
</member>
        <member name="F:svn_wc_conflict_description_t.action">
The action being attempted on the conflicted node or property.
   *  (When @c kind is 'text', this action must be 'edit'.) 
</member>
        <member name="F:svn_wc_conflict_description_t.access">
If not NULL, an open working copy access baton to either the
   *  path itself (if @c path is a directory), or to the parent
   *  directory (if @c path is a file.)
   *  For a tree conflict, this will always be an access baton
   *  to the parent directory of the path, even if the path is
   *  a directory. 
</member>
        <member name="F:svn_wc_conflict_description_t.mime_type">
The svn:mime-type property of ('my' version of) @c path, if available,
   *  else NULL.
   *  (Only if @c kind is 'text', else undefined.) 
</member>
        <member name="F:svn_wc_conflict_description_t.is_binary">
Whether svn thinks ('my' version of) @c path is a 'binary' file.
   *  (Only if @c kind is 'text', else undefined.) 
</member>
        <member name="F:svn_wc_conflict_description_t.property_name">
The name of the property whose conflict is being described.
   *  (Only if @a kind is 'property'; else undefined.) 
</member>
        <member name="F:svn_wc_conflict_description_t.kind">
What sort of conflict are we describing? 
</member>
        <member name="F:svn_wc_conflict_description_t.node_kind">
The node type of the path being operated on (for a tree conflict,
   *  ### which version?) 
</member>
        <member name="F:svn_wc_conflict_description_t.path">
The path that is in conflict (for a tree conflict, it is the victim) 
</member>
        <member name="T:svn_wc_conflict_description_t">
A struct that describes a conflict that has occurred in the
 * working copy.  Passed to @c svn_wc_conflict_resolver_func_t.
 *
 * The conflict described by this structure is one of:
 *   - a conflict on the content of the file node @a path
 *   - a conflict on the property @a property_name of @a path
 *
 * @note Fields may be added to the end of this structure in future
 * versions.  Therefore, to preserve binary compatibility, users
 * should not directly allocate structures of this type but should use
 * svn_wc_create_conflict_description_text() or
 * svn_wc_create_conflict_description_prop() or
 * svn_wc_create_conflict_description_tree() instead.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_wc_conflict_version_dup(svn_wc_conflict_version_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Return a duplicate of @a version, allocated in @a pool.
 * No part of the new version will be shared with @a version.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_wc_conflict_version_create(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,svn_node_kind_t,apr_pool_t*)">
 Allocate an @c svn_wc_conflict_version_t structure in @a pool,
 initialize to contain a conflict origin, and return it.

 Set the @c repos_url field of the created struct to @a repos_url, the
 @c path_in_repos field to @a path_in_repos, the @c peg_rev field to
 @a peg_rev and the the @c node_kind to @c node_kind. Make only shallow
 copies of the pointer arguments.

 @since New in 1.6.

</member>
        <member name="F:svn_wc_conflict_version_t.node_kind">
@} 
Info about this node 
</member>
        <member name="F:svn_wc_conflict_version_t.path_in_repos">
path within repos; must not start with '/' 
</member>
        <member name="F:svn_wc_conflict_version_t.peg_rev">
revision at which to look up path_in_repos 
</member>
        <member name="F:svn_wc_conflict_version_t.repos_url">
@name Where to find this node version in a repository 
@{
URL of repository root 
</member>
        <member name="T:svn_wc_conflict_version_t">
Info about one of the conflicting versions of a node. Each field may
 * have its respective null/invalid/unknown value if the corresponding
 * information is not relevant or not available.
 *
 * @todo Consider making some or all of the info mandatory, to reduce
 * complexity.
 *
 * @note Fields may be added to the end of this structure in future
 * versions.  Therefore, to preserve binary compatibility, users
 * should not directly allocate structures of this type.
 *
 * @see svn_wc_conflict_version_create()
 * @see svn_wc_conflict_version_dup()
 *
 * @since New in 1.6.

</member>
        <member name="T:svn_wc_operation_t">
The user operation that exposed a conflict.
 *
 * @since New in 1.6.

</member>
        <member name="T:svn_wc_conflict_kind_t">
The type of conflict being described by an @c
 * svn_wc_conflict_description_t (see below).
 *
 * @since New in 1.5.

</member>
        <member name="F:svn_wc_conflict_kind_tree">
tree conflict (on a dir) @since New in 1.6. 
</member>
        <member name="F:svn_wc_conflict_kind_property">
property conflict (on a file or dir) 
</member>
        <member name="F:svn_wc_conflict_kind_text">
textual conflict (on a file) 
</member>
        <member name="T:svn_wc_conflict_reason_t">
The pre-existing condition which is causing a state of conflict.
 *
 * @since New in 1.5.

</member>
        <member name="F:svn_wc_conflict_reason_added">
Object is already added or schedule-add. @since New in 1.6. 
</member>
        <member name="F:svn_wc_conflict_reason_unversioned">
Object is unversioned 
</member>
        <member name="F:svn_wc_conflict_reason_missing">
Object is unknown or missing 
</member>
        <member name="F:svn_wc_conflict_reason_deleted">
Object is already schedule-delete 
</member>
        <member name="F:svn_wc_conflict_reason_obstructed">
Another object is in the way 
</member>
        <member name="F:svn_wc_conflict_reason_edited">
Local edits are already present 
</member>
        <member name="T:svn_wc_conflict_action_t">
 Interactive conflict handling

 @defgroup svn_wc_conflict Conflict callback functionality

 @{

 This API gives a Subversion client application the opportunity to
 define a callback that allows the user to resolve conflicts
 interactively during updates and merges.

 If a conflict is discovered, libsvn_wc invokes the callback with an
 @c svn_wc_conflict_description_t.  This structure describes the
 path in conflict, whether it's a text or property conflict, and may
 also present up to three files that can be used to resolve the
 conflict (perhaps by launching an editor or 3rd-party merging
 tool).  The structure also provides a possible fourth file (@c
 merged_file) which, if not NULL, represents libsvn_wc's attempt to
 contextually merge the first three files.  (Note that libsvn_wc
 will not attempt to merge a file that it believes is binary, and it
 will only attempt to merge property values it believes to be a
 series of multi-line text.)

 When the callback is finished interacting with the user, it
 responds by returning a @c svn_wc_conflict_result_t.  This
 structure indicates whether the user wants to postpone the conflict
 for later (allowing libsvn_wc to mark the path "conflicted" as
 usual), or whether the user wants libsvn_wc to use one of the four
 files as the "final" state for resolving the conflict immediately.

 Note that the callback is at liberty (and encouraged) to merge the
 three files itself.  If it does so, it signals this to libsvn_wc by
 returning a choice of @c svn_wc_conflict_choose_merged.  To return
 the 'final' merged file to libsvn_wc, the callback has the option of
 either:

    - editing the original @c merged_file in-place

        or, if libsvn_wc never supplied a merged_file in the
        description structure (i.e. passed NULL for that field),

    - return the merged file in the @c svn_wc_conflict_result_t.


The type of action being attempted on an object.
 *
 * @since New in 1.5.

</member>
        <member name="D:svn_wc_get_file_t">
@} 
 A simple callback type to wrap svn_ra_get_file();  see that
 docstring for more information.

 This technique allows libsvn_client to 'wrap' svn_ra_get_file() and
 pass it down into libsvn_wc functions, thus allowing the WC layer
 to legally call the RA function via (blind) callback.

 @since New in 1.5

</member>
        <member name="D:svn_wc_notify_func_t">
 Similar to @c svn_wc_notify_func2_t, but takes the information as arguments
 instead of struct fields.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="D:svn_wc_notify_func2_t">
 Notify the world that @a notify-&gt;action has happened to @a notify-&gt;path.

 Recommendation: callers of @c svn_wc_notify_func2_t should avoid
 invoking it multiple times on the same path within a given
 operation, and implementations should not bother checking for such
 duplicate calls.  For example, in an update, the caller should not
 invoke the notify func on receiving a prop change and then again
 on receiving a text change.  Instead, wait until all changes have
 been received, and then invoke the notify func once (from within
 an @c svn_delta_editor_t's close_file(), for example), passing
 the appropriate @a notify-&gt;content_state and @a notify-&gt;prop_state flags.

 @since New in 1.2.

</member>
        <member name="M:svn_wc_dup_notify(svn_wc_notify_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return a deep copy of @a notify, allocated in @a pool.

 @since New in 1.2.

</member>
        <member name="M:svn_wc_create_notify_url(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_action_t,apr_pool_t*)">
 Allocate an @c svn_wc_notify_t structure in @a pool, initialize and return
 it.

 Set the @c url field of the created struct to @a url, @c action to, @c path
 to "." and @a action.  Set all other fields to their @c _unknown, @c NULL or
 invalid value, respectively. Make only a shallow copy of the pointer
 @a url.

 @since New in 1.6.

</member>
        <member name="M:svn_wc_create_notify(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_wc_notify_action_t,apr_pool_t*)">
 Allocate an @c svn_wc_notify_t structure in @a pool, initialize and return
 it.

 Set the @c path field of the created struct to @a path, and @c action to
 @a action.  Set all other fields to their @c _unknown, @c NULL or
 invalid value, respectively. Make only a shallow copy of the pointer
 @a path.

 @since New in 1.2.

</member>
        <member name="F:svn_wc_notify_t.old_revision">
If @c action is @c svn_wc_notify_update_update or @c
   * svn_wc_notify_update_add, contains the revision before the update.
   * In all other cases, it is @c SVN_INVALID_REVNUM.
   * @since New in 1.7 
</member>
        <member name="F:svn_wc_notify_t.rev_props">
If @c action is @c svn_wc_notify_blame_revision, contains a list of
   * revision properties for the specified revision 
   * @since New in 1.6 
</member>
        <member name="F:svn_wc_notify_t.prop_name">
If @c action relates to properties, specifies the name of the property.
   * @since New in 1.6 
</member>
        <member name="F:svn_wc_notify_t.path_prefix">
If non-NULL, specifies an absolute path prefix that can be subtracted
   * from the start of the absolute path in @c path or @c url.  Its purpose
   * is to allow notification to remove a common prefix from all the paths
   * displayed for an operation.  @since New in 1.6 
</member>
        <member name="F:svn_wc_notify_t.url">
Similar to @c path, but if non-NULL the notification is about a url.
   * @since New in 1.6 
</member>
        <member name="F:svn_wc_notify_t.merge_range">
When @c action is @c svn_wc_notify_merge_begin, and both the
   * left and right sides of the merge are from the same URL.  In all
   * other cases, it is @c NULL.  @since New in 1.5 
</member>
        <member name="F:svn_wc_notify_t.changelist_name">
When @c action is @c svn_wc_notify_changelist_add or name.  In all other
   * cases, it is @c NULL.  @since New in 1.5 
</member>
        <member name="F:svn_wc_notify_t.revision">
When @c action is @c svn_wc_notify_update_completed, target revision
   * of the update, or @c SVN_INVALID_REVNUM if not available; when @c
   * action is @c svn_wc_notify_blame_revision, processed revision; Since
   * Subversion 1.7 when action is @c svn_wc_notify_update_update or @c
   * svn_wc_notify_update_add, the target revision.
   * In all other cases, it is @c SVN_INVALID_REVNUM.

</member>
        <member name="F:svn_wc_notify_t.lock_state">
Reflects the addition or removal of a lock token in the working copy. 
</member>
        <member name="F:svn_wc_notify_t.prop_state">
The type of notification that is occurring about node properties. 
</member>
        <member name="F:svn_wc_notify_t.content_state">
The type of notification that is occurring about node content. 
</member>
        <member name="F:svn_wc_notify_t.err">
Points to an error describing the reason for the failure when @c
   * action is one of the following: @c svn_wc_notify_failed_lock, @c
   * svn_wc_notify_failed_unlock, @c svn_wc_notify_failed_external.
   * Is @c NULL otherwise. 
</member>
        <member name="F:svn_wc_notify_t.lock">
Points to the lock structure received from the repository when
   * @c action is @c svn_wc_notify_locked.  For other actions, it is
   * @c NULL. 
</member>
        <member name="F:svn_wc_notify_t.mime_type">
If non-NULL, indicates the mime-type of @c path.
   * It is always @c NULL for directories. 
</member>
        <member name="F:svn_wc_notify_t.kind">
Node kind of @c path. 
</member>
        <member name="F:svn_wc_notify_t.action">
Action that describes what happened to @c path. 
</member>
        <member name="F:svn_wc_notify_t.path">
Path, either absolute or relative to the current working directory
   * (i.e., not relative to an anchor).@c path is "." or another valid path
   * value for compatibilty reasons when the real target is an url that
   * is available in @c url. 
</member>
        <member name="T:svn_wc_notify_t">
 Structure used in the @c svn_wc_notify_func2_t function.

 @c kind, @c content_state, @c prop_state and @c lock_state are from
 after @c action, not before.

 @note If @c action is @c svn_wc_notify_update, then @c path has
 already been installed, so it is legitimate for an implementation of
 @c svn_wc_notify_func2_t to examine @c path in the working copy.

 @note The purpose of the @c kind, @c mime_type, @c content_state, and
 @c prop_state fields is to provide "for free" information that an
 implementation is likely to want, and which it would otherwise be
 forced to deduce via expensive operations such as reading entries
 and properties.  However, if the caller does not have this
 information, it will simply pass the corresponding `*_unknown'
 values, and it is up to the implementation how to handle that
 (i.e., whether to attempt deduction, or just to punt and
 give a less informative notification).

 @note Callers of notification functions should use svn_wc_create_notify()
 or svn_wc_create_notify_url() to create structures of this type to allow
 for extensibility.

 @since New in 1.2.

</member>
        <member name="T:svn_wc_notify_lock_state_t">
 What happened to a lock during an operation.

 @since New in 1.2.

</member>
        <member name="F:svn_wc_notify_lock_state_unlocked">
The item was unlocked. 
</member>
        <member name="F:svn_wc_notify_lock_state_locked">
The item was locked. 
</member>
        <member name="F:svn_wc_notify_lock_state_unchanged">
The lock wasn't changed. 
</member>
        <member name="T:svn_wc_notify_state_t">
The type of notification that is occurring. 
</member>
        <member name="F:svn_wc_notify_state_conflicted">
Modified state got conflicting mods. 
</member>
        <member name="F:svn_wc_notify_state_merged">
Modified state had mods merged in. 
</member>
        <member name="F:svn_wc_notify_state_changed">
Pristine state was modified. 
</member>
        <member name="F:svn_wc_notify_state_obstructed">
An unversioned item obstructed work. 
</member>
        <member name="F:svn_wc_notify_state_missing">
The item wasn't present. 
</member>
        <member name="F:svn_wc_notify_state_unchanged">
The state did not change. 
</member>
        <member name="F:svn_wc_notify_state_unknown">
Notifier doesn't know or isn't saying. 
</member>
        <member name="T:svn_wc_notify_action_t">
 @defgroup svn_wc_notifications Notification callback handling
 @{

 In many cases, the WC library will scan a working copy and make
 changes. The caller usually wants to know when each of these changes
 has been made, so that it can display some kind of notification to
 the user.

 These notifications have a standard callback function type, which
 takes the path of the file that was affected, and a caller-
 supplied baton.

 Note that the callback is a 'void' return -- this is a simple
 reporting mechanism, rather than an opportunity for the caller to
 alter the operation of the WC library.

 Note also that some of the actions are used across several
 different Subversion commands.  For example, the update actions are
 also used for checkouts, switches, and merges.

The type of action occurring. 
</member>
        <member name="F:svn_wc_notify_update_update_deleted">
A node below a deleted and tree conflicted directory was updated
   * @since New in 1.7. 
</member>
        <member name="F:svn_wc_notify_update_add_deleted">
A node below a deleted and tree conflicted directory was added
   *  during update @since New in 1.7. 
</member>
        <member name="F:svn_wc_notify_update_external_removed">
An update operation removed an external working copy.
   * @since New in 1.7. 
</member>
        <member name="F:svn_wc_notify_update_obstruction">
An update tried to add a file or directory at path but an
   * unversioned obstruction was found.  @since New in 1.7. 
</member>
        <member name="F:svn_wc_notify_failed_external">
The path is a subdirectory referenced in an externals definition
   * which is unable to be operated on.  @since New in 1.6. 
</member>
        <member name="F:svn_wc_notify_tree_conflict">
The path is a tree-conflict victim of the intended action (*not*
   * a persistent tree-conflict from an earlier operation, but *this*
   * operation caused the tree-conflict). @since New in 1.6. 
</member>
        <member name="F:svn_wc_notify_merge_completed">
The last notification in a merge. @since New in 1.6. 
</member>
        <member name="F:svn_wc_notify_revprop_deleted">
Revprop deleted. @since New in 1.6. 
</member>
        <member name="F:svn_wc_notify_revprop_set">
Revprop set. @since New in 1.6. 
</member>
        <member name="F:svn_wc_notify_property_deleted_nonexistent">
Nonexistent property deleted. @since New in 1.6. 
</member>
        <member name="F:svn_wc_notify_property_deleted">
Property deleted. @since New in 1.6. 
</member>
        <member name="F:svn_wc_notify_property_modified">
Property updated. @since New in 1.6. 
</member>
        <member name="F:svn_wc_notify_property_added">
Property added. @since New in 1.6. 
</member>
        <member name="F:svn_wc_notify_update_replace">
Replace notification. @since New in 1.5. 
</member>
        <member name="F:svn_wc_notify_foreign_merge_begin">
A merge operation (to path) from a foreign repository has begun.
      See @c merge_range in @c svn_wc_notify_t. @since New in 1.5. 
</member>
        <member name="F:svn_wc_notify_merge_begin">
A merge operation (to path) has begun.  See @c merge_range in
      @c svn_wc_notify_t. @since New in 1.5. 
</member>
        <member name="F:svn_wc_notify_changelist_moved">
Warn user that a path has moved from one changelist to another.
      @since New in 1.5. 
</member>
        <member name="F:svn_wc_notify_changelist_clear">
Changelist name cleared. @since New in 1.5. 
</member>
        <member name="F:svn_wc_notify_changelist_set">
Changelist name set. @since New in 1.5. 
</member>
        <member name="F:svn_wc_notify_exists">
Tried adding a path that already exists. @since New in 1.5. 
</member>
        <member name="F:svn_wc_notify_failed_unlock">
Failed to unlock a path. @since New in 1.2. 
</member>
        <member name="F:svn_wc_notify_failed_lock">
Failed to lock a path. @since New in 1.2. 
</member>
        <member name="F:svn_wc_notify_unlocked">
Unlocking a path. @since New in 1.2. 
</member>
        <member name="F:svn_wc_notify_locked">
Locking a path. @since New in 1.2. 
</member>
        <member name="F:svn_wc_notify_blame_revision">
Processed a single revision's blame. 
</member>
        <member name="F:svn_wc_notify_commit_postfix_txdelta">
Transmitting post-fix text-delta data for a file. 
</member>
        <member name="F:svn_wc_notify_commit_replaced">
Committing a replacement. 
</member>
        <member name="F:svn_wc_notify_commit_deleted">
Committing a deletion. 
</member>
        <member name="F:svn_wc_notify_commit_added">
Committing an addition. 
</member>
        <member name="F:svn_wc_notify_commit_modified">
Committing a modification. 
</member>
        <member name="F:svn_wc_notify_status_external">
Running status on an external module. 
</member>
        <member name="F:svn_wc_notify_status_completed">
The last notification in a status (including status on externals). 
</member>
        <member name="F:svn_wc_notify_update_external">
Updating an external module. 
</member>
        <member name="F:svn_wc_notify_update_completed">
The last notification in an update (including updates of externals). 
</member>
        <member name="F:svn_wc_notify_update_update">
Got any other action in an update. 
</member>
        <member name="F:svn_wc_notify_update_add">
Got an add in an update. 
</member>
        <member name="F:svn_wc_notify_update_delete">
Got a delete in an update. 
</member>
        <member name="F:svn_wc_notify_skip">
Skipping a path. 
</member>
        <member name="F:svn_wc_notify_resolved">
Resolving a conflict. 
</member>
        <member name="F:svn_wc_notify_failed_revert">
A revert operation has failed. 
</member>
        <member name="F:svn_wc_notify_revert">
Reverting a modified path. 
</member>
        <member name="F:svn_wc_notify_restore">
Restoring a missing path from the pristine text-base. 
</member>
        <member name="F:svn_wc_notify_delete">
Deleting a versioned path. 
</member>
        <member name="F:svn_wc_notify_copy">
Copying a versioned path. 
</member>
        <member name="F:svn_wc_notify_add">
Adding a path to revision control. 
</member>
        <member name="M:svn_wc_parse_externals_description(apr_hash_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Similar to svn_wc_parse_externals_description2(), but returns the
 parsed externals in a hash instead of an array.  This function
 should not be used, as storing the externals in a hash causes their
 order of evaluation to be not easily identifiable.

 @deprecated Provided for backward compatibility with the 1.0 API.

</member>
        <member name="M:svn_wc_parse_externals_description2(apr_array_header_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Similar to svn_wc_parse_externals_description3() with @a
 canonicalize_url set to @c TRUE, but returns an array of @c
 svn_wc_external_item_t * objects instead of @c
 svn_wc_external_item2_t * objects

 @since New in 1.1.

 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_wc_parse_externals_description3(apr_array_header_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
 If @a externals_p is non-NULL, set @a *externals_p to an array of
 @c svn_wc_external_item2_t * objects based on @a desc.  The @a url
 member of the objects will be canonicalized if @a canonicalize_url
 is @c TRUE.

 If the format of @a desc is invalid, don't touch @a *externals_p and
 return @c SVN_ERR_CLIENT_INVALID_EXTERNALS_DESCRIPTION.  Thus, if
 you just want to check the validity of an externals description,
 and don't care about the parsed result, pass NULL for @a externals_p.

 The format of @a desc is the same as for values of the directory
 property @c SVN_PROP_EXTERNALS, which see.

 Allocate the table, keys, and values in @a pool.

 Use @a parent_directory only in constructing error strings.

 @since New in 1.5.

</member>
        <member name="M:svn_wc_external_item_dup(svn_wc_external_item_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return a duplicate of @a item, allocated in @a pool.  No part of the new
 item will be shared with @a item.

 @since New in 1.3.

 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="F:svn_wc_external_item_t.revision">
Same as @c svn_wc_external_item2_t.revision 
</member>
        <member name="F:svn_wc_external_item_t.url">
Same as @c svn_wc_external_item2_t.url 
</member>
        <member name="F:svn_wc_external_item_t.target_dir">
Same as @c svn_wc_external_item2_t.target_dir 
</member>
        <member name="T:svn_wc_external_item_t">
 One external item.  Similar to svn_wc_external_item2_t, except
 @a revision is interpreted as both the operational revision and the
 peg revision.

 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_wc_external_item2_dup(svn_wc_external_item2_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return a duplicate of @a item, allocated in @a pool.  No part of the new
 item will be shared with @a item.

 @since New in 1.5.

</member>
        <member name="M:svn_wc_external_item_create(svn_wc_external_item2_t!System.Runtime.CompilerServices.IsConst**,apr_pool_t*)">
 Initialize an external item.
 Set @a *item to an external item object, allocated in @a pool.

 In order to avoid backwards compatibility problems, this function
 is used to initialize and allocate the @c svn_wc_external_item2_t
 structure rather than doing so explicitly, as the size of this
 structure may change in the future.

 The current implementation never returns error, but callers should
 still check for error, for compatibility with future versions.

 @since New in 1.5.

</member>
        <member name="F:svn_wc_external_item2_t.peg_revision">
The peg revision to use when checking out.  The only valid kinds are
      svn_opt_revision_number, svn_opt_revision_date, and
      svn_opt_revision_head. 
</member>
        <member name="F:svn_wc_external_item2_t.revision">
What revision to check out.  The only valid kinds for this are
      svn_opt_revision_number, svn_opt_revision_date, and
      svn_opt_revision_head. 
</member>
        <member name="F:svn_wc_external_item2_t.url">
Where to check out from. 
</member>
        <member name="F:svn_wc_external_item2_t.target_dir">
The name of the subdirectory into which this external should be
      checked out.  This is relative to the parent directory that
      holds this external item.  (Note that these structs are often
      stored in hash tables with the target dirs as keys, so this
      field will often be redundant.) 
</member>
        <member name="T:svn_wc_external_item2_t">
One external item.  This usually represents one line from an
 * svn:externals description but with the path and URL
 * canonicalized.
 *
 * In order to avoid backwards compatibility problems clients should use
 * svn_wc_external_item_create() to allocate and initialize this structure
 * instead of doing so themselves.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_wc_traversed_depths(apr_hash_t**,svn_wc_traversal_info_t*)">
Set @a *depths to a hash table mapping <tt>const char *</tt>
 * directory names (directories traversed by @a traversal_info) to
 * <tt>const char *</tt> values (the depths of those directories, as
 * converted by svn_depth_to_word()).
 *
 * @a traversal_info is obtained from svn_wc_init_traversal_info(), but is
 * only useful after it has been passed through another function, such
 * as svn_wc_crawl_revisions(), svn_wc_get_update_editor(),
 * svn_wc_get_switch_editor(), etc.
 *
 * The dir names are full paths -- that is, anchor plus target, not target
 * alone.  The values are not allocated, they are static constant strings.
 * Although the values are never NULL, not all directories traversed
 * are necessarily listed.  For example, directories which did not
 * have an svn:externals property set or modified are not included.
 *
 * The hashes and keys have the same lifetime as @a traversal_info.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_wc_edited_externals(apr_hash_t**,apr_hash_t**,svn_wc_traversal_info_t*)">
Set @a *externals_old and @a *externals_new to hash tables representing
 * changes to values of the svn:externals property on directories
 * traversed by @a traversal_info.
 *
 * @a traversal_info is obtained from svn_wc_init_traversal_info(), but is
 * only useful after it has been passed through another function, such
 * as svn_wc_crawl_revisions(), svn_wc_get_update_editor(),
 * svn_wc_get_switch_editor(), etc.
 *
 * Each hash maps <tt>const char *</tt> directory names onto
 * <tt>const char *</tt> values of the externals property for that directory.
 * The dir names are full paths -- that is, anchor plus target, not target
 * alone. The values are not parsed, they are simply copied raw, and are
 * never NULL: directories that acquired or lost the property are
 * simply omitted from the appropriate table.  Directories whose value
 * of the property did not change show the same value in each hash.
 *
 * The hashes, keys, and values have the same lifetime as @a traversal_info.

</member>
        <member name="M:svn_wc_init_traversal_info(apr_pool_t*)">
Return a new, empty traversal info object, allocated in @a pool. 
</member>
        <member name="T:svn_wc_traversal_info_t">
Traversal information is information gathered by a working copy
 * crawl or update.  For example, the before and after values of the
 * svn:externals property are important after an update, and since
 * we're traversing the working tree anyway (a complete traversal
 * during the initial crawl, and a traversal of changed paths during
 * the checkout/update/switch), it makes sense to gather the
 * property's values then instead of making a second pass.

</member>
        <member name="M:svn_wc_set_adm_dir(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Use @a name for the administrative directory in the working copy.
 Use @a pool for any temporary allocations.

 The list of valid names is limited.  Currently only ".svn" (the
 default) and "_svn" are allowed.

 @note This function changes global (per-process) state and must be
 called in a single-threaded context during the initialization of a
 Subversion client.

 @since New in 1.3.

</member>
        <member name="M:svn_wc_get_adm_dir(apr_pool_t*)">
 Return the name of the administrative directory.
 Use @a pool for any temporary allocations.

 The returned pointer will refer to either a statically allocated
 string, or to a string allocated in @a pool.

 @since New in 1.3.

</member>
        <member name="M:svn_wc_is_adm_dir(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return @c TRUE if @a name is the name of the WC administrative
 directory.  Use @a pool for any temporary allocations.  Only works
 with base directory names, not paths or URIs.

 For compatibility, the default name (.svn) will always be treated
 as an admin dir name, even if the working copy is actually using an
 alternative name.

 @since New in 1.3.

</member>
        <member name="M:svn_wc_locked(System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *locked to non-zero if @a path is locked, else set it to zero. 
</member>
        <member name="M:svn_wc_adm_locked(svn_wc_adm_access_t!System.Runtime.CompilerServices.IsConst*)">
Return @c TRUE is the access baton @a adm_access has a write lock,
 * @c FALSE otherwise. Compared to svn_wc_locked() this is a cheap, fast
 * function that doesn't access the filesystem.

</member>
        <member name="M:svn_wc_adm_access_pool(svn_wc_adm_access_t!System.Runtime.CompilerServices.IsConst*)">
Return the pool used by access baton @a adm_access 
</member>
        <member name="M:svn_wc_adm_access_path(svn_wc_adm_access_t!System.Runtime.CompilerServices.IsConst*)">
Return the path used to open the access baton @a adm_access 
</member>
        <member name="M:svn_wc_adm_close2(svn_wc_adm_access_t*,apr_pool_t*)">
Give up the access baton @a adm_access, and its lock if any. This will
 * recursively close any batons in the same set that are direct
 * subdirectories of @a adm_access.  Any physical locks will be removed from
 * the working copy.  Lock removal is unconditional, there is no check to
 * determine if cleanup is required.
 *
 * Any temporary allocations are performed using @a scratch_pool.
 *
 * @since New in 1.6

</member>
        <member name="M:svn_wc_adm_probe_try(svn_wc_adm_access_t**,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,apr_pool_t*)">
 Similar to svn_wc_adm_probe_try2(), but with @a tree_lock instead of
 @a levels_to_lock.  @a levels_to_lock is set to -1 if @a tree_lock
 is @c TRUE, else 0.

 @deprecated Provided for backward compatibility with the 1.0 API.

</member>
        <member name="M:svn_wc_adm_probe_try2(svn_wc_adm_access_t**,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,apr_pool_t*)">
 Similar to svn_wc_adm_probe_try3() without the cancel
 functionality.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_adm_probe_try3(svn_wc_adm_access_t**,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
 Try various ways to obtain an access baton for @a path.

 First, try to obtain @a *adm_access via svn_wc_adm_probe_retrieve(),
 but if this fails because @a associated can't give a baton for
 @a path or @a path's parent, then try svn_wc_adm_probe_open3(),
 this time passing @a write_lock and @a levels_to_lock.  If there is
 still no access because @a path is not a versioned directory, then
 just set @a *adm_access to NULL and return success.  But if it is
 because @a path is locked, then return the error @c SVN_ERR_WC_LOCKED,
 and the effect on @a *adm_access is undefined.  (Or if the attempt
 fails for any other reason, return the corresponding error, and the
 effect on @a *adm_access is also undefined.)

 If svn_wc_adm_probe_open3() succeeds, then add @a *adm_access to
 @a associated.

 If @a cancel_func is non-NULL, call it with @a cancel_baton to determine
 if the client has cancelled the operation.

 Use @a pool only for local processing, not to allocate @a *adm_access.

 @since New in 1.2.

</member>
        <member name="M:svn_wc_adm_probe_retrieve(svn_wc_adm_access_t**,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Check the working copy to determine the node type of @a path.  If
 * @a path is a versioned directory then the behaviour is like that of
 * svn_wc_adm_retrieve(), otherwise, if @a path is a file, an unversioned
 * directory, or does not exist, then the behaviour is like that of
 * svn_wc_adm_retrieve() with @a path replaced by the parent directory of
 * @a path.

</member>
        <member name="M:svn_wc_adm_retrieve(svn_wc_adm_access_t**,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Return, in @a *adm_access, a pointer to an existing access baton associated
 * with @a path.  @a path must be a directory that is locked as part of the
 * set containing the @a associated access baton.
 *
 * If the requested access baton is marked as missing in, or is simply
 * absent from, @a associated, return SVN_ERR_WC_NOT_LOCKED.
 *
 * @a pool is used only for local processing, it is not used for the batons.

</member>
        <member name="M:svn_wc_adm_open_anchor(svn_wc_adm_access_t**,svn_wc_adm_access_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
 Open access batons for @a path and return in @a *anchor_access and
 @a *target the anchor and target required to drive an editor.  Return
 in @a *target_access the access baton for the target, which may be the
 same as @a *anchor_access (in which case @a *target is the empty
 string, never NULL).  All the access batons will be in the
 @a *anchor_access set.

 @a levels_to_lock determines the levels_to_lock used when opening
 @a path if @a path is a versioned directory, @a levels_to_lock is
 ignored otherwise.  If @a write_lock is  @c TRUE the access batons
 will hold write locks.

 If @a cancel_func is non-NULL, call it with @a cancel_baton to determine
 if the client has cancelled the operation.

 This function is essentially a combination of svn_wc_adm_open3() and
 svn_wc_get_actual_target(), with the emphasis on reducing physical IO.

 @since New in 1.2.

</member>
        <member name="M:svn_wc_adm_probe_open(svn_wc_adm_access_t**,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,apr_pool_t*)">
 Similar to svn_wc_adm_probe_open2(), but with @a tree_lock instead of
 @a levels_to_lock.  @a levels_to_lock is set to -1 if @a tree_lock
 is @c TRUE, else 0.

 @deprecated Provided for backward compatibility with the 1.0 API.

</member>
        <member name="M:svn_wc_adm_probe_open2(svn_wc_adm_access_t**,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,apr_pool_t*)">
 Similar to svn_wc_adm_probe_open3() without the cancel
 functionality.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_adm_probe_open3(svn_wc_adm_access_t**,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
 Checks the working copy to determine the node type of @a path.  If
 @a path is a versioned directory then the behaviour is like that of
 svn_wc_adm_open3(), otherwise, if @a path is a file or does not
 exist, then the behaviour is like that of svn_wc_adm_open3() with
 @a path replaced by the parent directory of @a path.  If @a path is
 an unversioned directory, the behaviour is also like that of
 svn_wc_adm_open3() on the parent, except that if the open fails,
 then the returned SVN_ERR_WC_NOT_DIRECTORY error refers to @a path,
 not to @a path's parent.

 @since New in 1.2.

</member>
        <member name="M:svn_wc_adm_open(svn_wc_adm_access_t**,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,apr_pool_t*)">
 Similar to svn_wc_adm_open2(), but with @a tree_lock instead of
 @a levels_to_lock.  @a levels_to_lock is set to -1 if @a tree_lock
 is @c TRUE, else 0.

 @deprecated Provided for backward compatibility with the 1.0 API.

</member>
        <member name="M:svn_wc_adm_open2(svn_wc_adm_access_t**,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,apr_pool_t*)">
 Similar to svn_wc_adm_open3(), but without cancellation support.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_wc_adm_open3(svn_wc_adm_access_t**,svn_wc_adm_access_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
 Return, in @a *adm_access, a pointer to a new access baton for the working
 copy administrative area associated with the directory @a path.  If
 @a write_lock is TRUE the baton will include a write lock, otherwise the
 baton can only be used for read access.  If @a path refers to a directory
 that is already write locked then the error @c SVN_ERR_WC_LOCKED will be
 returned.  The error @c SVN_ERR_WC_NOT_DIRECTORY will be returned if
 @a path is not a versioned directory.

 If @a associated is an open access baton then @a adm_access will be added
 to the set containing @a associated.  @a associated can be @c NULL, in
 which case @a adm_access is the start of a new set.

 @a levels_to_lock specifies how far to lock.  Zero means just the specified
 directory.  Any negative value means to lock the entire working copy
 directory hierarchy under @a path.  A positive value indicates the number of
 levels of directories to lock -- 1 means just immediate subdirectories, 2
 means immediate subdirectories and their subdirectories, etc.  All the
 access batons will become part of the set containing @a adm_access.  This
 is an all-or-nothing option, if it is not possible to lock all the
 requested directories then an error will be returned and @a adm_access will
 be invalid, with the exception that subdirectories of @a path that are
 missing from the physical filesystem will not be locked and will not cause
 an error.  The error @c SVN_ERR_WC_LOCKED will be returned if a
 subdirectory of @a path is already write locked.

 If @a cancel_func is non-NULL, call it with @a cancel_baton to determine
 if the client has cancelled the operation.

 @a pool will be used to allocate memory for the baton and any subsequently
 cached items.  If @a adm_access has not been closed when the pool is
 cleared, it will be closed automatically at that point, and removed from
 its set.  A baton closed in this way will not remove physical locks from
 the working copy if cleanup is required.

 The first baton in a set, with @a associated passed as @c NULL, must have
 the longest lifetime of all the batons in the set.  This implies it must be
 the root of the hierarchy.

 @since New in 1.2.

</member>
        <member name="T:svn_wc_adm_access_t">
@defgroup svn_wc  Working copy management
@{

Flags for use with svn_wc_translated_file2
 *
 * @defgroup translate_flags Translation flags
 *
 * @{

Translate from Normal Form.
   *
   * The working copy text bases and repository files are stored
   * in normal form.  Some files' contents - or ever representation -
   * differs between the working copy and the normal form.  This flag
   * specifies to take the latter form as input and transform it
   * to the former.
   *
   * Either this flag or @c SVN_WC_TRANSLATE_TO_NF should be specified,
   * but not both.

Translate to Normal Form.
   *
   * Either this flag or @c SVN_WC_TRANSLATE_FROM_NF should be specified,
   * but not both.

Force repair of eol styles, making sure the output file consistently
   * contains the one eol style as specified by the svn:eol-style
   * property and the required translation direction.
   *

Don't register a pool cleanup to delete the output file 
Guarantee a new file is created on successful return.
   * The default shortcuts translation by returning the path
   * of the untranslated file when no translation is required.

Use a non-wc-local tmp directory for creating output files,
   * instead of in the working copy admin tmp area which is the default.
   *
   * @since New in 1.4.

@} 
Baton for access to a working copy administrative area.
 *
 * One day all such access will require a baton, we're not there yet.
 *
 * Access batons can be grouped into sets, by passing an existing open
 * baton when opening a new baton.  Given one baton in a set, other batons
 * may be retrieved.  This allows an entire hierarchy to be locked, and
 * then the set of batons can be passed around by passing a single baton.

</member>
        <member name="M:svn_wc_version">
 Get libsvn_wc version information.

 @since New in 1.1.

</member>
        <member name="M:svn_ra_get_ra_library(svn_ra_plugin_t**,System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return an RA vtable-@a library which can handle URL.  A number of
 svn_client_* routines will call this internally, but client apps might
 use it too.  $a ra_baton is a baton obtained by a call to
 svn_ra_init_ra_libs().

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_ra_init_ra_libs(System.Void**,apr_pool_t*)">
 Initialize the compatibility wrapper, using @a pool for any allocations.
 The caller must hold on to @a ra_baton as long as the RA library is used.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_ra_serf_init(System.Int32,apr_pool_t*,apr_hash_t*)">
Initialize libsvn_ra_serf.
 *
 * @since New in 1.4.
 * @deprecated Provided for backward compatibility with the 1.1 API. 
</member>
        <member name="M:svn_ra_svn_init(System.Int32,apr_pool_t*,apr_hash_t*)">
Initialize libsvn_ra_svn.
 *
 * @deprecated Provided for backward compatibility with the 1.1 API. 
</member>
        <member name="M:svn_ra_local_init(System.Int32,apr_pool_t*,apr_hash_t*)">
Initialize libsvn_ra_local.
 *
 * @deprecated Provided for backward compatibility with the 1.1 API. 
</member>
        <member name="M:svn_ra_dav_init(System.Int32,apr_pool_t*,apr_hash_t*)">
 The current ABI (Application Binary Interface) version for the
 RA plugin model. This version number will change when the ABI
 between the SVN core (e.g. libsvn_client) and the RA plugin changes.

 An RA plugin should verify that the passed version number is acceptable
 before accessing the rest of the parameters, and before returning any
 information.

 It is entirely acceptable for an RA plugin to accept multiple ABI
 versions. It can simply interpret the parameters based on the version,
 and it can return different plugin structures.


 <pre>
 VSN  DATE        REASON FOR CHANGE
 ---  ----------  ------------------------------------------------
   1  2001-02-17  Initial revision.
   2  2004-06-29  Preparing for svn 1.1, which adds new RA vtable funcs.
      2005-01-19  Rework the plugin interface and don't provide the vtable
                  to the client.  Separate ABI versions are no longer used.
 </pre>

 @deprecated Provided for backward compatibility with the 1.0 API.

Initialize libsvn_ra_neon.
 *
 * @deprecated Provided for backward compatibility with the 1.1 API. 
</member>
        <member name="D:svn_ra_init_func_t">
 All "ra_FOO" implementations *must* export a function named
 svn_ra_FOO_init() of type @c svn_ra_init_func_t.

 When called by libsvn_client, this routine adds an entry (or
 entries) to the hash table for any URL schemes it handles.  The hash
 value must be of type (<tt>@c svn_ra_plugin_t *</tt>).  @a pool is a
 pool for allocating configuration / one-time data.

 This type is defined to use the "C Calling Conventions" to ensure that
 abi_version is the first parameter. The RA plugin must check that value
 before accessing the other parameters.

 ### need to force this to be __cdecl on Windows... how??

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="F:svn_ra_plugin_t.get_version">
 Return the plugin's version information.

 @since New in 1.1.

</member>
        <member name="F:svn_ra_plugin_t.get_file_revs">
 Call svn_ra_get_file_revs() with the session associated with
 @a session_baton and all other arguments.

 @since New in 1.1.

</member>
        <member name="F:svn_ra_plugin_t.get_locations">
 Call svn_ra_get_locations() with the session associated with
 @a session_baton and all other arguments.

 @since New in 1.1.

</member>
        <member name="F:svn_ra_plugin_t.get_repos_root">
Call svn_ra_get_repos_root() with the session associated with
   * @a session_baton and all other arguments.

</member>
        <member name="F:svn_ra_plugin_t.get_uuid">
Call svn_ra_get_uuid() with the session associated with
   * @a session_baton and all other arguments.

</member>
        <member name="F:svn_ra_plugin_t.check_path">
Call svn_ra_check_path() with the session associated with
   * @a session_baton and all other arguments.

</member>
        <member name="F:svn_ra_plugin_t.get_log">
Call svn_ra_get_log() with the session associated with
   * @a session_baton and all other arguments.  @a limit is set to 0.

</member>
        <member name="F:svn_ra_plugin_t.do_diff">
Call svn_ra_do_diff() with the session associated with
   * @a session_baton and all other arguments.

</member>
        <member name="F:svn_ra_plugin_t.do_status">
Call svn_ra_do_status() with the session associated with
   * @a session_baton and all other arguments.

</member>
        <member name="F:svn_ra_plugin_t.do_switch">
Call svn_ra_do_switch() with the session associated with
   * @a session_baton and all other arguments.

</member>
        <member name="F:svn_ra_plugin_t.do_update">
Call svn_ra_do_update() with the session associated with
   * @a session_baton and all other arguments.

</member>
        <member name="F:svn_ra_plugin_t.get_dir">
Call svn_ra_get_dir() with the session associated with
   * @a session_baton and all other arguments.

</member>
        <member name="F:svn_ra_plugin_t.get_file">
Call svn_ra_get_file() with the session associated with
   * @a session_baton and all other arguments.

</member>
        <member name="F:svn_ra_plugin_t.get_commit_editor">
Call svn_ra_get_commit_editor() with the session associated with
   * @a session_baton and all other arguments plus @a lock_tokens set to
   * @c NULL and @a keep_locks set to @c TRUE.

</member>
        <member name="F:svn_ra_plugin_t.rev_prop">
Call svn_ra_rev_prop() with the session associated with
   * @a session_baton and all other arguments.

</member>
        <member name="F:svn_ra_plugin_t.rev_proplist">
Call svn_ra_rev_proplist() with the session associated with
   * @a session_baton and all other arguments.

</member>
        <member name="F:svn_ra_plugin_t.change_rev_prop">
Call svn_ra_change_rev_prop() with the session associated with
   * @a session_baton and all other arguments.

</member>
        <member name="F:svn_ra_plugin_t.get_dated_revision">
Call svn_ra_get_dated_revision() with the session associated with
   * @a session_baton and all other arguments.

</member>
        <member name="F:svn_ra_plugin_t.get_latest_revnum">
Call svn_ra_get_latest_revnum() with the session associated with
   * @a session_baton and all other arguments.

</member>
        <member name="F:svn_ra_plugin_t.open">
Call svn_ra_open() and set @a session_baton to an object representing
   * the new session.  All other arguments are passed to svn_ra_open().

</member>
        <member name="F:svn_ra_plugin_t.description">
Short doc string printed out by `svn --version` 
</member>
        <member name="F:svn_ra_plugin_t.name">
The proper name of the RA library, (like "ra_neon" or "ra_local") 
</member>
        <member name="T:svn_ra_plugin_t">
 Using this callback struct is similar to calling the newer public
 interface that is based on @c svn_ra_session_t.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_ra_print_ra_libraries(svn_stringbuf_t**,System.Void*,apr_pool_t*)">
 Similar to svn_ra_print_modules().
 @a ra_baton is ignored.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_ra_print_modules(svn_stringbuf_t*,apr_pool_t*)">
 The capability of understanding @c svn_depth_t (e.g., the server
 understands what the client means when the client describes the
 depth of a working copy to the server.)

 @since New in 1.5.

 The capability of doing the right thing with merge-tracking
 information.  This capability should be reported bidirectionally,
 because some repositories may want to reject clients that do not
 self-report as knowing how to handle merge-tracking.

 @since New in 1.5.

 The capability of retrieving arbitrary revprops in svn_ra_get_log2.

 @since New in 1.5.

 The capability of replaying a directory in the repository (partial replay).

 @since New in 1.5.

 The capability of including revision properties in a commit.

 @since New in 1.5.

 Append a textual list of all available RA modules to the stringbuf
 @a output.

 @since New in 1.2.

</member>
        <member name="M:svn_ra_get_deleted_rev(svn_ra_session_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32!System.Runtime.CompilerServices.IsLong*,apr_pool_t*)">
 Given @a path at revision @a peg_revision, set @a *revision_deleted to the
 revision @a path was first deleted, within the inclusive revision range
 defined by @a peg_revision and @a end_revision.  @a path is relative
 to the URL in @a session.

 If @a path does not exist at @a peg_revision or was not deleted within
 the specified range, then set @a *revision_deleted to @c SVN_INVALID_REVNUM.
 If @a peg_revision or @a end_revision are invalid or if @a peg_revision is
 greater than @a end_revision, then return @c SVN_ERR_CLIENT_BAD_REVISION.

 Use @a pool for all allocations.

 @since New in 1.6.

</member>
        <member name="M:svn_ra_has_capability(svn_ra_session_t*,System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Set @a *has to TRUE if the server represented by @a session has
 @a capability (one of the capabilities beginning with
 @c "SVN_RA_CAPABILITY_"), else set @a *has to FALSE.

 If @a capability isn't recognized, throw @c SVN_ERR_UNKNOWN_CAPABILITY,
 with the effect on @a *has undefined.

 Use @a pool for all allocation.

 @since New in 1.5.

</member>
        <member name="M:svn_ra_replay(svn_ra_session_t*,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*)">
 Replay the changes from @a revision through @a editor and @a edit_baton.

 Changes will be limited to those that occur under @a session's URL, and
 the server will assume that the client has no knowledge of revisions
 prior to @a low_water_mark.  These two limiting factors define the portion
 of the tree that the server will assume the client already has knowledge of,
 and thus any copies of data from outside that part of the tree will be
 sent in their entirety, not as simple copies or deltas against a previous
 version.

 If @a send_deltas is @c TRUE, the actual text and property changes in
 the revision will be sent, otherwise dummy text deltas and null property
 changes will be sent instead.

 @a pool is used for all allocation.

 @since New in 1.4.

</member>
        <member name="M:svn_ra_replay_range(svn_ra_session_t*,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32,=FUNC:svn_error_t*(System.Int32!System.Runtime.CompilerServices.IsLong,System.Void*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,apr_hash_t*,apr_pool_t*),=FUNC:svn_error_t*(System.Int32!System.Runtime.CompilerServices.IsLong,System.Void*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_hash_t*,apr_pool_t*),System.Void*,apr_pool_t*)">
 Replay the changes from a range of revisions between @a start_revision
 and @a end_revision.

 When receiving information for one revision, a callback @a revstart_func is
 called; this callback will provide an editor and baton through which the
 revision will be replayed.
 When replaying the revision is finished, callback @a revfinish_func will be
 called so the editor can be closed.

 Changes will be limited to those that occur under @a session's URL, and
 the server will assume that the client has no knowledge of revisions
 prior to @a low_water_mark.  These two limiting factors define the portion
 of the tree that the server will assume the client already has knowledge of,
 and thus any copies of data from outside that part of the tree will be
 sent in their entirety, not as simple copies or deltas against a previous
 version.

 If @a send_deltas is @c TRUE, the actual text and property changes in
 the revision will be sent, otherwise dummy text deltas and NULL property
 changes will be sent instead.

 @a pool is used for all allocation.

 @since New in 1.5.

</member>
        <member name="M:svn_ra_get_locks(svn_ra_session_t*,apr_hash_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Set @a *locks to a hashtable which represents all locks on or
 below @a path.

 The hashtable maps (const char *) absolute fs paths to (const
 svn_lock_t *) structures.  The hashtable -- and all keys and
 values -- are allocated in @a pool.

 @note It is not considered an error for @a path to not exist in HEAD.
 Such a search will simply return no locks.

 @note This functionality is not available in pre-1.2 servers.  If the
 server doesn't implement it, an @c SVN_ERR_RA_NOT_IMPLEMENTED error is
 returned.

 @since New in 1.2.

</member>
        <member name="M:svn_ra_get_lock(svn_ra_session_t*,svn_lock_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 If @a path is locked, set @a *lock to an svn_lock_t which
 represents the lock, allocated in @a pool.  If @a path is not
 locked, set @a *lock to NULL.

 @since New in 1.2.

</member>
        <member name="M:svn_ra_unlock(svn_ra_session_t*,apr_hash_t*,System.Int32,=FUNC:svn_error_t*(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,svn_lock_t!System.Runtime.CompilerServices.IsConst*,svn_error_t*,apr_pool_t*),System.Void*,apr_pool_t*)">
 Remove the repository lock for each path in @a path_tokens.
 @a path_tokens is a hash whose keys are the paths to be locked, and
 whose values are the corresponding lock tokens for each path.  If
 the path has no corresponding lock token, or if @a break_lock is TRUE,
 then the corresponding value shall be "".

 Note that unlocking is never anonymous, so any server
 implementing this function will have to "pull" a username from
 the client, if it hasn't done so already.

 If @a token points to a lock, but the RA username doesn't match the
 lock's owner, call @a lock_func/@a lock_baton with an error.  If @a
 break_lock is TRUE, however, instead allow the lock to be "broken"
 by the RA user.

 After successfully unlocking a path, @a lock_func is called with
 the @a lock_baton.

 Use @a pool for temporary allocations.

 @since New in 1.2.

</member>
        <member name="M:svn_ra_lock(svn_ra_session_t*,apr_hash_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,=FUNC:svn_error_t*(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,svn_lock_t!System.Runtime.CompilerServices.IsConst*,svn_error_t*,apr_pool_t*),System.Void*,apr_pool_t*)">
 Lock each path in @a path_revs, which is a hash whose keys are the
 paths to be locked, and whose values are the corresponding base
 revisions for each path.

 Note that locking is never anonymous, so any server implementing
 this function will have to "pull" a username from the client, if
 it hasn't done so already.

 @a comment is optional: it's either an xml-escapable string
 which describes the lock, or it is NULL.

 If any path is already locked by a different user, then call @a
 lock_func/@a lock_baton with an error.  If @a steal_lock is TRUE,
 then "steal" the existing lock(s) anyway, even if the RA username
 does not match the current lock's owner.  Delete any lock on the
 path, and unconditionally create a new lock.

 For each path, if its base revision (in @a path_revs) is a valid
 revnum, then do an out-of-dateness check.  If the revnum is less
 than the last-changed-revision of any path (or if a path doesn't
 exist in HEAD), call @a lock_func/@a lock_baton with an
 SVN_ERR_RA_OUT_OF_DATE error.

 After successfully locking a file, @a lock_func is called with the
 @a lock_baton.

 Use @a pool for temporary allocations.

 @since New in 1.2.

</member>
        <member name="M:svn_ra_get_file_revs(svn_ra_session_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32!System.Runtime.CompilerServices.IsLong,=FUNC:svn_error_t*(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_hash_t*,=FUNC:svn_error_t*(svn_txdelta_window_t*,System.Void*)*,System.Void**,apr_array_header_t*,apr_pool_t*),System.Void*,apr_pool_t*)">
 Similiar to svn_ra_get_file_revs2(), but with @a include_merged_revisions
 set to FALSE.

 @since New in 1.2.
 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_ra_get_file_revs2(svn_ra_session_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32,=FUNC:svn_error_t*(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_hash_t*,System.Int32,=FUNC:svn_error_t*(svn_txdelta_window_t*,System.Void*)*,System.Void**,apr_array_header_t*,apr_pool_t*),System.Void*,apr_pool_t*)">
 Retrieve a subset of the interesting revisions of a file @a path
 as seen in revision @a end (see svn_fs_history_prev() for a
 definition of "interesting revisions").  Invoke @a handler with
 @a handler_baton as its first argument for each such revision.
 @a session is an open RA session.  Use @a pool for all allocations.

 If there is an interesting revision of the file that is less than or
 equal to @a start, the iteration will begin at that revision.
 Else, the iteration will begin at the first revision of the file in
 the repository, which has to be less than or equal to @a end.  Note
 that if the function succeeds, @a handler will have been called at
 least once.

 In a series of calls to @a handler, the file contents for the first
 interesting revision will be provided as a text delta against the
 empty file.  In the following calls, the delta will be against the
 fulltext contents for the previous call.

 If @a include_merged_revisions is TRUE, revisions which a included as a
 result of a merge between @a start and @a end will be included.

 @note This functionality is not available in pre-1.1 servers.  If the
 server doesn't implement it, an alternative (but much slower)
 implementation based on svn_ra_get_log2() is used.

 @since New in 1.5.

</member>
        <member name="M:svn_ra_get_location_segments(svn_ra_session_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32!System.Runtime.CompilerServices.IsLong,=FUNC:svn_error_t*(svn_location_segment_t*,System.Void*,apr_pool_t*),System.Void*,apr_pool_t*)">
 Call @a receiver (with @a receiver_baton) for each segment in the
 location history of @a path in @a peg_revision, working backwards in
 time from @a start_rev to @a end_rev.

 @a end_rev may be @c SVN_INVALID_REVNUM to indicate that you want
 to trace the history of the object to its origin.

 @a start_rev may be @c SVN_INVALID_REVNUM to indicate "the HEAD
 revision".  Otherwise, @a start_rev must be younger than @a end_rev
 (unless @a end_rev is @c SVN_INVALID_REVNUM).

 @a peg_revision may be @c SVN_INVALID_REVNUM to indicate "the HEAD
 revision", and must evaluate to be at least as young as @a start_rev.

 Use @a pool for all allocations.

 @since New in 1.5.

</member>
        <member name="M:svn_ra_get_locations(svn_ra_session_t*,apr_hash_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_array_header_t*,apr_pool_t*)">
 Set @a *locations to the locations (at the repository revisions
 @a location_revisions) of the file identified by @a path in
 @a peg_revision.  @a path is relative to the URL to which
 @a session was opened.  @a location_revisions is an array of
 @c svn_revnum_t's.  @a *locations will be a mapping from the revisions to
 their appropriate absolute paths.  If the file doesn't exist in a
 location_revision, that revision will be ignored.

 Use @a pool for all allocations.

 @since New in 1.2.

</member>
        <member name="M:svn_ra_get_repos_root(svn_ra_session_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,apr_pool_t*)">
 Similar to svn_ra_get_repos_root2(), but returns the value
 allocated in @a session's pool.

 @deprecated Provided for backward compatibility with the 1.4 API.
 @since New in 1.2.

</member>
        <member name="M:svn_ra_get_repos_root2(svn_ra_session_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,apr_pool_t*)">
 Set @a *url to the repository's root URL, allocated in @a pool.
 The value will not include a trailing '/'.  The returned URL is
 guaranteed to be a prefix of the @a session's URL.

 @since New in 1.5.

</member>
        <member name="M:svn_ra_get_uuid(svn_ra_session_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,apr_pool_t*)">
 Similar to svn_ra_get_uuid2(), but returns the value allocated in
 @a session's pool.

 @deprecated Provided for backward compatibility with the 1.4 API.
 @since New in 1.2.

</member>
        <member name="M:svn_ra_get_uuid2(svn_ra_session_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,apr_pool_t*)">
 Set @a *uuid to the repository's UUID, allocated in @a pool.

 @since New in 1.5.

</member>
        <member name="M:svn_ra_stat(svn_ra_session_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,svn_dirent_t**,apr_pool_t*)">
 Set @a *dirent to an @c svn_dirent_t associated with @a path at @a
 revision.  @a path is relative to the @a session's parent's URL.
 If @a path does not exist in @a revision, set @a *dirent to NULL.

 Use @a pool for memory allocation.

 @since New in 1.2.

</member>
        <member name="M:svn_ra_check_path(svn_ra_session_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,svn_node_kind_t*,apr_pool_t*)">
 Set @a *kind to the node kind associated with @a path at @a revision.
 If @a path does not exist under @a revision, set @a *kind to
 @c svn_node_none.  @a path is relative to the @a session's parent URL.

 Use @a pool for memory allocation.

 @since New in 1.2.

</member>
        <member name="M:svn_ra_get_log(svn_ra_session_t*,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32,System.Int32,System.Int32,=FUNC:svn_error_t*(System.Void*,apr_hash_t*,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,apr_pool_t*)">
 Similar to svn_ra_get_log2(), but uses @c svn_log_message_receiver_t
 instead of @c svn_log_entry_receiver_t.  Also, @a
 include_merged_revisions is set to @c FALSE and @a revprops is
 svn:author, svn:date, and svn:log.

 @since New in 1.2.
 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_ra_get_log2(svn_ra_session_t*,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32,System.Int32,System.Int32,System.Int32,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,=FUNC:svn_error_t*(System.Void*,svn_log_entry_t*,apr_pool_t*),System.Void*,apr_pool_t*)">
 Invoke @a receiver with @a receiver_baton on each log message from
 @a start to @a end.  @a start may be greater or less than @a end;
 this just controls whether the log messages are processed in descending
 or ascending revision number order.

 If @a start or @a end is @c SVN_INVALID_REVNUM, it defaults to youngest.

 If @a paths is non-NULL and has one or more elements, then only show
 revisions in which at least one of @a paths was changed (i.e., if
 file, text or props changed; if dir, props changed or an entry
 was added or deleted).  Each path is an <tt>const char *</tt>, relative
 to the @a session's common parent.

 If @a limit is non-zero only invoke @a receiver on the first @a limit
 logs.

 If @a discover_changed_paths, then each call to receiver passes a
 <tt>const apr_hash_t *</tt> for the receiver's @a changed_paths argument;
 the hash's keys are all the paths committed in that revision.
 Otherwise, each call to receiver passes NULL for @a changed_paths.

 If @a strict_node_history is set, copy history will not be traversed
 (if any exists) when harvesting the revision logs for each path.

 If @a include_merged_revisions is set, log information for revisions
 which have been merged to @a targets will also be returned.

 If @a revprops is NULL, retrieve all revprops; else, retrieve only the
 revprops named in the array (i.e. retrieve none if the array is empty).

 If any invocation of @a receiver returns error, return that error
 immediately and without wrapping it.

 If @a start or @a end is a non-existent revision, return the error
 @c SVN_ERR_FS_NO_SUCH_REVISION, without ever invoking @a receiver.

 See also the documentation for @c svn_log_message_receiver_t.

 The caller may not invoke any RA operations using @a session from
 within @a receiver.

 Use @a pool for memory allocation.

 @note If @a paths is NULL or empty, the result depends on the
 server.  Pre-1.5 servers will send nothing; 1.5 servers will
 effectively perform the log operation on the root of the
 repository.  This behavior may be changed in the future to ensure
 consistency across all pedigrees of server.

 @note Pre-1.5 servers do not support custom revprop retrieval; if @a
 revprops is NULL or contains a revprop other than svn:author, svn:date,
 or svn:log, an @c SVN_ERR_RA_NOT_IMPLEMENTED error is returned.

 @since New in 1.5.

</member>
        <member name="M:svn_ra_do_diff(svn_ra_session_t*,svn_ra_reporter2_t!System.Runtime.CompilerServices.IsConst**,System.Void**,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*)">
 Similar to svn_ra_do_diff2(), but with @a text_deltas set to @c TRUE.

 @deprecated Provided for backward compatibility with the 1.3 API.

</member>
        <member name="M:svn_ra_do_diff2(svn_ra_session_t*,svn_ra_reporter2_t!System.Runtime.CompilerServices.IsConst**,System.Void**,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*)">
 Similar to svn_ra_do_diff3(), but taking @c svn_ra_reporter2_t
 instead of @c svn_ra_reporter3_t, and therefore only able to report
 @c svn_depth_infinity for depths.  Perform the diff according to
 @a recurse: if TRUE, then @a depth is @c svn_depth_infinity, else
 it is @c svn_depth_files.

 @deprecated Provided for compatibility with the 1.4 API.

</member>
        <member name="M:svn_ra_do_diff3(svn_ra_session_t*,svn_ra_reporter3_t!System.Runtime.CompilerServices.IsConst**,System.Void**,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_depth_t,System.Int32,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*)">
 Ask the RA layer to 'diff' a working copy against @a versus_url;
 it's another form of svn_ra_do_update2().

 @note This function cannot be used to diff a single file, only a
 working copy directory.  See the svn_ra_do_switch2() function
 for more details.

 The client initially provides a @a diff_editor/@a diff_baton to the RA
 layer; this editor contains knowledge of where the common diff
 root is in the working copy (when open_root() is called).

 In return, the client receives a @a reporter/@a report_baton. The
 client then describes its working copy by making calls into the
 @a reporter.

 When finished, the client calls @a reporter-&gt;finish_report().  The
 RA layer then does a complete drive of @a diff_editor, ending with
 close_edit(), to transmit the diff.

 @a diff_target is an optional single path component will restrict
 the scope of the diff to an entry in the directory represented by
 the @a session's URL, or empty if the entire directory is meant to be
 one of the diff paths.

 The working copy will be diffed against @a versus_url as it exists
 in revision @a revision, or as it is in head if @a revision is
 @c SVN_INVALID_REVNUM.

 Use @a ignore_ancestry to control whether or not items being
 diffed will be checked for relatedness first.  Unrelated items
 are typically transmitted to the editor as a deletion of one thing
 and the addition of another, but if this flag is @c TRUE,
 unrelated items will be diffed as if they were related.

 Diff only as deeply as @a depth indicates.

 The caller may not perform any RA operations using @a session before
 finishing the report, and may not perform any RA operations using
 @a session from within the editing operations of @a diff_editor.

 @a text_deltas instructs the driver of the @a diff_editor to enable
 the generation of text deltas. If @a text_deltas is FALSE the window
 handler returned by apply_textdelta will be called once with a NULL
 @c svn_txdelta_window_t pointer.

 Use @a pool for memory allocation.

 @note The reporter provided by this function does NOT supply copy-
 from information to the diff editor callbacks.

 @note In order to prevent pre-1.5 servers from doing more work than
 needed, and sending too much data back, a pre-1.5 'recurse'
 directive may be sent to the server, based on @a depth.

 @since New in 1.5.

</member>
        <member name="M:svn_ra_do_status(svn_ra_session_t*,svn_ra_reporter2_t!System.Runtime.CompilerServices.IsConst**,System.Void**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*)">
 Similar to svn_ra_do_status2(), but taking @c svn_ra_reporter2_t
 instead of @c svn_ra_reporter3_t, and therefore only able to report
 @c svn_depth_infinity for depths.  The status operation itself is
 performed according to @a recurse: if TRUE, then @a depth is
 @c svn_depth_infinity, else it is @c svn_depth_immediates.

 @deprecated Provided for compatibility with the 1.4 API.

</member>
        <member name="M:svn_ra_do_status2(svn_ra_session_t*,svn_ra_reporter3_t!System.Runtime.CompilerServices.IsConst**,System.Void**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,svn_depth_t,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*)">
 Ask the RA layer to describe the status of a working copy with respect
 to @a revision of the repository (or HEAD, if @a revision is invalid).

 The client initially provides a @a status_editor/@a status_baton to the RA
 layer; this editor contains knowledge of where the change will
 begin in the working copy (when open_root() is called).

 In return, the client receives a @a reporter/@a report_baton. The
 client then describes its working copy by making calls into the
 @a reporter.

 When finished, the client calls @a reporter-&gt;finish_report(). The RA
 layer then does a complete drive of @a status_editor, ending with
 close_edit(), to report, essentially, what would be modified in
 the working copy were the client to call do_update().
 @a status_target is an optional single path component will restrict
 the scope of the status report to an entry in the directory
 represented by the @a session's URL, or empty if the entire directory
 is meant to be examined.

 Get status only as deeply as @a depth indicates.

 The caller may not perform any RA operations using @a session
 before finishing the report, and may not perform any RA operations
 using @a session from within the editing operations of @a status_editor.

 Use @a pool for memory allocation.

 @note The reporter provided by this function does NOT supply copy-
 from information to the diff editor callbacks.

 @note In order to prevent pre-1.5 servers from doing more work than
 needed, and sending too much data back, a pre-1.5 'recurse'
 directive may be sent to the server, based on @a depth.

 @since New in 1.5.

</member>
        <member name="M:svn_ra_do_switch(svn_ra_session_t*,svn_ra_reporter2_t!System.Runtime.CompilerServices.IsConst**,System.Void**,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*)">
 Similar to svn_ra_do_switch2(), but taking @c svn_ra_reporter2_t
 instead of @c svn_ra_reporter3_t, and therefore only able to report
 @c svn_depth_infinity for depths.  The switch itself is performed
 according to @a recurse: if TRUE, then use @c svn_depth_infinity
 for @a depth, else use @c svn_depth_files.

 @deprecated Provided for compatibility with the 1.4 API.

</member>
        <member name="M:svn_ra_do_switch2(svn_ra_session_t*,svn_ra_reporter3_t!System.Runtime.CompilerServices.IsConst**,System.Void**,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_depth_t,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*)">
 Ask the RA layer to 'switch' a working copy to a new
 @a switch_url;  it's another form of svn_ra_do_update().

 The client initially provides a @a switch_editor/@a switch_baton to the RA
 layer; this editor contains knowledge of where the change will
 begin in the working copy (when open_root() is called).

 In return, the client receives a @a reporter/@a report_baton.  The
 client then describes its working copy by making calls into the
 @a reporter.

 When finished, the client calls @a reporter-&gt;finish_report().  The
 RA layer then does a complete drive of @a switch_editor, ending with
 close_edit(), to switch the working copy.

 @a switch_target is an optional single path component will restrict
 the scope of things affected by the switch to an entry in the
 directory represented by the @a session's URL, or empty if the
 entire directory is meant to be switched.

 Switch the target only as deeply as @a depth indicates.

 The working copy will be switched to @a revision_to_switch_to, or the
 "latest" revision if this arg is invalid.

 The caller may not perform any RA operations using
 @a session before finishing the report, and may not perform
 any RA operations using @a session from within the editing
 operations of @a switch_editor.

 Use @a pool for memory allocation.

 @note The reporter provided by this function does NOT supply copy-
 from information to the diff editor callbacks.

 @note In order to prevent pre-1.5 servers from doing more work than
 needed, and sending too much data back, a pre-1.5 'recurse'
 directive may be sent to the server, based on @a depth.

 @since New in 1.5.

</member>
        <member name="M:svn_ra_do_update(svn_ra_session_t*,svn_ra_reporter2_t!System.Runtime.CompilerServices.IsConst**,System.Void**,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*)">
 Similar to svn_ra_do_update2(), but taking @c svn_ra_reporter2_t
 instead of @c svn_ra_reporter3_t; if @a recurse is true, pass @c
 svn_depth_infinity for @a depth, else pass @c svn_depth_files; and
 with @a send_copyfrom_args always false.

 @deprecated Provided for compatibility with the 1.4 API.

</member>
        <member name="M:svn_ra_do_update2(svn_ra_session_t*,svn_ra_reporter3_t!System.Runtime.CompilerServices.IsConst**,System.Void**,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_depth_t,System.Int32,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*)">
 Ask the RA layer to update a working copy.

 The client initially provides an @a update_editor/@a update_baton to the
 RA layer; this editor contains knowledge of where the change will
 begin in the working copy (when @c open_root() is called).

 In return, the client receives a @a reporter/@a report_baton.  The
 client then describes its working copy by making calls into the
 @a reporter.

 When finished, the client calls @a reporter-&gt;finish_report().  The
 RA layer then does a complete drive of @a update_editor, ending with
 @a update_editor-&gt;close_edit(), to update the working copy.

 @a update_target is an optional single path component to restrict
 the scope of the update to just that entry (in the directory
 represented by the @a session's URL).  If @a update_target is the
 empty string, the entire directory is updated.

 Update the target only as deeply as @a depth indicates.

 If @a send_copyfrom_args is TRUE, then ask the server to send
 copyfrom arguments to add_file() and add_directory() when possible.
 (Note: this means that any subsequent txdeltas coming from the
 server are presumed to apply against the copied file!)

 The working copy will be updated to @a revision_to_update_to, or the
 "latest" revision if this arg is invalid.

 The caller may not perform any RA operations using @a session before
 finishing the report, and may not perform any RA operations using
 @a session from within the editing operations of @a update_editor.

 Use @a pool for memory allocation.

 @note The reporter provided by this function does NOT supply copy-
 from information to the diff editor callbacks.

 @note In order to prevent pre-1.5 servers from doing more work than
 needed, and sending too much data back, a pre-1.5 'recurse'
 directive may be sent to the server, based on @a depth.

 @since New in 1.5.

</member>
        <member name="M:svn_ra_get_mergeinfo(svn_ra_session_t*,apr_hash_t**,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,svn_mergeinfo_inheritance_t,System.Int32,apr_pool_t*)">
 Set @a *catalog to a mergeinfo catalog for the paths in @a paths.
 If no mergeinfo is available, set @a *catalog to @c NULL.  The
 requested mergeinfo hashes are for @a paths (which are relative to
 @a session's URL) in @a revision.  If one of the paths does not exist
 in that revision, return SVN_ERR_FS_NOT_FOUND.

 @a inherit indicates whether explicit, explicit or inherited, or
 only inherited mergeinfo for @a paths is retrieved.

 If @a include_descendants is TRUE, then additionally return the
 mergeinfo for any descendant of any element of @a paths which has
 the @c SVN_PROP_MERGEINFO property explicitly set on it.  (Note
 that inheritance is only taken into account for the elements in @a
 paths; descendants of the elements in @a paths which get their
 mergeinfo via inheritance are not included in @a *catalog.)

 Allocate the returned values in @a pool.

 If @a revision is @c SVN_INVALID_REVNUM, it defaults to youngest.

 If the server doesn't support retrieval of mergeinfo (which can
 happen even for file:// URLs, if the repository itself hasn't been
 upgraded), return @c SVN_ERR_UNSUPPORTED_FEATURE in preference to
 any other error that might otherwise be returned.

 @since New in 1.5.

</member>
        <member name="M:svn_ra_get_dir(svn_ra_session_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_hash_t**,System.Int32!System.Runtime.CompilerServices.IsLong*,apr_hash_t**,apr_pool_t*)">
 Similar to @c svn_ra_get_dir2, but with @c SVN_DIRENT_ALL for the
 @a dirent_fields parameter.

 @since New in 1.2.

 @deprecated Provided for compatibility with the 1.3 API.

</member>
        <member name="M:svn_ra_get_dir2(svn_ra_session_t*,apr_hash_t**,System.Int32!System.Runtime.CompilerServices.IsLong*,apr_hash_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,System.UInt32,apr_pool_t*)">
 If @a dirents is non @c NULL, set @a *dirents to contain all the entries
 of directory @a path at @a revision.  The keys of @a dirents will be
 entry names (<tt>const char *</tt>), and the values dirents
 (<tt>@c svn_dirent_t *</tt>).  Use @a pool for all allocations.

 @a dirent_fields controls which portions of the <tt>@c svn_dirent_t</tt>
 objects are filled in.  To have them completely filled in just pass
 @c SVN_DIRENT_ALL, otherwise pass the bitwise OR of all the @c SVN_DIRENT_
 fields you would like to have returned to you.

 @a path is interpreted relative to the URL in @a session.

 If @a revision is @c SVN_INVALID_REVNUM (meaning 'head') and
 @a *fetched_rev is not @c NULL, then this function will set
 @a *fetched_rev to the actual revision that was retrieved.  (Some
 callers want to know, and some don't.)

 If @a props is non @c NULL, set @a *props to contain the properties of
 the directory.  This means @em all properties: not just ones controlled by
 the user and stored in the repository fs, but non-tweakable ones
 generated by the SCM system itself (e.g. 'wcprops', 'entryprops',
 etc.)  The keys are <tt>const char *</tt>, values are
 <tt>@c svn_string_t *</tt>.

 @since New in 1.4.

</member>
        <member name="M:svn_ra_get_file(svn_ra_session_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,svn_stream_t*,System.Int32!System.Runtime.CompilerServices.IsLong*,apr_hash_t**,apr_pool_t*)">
 Fetch the contents and properties of file @a path at @a revision.
 @a revision may be SVN_INVALID_REVNUM, indicating that the HEAD
 revision should be used.  Interpret @a path relative to the URL in
 @a session.  Use @a pool for all allocations.

 If @a revision is @c SVN_INVALID_REVNUM and @a fetched_rev is not
 @c NULL, then set @a *fetched_rev to the actual revision that was
 retrieved.

 If @a stream is non @c NULL, push the contents of the file at @a
 stream, do not call svn_stream_close() when finished.

 If @a props is non @c NULL, set @a *props to contain the properties of
 the file.  This means @em all properties: not just ones controlled by
 the user and stored in the repository fs, but non-tweakable ones
 generated by the SCM system itself (e.g. 'wcprops', 'entryprops',
 etc.)  The keys are <tt>const char *</tt>, values are
 <tt>@c svn_string_t *</tt>.

 The stream handlers for @a stream may not perform any RA
 operations using @a session.

 @since New in 1.2.

</member>
        <member name="M:svn_ra_get_commit_editor(svn_ra_session_t*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,=FUNC:svn_error_t*(System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Void*),System.Void*,apr_hash_t*,System.Int32,apr_pool_t*)">
 Same as svn_ra_get_commit_editor2(), but uses @c svn_commit_callback_t.

 @since New in 1.2.

 @deprecated Provided for backward compatibility with the 1.3 API.

</member>
        <member name="M:svn_ra_get_commit_editor2(svn_ra_session_t*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,=FUNC:svn_error_t*(svn_commit_info_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*),System.Void*,apr_hash_t*,System.Int32,apr_pool_t*)">
 Same as svn_ra_get_commit_editor3(), but with @c revprop_table set
 to a hash containing the @c SVN_PROP_REVISION_LOG property set
 to the value of @a log_msg.

 @since New in 1.4.

 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_ra_get_commit_editor3(svn_ra_session_t*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,apr_hash_t*,=FUNC:svn_error_t*(svn_commit_info_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*),System.Void*,apr_hash_t*,System.Int32,apr_pool_t*)">
 Set @a *editor and @a *edit_baton to an editor for committing
 changes to the repository of @a session, setting the revision
 properties from @a revprop_table.  The revisions being committed
 against are passed to the editor functions, starting with the rev
 argument to @c open_root.  The path root of the commit is the @a
 session's URL.

 @a revprop_table is a hash mapping <tt>const char *</tt> property
 names to @c svn_string_t property values.  The commit log message
 is expected to be in the @c SVN_PROP_REVISION_LOG element.  @a
 revprop_table can not contain either of @c SVN_PROP_REVISION_DATE
 or @c SVN_PROP_REVISION_AUTHOR.

 Before @c close_edit returns, but after the commit has succeeded,
 it will invoke @a callback with the new revision number, the
 commit date (as a <tt>const char *</tt>), commit author (as a
 <tt>const char *</tt>), and @a callback_baton as arguments.  If
 @a callback returns an error, that error will be returned from @c
 close_edit, otherwise @c close_edit will return successfully
 (unless it encountered an error before invoking @a callback).

 The callback will not be called if the commit was a no-op
 (i.e. nothing was committed);

 @a lock_tokens, if non-NULL, is a hash mapping <tt>const char
 *</tt> paths (relative to the URL of @a session) to <tt>
 const char *</tt> lock tokens.  The server checks that the
 correct token is provided for each committed, locked path.  @a lock_tokens
 must live during the whole commit operation.

 If @a keep_locks is @c TRUE, then do not release locks on
 committed objects.  Else, automatically release such locks.

 The caller may not perform any RA operations using @a session before
 finishing the edit.

 Use @a pool for memory allocation.

 @since New in 1.5.

</member>
        <member name="M:svn_ra_rev_prop(svn_ra_session_t*,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_string_t**,apr_pool_t*)">
 Set @a *value to the value of unversioned property @a name attached to
 revision @a rev in the repository of @a session.  If @a rev has no
 property by that name, set @a *value to @c NULL.

 Use @a pool for memory allocation.

 @since New in 1.2.

</member>
        <member name="M:svn_ra_rev_proplist(svn_ra_session_t*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_hash_t**,apr_pool_t*)">
 Set @a *props to the list of unversioned properties attached to revision
 @a rev in the repository of @a session.  The hash maps
 (<tt>const char *</tt>) names to (<tt>@c svn_string_t *</tt>) values.

 Use @a pool for memory allocation.

 @since New in 1.2.

</member>
        <member name="M:svn_ra_change_rev_prop(svn_ra_session_t*,System.Int32!System.Runtime.CompilerServices.IsLong,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Set the property @a name to @a value on revision @a rev in the repository
 of @a session.

 If @a value is @c NULL, delete the named revision property.

 Please note that properties attached to revisions are @em unversioned.

 Use @a pool for memory allocation.

 @since New in 1.2.

</member>
        <member name="M:svn_ra_get_dated_revision(svn_ra_session_t*,System.Int32!System.Runtime.CompilerServices.IsLong*,System.Int64,apr_pool_t*)">
 Get the latest revision number at time @a tm in the repository of
 @a session.

 Use @a pool for memory allocation.

 @since New in 1.2.

</member>
        <member name="M:svn_ra_get_latest_revnum(svn_ra_session_t*,System.Int32!System.Runtime.CompilerServices.IsLong*,apr_pool_t*)">
 Get the latest revision number from the repository of @a session.

 Use @a pool for memory allocation.

 @since New in 1.2.

</member>
        <member name="M:svn_ra_get_session_url(svn_ra_session_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,apr_pool_t*)">
Set @a *url to the repository URL to which @a ra_session was
 * opened or most recently reparented.

</member>
        <member name="M:svn_ra_reparent(svn_ra_session_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Change the root URL of an open @a ra_session to point to a new path in the
 * same repository.  @a url is the new root URL.  Use @a pool for
 * temporary allocations.
 *
 * If @a url has a different repository root than the current session
 * URL, return @c SVN_ERR_RA_ILLEGAL_URL.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_ra_open(svn_ra_session_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_ra_callbacks_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_hash_t*,apr_pool_t*)">
@see svn_ra_open2().
@since New in 1.2.
@deprecated Provided for backward compatibility with the 1.2 API.

</member>
        <member name="M:svn_ra_open2(svn_ra_session_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_ra_callbacks2_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_hash_t*,apr_pool_t*)">
 Similiar to svn_ra_open3(), but with @a uuid set to @c NULL.

 @since New in 1.3.
 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_ra_open3(svn_ra_session_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_ra_callbacks2_t!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_hash_t*,apr_pool_t*)">
 Open a repository session to @a repos_URL.  Return an opaque object
 representing this session in @a *session_p, allocated in @a pool.

 Return @c SVN_ERR_RA_UUID_MISMATCH if @a uuid is non-NULL and not equal
 to the UUID of the repository at @c repos_URL.

 @a callbacks/@a callback_baton is a table of callbacks provided by the
 client; see @c svn_ra_callbacks2_t.

 @a config is a hash mapping <tt>const char *</tt> keys to
 @c svn_config_t * values.  For example, the @c svn_config_t for the
 "~/.subversion/config" file is under the key "config".

 All RA requests require a session; they will continue to
 use @a pool for memory allocation.

 @see svn_client_open_ra_session().

 @since New in 1.5.

</member>
        <member name="T:svn_ra_session_t">
 A repository access session.  This object is used to perform requests
 to a repository, identified by an URL.

 @since New in 1.2.

</member>
        <member name="M:svn_ra_create_callbacks(svn_ra_callbacks2_t**,apr_pool_t*)">
Initialize a callback structure.
* Set @a *callbacks to a ra callbacks object, allocated in @a pool.
*
* Clients must use this function to allocate and initialize @c
* svn_ra_callbacks2_t structures.
*
* @since New in 1.3.

</member>
        <member name="M:svn_ra_initialize(apr_pool_t*)">
 Initialize the RA library.  This function must be called before using
 any function in this header, except the deprecated APIs based on
 @c svn_ra_plugin_t, or svn_ra_version().  This function must not be called
 simultaneously in multiple threads.  @a pool must live
 longer than any open RA sessions.

 @since New in 1.2.

</member>
        <member name="T:svn_ra_callbacks_t">
Similar to svn_ra_callbacks2_t, except that the progress
 * notification function and baton is missing.
 *
 * @deprecated Provided for backward compatibility with the 1.2 API.

</member>
        <member name="F:svn_ra_callbacks2_t.get_client_string">
Client string customization callback function
   * @since New in 1.5

</member>
        <member name="F:svn_ra_callbacks2_t.cancel_func">
Cancelation function
   *
   * As its baton, the general callback baton is used
   *
   * @since New in 1.5

</member>
        <member name="F:svn_ra_callbacks2_t.progress_baton">
Notification callback baton, used with progress_func. 
</member>
        <member name="F:svn_ra_callbacks2_t.progress_func">
Notification callback used for progress information.
   * May be NULL if not used.

</member>
        <member name="F:svn_ra_callbacks2_t.invalidate_wc_props">
Invalidate working copy properties. 
</member>
        <member name="F:svn_ra_callbacks2_t.push_wc_prop">
Schedule new values for working copy properties. 
</member>
        <member name="F:svn_ra_callbacks2_t.set_wc_prop">
Immediately set new values for working copy properties. 
</member>
        <member name="F:svn_ra_callbacks2_t.get_wc_prop">
Fetch working copy properties.
   *
   *<pre> ### we might have a problem if the RA layer ever wants a property
   * ### that corresponds to a different revision of the file than
   * ### what is in the WC. we'll cross that bridge one day...</pre></member>
        <member name="F:svn_ra_callbacks2_t.auth_baton">
An authentication baton, created by the application, which is
   * capable of retrieving all known types of credentials.

</member>
        <member name="F:svn_ra_callbacks2_t.open_tmp_file">
Open a unique temporary file for writing in the working copy.
   * This file will be automatically deleted when @a fp is closed.
   *
   * @deprecated This callback should no longer be used by RA layers.

</member>
        <member name="T:svn_ra_callbacks2_t">
A collection of callbacks implemented by libsvn_client which allows
 * an RA layer to "pull" information from the client application, or
 * possibly store information.  libsvn_client passes this vtable to
 * svn_ra_open3().
 *
 * Each routine takes a @a callback_baton originally provided with the
 * vtable.
 *
 * Clients must use svn_ra_create_callbacks() to allocate and
 * initialize this structure.
 *
 * @since New in 1.3.

</member>
        <member name="F:svn_ra_reporter_t.abort_report">
Same as the corresponding field in @c svn_ra_reporter2_t. 
</member>
        <member name="F:svn_ra_reporter_t.finish_report">
Same as the corresponding field in @c svn_ra_reporter2_t. 
</member>
        <member name="F:svn_ra_reporter_t.link_path">
Similar to the corresponding field in @c svn_ra_reporter2_t, but
   * with @a lock_token always set to NULL. 
</member>
        <member name="F:svn_ra_reporter_t.delete_path">
Same as the corresponding field in @c svn_ra_reporter2_t. 
</member>
        <member name="F:svn_ra_reporter_t.set_path">
Similar to the corresponding field in @c svn_ra_reporter2_t, but
   * with @a lock_token always set to NULL. 
</member>
        <member name="T:svn_ra_reporter_t">
 Similar to @c svn_ra_reporter2_t, but without support for lock tokens.

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="F:svn_ra_reporter2_t.abort_report">
Same as the corresponding field in @c svn_ra_reporter3_t. 
</member>
        <member name="F:svn_ra_reporter2_t.finish_report">
Same as the corresponding field in @c svn_ra_reporter3_t. 
</member>
        <member name="F:svn_ra_reporter2_t.link_path">
Similar to the corresponding field in @c svn_ra_reporter3_t, but
   * with @a depth always set to @c svn_depth_infinity. 
</member>
        <member name="F:svn_ra_reporter2_t.delete_path">
Same as the corresponding field in @c svn_ra_reporter3_t. 
</member>
        <member name="F:svn_ra_reporter2_t.set_path">
Similar to the corresponding field in @c svn_ra_reporter3_t, but
   * with @a depth always set to @c svn_depth_infinity. 
</member>
        <member name="T:svn_ra_reporter2_t">
 Similar to @c svn_ra_reporter3_t, but without support for depths.

 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="F:svn_ra_reporter3_t.finish_report">
WC calls this when the state report is finished; any directories
   * or files not explicitly `set' are assumed to be at the
   * baseline revision originally passed into do_update().  No other
   * reporting functions, including abort_report, should be called after
   * calling this function.

</member>
        <member name="F:svn_ra_reporter3_t.link_path">
Like set_path(), but differs in that @a path in the working copy
   * (relative to the root of the report driver) isn't a reflection of
   * @a path in the repository (relative to the URL specified when
   * opening the RA layer), but is instead a reflection of a different
   * repository @a url at @a revision, and has depth @a depth.
   *
   * @a path may not be underneath a path on which set_path() was
   * previously called with @c svn_depth_exclude in this report.
   *
   * If @a start_empty is set and @a path is a directory,
   * the implementor should assume the directory has no entries or props.
   *
   * If @a lock_token is non-NULL, it is the lock token for @a path in the WC.
   *
   * All temporary allocations are done in @a pool.

</member>
        <member name="F:svn_ra_reporter3_t.delete_path">
Describing a working copy @a path as missing.
   *
   * @a path may not be underneath a path on which set_path() was
   * previously called with @c svn_depth_exclude in this report.
   *
   * All temporary allocations are done in @a pool.

</member>
        <member name="F:svn_ra_reporter3_t.set_path">
Describe a working copy @a path as being at a particular
   * @a revision and having depth @a depth.
   *
   * @a revision may be SVN_INVALID_REVNUM if (for example) @a path
   * represents a locally-added path with no revision number, or @a
   * depth is @c svn_depth_exclude.
   *
   * @a path may not be underneath a path on which set_path() was
   * previously called with @c svn_depth_exclude in this report.
   *
   * If @a start_empty is set and @a path is a directory, the
   * implementor should assume the directory has no entries or props.
   *
   * This will *override* any previous set_path() calls made on parent
   * paths.  @a path is relative to the URL specified in svn_ra_open3().
   *
   * If @a lock_token is non-NULL, it is the lock token for @a path in the WC.
   *
   * All temporary allocations are done in @a pool.

</member>
        <member name="T:svn_ra_reporter3_t">
 The update Reporter.

 A vtable structure which allows a working copy to describe a subset
 (or possibly all) of its working-copy to an RA layer, for the
 purposes of an update, switch, status, or diff operation.

 Paths for report calls are relative to the target (not the anchor)
 of the operation.  Report calls must be made in depth-first order:
 parents before children, all children of a parent before any
 siblings of the parent.  The first report call must be a set_path
 with a @a path argument of "" and a valid revision.  (If the target
 of the operation is locally deleted or missing, use the anchor's
 revision.)  If the target of the operation is deleted or switched
 relative to the anchor, follow up the initial set_path call with a
 link_path or delete_path call with a @a path argument of "" to
 indicate that.  In no other case may there be two report
 descriptions for the same path.  If the target of the operation is
 a locally added file or directory (which previously did not exist),
 it may be reported as having revision 0 or as having the parent
 directory's revision.

 @since New in 1.5.

</member>
        <member name="D:svn_ra_replay_revfinish_callback_t">
 Callback function type for replay_range actions.

 This callback function should close the editor.

 @a revision is the target revision number of the received replay report.

 @a editor and @a edit_baton should provided by the callback implementation.

 @a replay_baton is the baton as originally passed to replay_range.

 @a revprops contains key/value pairs for each revision properties for this
 revision.

 @since New in 1.5.

</member>
        <member name="D:svn_ra_replay_revstart_callback_t">
 Callback function type for replay_range actions.

 This callback function should provide replay_range with an editor which
 will be driven with the received replay reports from the master repository.

 @a revision is the target revision number of the received replay report.

 @a editor and @a edit_baton should provided by the callback implementation.

 @a replay_baton is the baton as originally passed to replay_range.

 @a revprops contains key/value pairs for each revision properties for this
 revision.

 @since New in 1.5.

</member>
        <member name="D:svn_ra_progress_notify_func_t">
 Callback function type for progress notification.

 @a progress is the number of bytes already transferred, @a total is
 the total number of bytes to transfer or -1 if it's not known, @a
 baton is the callback baton.

 @since New in 1.3.

</member>
        <member name="D:svn_ra_lock_callback_t">
 Callback function type for locking and unlocking actions.

 @since New in 1.2.

 @a do_lock is TRUE when locking @a path, and FALSE
 otherwise.

 @a lock is a lock for @a path or NULL if @a do_lock is FALSE or @a ra_err is
 non-NULL.

 @a ra_err is NULL unless the ra layer encounters a locking related
 error which it passes back for notification purposes.  The caller
 is responsible for clearing @a ra_err after the callback is run.

 @a baton is a closure object; it should be provided by the
 implementation, and passed by the caller.  @a pool may be used for
 temporary allocation.

</member>
        <member name="D:svn_ra_file_rev_handler_t">
 A callback function type for use in @c get_file_revs.
 @a baton is provided by the caller, @a path is the pathname of the file
 in revision @a rev and @a rev_props are the revision properties.
 If @a delta_handler and @a delta_baton are non-NULL, they may be set to a
 handler/baton which will be called with the delta between the previous
 revision and this one after the return of this callback.  They may be
 left as NULL/NULL.
 @a prop_diffs is an array of svn_prop_t elements indicating the property
 delta for this and the previous revision.
 @a pool may be used for temporary allocations, but you can't rely
 on objects allocated to live outside of this particular call and the
 immediately following calls to @a *delta_handler, if any.

 @since New in 1.1.

</member>
        <member name="D:svn_ra_get_client_string_func_t">
A function type which allows the RA layer to ask about any
 * customizations to the client name string.  This is primarily used
 * by HTTP-based RA layers wishing to extend the string reported to
 * Apache/mod_dav_svn via the User-agent HTTP header.

</member>
        <member name="D:svn_ra_get_latest_revnum_func_t">
A function type for retrieving the youngest revision from a repos. 
</member>
        <member name="D:svn_ra_invalidate_wc_props_func_t">
This is a function type which allows the RA layer to invalidate
 * (i.e., remove) wcprops recursively.  See the documentation for
 * @c svn_ra_get_wc_prop_func_t for @a baton, @a path, and @a name.
 *
 * Unlike @c svn_ra_push_wc_prop_func_t, this has immediate effect.  If
 * it returns success, the wcprops have been removed.

</member>
        <member name="D:svn_ra_push_wc_prop_func_t">
This is a function type which allows the RA layer to store new
 * working copy properties as part of a commit.  See the comments for
 * @c svn_ra_get_wc_prop_func_t for @a baton, @a path, and @a name.
 * The @a value is the value that will be stored for the property; a
 * @c NULL @a value means the property will be deleted.
 *
 * Note that this might not actually store the new property before
 * returning, but instead schedule it to be changed as part of
 * post-commit processing (in which case a successful commit means the
 * properties got written).  Thus, during the commit, it is possible
 * to invoke this function to set a new value for a wc prop, then read
 * the wc prop back from the working copy and get the *old* value.
 * Callers beware.

</member>
        <member name="D:svn_ra_set_wc_prop_func_t">
This is a function type which allows the RA layer to store new
 * working copy properties during update-like operations.  See the
 * comments for @c svn_ra_get_wc_prop_func_t for @a baton, @a path, and
 * @a name. The @a value is the value that will be stored for the property;
 * a NULL @a value means the property will be deleted.

</member>
        <member name="D:svn_ra_get_wc_prop_func_t">
This is a function type which allows the RA layer to fetch working
 * copy (WC) properties.
 *
 * The @a baton is provided along with the function pointer and should
 * be passed back in. This will be the @a callback_baton or the
 * @a close_baton as appropriate.
 *
 * @a path is relative to the "root" of the session, defined by the
 * @a repos_URL passed to svn_ra_open3() vtable call.
 *
 * @a name is the name of the property to fetch. If the property is present,
 * then it is returned in @a value. Otherwise, @a *value is set to @c NULL.

</member>
        <member name="M:svn_ra_version">
 Get libsvn_ra version information.

 @since New in 1.1.

</member>
        <member name="M:svn_inheritance_from_word(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Return the appropriate @c svn_mergeinfo_inheritance_t for @a word.
 * @a word is as returned from svn_inheritance_to_word().  Defaults to
 * @c svn_mergeinfo_explicit.
 *
 * @since New in 1.5.

</member>
        <member name="F:svn_mergeinfo_nearest_ancestor">
Mergeinfo on target's nearest (path-wise, not history-wise)
      ancestor, regardless of whether target has explict mergeinfo. 
</member>
        <member name="F:svn_mergeinfo_inherited">
Explicit mergeinfo, or if that doesn't exist, the inherited
      mergeinfo from a target's nearest (path-wise, not history-wise)
      ancestor. 
</member>
        <member name="F:svn_mergeinfo_explicit">
Explicit mergeinfo only. 
</member>
        <member name="M:svn_rangelist_dup(apr_array_header_t*,apr_pool_t*)">
Return a deep copy of @a rangelist, allocated in @a pool.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_mergeinfo_dup(apr_hash_t*,apr_pool_t*)">
Return a deep copy of @a mergeinfo, allocated in @a pool.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_mergeinfo_catalog_dup(apr_hash_t*,apr_pool_t*)">
Return a deep copy of @a mergeinfo_catalog, allocated in @a pool.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_mergeinfo_sort(apr_hash_t*,apr_pool_t*)">
Take a hash of mergeinfo in @a mergeinfo, and sort the rangelists
 * associated with each key (in place).
 *
 * TODO(miapi): mergeinfos should *always* be sorted.  This should be
 * a private function.
 *
 * @since New in 1.5

</member>
        <member name="M:svn_mergeinfo_to_string(svn_string_t**,apr_hash_t*,apr_pool_t*)">
Take a mergeinfo in MERGEINPUT, and convert it back to unparsed
 *  mergeinfo in *OUTPUT.  If INPUT contains no elements, return the
 *  empty string.
 *
 * @a mergeinput may contain relative merge source paths, but these are
 * converted to absolute paths in @a *output.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_mergeinfo_inheritable(apr_hash_t**,apr_hash_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32!System.Runtime.CompilerServices.IsLong,apr_pool_t*)">
Return a deep copy of @a mergeinfo, excluding all non-inheritable
 * @c svn_merge_range_t.  If @a start and @a end are valid revisions
 * and @a start is less than or equal to @a end, then exclude only the
 * non-inheritable revisions that intersect inclusively with the range
 * defined by @a start and @a end.  If @a path is not NULL remove
 * non-inheritable ranges only for @a path.  If all ranges are removed
 * for a given path then remove that path as well.  If all paths are
 * removed or @a rangelist is empty then set @a *inheritable_rangelist
 * to an empty array.  Allocate the copy in @a pool.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_rangelist_inheritable(apr_array_header_t**,apr_array_header_t*,System.Int32!System.Runtime.CompilerServices.IsLong,System.Int32!System.Runtime.CompilerServices.IsLong,apr_pool_t*)">
Return a deep copy of @c svn_merge_range_t *'s in @a rangelist excluding
 * all non-inheritable @c svn_merge_range_t.  If @a start and @a end are valid
 * revisions and @a start is less than or equal to @a end, then exclude only the
 * non-inheritable revision ranges that intersect inclusively with the range
 * defined by @a start and @a end.  If @a rangelist contains no elements, return
 * an empty array.  Allocate the copy in @a pool.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_rangelist_to_string(svn_string_t**,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Take an array of svn_merge_range_t *'s in @a rangelist, and convert it
 * back to a text format rangelist in @a output.  If @a rangelist contains
 * no elements, sets @a output to the empty string.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_rangelist_reverse(apr_array_header_t*,apr_pool_t*)">
Reverse @a rangelist, and the @c start and @c end fields of each
 * range in @a rangelist, in place.
 *
 * TODO(miapi): Is this really a valid function?  Rangelists that
 * aren't sorted, or rangelists containing reverse ranges, are
 * generally not valid in mergeinfo code.  Can we rewrite the two
 * places where this is used?
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_rangelist_intersect(apr_array_header_t**,apr_array_header_t*,apr_array_header_t*,System.Int32,apr_pool_t*)">
Find the intersection of two rangelists consisting of @c
 * svn_merge_range_t * elements, @a rangelist1 and @a rangelist2, and
 * place the result in @a *rangelist (which is never @c NULL).
 *
 * @a consider_inheritance determines how to account for the inheritability
 * of the two rangelist's ranges when calculating the intersection,
 * @see svn_mergeinfo_diff().  If @a consider_inheritance is FALSE then
 * ranges with different inheritance can intersect, but the the resulting
 * @a *rangelist is non-inheritable only if the corresponding ranges from
 * both @a rangelist1 and @a rangelist2 are non-inheritable.
 * If @a consider_inheritance is TRUE, then ranges with different
 * inheritance can never intersect.
 *
 * Note: @a rangelist1 and @a rangelist2 must be sorted as said by @c
 * svn_sort_compare_ranges(). @a *rangelist is guaranteed to be in sorted
 * order.
 * @since New in 1.5.

</member>
        <member name="M:svn_mergeinfo_intersect(apr_hash_t**,apr_hash_t*,apr_hash_t*,apr_pool_t*)">
Find the intersection of two mergeinfos, @a mergeinfo1 and @a
 * mergeinfo2, and place the result in @a *mergeinfo, which is (deeply)
 * allocated in @a pool.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_rangelist_remove(apr_array_header_t**,apr_array_header_t*,apr_array_header_t*,System.Int32,apr_pool_t*)">
Removes @a eraser (the subtrahend) from @a whiteboard (the
 * minuend), and places the resulting difference in @a output.
 *
 * Note: @a eraser and @a whiteboard must be sorted as said by @c
 * svn_sort_compare_ranges().  @a output is guaranteed to be in sorted
 * order.
 *
 * @a consider_inheritance determines how to account for the
 * @c svn_merge_range_t inheritable field when comparing @a whiteboard's
 * and @a *eraser's rangelists for equality.  @see svn_mergeinfo_diff().
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_rangelist_merge(apr_array_header_t**,apr_array_header_t*,apr_pool_t*)">
Merge two rangelists consisting of @c svn_merge_range_t *
 * elements, @a *rangelist and @a changes, placing the results in
 * @a *rangelist.  Either rangelist may be empty.
 *
 * When intersecting rangelists are merged, the inheritability of
 * the resulting svn_merge_range_t depends on the inheritability of the
 * operands: see svn_mergeinfo_merge().
 *
 * Note: @a *rangelist and @a changes must be sorted as said by @c
 * svn_sort_compare_ranges().  @a *rangelist is guaranteed to remain
 * in sorted order and be compacted to the minimal number of ranges
 * needed to represent the merged result.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_rangelist_diff(apr_array_header_t**,apr_array_header_t**,apr_array_header_t*,apr_array_header_t*,System.Int32,apr_pool_t*)">
Calculate the delta between two rangelists consisting of @c
 * svn_merge_range_t * elements (sorted in ascending order), @a from
 * and @a to, and place the result in @a *deleted and @a *added
 * (neither output argument will ever be @c NULL).
 *
 * @a consider_inheritance determines how to account for the inheritability
 * of the two rangelist's ranges when calculating the diff,
 * as described for svn_mergeinfo_diff().
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_mergeinfo_remove(apr_hash_t**,apr_hash_t*,apr_hash_t*,apr_pool_t*)">
Removes @a eraser (the subtrahend) from @a whiteboard (the
 * minuend), and places the resulting difference in @a *mergeinfo.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_mergeinfo_merge(apr_hash_t*,apr_hash_t*,apr_pool_t*)">
Merge one mergeinfo, @a changes, into another mergeinfo @a
 * mergeinfo.
 *
 * When intersecting rangelists for a path are merged, the inheritability of
 * the resulting svn_merge_range_t depends on the inheritability of the
 * operands.  If two non-inheritable ranges are merged the result is always
 * non-inheritable, in all other cases the resulting range is inheritable.
 *
 *  e.g. '/A: 1,3-4'  merged with '/A: 1,3,4*,5' --&gt; '/A: 1,3-5'
 *       '/A: 1,3-4*' merged with '/A: 1,3,4*,5' --&gt; '/A: 1,3,4*,5'
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_mergeinfo_diff(apr_hash_t**,apr_hash_t**,apr_hash_t*,apr_hash_t*,System.Int32,apr_pool_t*)">
Calculate the delta between two mergeinfos, @a mergefrom and @a mergeto
 * (which may be @c NULL), and place the result in @a *deleted and @a
 * *added (neither output argument may be @c NULL).
 *
 * @a consider_inheritance determines how the rangelists in the two
 * hashes are compared for equality.  If @a consider_inheritance is FALSE,
 * then the start and end revisions of the @c svn_merge_range_t's being
 * compared are the only factors considered when determining equality.
 *
 *  e.g. '/trunk: 1,3-4*,5' == '/trunk: 1,3-5'
 *
 * If @a consider_inheritance is TRUE, then the inheritability of the
 * @c svn_merge_range_t's is also considered and must be the same for two
 * otherwise identical ranges to be judged equal.
 *
 *  e.g. '/trunk: 1,3-4*,5' != '/trunk: 1,3-5'
 *       '/trunk: 1,3-4*,5' == '/trunk: 1,3-4*,5'
 *       '/trunk: 1,3-4,5'  == '/trunk: 1,3-4,5'
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_mergeinfo_parse(apr_hash_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Parse the mergeinfo from @a input into @a *mergeinfo.  If no
 * mergeinfo is available, return an empty mergeinfo (never @c NULL).
 * Perform temporary allocations in @a pool.
 *
 * If @a input is not a grammatically correct @c SVN_PROP_MERGEINFO
 * property, contains overlapping revision ranges of differing
 * inheritability, or revision ranges with a start revision greater
 * than or equal to its end revision, or contains paths mapped to empty
 * revision ranges, then return  @c SVN_ERR_MERGEINFO_PARSE_ERROR.
 * Unordered revision ranges are  allowed, but will be sorted when
 * placed into @a *mergeinfo.  Overlapping revision ranges of the same
 * inheritability are also allowed, but will be combined into a single
 * range when placed into @a *mergeinfo.
 *
 * @a input may contain relative merge source paths, but these are
 * converted to absolute paths in @a *mergeinfo.
 *
 * @since New in 1.5.

</member>
        <member name="D:svn_mergeinfo_t">
 @copyright
 ====================================================================
 Copyright (c) 2006-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_mergeinfo.h
 @brief mergeinfo handling and processing

 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_types.h
 @brief Subversion's data types

 @copyright
 ====================================================================
 Copyright (c) 2000-2006 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_string.h
 @brief Counted-length strings for Subversion, plus some C string goodies.

 There are two string datatypes: @c svn_string_t and @c svn_stringbuf_t.
 The former is a simple pointer/length pair useful for passing around
 strings (or arbitrary bytes) with a counted length. @c svn_stringbuf_t is
 buffered to enable efficient appending of strings without an allocation
 and copy for each append operation.

 @c svn_string_t contains a <tt>const char *</tt> for its data, so it is
 most appropriate for constant data and for functions which expect constant,
 counted data. Functions should generally use <tt>const @c svn_string_t
 *</tt> as their parameter to indicate they are expecting a constant,
 counted string.

 @c svn_stringbuf_t uses a plain <tt>char *</tt> for its data, so it is
 most appropriate for modifiable data.

 <h3>Invariants</h3>

   1. Null termination:

      Both structures maintain a significant invariant:

         <tt>s-&gt;data[s-&gt;len] == '\\0'</tt>

      The functions defined within this header file will maintain
      the invariant (which does imply that memory is
      allocated/defined as @c len+1 bytes).  If code outside of the
      @c svn_string.h functions manually builds these structures,
      then they must enforce this invariant.

      Note that an @c svn_string(buf)_t may contain binary data,
      which means that strlen(s-&gt;data) does not have to equal @c
      s-&gt;len. The NULL terminator is provided to make it easier to
      pass @c s-&gt;data to C string interfaces.


   2. Non-NULL input:

      All the functions assume their input data is non-NULL,
      unless otherwise documented, and may seg fault if passed
      NULL.  The input data may *contain* null bytes, of course, just
      the data pointer itself must not be NULL.

 <h3>Memory allocation</h3>

   All the functions make a deep copy of all input data, and never store
   a pointer to the original input data.

Overview of the @c SVN_PROP_MERGEINFO property.
 *
 * Merge history is stored in the @c SVN_PROP_MERGEINFO property of files
 * and directories.  The @c SVN_PROP_MERGEINFO property on a path stores the
 * complete list of changes merged to that path, either directly or via the
 * path's parent, grand-parent, etc..  A path may have empty mergeinfo which
 * means that nothing has been merged to that path or all previous merges
 * to the path were reversed.  Note that a path may have no mergeinfo, this
 * is not the same as empty mergeinfo.
 *
 * Every path in a tree may have @c SVN_PROP_MERGEINFO set, but if the
 * @c SVN_PROP_MERGEINFO for a path is equivalent to the
 * @c SVN_PROP_MERGEINFO for its parent, then the @c SVN_PROP_MERGEINFO on
 * the path will 'elide' (be removed) from the path as a post step to any
 * merge.  If a path's parent does not have any @c SVN_PROP_MERGEINFO set,
 * the path's mergeinfo can elide to its nearest grand-parent,
 * great-grand-parent, etc. that has equivalent @c SVN_PROP_MERGEINFO set
 * on it.
 *
 * If a path has no @c SVN_PROP_MERGEINFO of its own, it inherits mergeinfo
 * from its nearest parent that has @c SVN_PROP_MERGEINFO set.  The
 * exception to this is @c SVN_PROP_MERGEINFO with non-ineritable revision
 * ranges.  These non-inheritable ranges apply only to the path which they
 * are set on.
 *
 * Due to Subversion's allowance for mixed revision working copies, both
 * elision and inheritance within the working copy presume the path
 * between a path and its nearest parent with mergeinfo is at the same
 * working revision.  If this is not the case then neither inheritance nor
 * elision can occur.
 *
 * The value of the @c SVN_PROP_MERGEINFO property is either an empty string
 * (representing empty mergeinfo) or a non-empty string consisting of
 * a path, a colon, and comma separated revision list, containing one or more
 * revision or revision ranges. Revision range start and end points are
 * separated by "-".  Revisions and revision ranges may have the optional
 * @c SVN_MERGEINFO_NONINHERITABLE_STR suffix to signify a non-inheritable
 * revision/revision range.
 *
 * @c SVN_PROP_MERGEINFO Value Grammar:
 *
 *   Token             Definition
 *   -----             ----------
 *   revisionrange     REVISION1 "-" REVISION2
 *   revisioneelement  (revisionrange | REVISION)"*"?
 *   rangelist         revisioneelement (COMMA revisioneelement)*
 *   revisionline      PATHNAME COLON rangelist
 *   top               "" | (revisionline (NEWLINE revisionline))*
 *
 * The PATHNAME is the source of a merge and the rangelist the revision(s)
 * merged to the path @c SVN_PROP_MERGEINFO is set on directly or indirectly
 * via inheritance.  PATHNAME must always exist at the specified rangelist
 * and thus a single merge may result in multiple revisionlines if the source
 * was renamed.
 *
 * Rangelists must be sorted from lowest to highest revision and cannot
 * contain overlapping revisionlistelements.  REVISION1 must be less than
 * REVISION2.  Consecutive single revisions that can be represented by a
 * revisionrange are allowed however (e.g. '5,6,7,8,9-12' or '5-12' are
 * both acceptable).

Terminology for data structures that contain mergeinfo.
 *
 * Subversion commonly uses several data structures to represent
 * mergeinfo in RAM:
 *
 * (a) Strings (@c svn_string_t *) containing "unparsed mergeinfo".
 *
 * (b) A "rangelist".  An array (@c apr_array_header_t *) of non-overlapping
 *     merge ranges (@c svn_merge_range_t *), sorted as said by
 *     @c svn_sort_compare_ranges().  An empty range list is represented by
 *     an empty array.  Unless specifically noted otherwise, all APIs require
 *     rangelists that describe only forward ranges, i.e. the range's start
 *     revision is less than its end revision.
 *
 * (c) @c svn_mergeinfo_t, called "mergeinfo".  A hash mapping merge
 *     source paths (@c const char *, starting with slashes) to
 *     non-empty rangelist arrays.  A @c NULL hash is used to represent
 *     no mergeinfo and an empty hash is used to represent empty
 *     mergeinfo.
 *
 * (d) @c svn_mergeinfo_catalog_t, called a "mergeinfo catalog".  A hash
 *     mapping paths (@c const char *, starting with slashes) to
 *     @c svn_mergeinfo_t.
 *
 * Both @c svn_mergeinfo_t and @c svn_mergeinfo_catalog_t are just
 * typedefs for @c apr_hash_t *; there is no static type-checking, and
 * you still use standard @c apr_hash_t functions to interact with
 * them.
 *
 * Note that while the keys of mergeinfos are always relative to the
 * repository root, the keys of a catalog may be relative to something
 * else, such as an RA session root.

</member>
        <member name="M:svn_auth_get_ssl_client_cert_pw_prompt_provider(svn_auth_provider_object_t**,=FUNC:svn_error_t*(svn_auth_cred_ssl_client_cert_pw_t**,System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*),System.Void*,System.Int32,apr_pool_t*)">
Set @a *provider to an authentication provider of type @c
 * svn_auth_cred_ssl_client_cert_pw_t, allocated in @a pool.
 *
 * @a *provider retrieves its credentials by using the @a prompt_func
 * and @a prompt_baton.  The returned credential is used when a loaded
 * client certificate is protected by a passphrase.  The prompt will
 * be retried @a retry_limit times. For infinite retries, set
 * @a retry_limit to value less than 0.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_auth_get_ssl_client_cert_prompt_provider(svn_auth_provider_object_t**,=FUNC:svn_error_t*(svn_auth_cred_ssl_client_cert_t**,System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*),System.Void*,System.Int32,apr_pool_t*)">
Set @a *provider to an authentication provider of type @c
 * svn_auth_cred_ssl_client_cert_t, allocated in @a pool.
 *
 * @a *provider retrieves its credentials by using the @a prompt_func
 * and @a prompt_baton.  The returned credential is used to load the
 * appropriate client certificate for authentication when requested by
 * a server.  The prompt will be retried @a retry_limit times. For
 * infinite retries, set @a retry_limit to value less than 0.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_auth_get_ssl_server_trust_prompt_provider(svn_auth_provider_object_t**,=FUNC:svn_error_t*(svn_auth_cred_ssl_server_trust_t**,System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.UInt32,svn_auth_ssl_server_cert_info_t!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*),System.Void*,apr_pool_t*)">
Set @a *provider to an authentication provider of type @c
 * svn_auth_cred_ssl_server_trust_t, allocated in @a pool.
 *
 * @a *provider retrieves its credentials by using the @a prompt_func
 * and @a prompt_baton.  The returned credential is used to override
 * SSL security on an error.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_auth_get_ssl_client_cert_pw_file_provider(svn_auth_provider_object_t**,apr_pool_t*)">
Like svn_auth_get_ssl_client_cert_pw_file_provider2, but without
 * the ability to call the svn_auth_plaintext_passphrase_prompt_func_t
 * callback, and the provider always assumes that it is not allowed
 * to store the passphrase in plaintext.
 *
 * @deprecated Provided for backwards compatibility with the 1.5 API.
 * @since New in 1.4.

</member>
        <member name="M:svn_auth_get_ssl_client_cert_pw_file_provider2(svn_auth_provider_object_t**,=FUNC:svn_error_t*(System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*),System.Void*,apr_pool_t*)">
Set @a *provider to an authentication provider of type @c
 * svn_auth_cred_ssl_client_cert_pw_t that gets/sets information from the user's
 * ~/.subversion configuration directory.
 *
 * If the provider is going to save the passphrase unencrypted,
 * it calls @a plaintext_passphrase_prompt_func, passing @a
 * prompt_baton, before saving the passphrase.
 *
 * If @a plaintext_passphrase_prompt_func is NULL it is not called
 * and the passphrase is not stored in plaintext.
 * Client developers are highly encouraged to provide this callback
 * to ensure their users are made aware of the fact that their passphrase
 * is going to be stored unencrypted.
 *
 * Clients can however set the callback to NULL and set
 * SVN_AUTH_PARAM_STORE_SSL_CLIENT_CERT_PP_PLAINTEXT to SVN_CONFIG_FALSE or
 * SVN_CONFIG_TRUE to enforce a certain behaviour.
 *
 * Allocate @a *provider in @a pool.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_auth_get_ssl_client_cert_file_provider(svn_auth_provider_object_t**,apr_pool_t*)">
Set @a *provider to an authentication provider of type @c
 * svn_auth_cred_ssl_client_cert_t, allocated in @a pool.
 *
 * @a *provider retrieves its credentials from the configuration
 * mechanism.  The returned credential is used to load the appropriate
 * client certificate for authentication when requested by a server.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_auth_get_ssl_server_trust_file_provider(svn_auth_provider_object_t**,apr_pool_t*)">
Set @a *provider to an authentication provider of type @c
 * svn_auth_cred_ssl_server_trust_t, allocated in @a pool.
 *
 * @a *provider retrieves its credentials from the configuration
 * mechanism.  The returned credential is used to override SSL
 * security on an error.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_auth_get_username_provider(svn_auth_provider_object_t**,apr_pool_t*)">
Set @a *provider to an authentication provider of type @c
 * svn_auth_cred_username_t that gets/sets information from a user's
 * ~/.subversion configuration directory.  Allocate @a *provider in
 * @a pool.
 *
 * If a default username is available, @a *provider will honor it,
 * and return it when svn_auth_first_credentials() is called.  (See
 * @c SVN_AUTH_PARAM_DEFAULT_USERNAME.)
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_auth_get_windows_ssl_server_trust_provider(svn_auth_provider_object_t**,apr_pool_t*)">
 Set @a *provider to an authentication provider of type @c
 svn_auth_cred_ssl_server_trust_t, allocated in @a pool.

 This provider automatically validates ssl server certificates with
 the CryptoApi, like Internet Explorer and the Windows network API do.
 This allows the rollout of root certificates via Windows Domain
 policies, instead of Subversion specific configuration.

 @since New in 1.5.
 @note This function is only available on Windows.

</member>
        <member name="M:svn_auth_get_windows_ssl_client_cert_pw_provider(svn_auth_provider_object_t**,apr_pool_t*)">
 Set @a *provider to an authentication provider of type @c
 svn_auth_cred_ssl_client_cert_pw_t that gets/sets information from the
 user's ~/.subversion configuration directory.  Allocate @a *provider in
 @a pool.

 This is like svn_auth_get_ssl_client_cert_pw_file_provider(), except that
 when running on Window 2000 or newer, the provider encrypts the password
 before storing it to disk. On earlier versions of Windows, the provider
 does nothing.

 @since New in 1.6
 @note This function is only available on Windows.

 @note An administrative password reset may invalidate the account's
 secret key. This function will detect that situation and behave as
 if the password were not cached at all.

</member>
        <member name="M:svn_auth_get_windows_simple_provider(svn_auth_provider_object_t**,apr_pool_t*)">
 Set @a *provider to an authentication provider of type @c
 svn_auth_cred_simple_t that gets/sets information from the user's
 ~/.subversion configuration directory.  Allocate @a *provider in
 @a pool.

 This is like svn_auth_get_simple_provider(), except that, when
 running on Window 2000 or newer (or any other Windows version that
 includes the CryptoAPI), the provider encrypts the password before
 storing it to disk. On earlier versions of Windows, the provider
 does nothing.

 @since New in 1.4.
 @note This function is only available on Windows.

 @note An administrative password reset may invalidate the account's
 secret key. This function will detect that situation and behave as
 if the password were not cached at all.

</member>
        <member name="M:svn_auth_get_platform_specific_client_providers(apr_array_header_t**,svn_config_t*,apr_pool_t*)">
Set @a *providers to an array of <tt>svn_auth_provider_object_t *</tt>
 * objects.
 * Only client authentication providers available for the current platform are
 * returned. Order of the platform-specific authentication providers is
 * determined by the 'password-stores' configuration option which is retrieved
 * from @a config. @a config can be NULL.
 *
 * Create and allocate @a *providers in @a pool.
 *
 * Default order of the platform-specific authentication providers:
 *   1. gnome-keyring
 *   2. kwallet
 *   3. keychain
 *   4. windows-cryptoapi
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_auth_get_simple_provider(svn_auth_provider_object_t**,apr_pool_t*)">
Like svn_auth_get_simple_provider2, but without the ability to
 * call the svn_auth_plaintext_prompt_func_t callback, and the provider
 * always assumes that it is allowed to store the password in plaintext.
 *
 * @deprecated Provided for backwards compatibility with the 1.5 API.
 * @since New in 1.4.

</member>
        <member name="M:svn_auth_get_simple_provider2(svn_auth_provider_object_t**,=FUNC:svn_error_t*(System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*),System.Void*,apr_pool_t*)">
Set @a *provider to an authentication provider of type @c
 * svn_auth_cred_simple_t that gets/sets information from the user's
 * ~/.subversion configuration directory.
 *
 * If the provider is going to save the password unencrypted, it calls @a
 * plaintext_prompt_func, passing @a prompt_baton, before saving the
 * password.
 *
 * If @a plaintext_prompt_func is NULL it is not called and the answer is
 * assumed to be TRUE. This matches the deprecated behaviour of storing
 * unencrypted passwords by default, and is only done this way for backward
 * compatibility reasons.
 * Client developers are highly encouraged to provide this callback
 * to ensure their users are made aware of the fact that their password
 * is going to be stored unencrypted. In the future, providers may
 * default to not storing the password unencrypted if this callback is NULL.
 *
 * Clients can however set the callback to NULL and set
 * SVN_AUTH_PARAM_STORE_PLAINTEXT_PASSWORDS to SVN_CONFIG_FALSE or
 * SVN_CONFIG_TRUE to enforce a certain behaviour.
 *
 * Allocate @a *provider in @a pool.
 *
 * If a default username or password is available, @a *provider will
 * honor them as well, and return them when
 * svn_auth_first_credentials() is called.  (see @c
 * SVN_AUTH_PARAM_DEFAULT_USERNAME and @c
 * SVN_AUTH_PARAM_DEFAULT_PASSWORD).
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_auth_get_username_prompt_provider(svn_auth_provider_object_t**,=FUNC:svn_error_t*(svn_auth_cred_username_t**,System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*),System.Void*,System.Int32,apr_pool_t*)">
Set @a *provider to an authentication provider of type @c
 * svn_auth_cred_username_t that gets information by prompting the
 * user with @a prompt_func and @a prompt_baton.  Allocate @a *provider
 * in @a pool.
 *
 * If @c SVN_AUTH_PARAM_DEFAULT_USERNAME is defined as a runtime
 * parameter in the @c auth_baton, then @a *provider will return the
 * default argument when svn_auth_first_credentials() is called.  If
 * svn_auth_first_credentials() fails, then @a *provider will
 * re-prompt @a retry_limit times (via svn_auth_next_credentials()).
 * For infinite retries, set @a retry_limit to value less than 0.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_auth_get_simple_prompt_provider(svn_auth_provider_object_t**,=FUNC:svn_error_t*(svn_auth_cred_simple_t**,System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*),System.Void*,System.Int32,apr_pool_t*)">
@} 
Set @a *provider to an authentication provider of type
 * svn_auth_cred_simple_t that gets information by prompting the user
 * with @a prompt_func and @a prompt_baton.  Allocate @a *provider in
 * @a pool.
 *
 * If both @c SVN_AUTH_PARAM_DEFAULT_USERNAME and
 * @c SVN_AUTH_PARAM_DEFAULT_PASSWORD are defined as runtime
 * parameters in the @c auth_baton, then @a *provider will return the
 * default arguments when svn_auth_first_credentials() is called.  If
 * svn_auth_first_credentials() fails, then @a *provider will
 * re-prompt @a retry_limit times (via svn_auth_next_credentials()).
 * For infinite retries, set @a retry_limit to value less than 0.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_auth_save_credentials(svn_auth_iterstate_t*,apr_pool_t*)">
Save a set of credentials.
 *
 * Ask @a state to store the most recently returned credentials,
 * presumably because they successfully authenticated.
 * All allocations should be done in @a pool.
 *
 * If no credentials were ever returned, do nothing.

</member>
        <member name="M:svn_auth_next_credentials(System.Void**,svn_auth_iterstate_t*,apr_pool_t*)">
Get another set of credentials, assuming previous ones failed to
 * authenticate.
 *
 * Use @a state to fetch a different set of @a *credentials, as a
 * follow-up to svn_auth_first_credentials() or
 * svn_auth_next_credentials().  If no more credentials are available,
 * set @a *credentials to NULL.
 *
 * Note that @a *credentials will be allocated in @c auth_baton's pool.

</member>
        <member name="M:svn_auth_first_credentials(System.Void**,svn_auth_iterstate_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_auth_baton_t*,apr_pool_t*)">
Universal run-time parameters, made available to all providers.

    If you are writing a new provider, then to be a "good citizen",
    you should notice these global parameters!  Note that these
    run-time params should be treated as read-only by providers; the
    application is responsible for placing them into the auth_baton
    hash. 
The auth-hash prefix indicating that the parameter is global. 
@name Default credentials defines
Any 'default' credentials that came in through the application itself,
(e.g. --username and --password options). Property values are
const char *.
@{ 
@} 
@brief The application doesn't want any providers to prompt
 * users. Property value is irrelevant; only property's existence
 * matters. 
@brief The application doesn't want any providers to save passwords
 * to disk. Property value is irrelevant; only property's existence
 * matters. 
@brief Indicates whether providers may save passwords to disk in
 * plaintext. Property value can be either SVN_CONFIG_TRUE,
 * SVN_CONFIG_FALSE, or SVN_CONFIG_ASK. 
@brief The application doesn't want any providers to save passphrase
 * to disk. Property value is irrelevant; only property's existence
 * matters. 
@brief Indicates whether providers may save passphrase to disk in
 * plaintext. Property value can be either SVN_CONFIG_TRUE,
 * SVN_CONFIG_FALSE, or SVN_CONFIG_ASK. 
@brief The application doesn't want any providers to save credentials
 * to disk. Property value is irrelevant; only property's existence
 * matters. 
@brief The following property is for SSL server cert providers. This
 * provides a pointer to an @c apr_uint32_t containing the failures
 * detected by the certificate validator. 
@brief The following property is for SSL server cert providers. This
 * provides the cert info (svn_auth_ssl_server_cert_info_t). 
Some providers need access to the @c svn_config_t configuration. 
@deprecated Provided for backward compatibility with the 1.5 API. 
The current server group. 
@brief A configuration directory that overrides the default
 * ~/.subversion. 
Get an initial set of credentials.
 *
 * Ask @a auth_baton to set @a *credentials to a set of credentials
 * defined by @a cred_kind and valid within @a realmstring, or NULL if
 * no credentials are available.  Otherwise, return an iteration state
 * in @a *state, so that the caller can call
 * svn_auth_next_credentials(), in case the first set of credentials
 * fails to authenticate.
 *
 * Use @a pool to allocate @a *state, and for temporary allocation.
 * Note that @a *credentials will be allocated in @a auth_baton's pool.

</member>
        <member name="M:svn_auth_get_parameter(svn_auth_baton_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Get an authentication run-time parameter.
 *
 * Return a value for run-time parameter @a name from @a auth_baton.
 * Return NULL if the parameter doesn't exist.

</member>
        <member name="M:svn_auth_set_parameter(svn_auth_baton_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Void!System.Runtime.CompilerServices.IsConst*)">
Set an authentication run-time parameter.
 *
 * Store @a name / @a value pair as a run-time parameter in @a
 * auth_baton, making the data accessible to all providers.  @a name
 * and @a value will NOT be duplicated into the auth_baton's pool.
 * To delete a run-time parameter, pass NULL for @a value.

</member>
        <member name="M:svn_auth_open(svn_auth_baton_t**,apr_array_header_t*,apr_pool_t*)">
Initialize an authentication system.
 *
 * Return an authentication object in @a *auth_baton (allocated in @a
 * pool) that represents a particular instance of the svn
 * authentication system.  @a providers is an array of @c
 * svn_auth_provider_object_t pointers, already allocated in @a pool
 * and intentionally ordered.  These pointers will be stored within @a
 * *auth_baton, grouped by credential type, and searched in this exact
 * order.

</member>
        <member name="D:svn_auth_plaintext_passphrase_prompt_func_t">
A type of callback function for asking whether storing a passphrase to
 * disk in plaintext is allowed.
 *
 * In this callback, the client should ask the user whether storing
 * a passphrase for the realm identified by @a realmstring to disk
 * in plaintext is allowed.
 *
 * The answer is returned in @a *may_save_plaintext.
 * @a baton is an implementation-specific closure.
 * All allocations should be done in @a pool.
 *
 * @since New in 1.6

</member>
        <member name="D:svn_auth_plaintext_prompt_func_t">
A type of callback function for asking whether storing a password to
 * disk in plaintext is allowed.
 *
 * In this callback, the client should ask the user whether storing
 * a password for the realm identified by @a realmstring to disk
 * in plaintext is allowed.
 *
 * The answer is returned in @a *may_save_plaintext.
 * @a baton is an implementation-specific closure.
 * All allocations should be done in @a pool.
 *
 * @since New in 1.6

</member>
        <member name="D:svn_auth_ssl_client_cert_pw_prompt_func_t">
Set @a *cred by prompting the user, allocating @a *cred in @a pool.
 * @a baton is an implementation-specific closure.  @a realm is a string
 * identifying the certificate, and can be used in the prompt string.
 *
 * If @a may_save is FALSE, the auth system does not allow the credentials
 * to be saved (to disk). A prompt function shall not ask the user if the
 * credentials shall be saved if @a may_save is FALSE. For example, a GUI
 * client with a remember password checkbox would grey out the checkbox if
 * @a may_save is FALSE.

</member>
        <member name="D:svn_auth_ssl_client_cert_prompt_func_t">
Set @a *cred by prompting the user, allocating @a *cred in @a pool.
 * @a baton is an implementation-specific closure.  @a realm is a string
 * that can be used in the prompt string.
 *
 * If @a may_save is FALSE, the auth system does not allow the credentials
 * to be saved (to disk). A prompt function shall not ask the user if the
 * credentials shall be saved if @a may_save is FALSE. For example, a GUI
 * client with a remember certificate checkbox would grey out the checkbox
 * if @a may_save is FALSE.

</member>
        <member name="D:svn_auth_ssl_server_trust_prompt_func_t">
@name SSL server certificate failure bits
 *
 * @note These values are stored in the on disk auth cache by the SSL
 * server certificate auth provider, so the meaning of these bits must
 * not be changed.
 * @{

Certificate is not yet valid. 
Certificate has expired. 
Certificate's CN (hostname) does not match the remote hostname. 
@brief Certificate authority is unknown (i.e. not trusted) 
@brief Other failure. This can happen if neon has introduced a new
 * failure bit that we do not handle yet. 
@} 
Set @a *cred by prompting the user, allocating @a *cred in @a pool.
 * @a baton is an implementation-specific closure.
 *
 * @a cert_info is a structure describing the server cert that was
 * presented to the client, and @a failures is a bitmask that
 * describes exactly why the cert could not be automatically validated,
 * composed from the constants SVN_AUTH_SSL_* (@c SVN_AUTH_SSL_NOTYETVALID
 * etc.).  @a realm is a string that can be used in the prompt string.
 *
 * If @a may_save is FALSE, the auth system does not allow the credentials
 * to be saved (to disk). A prompt function shall not ask the user if the
 * credentials shall be saved if @a may_save is FALSE. For example, a GUI
 * client with a trust permanently checkbox would grey out the checkbox if
 * @a may_save is FALSE.

</member>
        <member name="D:svn_auth_username_prompt_func_t">
Set @a *cred by prompting the user, allocating @a *cred in @a pool.
 * @a baton is an implementation-specific closure.
 *
 * If @a realm is non-NULL, maybe use it in the prompt string.
 *
 * If @a may_save is FALSE, the auth system does not allow the credentials
 * to be saved (to disk). A prompt function shall not ask the user if the
 * credentials shall be saved if @a may_save is FALSE. For example, a GUI
 * client with a remember username checkbox would grey out the checkbox if
 * @a may_save is FALSE.

</member>
        <member name="D:svn_auth_simple_prompt_func_t">
Credential-constructing prompt functions. *
These exist so that different client applications can use
 * different prompt mechanisms to supply the same credentials.  For
 * example, if authentication requires a username and password, a
 * command-line client's prompting function might prompt first for the
 * username and then for the password, whereas a GUI client's would
 * present a single dialog box asking for both, and a telepathic
 * client's would read all the information directly from the user's
 * mind.  All these prompting functions return the same type of
 * credential, but the information used to construct the credential is
 * gathered in an interface-specific way in each case.

Set @a *cred by prompting the user, allocating @a *cred in @a pool.
 * @a baton is an implementation-specific closure.
 *
 * If @a realm is non-NULL, maybe use it in the prompt string.
 *
 * If @a username is non-NULL, then the user might be prompted only
 * for a password, but @a *cred would still be filled with both
 * username and password.  For example, a typical usage would be to
 * pass @a username on the first call, but then leave it NULL for
 * subsequent calls, on the theory that if credentials failed, it's
 * as likely to be due to incorrect username as incorrect password.
 *
 * If @a may_save is FALSE, the auth system does not allow the credentials
 * to be saved (to disk). A prompt function shall not ask the user if the
 * credentials shall be saved if @a may_save is FALSE. For example, a GUI
 * client with a remember password checkbox would grey out the checkbox if
 * @a may_save is FALSE.

</member>
        <member name="F:svn_auth_cred_ssl_server_trust_t.accepted_failures">
Bit mask of the accepted failures 
</member>
        <member name="F:svn_auth_cred_ssl_server_trust_t.may_save">
Indicates if the credentials may be saved (to disk). For example, a
   * GUI prompt implementation with a checkbox to accept the certificate
   * permanently shall set @a may_save to TRUE if the checkbox is checked.

</member>
        <member name="T:svn_auth_cred_ssl_server_trust_t">
@c SVN_AUTH_CRED_SSL_SERVER_TRUST credentials. 
</member>
        <member name="M:svn_auth_ssl_server_cert_info_dup(svn_auth_ssl_server_cert_info_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return a deep copy of @a info, allocated in @a pool.

 @since New in 1.3.

</member>
        <member name="F:svn_auth_ssl_server_cert_info_t.ascii_cert">
Base-64 encoded DER certificate representation 
</member>
        <member name="F:svn_auth_ssl_server_cert_info_t.issuer_dname">
DN of the certificate issuer 
</member>
        <member name="F:svn_auth_ssl_server_cert_info_t.valid_until">
ASCII date until which the certificate is valid 
</member>
        <member name="F:svn_auth_ssl_server_cert_info_t.valid_from">
ASCII date from which the certificate is valid 
</member>
        <member name="F:svn_auth_ssl_server_cert_info_t.fingerprint">
ASCII fingerprint 
</member>
        <member name="F:svn_auth_ssl_server_cert_info_t.hostname">
Primary CN 
</member>
        <member name="T:svn_auth_ssl_server_cert_info_t">
SSL server verification credential type.
 *
 * The following auth parameters are available to the providers:
 *
 * - @c SVN_AUTH_PARAM_CONFIG_CATEGORY_SERVERS (@c svn_config_t*)
 * - @c SVN_AUTH_PARAM_SERVER_GROUP (@c char*)
 * - @c SVN_AUTH_PARAM_SSL_SERVER_FAILURES (@c apr_uint32_t*)
 * - @c SVN_AUTH_PARAM_SSL_SERVER_CERT_INFO
 *      (@c svn_auth_ssl_server_cert_info_t*)
 *
 * The following optional auth parameters are relevant to the providers:
 *
 * - @c SVN_AUTH_PARAM_NO_AUTH_CACHE (@c void*)

SSL server certificate information used by @c
 * SVN_AUTH_CRED_SSL_SERVER_TRUST providers.

</member>
        <member name="F:svn_auth_cred_ssl_client_cert_pw_t.may_save">
Indicates if the credentials may be saved (to disk). For example, a
   * GUI prompt implementation with a remember password checkbox shall set
   * @a may_save to TRUE if the checkbox is checked.

</member>
        <member name="F:svn_auth_cred_ssl_client_cert_pw_t.password">
Certificate password 
</member>
        <member name="T:svn_auth_cred_ssl_client_cert_pw_t">
SSL client certificate passphrase credential type.
 *
 * @note The realmstring used with this credential type must be a name that
 * makes it possible for the user to identify the certificate.
 *
 * The following auth parameters are available to the providers:
 *
 * - @c SVN_AUTH_PARAM_CONFIG_CATEGORY_CONFIG (@c svn_config_t*)
 * - @c SVN_AUTH_PARAM_CONFIG_CATEGORY_SERVERS (@c svn_config_t*)
 * - @c SVN_AUTH_PARAM_SERVER_GROUP (@c char*)
 *
 * The following optional auth parameters are relevant to the providers:
 *
 * - @c SVN_AUTH_PARAM_NO_AUTH_CACHE (@c void*)

@c SVN_AUTH_CRED_SSL_CLIENT_CERT_PW credentials. 
</member>
        <member name="D:svn_auth_ssl_client_cert_pw_provider_func_t">
A function returning an SSL client certificate passphrase provider. 
</member>
        <member name="F:svn_auth_cred_ssl_client_cert_t.may_save">
Indicates if the credentials may be saved (to disk). For example, a
   * GUI prompt implementation with a remember certificate checkbox shall
   * set @a may_save to TRUE if the checkbox is checked.

</member>
        <member name="F:svn_auth_cred_ssl_client_cert_t.cert_file">
Absolute path to the certificate file 
</member>
        <member name="T:svn_auth_cred_ssl_client_cert_t">
SSL client certificate credential type.
 *
 * The following auth parameters are available to the providers:
 *
 * - @c SVN_AUTH_PARAM_CONFIG_CATEGORY_SERVERS (@c svn_config_t*)
 * - @c SVN_AUTH_PARAM_SERVER_GROUP (@c char*)
 *
 * The following optional auth parameters are relevant to the providers:
 *
 * - @c SVN_AUTH_PARAM_NO_AUTH_CACHE (@c void*)

@c SVN_AUTH_CRED_SSL_CLIENT_CERT credentials. 
</member>
        <member name="F:svn_auth_cred_username_t.may_save">
Indicates if the credentials may be saved (to disk). For example, a
   * GUI prompt implementation with a remember username checkbox shall set
   * @a may_save to TRUE if the checkbox is checked.

</member>
        <member name="F:svn_auth_cred_username_t.username">
Username 
</member>
        <member name="T:svn_auth_cred_username_t">
Username credential kind.
 *
 * The following optional auth parameters are relevant to the providers:
 *
 * - @c SVN_AUTH_PARAM_NO_AUTH_CACHE (@c void*)
 * - @c SVN_AUTH_PARAM_DEFAULT_USERNAME (@c char*)

@c SVN_AUTH_CRED_USERNAME credentials. 
</member>
        <member name="F:svn_auth_cred_simple_t.may_save">
Indicates if the credentials may be saved (to disk). For example, a
   * GUI prompt implementation with a remember password checkbox shall set
   * @a may_save to TRUE if the checkbox is checked.

</member>
        <member name="F:svn_auth_cred_simple_t.password">
Password 
</member>
        <member name="F:svn_auth_cred_simple_t.username">
Username 
</member>
        <member name="T:svn_auth_cred_simple_t">
Specific types of credentials *
Simple username/password pair credential kind.
 *
 * The following auth parameters are available to the providers:
 *
 * - @c SVN_AUTH_PARAM_CONFIG_CATEGORY_CONFIG (@c svn_config_t*)
 * - @c SVN_AUTH_PARAM_CONFIG_CATEGORY_SERVERS (@c svn_config_t*)
 *
 * The following auth parameters may be available to the providers:
 *
 * - @c SVN_AUTH_PARAM_NO_AUTH_CACHE (@c void*)
 * - @c SVN_AUTH_PARAM_DEFAULT_USERNAME (@c char*)
 * - @c SVN_AUTH_PARAM_DEFAULT_PASSWORD (@c char*)

@c SVN_AUTH_CRED_SIMPLE credentials. 
</member>
        <member name="D:svn_auth_simple_provider_func_t">
The type of function returning authentication provider. 
</member>
        <member name="T:svn_auth_provider_object_t">
A provider object, ready to be put into an array and given to
    svn_auth_open(). 
</member>
        <member name="F:svn_auth_provider_t.save_credentials">
Save credentials.
   *
   * Store @a credentials for future use.  @a provider_baton is
   * general context for the vtable, and @a parameters contains any
   * run-time data the provider may need.  Set @a *saved to TRUE if
   * the save happened, or FALSE if not.  The provider is not required
   * to save; if it refuses or is unable to save for non-fatal
   * reasons, return FALSE.  If the provider never saves data, then
   * this function pointer should simply be NULL. @a realmstring comes
   * from the svn_auth_first_credentials() call.

</member>
        <member name="F:svn_auth_provider_t.next_credentials">
Get a different set of credentials.
   *
   * Set @a *credentials to another set of valid credentials (using @a
   * iter_baton as the context from previous call to first_credentials
   * or next_credentials).  If no more credentials are available, set
   * @a *credentials to NULL.  If the provider only has one set of
   * credentials, this function pointer should simply be NULL. @a
   * provider_baton is general context for the vtable, @a parameters
   * contains any run-time data that the provider may need, and @a
   * realmstring comes from the svn_auth_first_credentials() call.

</member>
        <member name="F:svn_auth_provider_t.first_credentials">
Get an initial set of credentials.
   *
   * Set @a *credentials to a set of valid credentials within @a
   * realmstring, or NULL if no credentials are available.  Set @a
   * *iter_baton to context that allows a subsequent call to @c
   * next_credentials, in case the first credentials fail to
   * authenticate.  @a provider_baton is general context for the
   * vtable, @a parameters contains any run-time data that the
   * provider may need, and @a realmstring comes from the
   * svn_auth_first_credentials() call.

</member>
        <member name="F:svn_auth_provider_t.cred_kind">
The kind of credentials this provider knows how to retrieve. 
</member>
        <member name="T:svn_auth_provider_t">
The main authentication "provider" vtable. 
</member>
        <member name="T:svn_auth_iterstate_t">
The type of a Subversion authentication-iteration object 
</member>
        <member name="T:svn_auth_baton_t">
Overview of the svn authentication system.
 *
 * We define an authentication "provider" as a module that is able to
 * return a specific set of credentials. (e.g. username/password,
 * certificate, etc.)  Each provider implements a vtable that
 *
 * - can fetch initial credentials
 * - can retry the fetch (or try to fetch something different)
 * - can store the credentials for future use
 *
 * For any given type of credentials, there can exist any number of
 * separate providers -- each provider has a different method of
 * fetching. (i.e. from a disk store, by prompting the user, etc.)
 *
 * The application begins by creating an auth baton object, and
 * "registers" some number of providers with the auth baton, in a
 * specific order.  (For example, it may first register a
 * username/password provider that looks in disk store, then register
 * a username/password provider that prompts the user.)
 *
 * Later on, when any svn library is challenged, it asks the auth
 * baton for the specific credentials.  If the initial credentials
 * fail to authenticate, the caller keeps requesting new credentials.
 * Under the hood, libsvn_auth effectively "walks" over each provider
 * (in order of registry), one at a time, until all the providers have
 * exhausted all their retry options.
 *
 * This system allows an application to flexibly define authentication
 * behaviors (by changing registration order), and very easily write
 * new authentication providers.
 *
 * An auth_baton also contains an internal hashtable of run-time
 * parameters; any provider or library layer can set these run-time
 * parameters at any time, so that the provider has access to the
 * data.  (For example, certain run-time data may not be available
 * until an authentication challenge is made.)  Each credential type
 * must document the run-time parameters that are made available to
 * its providers.
 *
 * @defgroup auth_fns Authentication functions
 * @{

The type of a Subversion authentication object 
</member>
        <member name="M:svn_config_get_user_config_path(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Put the absolute path to the user's configuration directory,
 * or to a file within that directory, into @a *path.
 *
 * If @a config_dir is not NULL, it must point to an alternative
 * config directory location. If it is NULL, the default location
 * is used.  If @a fname is not NULL, it must specify the last
 * component of the path to be returned. This can be used to create
 * a path to any file in the configuration directory.
 *
 * Do all allocations in @a pool.
 *
 * Hint:
 * To get the user configuration file, pass @c SVN_CONFIG_CATEGORY_CONFIG
 * for @a fname. To get the servers configuration file, pass
 * @c SVN_CONFIG_CATEGORY_SERVERS for @a fname.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_config_write_auth_data(apr_hash_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Use @a cred_kind and @a realmstring to create or overwrite a file
 * within the ~/.subversion/auth/ area.  Write the contents of @a hash into
 * the file.  If @a config_dir is not NULL it specifies a directory to read
 * the config overriding all other sources.
 *
 * Also, add @a realmstring to the file, with key @c
 * SVN_CONFIG_REALMSTRING_KEY.  This allows programs (or users) to
 * verify exactly which set credentials live within the file.
 *
 * The hashtable must contain <tt>const char *</tt> keys and
 * <tt>svn_string_t *</tt> values.

</member>
        <member name="M:svn_config_read_auth_data(apr_hash_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Accessing cached authentication data in the user config area.
 *
 * @defgroup cached_authentication_data Cached authentication data
 * @{

A hash-key pointing to a realmstring.  Every file containing
 * authentication data should have this key.

Use @a cred_kind and @a realmstring to locate a file within the
 * ~/.subversion/auth/ area.  If the file exists, initialize @a *hash
 * and load the file contents into the hash, using @a pool.  If the
 * file doesn't exist, set @a *hash to NULL.
 *
 * If @a config_dir is not NULL it specifies a directory from which to
 * read the config overriding all other sources.
 *
 * Besides containing the original credential fields, the hash will
 * also contain @c SVN_CONFIG_REALMSTRING_KEY.  The caller can examine
 * this value as a sanity-check that the correct file was loaded.
 *
 * The hashtable will contain <tt>const char *</tt> keys and
 * <tt>svn_string_t *</tt> values.

</member>
        <member name="M:svn_config_ensure(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Try to ensure that the user's ~/.subversion/ area exists, and create
 * no-op template files for any absent config files.  Use @a pool for any
 * temporary allocation.  If @a config_dir is not @c NULL it specifies a
 * directory from which to read the config overriding all other sources.
 *
 * Don't error if something exists but is the wrong kind (for example,
 * ~/.subversion exists but is a file, or ~/.subversion/servers exists
 * but is a directory).
 *
 * Also don't error if trying to create something and failing -- it's
 * okay for the config area or its contents not to be created.
 * However, if creating a config template file succeeds, return an
 * error if unable to initialize its contents.

</member>
        <member name="M:svn_config_get_server_setting_bool(svn_config_t*,System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32)">
Set @a *valuep according to @a option_name for a given
 * @a  server_group in @a cfg, or set to @a default_value if no value is
 * specified.
 *
 * Check first a default, then for an override in a server group.  If
 * a value is found but is not a valid boolean, return an
 * SVN_ERR_BAD_CONFIG_VALUE error.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_config_get_server_setting_int(svn_config_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int64,System.Int64*,apr_pool_t*)">
Retrieve value into @a result_value corresponding to @a option_name for a
 *  given @a server_group in @a cfg, or return @a default_value if none is
 *  found.
 *
 *  The config will first be checked for a default, then will be checked for
 *  an override in a server group. If the value found is not a valid integer,
 *  a @c svn_error_t* will be returned.

</member>
        <member name="M:svn_config_get_server_setting(svn_config_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Retrieve value corresponding to @a option_name in @a cfg, or
 *  return @a default_value if none is found.
 *
 *  The config will first be checked for a default.
 *  If @a server_group is not @c NULL, the config will also be checked
 *  for an override in a server group,
 *

</member>
        <member name="M:svn_config_find_group(svn_config_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Enumerate the group @a master_section in @a cfg.  Each variable
 * value is interpreted as a list of glob patterns (separated by comma
 * and optional whitespace).  Return the name of the first variable
 * whose value matches @a key, or @c NULL if no variable matches.

</member>
        <member name="M:svn_config_has_section(svn_config_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
 Return @c TRUE if @a section exists in @a cfg, @c FALSE otherwise.

 @since New in 1.4.

</member>
        <member name="M:svn_config_enumerate2(svn_config_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,=FUNC:System.Int32(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*),System.Void*,apr_pool_t*)">
Enumerate the options in @a section, passing @a baton and the current
 * option's name and value to @a callback.  Continue the enumeration if
 * @a callback returns @c TRUE.  Return the number of times @a callback
 * was called.
 *
 * ### kff asks: A more usual interface is to continue enumerating
 *     while @a callback does not return error, and if @a callback does
 *     return error, to return the same error (or a wrapping of it)
 *     from svn_config_enumerate().  What's the use case for
 *     svn_config_enumerate()?  Is it more likely to need to break out
 *     of an enumeration early, with no error, than an invocation of
 *     @a callback is likely to need to return an error? ###
 *
 * @a callback's @a name and @a value parameters are only valid for the
 * duration of the call.
 *
 * @since New in 1.3.

</member>
        <member name="D:svn_config_enumerator2_t">
A callback function used in enumerating config options.
 *
 * See svn_config_enumerate2() for the details of this type.
 *
 * @since New in 1.3.

</member>
        <member name="M:svn_config_enumerate(svn_config_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,=FUNC:System.Int32(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Void*),System.Void*)">
Similar to svn_config_enumerate2(), but uses a memory pool of
 * @a cfg instead of one that is explicitely provided.
 *
 * @deprecated Provided for backwards compatibility with the 1.2 API.

</member>
        <member name="D:svn_config_enumerator_t">
Similar to @c svn_config_enumerator2_t, but is not
 * provided with a memory pool argument.
 * See svn_config_enumerate() for the details of this type.
 *
 * @deprecated Provided for backwards compatibility with the 1.2 API.

</member>
        <member name="M:svn_config_enumerate_sections2(svn_config_t*,=FUNC:System.Int32(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Void*,apr_pool_t*),System.Void*,apr_pool_t*)">
Enumerate the sections, passing @a baton and the current section's name
 * to @a callback.  Continue the enumeration if @a callback returns @c TRUE.
 * Return the number of times @a callback was called.
 *
 * ### See kff's comment to svn_config_enumerate2().  It applies to this
 * function, too. ###
 *
 * @a callback's @a name parameter is only valid for the duration of the call.
 *
 * @since New in 1.3.

</member>
        <member name="D:svn_config_section_enumerator2_t">
A callback function used in enumerating config sections.
 *
 * See svn_config_enumerate_sections2() for the details of this type.
 *
 * @since New in 1.3.

</member>
        <member name="M:svn_config_enumerate_sections(svn_config_t*,=FUNC:System.Int32(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Void*),System.Void*)">
Similar to svn_config_enumerate_sections2(), but uses a memory pool of
 * @a cfg instead of one that is explicitely provided.
 *
 * @deprecated Provided for backwards compatibility with the 1.2 API.

</member>
        <member name="D:svn_config_section_enumerator_t">
Similar to @c svn_config_section_enumerator2_t, but is not
 * provided with a memory pool argument.
 *
 * See svn_config_enumerate_sections() for the details of this type.
 *
 * @deprecated Provided for backwards compatibility with the 1.2 API.

</member>
        <member name="M:svn_config_get_yes_no_ask(svn_config_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Like svn_config_get(), but only for yes/no/ask values.
 *
 * Parse @a option in @a section and set @a *valuep to one of
 * SVN_CONFIG_TRUE, SVN_CONFIG_FALSE, or SVN_CONFIG_ASK.  If there is
 * no setting for @a option, then parse @a default_value and set
 * @a *valuep accordingly.  If @a default_value is NULL, the result is
 * undefined, and may be an error; we recommend that you pass one of
 * SVN_CONFIG_TRUE, SVN_CONFIG_FALSE, or SVN_CONFIG_ASK for @a default value.
 *
 * Valid representations are (at least) "true"/"false", "yes"/"no",
 * "on"/"off", "1"/"0", and "ask"; they are case-insensitive.  Return
 * an SVN_ERR_BAD_CONFIG_VALUE error if either @a default_value or
 * @a option's value is not a valid representation.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_config_set_bool(svn_config_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32)">
Like svn_config_set(), but for boolean values.
 *
 * Sets the option to 'TRUE'/'FALSE', depending on @a value.

</member>
        <member name="M:svn_config_get_bool(svn_config_t*,System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32)">
Like svn_config_get(), but for boolean values.
 *
 * Parses the option as a boolean value. The recognized representations
 * are 'TRUE'/'FALSE', 'yes'/'no', 'on'/'off', '1'/'0'; case does not
 * matter. Returns an error if the option doesn't contain a known string.

</member>
        <member name="M:svn_config_set(svn_config_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Add or replace the value of a (@a section, @a option) pair in @a cfg with
 * @a value.
 *
 * This function invalidates all value expansions in @a cfg.
 *
 * To remove an option, pass NULL for the @c value.

</member>
        <member name="M:svn_config_get(svn_config_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Find the value of a (@a section, @a option) pair in @a cfg, set @a
 * *valuep to the value.
 *
 * If @a cfg is @c NULL, just sets @a *valuep to @a default_value. If
 * the value does not exist, expand and return @a default_value. @a
 * default_value can be NULL.
 *
 * The returned value will be valid at least until the next call to
 * svn_config_get(), or for the lifetime of @a default_value. It is
 * safest to consume the returned value immediately.
 *
 * This function may change @a cfg by expanding option values.

</member>
        <member name="M:svn_config_merge(svn_config_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32)">
Like svn_config_read(), but merges the configuration data from @a file
 * (a file or registry path) into @a *cfg, which was previously returned
 * from svn_config_read().  This function invalidates all value
 * expansions in @a cfg, so that the next svn_config_get() takes the
 * modifications into account.

</member>
        <member name="M:svn_config_read(svn_config_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Read configuration data from @a file (a file or registry path) into
 * @a *cfgp, allocated in @a pool.
 *
 * If @a file does not exist, then if @a must_exist, return an error,
 * otherwise return an empty @c svn_config_t.

</member>
        <member name="M:svn_config_get_config(apr_hash_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
@name Client configuration files strings
Strings for the names of files, sections, and options in the
client configuration files.
@{

@} 
@name Repository conf directory configuration files strings
 * Strings for the names of sections and options in the
 * repository conf directory configuration files.
 * @{

@} 
Read configuration information from the standard sources and merge it
 * into the hash @a *cfg_hash.  If @a config_dir is not NULL it specifies a
 * directory from which to read the configuration files, overriding all
 * other sources.  Otherwise, first read any system-wide configurations
 * (from a file or from the registry), then merge in personal
 * configurations (again from file or registry).  The hash and all its data
 * are allocated in @a pool.
 *
 * @a *cfg_hash is a hash whose keys are @c const char * configuration
 * categories (@c SVN_CONFIG_CATEGORY_SERVERS,
 * @c SVN_CONFIG_CATEGORY_CONFIG, etc.) and whose values are the @c
 * svn_config_t * items representing the configuration values for that
 * category.

</member>
        <member name="T:svn_config_t">
 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_ra.h
 @brief Repository Access

 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_types.h
 @brief Subversion's data types

 @copyright
 ====================================================================
 Copyright (c) 2000-2006 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_string.h
 @brief Counted-length strings for Subversion, plus some C string goodies.

 There are two string datatypes: @c svn_string_t and @c svn_stringbuf_t.
 The former is a simple pointer/length pair useful for passing around
 strings (or arbitrary bytes) with a counted length. @c svn_stringbuf_t is
 buffered to enable efficient appending of strings without an allocation
 and copy for each append operation.

 @c svn_string_t contains a <tt>const char *</tt> for its data, so it is
 most appropriate for constant data and for functions which expect constant,
 counted data. Functions should generally use <tt>const @c svn_string_t
 *</tt> as their parameter to indicate they are expecting a constant,
 counted string.

 @c svn_stringbuf_t uses a plain <tt>char *</tt> for its data, so it is
 most appropriate for modifiable data.

 <h3>Invariants</h3>

   1. Null termination:

      Both structures maintain a significant invariant:

         <tt>s-&gt;data[s-&gt;len] == '\\0'</tt>

      The functions defined within this header file will maintain
      the invariant (which does imply that memory is
      allocated/defined as @c len+1 bytes).  If code outside of the
      @c svn_string.h functions manually builds these structures,
      then they must enforce this invariant.

      Note that an @c svn_string(buf)_t may contain binary data,
      which means that strlen(s-&gt;data) does not have to equal @c
      s-&gt;len. The NULL terminator is provided to make it easier to
      pass @c s-&gt;data to C string interfaces.


   2. Non-NULL input:

      All the functions assume their input data is non-NULL,
      unless otherwise documented, and may seg fault if passed
      NULL.  The input data may *contain* null bytes, of course, just
      the data pointer itself must not be NULL.

 <h3>Memory allocation</h3>

   All the functions make a deep copy of all input data, and never store
   a pointer to the original input data.

 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_delta.h
 @brief Delta-parsing

 @copyright
 ====================================================================
 Copyright (c) 2002-2009 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_auth.h
 @brief Subversion's authentication system

 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_types.h
 @brief Subversion's data types

 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_config.h
 @brief Accessing SVN configuration files.

 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_types.h
 @brief Subversion's data types

Opaque structure describing a set of configuration options. 
</member>
        <member name="M:svn_opt_print_help(apr_getopt_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_opt_subcommand_desc_t!System.Runtime.CompilerServices.IsConst*,apr_getopt_option_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Same as svn_opt_print_help2(), but acts on #svn_opt_subcommand_desc_t.

 @deprecated Provided for backward compatibility with the 1.3 API.

</member>
        <member name="M:svn_opt_print_help2(apr_getopt_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_opt_subcommand_desc2_t!System.Runtime.CompilerServices.IsConst*,apr_getopt_option_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Same as svn_opt_print_help3(), but with @a global_options always @c
 NULL.

 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_opt_print_help3(apr_getopt_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_opt_subcommand_desc2_t!System.Runtime.CompilerServices.IsConst*,apr_getopt_option_t!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Central dispatcher function for various kinds of help message.
 Prints one of:
   * subcommand-specific help (svn_opt_subcommand_help)
   * generic help (svn_opt_print_generic_help)
   * version info
   * simple usage complaint: "Type '@a pgm_name help' for usage."

 If @a os is not @c NULL and it contains arguments, then try
 printing help for them as though they are subcommands, using @a
 cmd_table and @a option_table for option information.  If not @c
 NULL, @a global_options is a zero-terminated array of options taken
 by all subcommands.

 Else, if @a print_version is TRUE, then print version info, in
 brief form if @a quiet is also TRUE; if @a quiet is FALSE, then if
 @a version_footer is non-NULL, print it following the version
 information.

 Else, if @a os is not @c NULL and does not contain arguments, print
 generic help, via svn_opt_print_generic_help2() with the @a header,
 @a cmd_table, @a option_table, and @a footer arguments.

 Else, when @a os is @c NULL, print the simple usage complaint.

 Use @a pool for temporary allocations.

 Notes: The reason this function handles both version printing and
 general usage help is that a confused user might put both the
 --version flag *and* subcommand arguments on a help command line.
 The logic for handling such a situation should be in one place.

 @since New in 1.5.

</member>
        <member name="M:svn_opt_parse_path(svn_opt_revision_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Parse a working-copy or URL in @a path, extracting any trailing
 revision specifier of the form "@rev" from the last component of
 the path.

 Some examples would be:

    "foo/bar"                      -&gt; "foo/bar",       (unspecified)
    "foo/bar@13"                   -&gt; "foo/bar",       (number, 13)
    "foo/bar@HEAD"                 -&gt; "foo/bar",       (head)
    "foo/bar@{1999-12-31}"         -&gt; "foo/bar",       (date, 1999-12-31)
    "http://a/b@27"                -&gt; "http://a/b",    (number, 27)
    "http://a/b@COMMITTED"         -&gt; "http://a/b",    (committed) [*]
    "http://a/b@{1999-12-31}       -&gt; "http://a/b",    (date, 1999-12-31)
    "http://a/b@%7B1999-12-31%7D   -&gt; "http://a/b",    (date, 1999-12-31)
    "foo/bar@1:2"                  -&gt; error
    "foo/bar@baz"                  -&gt; error
    "foo/bar@"                     -&gt; "foo/bar",       (base)
    "foo/@bar@"                    -&gt; "foo/@bar",      (base)
    "foo/bar/@13"                  -&gt; "foo/bar/",      (number, 13)
    "foo/bar@@13"                  -&gt; "foo/bar@",      (number, 13)
    "foo/@bar@HEAD"                -&gt; "foo/@bar",      (head)
    "foo@/bar"                     -&gt; "foo@/bar",      (unspecified)
    "foo@HEAD/bar"                 -&gt; "foo@HEAD/bar",  (unspecified)
    "@foo/bar"                     -&gt; error
    "@foo/bar@"                    -&gt; "@foo/bar",      (unspecified)

   [*] Syntactically valid but probably not semantically useful.

 If a trailing revision specifier is found, parse it into @a *rev and
 put the rest of the path into @a *truepath, allocating from @a pool;
 or return an @c SVN_ERR_CL_ARG_PARSING_ERROR (with the effect on
 @a *truepath undefined) if the revision specifier is invalid.
 If no trailing revision specifier is found, set @a *truepath to
 @a path and @a rev-&gt;kind to @c svn_opt_revision_unspecified.

 This function does not require that @a path be in canonical form.
 No canonicalization is done and @a *truepath will only be in
 canonical form if @a path is in canonical form.

 @since New in 1.1.

</member>
        <member name="M:svn_opt_parse_all_args(apr_array_header_t**,apr_getopt_t*,apr_pool_t*)">
Parse all remaining arguments from @a os-&gt;argv, return them as
<tt>const char *</tt> in @a *args_p, without doing any UTF-8 conversion.
Allocate @a *args_p and its values in @a pool.

</member>
        <member name="M:svn_opt_parse_num_args(apr_array_header_t**,apr_getopt_t*,System.Int32,apr_pool_t*)">
Parse @a num_args non-target arguments from the list of arguments in
@a os-&gt;argv, return them as <tt>const char *</tt> in @a *args_p, without
doing any UTF-8 conversion.  Allocate @a *args_p and its values in @a pool.

</member>
        <member name="M:svn_opt_push_implicit_dot_target(apr_array_header_t*,apr_pool_t*)">
 If no targets exist in @a *targets, add `.' as the lone target.

 (Some commands take an implicit "." string argument when invoked
 with no arguments. Those commands make use of this function to
 add "." to the target array if the user passes no args.)

</member>
        <member name="M:svn_opt_parse_revprop(apr_hash_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Parse revprop key/value pair from @a revprop_spec (name[=value]) into
 @a revprops, making copies of both with @a pool.  If @a revprops is
 @c NULL, allocate a new apr_hash_t in it.  @a revprops maps
 const char * revprop names to svn_string_t * revprop values for use
 with svn_repos_get_commit_editor5 and other get_commit_editor APIs.

 @since New in 1.6.

</member>
        <member name="M:svn_opt_args_to_target_array(apr_array_header_t**,apr_getopt_t*,apr_array_header_t*,svn_opt_revision_t*,svn_opt_revision_t*,System.Int32,apr_pool_t*)">
 The same as svn_opt_args_to_target_array2() except that, in
 addition, if @a extract_revisions is set, then look for trailing
 "@rev" syntax on the first two paths.  If the first target in @a
 *targets_p ends in "@rev", replace it with a canonicalized version of
 the part before "@rev" and replace @a *start_revision with the value
 of "rev".  If the second target in @a *targets_p ends in "@rev",
 replace it with a canonicalized version of the part before "@rev"
 and replace @a *end_revision with the value of "rev".  Ignore
 revision specifiers on any further paths.  "rev" can be any form of
 single revision specifier, as accepted by svn_opt_parse_revision().

 @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_opt_args_to_target_array2(apr_array_header_t**,apr_getopt_t*,apr_array_header_t*,apr_pool_t*)">
 This is the same as svn_opt_args_to_target_array3() except that it
 silently ignores paths that have the same name as a working copy
 administrative directory.

 @since New in 1.2.

 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_opt_args_to_target_array3(apr_array_header_t**,apr_getopt_t*,apr_array_header_t*,apr_pool_t*)">
 Pull remaining target arguments from @a os into @a *targets_p,
 converting them to UTF-8, followed by targets from @a known_targets
 (which might come from, for example, the "--targets" command line
 option), which are already in UTF-8.

 On each URL target, do some IRI-to-URI encoding and some
 auto-escaping.  On each local path, canonicalize case and path
 separators.

 Allocate @a *targets_p and its elements in @a pool.

 If a path has the same name as a Subversion working copy
 administrative directory, return SVN_ERR_RESERVED_FILENAME_SPECIFIED;
 if multiple reserved paths are encountered, return a chain of
 errors, all of which are SVN_ERR_RESERVED_FILENAME_SPECIFIED.  Do
 not return this type of error in a chain with any other type of
 error, and if this is the only type of error encountered, complete
 the operation before returning the error(s).

 @deprecated Provided for backward compatibility with the 1.5 API.
 @see svn_client_args_to_target_array()

</member>
        <member name="M:svn_opt_resolve_revisions(svn_opt_revision_t*,svn_opt_revision_t*,System.Int32,System.Int32,apr_pool_t*)">
 Resolve peg revisions and operational revisions in the following way:

    - If @a is_url is set and @a peg_rev-&gt;kind is
      @c svn_opt_revision_unspecified, @a peg_rev-&gt;kind defaults to
      @c svn_opt_revision_head.

    - If @a is_url is not set, and @a peg_rev-&gt;kind is
      @c svn_opt_revision_unspecified, @a peg_rev-&gt;kind defaults to
      @c svn_opt_revision_base.

    - If @a op_rev-&gt;kind is @c svn_opt_revision_unspecified, @a op_rev
      defaults to @a peg_rev.

 Both @a peg_rev and @a op_rev may be modified as a result of this
 function.  @a is_url should be set if the path the revisions refer to is
 a url, and unset otherwise.

 If @a notice_local_mods is set, @c svn_opt_revision_working is used,
 instead of @c svn_opt_revision_base.

 Use @a pool for allocations.

 @since New in 1.5.

</member>
        <member name="M:svn_opt_parse_revision_to_range(apr_array_header_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Parse @a arg, where @a arg is "N" or "N:M", into a
 @c svn_opt_revision_range_t and push that onto @a opt_ranges.

    - If @a arg is "N", set the @c start field of the
      @c svn_opt_revision_range_t to represent N and the @c end field
      to @c svn_opt_revision_unspecified.

    - If @a arg is "N:M", set the @c start field of the
      @c svn_opt_revision_range_t to represent N and the @c end field
      to represent M.

 If @a arg is invalid, return -1; else return 0.  It is invalid to omit
 a revision (as in, ":", "N:" or ":M").

 Use @a pool to allocate @c svn_opt_revision_range_t pushed to the array.

 @since New in 1.5.

</member>
        <member name="M:svn_opt_parse_revision(svn_opt_revision_t*,svn_opt_revision_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Set @a *start_revision and/or @a *end_revision according to @a arg,
 where @a arg is "N" or "N:M", like so:

    - If @a arg is "N", set @a *start_revision to represent N, and
      leave @a *end_revision untouched.

    - If @a arg is "N:M", set @a *start_revision and @a *end_revision
      to represent N and M respectively.

 N and/or M may be one of the special revision descriptors
 recognized by revision_from_word(), or a date in curly braces.

 If @a arg is invalid, return -1; else return 0.
 It is invalid to omit a revision (as in, ":", "N:" or ":M").

 @note It is typical, though not required, for @a *start_revision and
 @a *end_revision to be @c svn_opt_revision_unspecified kind on entry.

 Use @a pool for temporary allocations.

</member>
        <member name="F:svn_opt_revision_range_t.end">
The last revision in the range 
</member>
        <member name="F:svn_opt_revision_range_t.start">
The first revision in the range 
</member>
        <member name="T:svn_opt_revision_range_t">
A revision range, specified in one of @c svn_opt_revision_kind ways. 
</member>
        <member name="T:svn_opt_revision_t">
A revision, specified in one of @c svn_opt_revision_kind ways. 
</member>
        <member name="F:svn_opt_revision_value_t.date">
the date of the revision 
</member>
        <member name="F:svn_opt_revision_value_t.number">
The revision number 
</member>
        <member name="T:svn_opt_revision_value_t">
 A revision value, which can be specified as a number or a date.

 @note This union was formerly an anonymous inline type in
 @c svn_opt_revision_t, and was converted to a named type just to
 make things easier for SWIG.

 @since New in 1.3.

</member>
        <member name="T:svn_opt_revision_kind">
 Various ways of specifying revisions.

 @note
 In contexts where local mods are relevant, the `working' kind
 refers to the uncommitted "working" revision, which may be modified
 with respect to its base revision.  In other contexts, `working'
 should behave the same as `committed' or `current'.

</member>
        <member name="F:svn_opt_revision_head">
repository youngest 
</member>
        <member name="F:svn_opt_revision_working">
current, plus local mods 
</member>
        <member name="F:svn_opt_revision_base">
.svn/entries current revision 
</member>
        <member name="F:svn_opt_revision_previous">
(rev of most recent change) - 1 
</member>
        <member name="F:svn_opt_revision_committed">
rev of most recent change 
</member>
        <member name="F:svn_opt_revision_date">
revision given as date 
</member>
        <member name="F:svn_opt_revision_number">
revision given as number 
</member>
        <member name="F:svn_opt_revision_unspecified">
No revision information given. 
</member>
        <member name="M:svn_opt_subcommand_help(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_opt_subcommand_desc_t!System.Runtime.CompilerServices.IsConst*,apr_getopt_option_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Same as svn_opt_subcommand_help2(), but acts on
 #svn_opt_subcommand_desc_t.

 @deprecated Provided for backward compatibility with the 1.3 API.

</member>
        <member name="M:svn_opt_subcommand_help2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_opt_subcommand_desc2_t!System.Runtime.CompilerServices.IsConst*,apr_getopt_option_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Same as svn_opt_subcommand_help3(), but with @a global_options
 always NULL.

 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_opt_subcommand_help3(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_opt_subcommand_desc2_t!System.Runtime.CompilerServices.IsConst*,apr_getopt_option_t!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Get @a subcommand's usage from @a table, and print it to @c stdout.
 Obtain option usage from @a options_table.  If not @c NULL, @a
 global_options is a zero-terminated list of global options.  Use @a
 pool for temporary allocation.  @a subcommand may be a canonical
 command name or an alias.  ### @todo Why does this only print to
 @c stdout, whereas svn_opt_print_generic_help() gives us a choice?

 @since New in 1.5.

</member>
        <member name="M:svn_opt_format_option(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,apr_getopt_option_t!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Print an option @a opt nicely into a @a string allocated in @a pool.
If @a doc is set, include the generic documentation string of @a opt,
localized to the current locale if a translation is available.

</member>
        <member name="M:svn_opt_print_generic_help(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_opt_subcommand_desc_t!System.Runtime.CompilerServices.IsConst*,apr_getopt_option_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*,_iobuf*)">
 Same as svn_opt_print_generic_help2(), but acts on
 #svn_opt_subcommand_desc_t.

 @deprecated Provided for backward compatibility with the 1.3 API.

</member>
        <member name="M:svn_opt_print_generic_help2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_opt_subcommand_desc2_t!System.Runtime.CompilerServices.IsConst*,apr_getopt_option_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*,_iobuf*)">
 Print a generic (not command-specific) usage message to @a stream.

 ### @todo Why is @a stream a stdio file instead of an svn stream?

 If @a header is non-NULL, print @a header followed by a newline.  Then
 loop over @a cmd_table printing the usage for each command (getting
 option usages from @a opt_table).  Then if @a footer is non-NULL, print
 @a footer followed by a newline.

 Use @a pool for temporary allocation.

 @since New in 1.4.

</member>
        <member name="M:svn_opt_subcommand_takes_option(svn_opt_subcommand_desc_t!System.Runtime.CompilerServices.IsConst*,System.Int32)">
 Return @c TRUE iff subcommand @a command supports option @a option_code,
 else return @c FALSE.

 Same as svn_opt_subcommand_takes_option2(), but acts on
 #svn_opt_subcommand_desc_t.

 @deprecated Provided for backward compatibility with the 1.3 API.

</member>
        <member name="M:svn_opt_subcommand_takes_option2(svn_opt_subcommand_desc2_t!System.Runtime.CompilerServices.IsConst*,System.Int32)">
 Same as svn_opt_subcommand_takes_option3(), but with @c NULL for @a
 global_options.

 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_opt_subcommand_takes_option3(svn_opt_subcommand_desc2_t!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32!System.Runtime.CompilerServices.IsConst*)">
 Return @c TRUE iff subcommand @a command supports option @a
 option_code, else return @c FALSE.  If @a global_options is
 non-NULL, it is a zero-terminated array, and all subcommands take
 the options listed in it.

 @since New in 1.5.

</member>
        <member name="M:svn_opt_get_option_from_code(System.Int32,apr_getopt_option_t!System.Runtime.CompilerServices.IsConst*)">
 Return the first entry from @a option_table whose option code is @a code,
 or @c NULL if no match.  @a option_table must end with an element whose
 every field is zero.

 @deprecated Provided for backward compatibility with the 1.3 API.

</member>
        <member name="M:svn_opt_get_option_from_code2(System.Int32,apr_getopt_option_t!System.Runtime.CompilerServices.IsConst*,svn_opt_subcommand_desc2_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return pointer to an @c apr_getopt_option_t for the option whose
 option code is @a code, or @c NULL if no match.  @a option_table must end
 with an element whose every field is zero.  If @c command is non-NULL,
 then return the subcommand-specific option description instead of the
 generic one, if a specific description is defined.

 The returned value may be statically allocated, or allocated in @a pool.

 @since New in 1.4.

</member>
        <member name="M:svn_opt_get_canonical_subcommand(svn_opt_subcommand_desc_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
 Return the entry in @a table whose name matches @a cmd_name, or @c NULL if
 none.  @a cmd_name may be an alias.

 Same as svn_opt_get_canonical_subcommand2(), but acts on
 #svn_opt_subcommand_desc_t.

 @deprecated Provided for backward compatibility with the 1.3 API.

</member>
        <member name="M:svn_opt_get_canonical_subcommand2(svn_opt_subcommand_desc2_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
 Return the entry in @a table whose name matches @a cmd_name, or @c NULL if
 none.  @a cmd_name may be an alias.

 @since New in 1.4.

</member>
        <member name="F:svn_opt_subcommand_desc_t.valid_options">
A list of options accepted by this command.  Each value in the
   * array is a unique enum (the 2nd field in apr_getopt_option_t)

</member>
        <member name="F:svn_opt_subcommand_desc_t.help">
A brief string describing this command, for usage messages. 
</member>
        <member name="F:svn_opt_subcommand_desc_t.aliases">
A list of alias names for this command (e.g., 'up' for 'update'). 
</member>
        <member name="F:svn_opt_subcommand_desc_t.cmd_func">
The function this command invokes. 
</member>
        <member name="F:svn_opt_subcommand_desc_t.name">
The full name of this command. 
</member>
        <member name="T:svn_opt_subcommand_desc_t">
One element of a subcommand dispatch table.
 *
 * @deprecated Provided for backward compatibility with the 1.3 API.
 *
 * Like #svn_opt_subcommand_desc2_t but lacking the @c desc_overrides
 * member.

</member>
        <member name="F:svn_opt_subcommand_desc2_t.valid_options">
A list of options accepted by this command.  Each value in the
   * array is a unique enum (the 2nd field in apr_getopt_option_t)

</member>
        <member name="F:svn_opt_subcommand_desc2_t.help">
A brief string describing this command, for usage messages. 
</member>
        <member name="F:svn_opt_subcommand_desc2_t.aliases">
A list of alias names for this command (e.g., 'up' for 'update'). 
</member>
        <member name="F:svn_opt_subcommand_desc2_t.cmd_func">
The function this command invokes. 
</member>
        <member name="F:svn_opt_subcommand_desc2_t.name">
The full name of this command. 
</member>
        <member name="T:svn_opt_subcommand_desc2_t">
The maximum number of aliases a subcommand can have. 
The maximum number of options that can be accepted by a subcommand. 
Options that have no short option char should use an identifying
 * integer equal to or greater than this.

One element of a subcommand dispatch table.
 *
 * @since New in 1.4.

</member>
        <member name="D:svn_opt_subcommand_t">
 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_opt.h
 @brief Option and argument parsing for Subversion command lines

 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_types.h
 @brief Subversion's data types

 All subcommand procedures in Subversion conform to this prototype.

 @a os is the apr option state after getopt processing has been run; in
 other words, it still contains the non-option arguments following
 the subcommand.  See @a os-&gt;argv and @a os-&gt;ind.

 @a baton is anything you need it to be.

 @a pool is used for allocating errors, and for any other allocation
 unless the instance is explicitly documented to allocate from a
 pool in @a baton.

</member>
        <member name="M:svn_compat_wrap_file_rev_handler(=FUNC:svn_error_t*(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_hash_t*,System.Int32,=FUNC:svn_error_t*(svn_txdelta_window_t*,System.Void*)*,System.Void**,apr_array_header_t*,apr_pool_t*)*,System.Void**,=FUNC:svn_error_t*(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_hash_t*,=FUNC:svn_error_t*(svn_txdelta_window_t*,System.Void*)*,System.Void**,apr_array_header_t*,apr_pool_t*),System.Void*,apr_pool_t*)">
Return, in @a *handler2 and @a *handler2_baton a function/baton that
 * will call @a handler/@a handler_baton, allocating the @a *handler2_baton
 * in @a pool.
 *
 * @note This is used by compatibility wrappers, which exist in more than
 * Subversion core library.
 *
 * @note @c svn_file_rev_handler_old_t is a placeholder type for both
 * @c svn_repos_file_rev_handler_t and @c svn_ra_file_rev_handler_t.  It is
 * reproduced here for dependency reasons.
 *
 * @since New in 1.5.

</member>
        <member name="D:svn_file_rev_handler_old_t">
 The old file rev handler interface.

 @note @c svn_file_rev_handler_old_t is a placeholder type for both
 @c svn_repos_file_rev_handler_t and @c svn_ra_file_rev_handler_t.  It is
 reproduced here for dependency reasons.

 @deprecated This type is provided for the svn_compat_wrap_file_rev_handler()
 compatibilty wrapper, and should not be used for new development.
 @since New in 1.5.

</member>
        <member name="D:svn_file_rev_handler_t">
@} 
 The callback invoked by file rev loopers, such as
 svn_ra_plugin_t.get_file_revs2() and svn_repos_get_file_revs2().

 @a baton is provided by the caller, @a path is the pathname of the file
 in revision @a rev and @a rev_props are the revision properties.

 If @a delta_handler and @a delta_baton are non-NULL, they may be set to a
 handler/baton which will be called with the delta between the previous
 revision and this one after the return of this callback.  They may be
 left as NULL/NULL.

 @a result_of_merge will be @c TRUE if the revision being returned was
 included as the result of a merge.

 @a prop_diffs is an array of svn_prop_t elements indicating the property
 delta for this and the previous revision.

 @a pool may be used for temporary allocations, but you can't rely
 on objects allocated to live outside of this particular call and
 the immediately following calls to @a *delta_handler if any.  (Pass
 in a pool via @a baton if need be.)

 @since New in 1.5.

</member>
        <member name="M:svn_delta_path_driver(svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,System.Int32!System.Runtime.CompilerServices.IsLong,apr_array_header_t*,=FUNC:svn_error_t*(System.Void**,System.Void*,System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,apr_pool_t*)">
Drive @a editor (with its @a edit_baton) in such a way that
 * each path in @a paths is traversed in a depth-first fashion.  As
 * each path is hit as part of the editor drive, use @a
 * callback_func and @a callback_baton to allow the caller to handle
 * the portion of the editor drive related to that path.
 *
 * Use @a revision as the revision number passed to intermediate
 * directory openings.
 *
 * Use @a pool for all necessary allocations.

</member>
        <member name="D:svn_delta_path_driver_cb_func_t">
@} 
Path-based editor drives.
 *
 * @defgroup svn_delta_path_delta_drivers Path-based delta drivers
 * @{

Callback function type for svn_delta_path_driver().
 *
 * The handler of this callback is given the callback baton @a
 * callback_baton, @a path, and the @a parent_baton which represents
 * path's parent directory as created by the editor passed to
 * svn_delta_path_driver().
 *
 * If @a path represents a directory, the handler must return a @a
 * *dir_baton for @a path, generated from the same editor (so that the
 * driver can later close that directory).
 *
 * If, however, @a path represents a file, the handler should NOT
 * return any file batons.  It can close any opened or added files
 * immediately, or delay that close until the end of the edit when
 * svn_delta_path_driver() returns.
 *
 * Finally, if @a parent_baton is @c NULL, then the root of the edit
 * is also one of the paths passed to svn_delta_path_driver().  The
 * handler of this callback must call the editor's open_root()
 * function and return the top-level root dir baton in @a *dir_baton.

</member>
        <member name="M:svn_delta_depth_filter_editor(svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,svn_depth_t,System.Int32,apr_pool_t*)">
Set @a *editor and @a *edit_baton to an depth-based filtering
 * editor that wraps @a wrapped_editor and @a wrapped_baton.
 *
 * The @a editor will track the depth of this drive against the @a
 * requested_depth, taking into account whether not the edit drive is
 * making use of a target (via @a has_target), and forward editor
 * calls which operate "within" the request depth range through to @a
 * wrapped_editor.
 *
 * @a requested_depth must be one of the following depth values:
 * @c svn_depth_infinity, @c svn_depth_empty, @c svn_depth_files,
 * @c svn_depth_immediates, or @c svn_depth_unknown.
 *
 * If filtering is deemed unncessary (or if @a requested_depth is @c
 * svn_depth_unknown), @a *editor and @a *edit_baton will be set to @a
 * wrapped_editor and @a wrapped_baton, respectively; otherwise,
 * they'll be set to new objects allocated from @a pool.
 *
 * @note Because the svn_delta_editor_t interface's @c delete_entry()
 * function doesn't carry node kind information, a depth-based
 * filtering editor being asked to filter for @c svn_depth_files but
 * receiving a @c delete_entry() call on an immediate child of the
 * editor's target is unable to know if that deletion should be
 * allowed or filtered out -- a delete of a top-level file is okay in
 * this case, a delete of a top-level subdirectory is not.  As such,
 * this filtering editor takes a conservative approach, and ignores
 * top-level deletion requests when filtering for @c svn_depth_files.
 * Fortunately, most non-depth-aware (pre-1.5) Subversion editor
 * drivers can be told to drive non-recursively (where non-recursive
 * means essentially @c svn_depth_files), which means they won't
 * transmit out-of-scope editor commands anyway.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_delta_get_cancellation_editor(=FUNC:svn_error_t*(System.Void*),System.Void*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst*,System.Void*,svn_delta_editor_t!System.Runtime.CompilerServices.IsConst**,System.Void**,apr_pool_t*)">
Set @a *editor and @a *edit_baton to a cancellation editor that
 * wraps @a wrapped_editor and @a wrapped_baton.
 *
 * The @a editor will call @a cancel_func with @a cancel_baton when each of
 * its functions is called, continuing on to call the corresponding wrapped
 * function if @a cancel_func returns @c SVN_NO_ERROR.
 *
 * If @a cancel_func is @c NULL, set @a *editor to @a wrapped_editor and
 * @a *edit_baton to @a wrapped_baton.

</member>
        <member name="M:svn_delta_noop_window_handler(svn_txdelta_window_t*,System.Void*)">
A text-delta window handler which does nothing.
 *
 * Editors can return this handler from @c apply_textdelta if they don't
 * care about text delta windows.

</member>
        <member name="M:svn_delta_default_editor(apr_pool_t*)">
Return a default delta editor template, allocated in @a pool.
 *
 * The editor functions in the template do only the most basic
 * baton-swapping: each editor function that produces a baton does so
 * by copying its incoming baton into the outgoing baton reference.
 *
 * This editor is not intended to be useful by itself, but is meant to
 * be the basis for a useful editor.  After getting a default editor,
 * you substitute in your own implementations for the editor functions
 * you care about.  The ones you don't care about, you don't have to
 * implement -- you can rely on the template's implementation to
 * safely do nothing of consequence.

</member>
        <member name="F:svn_delta_editor_t.abort_edit">
The editor-driver has decided to bail out.  Allow the editor to
   * gracefully clean up things if it needs to.

</member>
        <member name="F:svn_delta_editor_t.close_edit">
All delta processing is done.  Call this, with the @a edit_baton for
   * the entire edit.

</member>
        <member name="F:svn_delta_editor_t.absent_file">
In the directory represented by @a parent_baton, indicate that
   * @a path is present as a file in the edit source, but cannot be
   * conveyed to the edit consumer (perhaps because of authorization
   * restrictions).

</member>
        <member name="F:svn_delta_editor_t.close_file">
We are done processing a file, whose baton is @a file_baton (set by
   * @c add_file or @c open_file).  We won't be using the baton any
   * more, so whatever resources it refers to may now be freed.
   *
   * @a text_checksum is the hex MD5 digest for the fulltext that
   * resulted from a delta application, see @c apply_textdelta.  The
   * checksum is ignored if NULL.  If not null, it is compared to the
   * checksum of the new fulltext, and the error
   * SVN_ERR_CHECKSUM_MISMATCH is returned if they do not match.  If
   * there is no new fulltext, @a text_checksum is ignored.

</member>
        <member name="F:svn_delta_editor_t.change_file_prop">
Change the value of a file's property.
   * - @a file_baton specifies the file whose property should change.
   * - @a name is the name of the property to change.
   * - @a value is the new (final) value of the property, or @c NULL if the
   *   property should be removed altogether.
   *
   * The callback is guaranteed to be called exactly once for each property
   * whose value differs between the start and the end of the edit.
   *
   * All allocations should be performed in @a pool.

</member>
        <member name="F:svn_delta_editor_t.apply_textdelta">
Apply a text delta, yielding the new revision of a file.
   *
   * @a file_baton indicates the file we're creating or updating, and the
   * ancestor file on which it is based; it is the baton set by some
   * prior @c add_file or @c open_file callback.
   *
   * The callback should set @a *handler to a text delta window
   * handler; we will then call @a *handler on successive text
   * delta windows as we receive them.  The callback should set
   * @a *handler_baton to the value we should pass as the @a baton
   * argument to @a *handler.
   *
   * @a base_checksum is the hex MD5 digest for the base text against
   * which the delta is being applied; it is ignored if NULL, and may
   * be ignored even if not NULL.  If it is not ignored, it must match
   * the checksum of the base text against which svndiff data is being
   * applied; if it does not, @c apply_textdelta or the @a *handler call
   * which detects the mismatch will return the error
   * SVN_ERR_CHECKSUM_MISMATCH (if there is no base text, there may
   * still be an error if @a base_checksum is neither NULL nor the hex
   * MD5 checksum of the empty string).

</member>
        <member name="F:svn_delta_editor_t.open_file">
We are going to make change to a file named @a path, which resides
   * in the directory identified by @a parent_baton.
   *
   * The callback can store a baton for this new file in @a **file_baton;
   * whatever value it stores there should be passed through to
   * @c apply_textdelta.  If a valid revnum, @a base_revision is the
   * current revision of the file.
   *
   * Allocations for the returned @a file_baton should be performed in
   * @a file_pool. It is also typical to save this pool for later usage
   * by @c apply_textdelta and possibly @c close_file.

</member>
        <member name="F:svn_delta_editor_t.add_file">
We are going to add a new file named @a path.  The callback can
   * store a baton for this new file in @a **file_baton; whatever value
   * it stores there should be passed through to @c apply_textdelta.
   *
   * If @a copyfrom_path is non-@c NULL, this add has history (i.e., is a
   * copy), and the origin of the copy may be recorded as
   * @a copyfrom_path under @a copyfrom_revision.
   *
   * Allocations for the returned @a file_baton should be performed in
   * @a file_pool. It is also typical to save this pool for later usage
   * by @c apply_textdelta and possibly @c close_file.

</member>
        <member name="F:svn_delta_editor_t.absent_directory">
In the directory represented by @a parent_baton, indicate that
   * @a path is present as a subdirectory in the edit source, but
   * cannot be conveyed to the edit consumer (perhaps because of
   * authorization restrictions).

</member>
        <member name="F:svn_delta_editor_t.close_directory">
We are done processing a subdirectory, whose baton is @a dir_baton
   * (set by @c add_directory or @c open_directory).  We won't be using
   * the baton any more, so whatever resources it refers to may now be
   * freed.

</member>
        <member name="F:svn_delta_editor_t.change_dir_prop">
Change the value of a directory's property.
   * - @a dir_baton specifies the directory whose property should change.
   * - @a name is the name of the property to change.
   * - @a value is the new (final) value of the property, or @c NULL if the
   *   property should be removed altogether.
   *
   * The callback is guaranteed to be called exactly once for each property
   * whose value differs between the start and the end of the edit.
   *
   * All allocations should be performed in @a pool.

</member>
        <member name="F:svn_delta_editor_t.open_directory">
We are going to make changes in a subdirectory (of the directory
   * identified by @a parent_baton). The subdirectory is specified by
   * @a path. The callback must store a value in @a *child_baton that
   * should be used as the @a parent_baton for subsequent changes in this
   * subdirectory.  If a valid revnum, @a base_revision is the current
   * revision of the subdirectory.
   *
   * Allocations for the returned @a child_baton should be performed in
   * @a dir_pool. It is also typical to (possibly) save this pool for later
   * usage by @c close_directory.

</member>
        <member name="F:svn_delta_editor_t.add_directory">
We are going to add a new subdirectory named @a path.  We will use
   * the value this callback stores in @a *child_baton as the
   * @a parent_baton for further changes in the new subdirectory.
   *
   * If @a copyfrom_path is non-@c NULL, this add has history (i.e., is a
   * copy), and the origin of the copy may be recorded as
   * @a copyfrom_path under @a copyfrom_revision.
   *
   * Allocations for the returned @a child_baton should be performed in
   * @a dir_pool. It is also typical to (possibly) save this pool for later
   * usage by @c close_directory.

</member>
        <member name="F:svn_delta_editor_t.delete_entry">
Remove the directory entry named @a path, a child of the directory
   * represented by @a parent_baton.  If @a revision is a valid
   * revision number, it is used as a sanity check to ensure that you
   * are really removing the revision of @a path that you think you are.
   *
   * All allocations should be performed in @a pool.
   *
   * @note The @a revision parameter is typically used only for
   * client-&gt;server commit-type operations, allowing the server to
   * verify that it is deleting what the client thinks it should be
   * deleting.  It only really makes sense in the opposite direction
   * (during server-&gt;client update-type operations) when the trees
   * whose delta is being described are ancestrally related (that is,
   * one tree is an ancestor of the other).

</member>
        <member name="F:svn_delta_editor_t.open_root">
Set @a *root_baton to a baton for the top directory of the change.
   * (This is the top of the subtree being changed, not necessarily
   * the root of the filesystem.)  As with any other directory baton, the
   * producer should call @c close_directory on @a root_baton when done.
   * And as with other @c open_* calls, the @a base_revision here is the
   * current revision of the directory (before getting bumped up to the
   * new target revision set with @c set_target_revision).
   *
   * Allocations for the returned @a root_baton should be performed in
   * @a dir_pool. It is also typical to (possibly) save this pool for later
   * usage by @c close_directory.

</member>
        <member name="F:svn_delta_editor_t.set_target_revision">
Set the target revision for this edit to @a target_revision.  This
   * call, if used, should precede all other editor calls.
   *
   * @note This is typically used only for server-&gt;client update-type
   * operations.  It doesn't really make much sense for commit-type
   * operations, because the revision of a commit isn't known until
   * the commit is finalized.

</member>
        <member name="T:svn_delta_editor_t">
@} 
Traversing tree deltas.
 *
 * In Subversion, we've got various producers and consumers of tree
 * deltas.
 *
 * In processing a `commit' command:
 * - The client examines its working copy data, and produces a tree
 *   delta describing the changes to be committed.
 * - The client networking library consumes that delta, and sends them
 *   across the wire as an equivalent series of network requests (for
 *   example, to svnserve as an ra_svn protocol stream, or to an
 *   Apache httpd server as WebDAV commands)
 * - The server receives those requests and produces a tree delta ---
 *   hopefully equivalent to the one the client produced above.
 * - The Subversion server module consumes that delta and commits an
 *   appropriate transaction to the filesystem.
 *
 * In processing an `update' command, the process is reversed:
 * - The Subversion server module talks to the filesystem and produces
 *   a tree delta describing the changes necessary to bring the
 *   client's working copy up to date.
 * - The server consumes this delta, and assembles a reply
 *   representing the appropriate changes.
 * - The client networking library receives that reply, and produces a
 *   tree delta --- hopefully equivalent to the one the Subversion
 *   server produced above.
 * - The working copy library consumes that delta, and makes the
 *   appropriate changes to the working copy.
 *
 * The simplest approach would be to represent tree deltas using the
 * obvious data structure.  To do an update, the server would
 * construct a delta structure, and the working copy library would
 * apply that structure to the working copy; the network layer's job
 * would simply be to get the structure across the net intact.
 *
 * However, we expect that these deltas will occasionally be too large
 * to fit in a typical workstation's swap area.  For example, in
 * checking out a 200Mb source tree, the entire source tree is
 * represented by a single tree delta.  So it's important to handle
 * deltas that are too large to fit in swap all at once.
 *
 * So instead of representing the tree delta explicitly, we define a
 * standard way for a consumer to process each piece of a tree delta
 * as soon as the producer creates it.  The @c svn_delta_editor_t
 * structure is a set of callback functions to be defined by a delta
 * consumer, and invoked by a delta producer.  Each invocation of a
 * callback function describes a piece of the delta --- a file's
 * contents changing, something being renamed, etc.
 *
 * @defgroup svn_delta_tree_deltas Tree deltas
 * @{

A structure full of callback functions the delta source will invoke
 * as it produces the delta.
 *
 * Note: Don't try to allocate one of these yourself.  Instead, always
 * use svn_delta_default_editor() or some other constructor, to ensure
 * that unused slots are filled in with no-op functions.
 *
 * <h3>Function Usage</h3>
 *
 * Here's how to use these functions to express a tree delta.
 *
 * The delta consumer implements the callback functions described in
 * this structure, and the delta producer invokes them.  So the
 * caller (producer) is pushing tree delta data at the callee
 * (consumer).
 *
 * At the start of traversal, the consumer provides @a edit_baton, a
 * baton global to the entire delta edit.  If there is a target
 * revision that needs to be set for this operation, the producer
 * should call the @c set_target_revision function at this point.
 *
 * Next, if there are any tree deltas to express, the producer should
 * pass the @a edit_baton to the @c open_root function, to get a baton
 * representing root of the tree being edited.
 *
 * Most of the callbacks work in the obvious way:
 *
 *     @c delete_entry
 *     @c add_file
 *     @c add_directory
 *     @c open_file
 *     @c open_directory
 *
 * Each of these takes a directory baton, indicating the directory
 * in which the change takes place, and a @a path argument, giving the
 * path (relative to the root of the edit) of the file,
 * subdirectory, or directory entry to change. Editors will usually
 * want to join this relative path with some base stored in the edit
 * baton (e.g. a URL, a location in the OS filesystem).
 *
 * Since every call requires a parent directory baton, including
 * @c add_directory and @c open_directory, where do we ever get our
 * initial directory baton, to get things started?  The @c open_root
 * function returns a baton for the top directory of the change.  In
 * general, the producer needs to invoke the editor's @c open_root
 * function before it can get anything of interest done.
 *
 * While @c open_root provides a directory baton for the root of
 * the tree being changed, the @c add_directory and @c open_directory
 * callbacks provide batons for other directories.  Like the
 * callbacks above, they take a @a parent_baton and a relative path
 * @a path, and then return a new baton for the subdirectory being
 * created / modified --- @a child_baton.  The producer can then use
 * @a child_baton to make further changes in that subdirectory.
 *
 * So, if we already have subdirectories named `foo' and `foo/bar',
 * then the producer can create a new file named `foo/bar/baz.c' by
 * calling:
 *
 *    - @c open_root () --- yielding a baton @a root for the top directory
 *
 *    - @c open_directory (@a root, "foo") --- yielding a baton @a f for `foo'
 *
 *    - @c open_directory (@a f, "foo/bar") --- yielding a baton @a b for
 *      `foo/bar'
 *
 *    - @c add_file (@a b, "foo/bar/baz.c")
 *
 * When the producer is finished making changes to a directory, it
 * should call @c close_directory.  This lets the consumer do any
 * necessary cleanup, and free the baton's storage.
 *
 * The @c add_file and @c open_file callbacks each return a baton
 * for the file being created or changed.  This baton can then be
 * passed to @c apply_textdelta to change the file's contents, or
 * @c change_file_prop to change the file's properties.  When the
 * producer is finished making changes to a file, it should call
 * @c close_file, to let the consumer clean up and free the baton.
 *
 * The @c add_file and @c add_directory functions each take arguments
 * @a copyfrom_path and @a copyfrom_revision.  If @a copyfrom_path is
 * non-@c NULL, then @a copyfrom_path and @a copyfrom_revision indicate where
 * the file or directory should be copied from (to create the file
 * or directory being added).  In that case, @a copyfrom_path must be
 * either a path relative to the root of the edit, or a URI from the
 * repository being edited.  If @a copyfrom_path is @c NULL, then @a
 * copyfrom_revision must be @c SVN_INVALID_REVNUM; it is invalid to
 * pass a mix of valid and invalid copyfrom arguments.
 *
 *
 * <h3>Function Call Ordering</h3>
 *
 * There are six restrictions on the order in which the producer
 * may use the batons:
 *
 * 1. The producer may call @c open_directory, @c add_directory,
 *    @c open_file, @c add_file at most once on any given directory
 *    entry.  @c delete_entry may be called at most once on any given
 *    directory entry and may later be followed by @c add_directory or
 *    @c add_file on the same directory entry.  @c delete_entry may
 *    not be called on any directory entry after @c open_directory,
 *    @c add_directory, @c open_file or @c add_file has been called on
 *    that directory entry.
 *
 * 2. The producer may not close a directory baton until it has
 *    closed all batons for its subdirectories.
 *
 * 3. When a producer calls @c open_directory or @c add_directory,
 *    it must specify the most recently opened of the currently open
 *    directory batons.  Put another way, the producer cannot have
 *    two sibling directory batons open at the same time.
 *
 * 4. A producer must call @c change_dir_prop on a directory either
 *    before opening any of the directory's subdirs or after closing
 *    them, but not in the middle.
 *
 * 5. When the producer calls @c open_file or @c add_file, either:
 *
 *    (a) The producer must follow with any changes to the file
 *    (@c change_file_prop and/or @c apply_textdelta, as applicable),
 *    followed by a @c close_file call, before issuing any other file
 *    or directory calls, or
 *
 *    (b) The producer must follow with a @c change_file_prop call if
 *    it is applicable, before issuing any other file or directory
 *    calls; later, after all directory batons including the root
 *    have been closed, the producer must issue @c apply_textdelta
 *    and @c close_file calls.
 *
 * 6. When the producer calls @c apply_textdelta, it must make all of
 *    the window handler calls (including the @c NULL window at the
 *    end) before issuing any other @c svn_delta_editor_t calls.
 *
 * So, the producer needs to use directory and file batons as if it
 * is doing a single depth-first traversal of the tree, with the
 * exception that the producer may keep file batons open in order to
 * make @c apply_textdelta calls at the end.
 *
 *
 * <h3>Pool Usage</h3>
 *
 * Many editor functions are invoked multiple times, in a sequence
 * determined by the editor "driver". The driver is responsible for
 * creating a pool for use on each iteration of the editor function,
 * and clearing that pool between each iteration. The driver passes
 * the appropriate pool on each function invocation.
 *
 * Based on the requirement of calling the editor functions in a
 * depth-first style, it is usually customary for the driver to similarly
 * nest the pools. However, this is only a safety feature to ensure
 * that pools associated with deeper items are always cleared when the
 * top-level items are also cleared. The interface does not assume, nor
 * require, any particular organization of the pools passed to these
 * functions. In fact, if "postfix deltas" are used for files, the file
 * pools definitely need to live outside the scope of their parent
 * directories' pools.
 *
 * Note that close_directory can be called *before* a file in that
 * directory has been closed. That is, the directory's baton is
 * closed before the file's baton. The implication is that
 * @c apply_textdelta and @c close_file should not refer to a parent
 * directory baton UNLESS the editor has taken precautions to
 * allocate it in a pool of the appropriate lifetime (the @a dir_pool
 * passed to @c open_directory and @c add_directory definitely does not
 * have the proper lifetime). In general, it is recommended to simply
 * avoid keeping a parent directory baton in a file baton.
 *
 *
 * <h3>Errors</h3>
 *
 * At least one implementation of the editor interface is
 * asynchronous; an error from one operation may be detected some
 * number of operations later.  As a result, an editor driver must not
 * assume that an error from an editing function resulted from the
 * particular operation being detected.  Moreover, once an editing
 * function returns an error, the edit is dead; the only further
 * operation which may be called on the editor is abort_edit.

</member>
        <member name="M:svn_txdelta_parse_svndiff(=FUNC:svn_error_t*(svn_txdelta_window_t*,System.Void*),System.Void*,System.Int32,apr_pool_t*)">
Return a writable generic stream which will parse svndiff-format
 * data into a text delta, invoking @a handler with @a handler_baton
 * whenever a new window is ready.  If @a error_on_early_close is @c
 * TRUE, attempting to close this stream before it has handled the entire
 * svndiff data set will result in @c SVN_ERR_SVNDIFF_UNEXPECTED_END,
 * else this error condition will be ignored.

</member>
        <member name="M:svn_txdelta_to_svndiff(svn_stream_t*,apr_pool_t*,=FUNC:svn_error_t*(svn_txdelta_window_t*,System.Void*)*,System.Void**)">
Similar to svn_txdelta_to_svndiff2, but always using svndiff
 * version 0.
 *
 * @deprecated Provided for backward compatibility with the 1.3 API.

</member>
        <member name="M:svn_txdelta_to_svndiff2(=FUNC:svn_error_t*(svn_txdelta_window_t*,System.Void*)*,System.Void**,svn_stream_t*,System.Int32,apr_pool_t*)">
Prepare to produce an svndiff-format diff from text delta windows.
 * @a output is a writable generic stream to write the svndiff data to.
 * Allocation takes place in a sub-pool of @a pool.  On return, @a *handler
 * is set to a window handler function and @a *handler_baton is set to
 * the value to pass as the @a baton argument to @a *handler. The svndiff
 * version is @a svndiff_version.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_txdelta_apply(svn_stream_t*,svn_stream_t*,System.Byte*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*,=FUNC:svn_error_t*(svn_txdelta_window_t*,System.Void*)*,System.Void**)">
Prepare to apply a text delta.  @a source is a readable generic stream
 * yielding the source data, @a target is a writable generic stream to
 * write target data to, and allocation takes place in a sub-pool of
 * @a pool.  On return, @a *handler is set to a window handler function and
 * @a *handler_baton is set to the value to pass as the @a baton argument to
 * @a *handler.
 *
 * If @a result_digest is non-NULL, it points to APR_MD5_DIGESTSIZE bytes
 * of storage, and the final call to @a handler populates it with the
 * MD5 digest of the resulting fulltext.
 *
 * If @a error_info is non-NULL, it is inserted parenthetically into
 * the error string for any error returned by svn_txdelta_apply() or
 * @a *handler.  (It is normally used to provide path information,
 * since there's nothing else in the delta application's context to
 * supply a path for error messages.)
 *
 * @note To avoid lifetime issues, @a error_info is copied into
 * @a pool or a subpool thereof.

</member>
        <member name="M:svn_txdelta_send_txstream(svn_txdelta_stream_t*,=FUNC:svn_error_t*(svn_txdelta_window_t*,System.Void*),System.Void*,apr_pool_t*)">
Send the contents of @a txstream to window-handler @a handler/@a baton.
 * Windows will be extracted from the stream and delivered to the handler.
 *
 * All temporary allocation is performed in @a pool.

</member>
        <member name="M:svn_txdelta_send_stream(svn_stream_t*,=FUNC:svn_error_t*(svn_txdelta_window_t*,System.Void*),System.Void*,System.Byte*,apr_pool_t*)">
Send the contents of @a stream to window-handler @a handler/@a baton.
 * This is effectively a 'copy' operation, resulting in delta windows that
 * make the target equivalent to the stream.
 *
 * If @a digest is non-NULL, populate it with the md5 checksum for the
 * fulltext that was deltified (@a digest must be at least
 * @c APR_MD5_DIGESTSIZE bytes long).
 *
 * All temporary allocation is performed in @a pool.

</member>
        <member name="M:svn_txdelta_send_string(svn_string_t!System.Runtime.CompilerServices.IsConst*,=FUNC:svn_error_t*(svn_txdelta_window_t*,System.Void*),System.Void*,apr_pool_t*)">
Send the contents of @a string to window-handler @a handler/@a baton.
 * This is effectively a 'copy' operation, resulting in delta windows that
 * make the target equivalent to the value of @a string.
 *
 * All temporary allocation is performed in @a pool.

</member>
        <member name="M:svn_txdelta_target_push(=FUNC:svn_error_t*(svn_txdelta_window_t*,System.Void*),System.Void*,svn_stream_t*,apr_pool_t*)">
 Return a writable stream which, when fed target data, will send
 delta windows to @a handler/@a handler_baton which transform the
 data in @a source to the target data.  As usual, the window handler
 will receive a NULL window to signify the end of the window stream.
 The stream handler functions will read data from @a source as
 necessary.

 @since New in 1.1.

</member>
        <member name="M:svn_txdelta(svn_txdelta_stream_t**,svn_stream_t*,svn_stream_t*,apr_pool_t*)">
Set @a *stream to a pointer to a delta stream that will turn the byte
 * string from @a source into the byte stream from @a target.
 *
 * @a source and @a target are both readable generic streams.  When we call
 * svn_txdelta_next_window() on @a *stream, it will read from @a source and
 * @a target to gather as much data as it needs.
 *
 * Do any necessary allocation in a sub-pool of @a pool.

</member>
        <member name="M:svn_txdelta_md5_digest(svn_txdelta_stream_t*)">
Return the md5 digest for the complete fulltext deltified by
 * @a stream, or @c NULL if @a stream has not yet returned its final
 * @c NULL window.  The digest is allocated in the same memory as @a
 * STREAM.

</member>
        <member name="M:svn_txdelta_next_window(svn_txdelta_window_t**,svn_txdelta_stream_t*,apr_pool_t*)">
Set @a *window to a pointer to the next window from the delta stream
 * @a stream.  When we have completely reconstructed the target string,
 * set @a *window to zero.
 *
 * The window will be allocated in @a pool.

</member>
        <member name="M:svn_txdelta_stream_create(System.Void*,=FUNC:svn_error_t*(svn_txdelta_window_t**,System.Void*,apr_pool_t*),=FUNC:System.Byte!System.Runtime.CompilerServices.IsConst*(System.Void*),apr_pool_t*)">
Create and return a generic text delta stream with @a baton, @a
 * next_window and @a md5_digest.  Allocate the new stream in @a
 * pool.
 *
 * @since New in 1.4.

</member>
        <member name="D:svn_txdelta_md5_digest_fn_t">
A typedef for a function that will return the md5 checksum of the
 * fulltext deltified by a @c svn_txdelta_stream_t object.  Will
 * return NULL if the final null window hasn't yet been returned by
 * the stream.  The returned value will be allocated in the same pool
 * as the stream.  @a baton is the baton specified when the stream was
 * created.
 *
 * @since New in 1.4.

</member>
        <member name="D:svn_txdelta_next_window_fn_t">
A typedef for a function that will set @a *window to the next
 * window from a @c svn_txdelta_stream_t object.  If there are no more
 * delta windows, NULL will be used.  The returned window, if any,
 * will be allocated in @a pool.  @a baton is the baton specified
 * when the stream was created.
 *
 * @since New in 1.4.

</member>
        <member name="T:svn_txdelta_stream_t">
A delta stream --- this is the hat from which we pull a series of
 * svn_txdelta_window_t objects, which, taken in order, describe the
 * entire target string.  This type is defined within libsvn_delta, and
 * opaque outside that library.

</member>
        <member name="M:svn_txdelta_run(svn_stream_t*,svn_stream_t*,=FUNC:svn_error_t*(svn_txdelta_window_t*,System.Void*),System.Void*,svn_checksum_kind_t,svn_checksum_t**,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*,apr_pool_t*)">
This function will generate delta windows that turn @a source into
 * @a target, and pushing these windows into the @a handler window handler
 * callback (passing @a handler_baton to each invocation).
 *
 * If @a checksum is not NULL, then a checksum (of kind @a checksum_kind)
 * will be computed for the target stream, and placed into *checksum.
 *
 * If @a cancel_func is not NULL, then it should refer to a cancellation
 * function (along with @a cancel_baton).
 *
 * Results (the checksum) will be allocated from @a result_pool, and all
 * temporary allocations will be performed in @a scratch_pool.
 *
 * Note: this function replaces the combination of svn_txdelta() and
 *   svn_txdelta_send_txstream().
 *
 * @since New in 1.6.

</member>
        <member name="D:svn_txdelta_window_handler_t">
A typedef for functions that consume a series of delta windows, for
 * use in caller-pushes interfaces.  Such functions will typically
 * apply the delta windows to produce some file, or save the windows
 * somewhere.  At the end of the delta window stream, you must call
 * this function passing zero for the @a window argument.

</member>
        <member name="M:svn_txdelta_apply_instructions(svn_txdelta_window_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.UInt32*)">
 Apply the instructions from @a window to a source view @a sbuf to
  produce a target view @a tbuf.

 @a sbuf is assumed to have @a window-&gt;sview_len bytes of data and
 @a tbuf is assumed to have room for @a tlen bytes of output.  @a
 tlen may be more than @a window-&gt;tview_len, so return the actual
 number of bytes written.  @a sbuf is not touched and may be NULL if
 @a window contains no source-copy operations. This is purely a
 memory operation; nothing can go wrong as long as we have a valid
 window.

 @since New in 1.4


</member>
        <member name="M:svn_txdelta_compose_windows(svn_txdelta_window_t!System.Runtime.CompilerServices.IsConst*,svn_txdelta_window_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Compose two delta windows, yielding a third, allocated in @a pool.

 @since New in 1.4


</member>
        <member name="M:svn_txdelta_window_dup(svn_txdelta_window_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return a deep copy of @a window, allocated in @a pool.

 @since New in 1.3.

</member>
        <member name="F:svn_txdelta_window_t.new_data">
New data, for use by any `svn_txdelta_new' instructions.  
</member>
        <member name="F:svn_txdelta_window_t.ops">
The instructions for this window.  
</member>
        <member name="F:svn_txdelta_window_t.src_ops">
The number of svn_txdelta_source instructions in this window. If
   * this number is 0, we don't need to read the source in order to
   * reconstruct the target view.

</member>
        <member name="F:svn_txdelta_window_t.num_ops">
The number of instructions in this window.  
</member>
        <member name="F:svn_txdelta_window_t.tview_len">
The length of the target view for this window, i.e. the number of
   * bytes which will be reconstructed by the instruction stream.  
</member>
        <member name="F:svn_txdelta_window_t.sview_len">
The length of the source view for this window.  
</member>
        <member name="F:svn_txdelta_window_t.sview_offset">
The offset of the source view for this window.  
</member>
        <member name="T:svn_txdelta_window_t">
An @c svn_txdelta_window_t object describes how to reconstruct a
 * contiguous section of the target string (the "target view") using a
 * specified contiguous region of the source string (the "source
 * view").  It contains a series of instructions which assemble the
 * new target string text by pulling together substrings from:
 *
 *   - the source view,
 *
 *   - the previously constructed portion of the target view,
 *
 *   - a string of new data contained within the window structure
 *
 * The source view must always slide forward from one window to the
 * next; that is, neither the beginning nor the end of the source view
 * may move to the left as we read from a window stream.  This
 * property allows us to apply deltas to non-seekable source streams
 * without making a full copy of the source stream.

</member>
        <member name="F:svn_txdelta_op_t.length">
Number of bytes of delta, see #svn_delta_action for more details. 
</member>
        <member name="F:svn_txdelta_op_t.offset">
Offset of delta, see #svn_delta_action for more details. 
</member>
        <member name="T:svn_txdelta_op_t">
A single text delta instruction.  
</member>
        <member name="T:svn_delta_action">
 @defgroup delta_support Delta generation and handling

 @{

Text deltas.
*
* A text delta represents the difference between two strings of
* bytes, the `source' string and the `target' string.  Given a source
* string and a target string, we can compute a text delta; given a
* source string and a delta, we can reconstruct the target string.
* However, note that deltas are not reversible: you cannot always
* reconstruct the source string given the target string and delta.
*
* Since text deltas can be very large, the interface here allows us
* to produce and consume them in pieces.  Each piece, represented by
* an @c svn_txdelta_window_t structure, describes how to produce the
* next section of the target string.
*
* To compute a new text delta:
*
* - We call svn_txdelta() on the streams we want to compare.  That
*   returns us an @c svn_txdelta_stream_t object.
*
* - We then call svn_txdelta_next_window() on the stream object
*   repeatedly.  Each call returns a new @c svn_txdelta_window_t
*   object, which describes the next portion of the target string.
*   When svn_txdelta_next_window() returns zero, we are done building
*   the target string.
*
* @defgroup svn_delta_txt_delta Text deltas
* @{

Action codes for text delta instructions. 

Action code of delta instruction 
</member>
        <member name="M:svn_delta_version">
 @copyright
 ====================================================================
 Copyright (c) 2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_checksum.h
 @brief Subversion checksum routines

 Get libsvn_delta version information.

 @since New in 1.1.

</member>
        <member name="M:svn_subr_version">
 Get libsvn_subr version information.

 @since New in 1.1.

</member>
        <member name="D:svn_version_func_t">
 Type of function returning library version.

 @since New in 1.6.

</member>
        <member name="M:svn_ver_check_list(svn_version_t!System.Runtime.CompilerServices.IsConst*,svn_version_checklist_t!System.Runtime.CompilerServices.IsConst*)">
 Perform a series of version compatibility checks. Checks if @a
 my_version is compatible with each entry in @a checklist. @a
 checklist must end with an entry whose label is @c NULL.

 @see svn_ver_compatible()

 @since New in 1.1.

</member>
        <member name="F:svn_version_checklist_t.version_query">
Version query function for this entry 
</member>
        <member name="T:svn_version_checklist_t">
 An entry in the compatibility checklist.
 @see svn_ver_check_list()

 @since New in 1.1.

</member>
        <member name="M:svn_ver_equal(svn_version_t!System.Runtime.CompilerServices.IsConst*,svn_version_t!System.Runtime.CompilerServices.IsConst*)">
 Check if @a my_version and @a lib_version encode the same version number.

 @since New in 1.2.

</member>
        <member name="M:svn_ver_compatible(svn_version_t!System.Runtime.CompilerServices.IsConst*,svn_version_t!System.Runtime.CompilerServices.IsConst*)">
 Define a static svn_version_t object.

 @since New in 1.1.

 Generate the implementation of a version query function.

 @since New in 1.1.

 Check library version compatibility. Return #TRUE if the client's
 version, given in @a my_version, is compatible with the library
 version, provided in @a lib_version.

 This function checks for version compatibility as per our
 guarantees, but requires an exact match when linking to an
 unreleased library. A development client is always compatible with
 a previous released library.

 @since New in 1.1.

</member>
        <member name="F:svn_version_t.tag">
The version tag (#SVN_VER_NUMTAG).\ Must always point to a
statically allocated string.

</member>
        <member name="T:svn_version_t">
 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_delta.h
 @brief Delta-parsing

 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_types.h
 @brief Subversion's data types

 @copyright
 ====================================================================
 Copyright (c) 2000-2006 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_string.h
 @brief Counted-length strings for Subversion, plus some C string goodies.

 There are two string datatypes: @c svn_string_t and @c svn_stringbuf_t.
 The former is a simple pointer/length pair useful for passing around
 strings (or arbitrary bytes) with a counted length. @c svn_stringbuf_t is
 buffered to enable efficient appending of strings without an allocation
 and copy for each append operation.

 @c svn_string_t contains a <tt>const char *</tt> for its data, so it is
 most appropriate for constant data and for functions which expect constant,
 counted data. Functions should generally use <tt>const @c svn_string_t
 *</tt> as their parameter to indicate they are expecting a constant,
 counted string.

 @c svn_stringbuf_t uses a plain <tt>char *</tt> for its data, so it is
 most appropriate for modifiable data.

 <h3>Invariants</h3>

   1. Null termination:

      Both structures maintain a significant invariant:

         <tt>s-&gt;data[s-&gt;len] == '\\0'</tt>

      The functions defined within this header file will maintain
      the invariant (which does imply that memory is
      allocated/defined as @c len+1 bytes).  If code outside of the
      @c svn_string.h functions manually builds these structures,
      then they must enforce this invariant.

      Note that an @c svn_string(buf)_t may contain binary data,
      which means that strlen(s-&gt;data) does not have to equal @c
      s-&gt;len. The NULL terminator is provided to make it easier to
      pass @c s-&gt;data to C string interfaces.


   2. Non-NULL input:

      All the functions assume their input data is non-NULL,
      unless otherwise documented, and may seg fault if passed
      NULL.  The input data may *contain* null bytes, of course, just
      the data pointer itself must not be NULL.

 <h3>Memory allocation</h3>

   All the functions make a deep copy of all input data, and never store
   a pointer to the original input data.

 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_io.h
 @brief General file I/O for Subversion

 @copyright
 ====================================================================
 Copyright (c) 2001-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_version.h
 @brief Version information.

 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_types.h
 @brief Subversion's data types

Major version number.
 *
 * Modify when incompatible changes are made to published interfaces.

Minor version number.
 *
 * Modify when new functionality is added or new interfaces are
 * defined, but all changes are backward compatible.

 Patch number.

 Modify for every released patch.

 @since New in 1.1.

@deprecated Provided for backward compatibility with the 1.0 API. 
@deprecated Provided for backward compatibility with the 1.0 API. 
Version tag: a string describing the version.
 *
 * This tag remains " (dev build)" in the repository so that we can
 * always see from "svn --version" that the software has been built
 * from the repository rather than a "blessed" distribution.
 *
 * When rolling a tarball, we automatically replace this text with " (r1234)"
 * (where 1234 is the last revision on the branch prior to the release)
 * for final releases; in prereleases, it becomes " (Alpha 1)",
 * " (Beta 1)", etc., as appropriate.
 *
 * Always change this at the same time as SVN_VER_NUMTAG.

Number tag: a string describing the version.
 *
 * This tag is used to generate a version number string to identify
 * the client and server in HTTP requests, for example. It must not
 * contain any spaces. This value remains "-dev" in the repository.
 *
 * When rolling a tarball, we automatically replace this text with ""
 * for final releases; in prereleases, it becomes "-alpha1, "-beta1",
 * etc., as appropriate.
 *
 * Always change this at the same time as SVN_VER_TAG.

Revision number: The repository revision number of this release.
 *
 * This constant is used to generate the build number part of the Windows
 * file version. Its value remains 0 in the repository.
 *
 * When rolling a tarball, we automatically replace it with what we
 * guess to be the correct revision number.

Version number 
Version number with tag (contains no whitespace) 
Complete version string 
 Version information. Each library contains a function called
 svn_<i>libname</i>_version() that returns a pointer to a statically
 allocated object of this type.

 @since New in 1.1.

</member>
        <member name="M:svn_io_write_version_file(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Create (or overwrite) the file at @a path with new contents,
 * formatted as a non-negative integer @a version followed by a single
 * newline.  On successful completion the file will be read-only.  Use
 * @a pool for all allocations.

</member>
        <member name="M:svn_io_read_version_file(System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Version/format files.
 *
 * @defgroup svn_io_format_files Version/format files
 * @{

Set @a *version to the integer that starts the file at @a path.  If the
 * file does not begin with a series of digits followed by a newline,
 * return the error @c SVN_ERR_BAD_VERSION_FILE_FORMAT.  Use @a pool for
 * all allocations.

</member>
        <member name="M:svn_io_dir_read(apr_finfo_t*,System.Int32,apr_dir_t*,apr_pool_t*)">
Wrapper for apr_dir_read().  Ensures that @a finfo-&gt;name is
 * utf8-encoded, which means allocating @a finfo-&gt;name in @a pool,
 * which may or may not be the same as @a finfo's pool.  Use @a pool
 * for error allocation as well.

</member>
        <member name="M:svn_io_dir_remove_nonrecursive(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Wrapper for apr_dir_remove().  @a dirname is utf8-encoded.
 * @note This function has this name to avoid confusion with
 * svn_io_remove_dir2(), which is recursive.

</member>
        <member name="M:svn_io_dir_open(apr_dir_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Wrapper for apr_dir_open().  @a dirname is utf8-encoded. 
</member>
        <member name="M:svn_io_dir_make_sgid(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
 Same as svn_io_dir_make(), but attempts to set the sgid on the
 directory on systems that support it.  Does not return an error if
 the attempt to set the sgid bit fails.  On Unix filesystems,
 setting the sgid bit on a directory ensures that files and
 subdirectories created within inherit group ownership from the
 parent instead of from the primary gid.

 @since New in 1.1.

</member>
        <member name="M:svn_io_dir_make_hidden(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Same as svn_io_dir_make(), but sets the hidden attribute on the
    directory on systems that support it. 
</member>
        <member name="M:svn_io_dir_make(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Wrapper for apr_dir_make().  @a path is utf8-encoded. 
</member>
        <member name="M:svn_io_file_move(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Move the file from @a from_path to @a to_path, even across device
 * boundaries. Overwrite @a to_path if it exists.
 *
 * @note This function is different from svn_io_file_rename in that the
 * latter fails in the 'across device boundaries' case.
 *
 * @since New in 1.3.

</member>
        <member name="M:svn_io_file_rename(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Wrapper for apr_file_rename().  @a from_path and @a to_path are
 * utf8-encoded.

</member>
        <member name="M:svn_io_stat(apr_finfo_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Wrapper for apr_stat().  @a fname is utf8-encoded. 
</member>
        <member name="M:svn_io_file_trunc(apr_file_t*,System.Int64,apr_pool_t*)">
Wrapper for apr_file_trunc().
  * @since New in 1.6. 
</member>
        <member name="M:svn_io_write_unique(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Void!System.Runtime.CompilerServices.IsConst*,System.UInt32,svn_io_file_del_t,apr_pool_t*)">
 Open a unique file in @a dirpath, and write @a nbytes from @a buf to
 the file before closing it.  Return the name of the newly created file
 in @a *tmp_path, allocated in @a pool.

 If @a dirpath is @c NULL, use the path returned from svn_io_temp_dir().
 (Note that when using the system-provided temp directory, it may not
 be possibly to atomically rename the resulting file due to cross-device
 issues.)

 The file will be deleted according to @a delete_when.

 @since New in 1.6.

</member>
        <member name="M:svn_io_file_write_full(apr_file_t*,System.Void!System.Runtime.CompilerServices.IsConst*,System.UInt32,System.UInt32*,apr_pool_t*)">
Wrapper for apr_file_write_full(). 
</member>
        <member name="M:svn_io_file_write(apr_file_t*,System.Void!System.Runtime.CompilerServices.IsConst*,System.UInt32*,apr_pool_t*)">
Wrapper for apr_file_write(). 
</member>
        <member name="M:svn_io_file_seek(apr_file_t*,System.Int32,System.Int64*,apr_pool_t*)">
Wrapper for apr_file_seek(). 
</member>
        <member name="M:svn_io_file_read_full(apr_file_t*,System.Void*,System.UInt32,System.UInt32*,apr_pool_t*)">
Wrapper for apr_file_read_full(). 
</member>
        <member name="M:svn_io_file_read(apr_file_t*,System.Void*,System.UInt32*,apr_pool_t*)">
Wrapper for apr_file_read(). 
</member>
        <member name="M:svn_io_file_info_get(apr_finfo_t*,System.Int32,apr_file_t*,apr_pool_t*)">
Wrapper for apr_file_info_get(). 
</member>
        <member name="M:svn_io_file_getc(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,apr_file_t*,apr_pool_t*)">
Wrapper for apr_file_getc(). 
</member>
        <member name="M:svn_io_file_close(apr_file_t*,apr_pool_t*)">
Wrapper for apr_file_close(). 
</member>
        <member name="M:svn_io_file_open(apr_file_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,apr_pool_t*)">
Wrapper for apr_file_open().  @a fname is utf8-encoded. 
</member>
        <member name="M:svn_io_detect_mimetype(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Like svn_io_detect_mimetype2, but with @a mimetypes_map set to
 * @c NULL.
 *
 * @deprecated Provided for backward compatibility with the 1.4 API

</member>
        <member name="M:svn_io_detect_mimetype2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_hash_t*,apr_pool_t*)">
Examine utf8-encoded @a file to determine if it can be described by a
 * known (as in, known by this function) Multipurpose Internet Mail
 * Extension (MIME) type.  If so, set @a *mimetype to a character string
 * describing the MIME type, else set it to @c NULL.
 *
 * If not @c NULL, @a mimetype_map is a hash mapping <tt>const char *</tt>
 * filename extensions to <tt>const char *</tt> MIME types, and is the
 * first source consulted regarding @a file's MIME type.
 *
 * Use @a pool for any necessary allocations.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_io_parse_mimetypes_file(apr_hash_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Parse utf8-encoded @a mimetypes_file as a MIME types file (such as
 * is provided with Apache HTTP Server), and set @a *type_map to a
 * hash mapping <tt>const char *</tt> filename extensions to
 * <tt>const char *</tt> MIME types.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_io_run_diff3(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,ap">
Similar to svn_io_run_diff3_2(), but with @a user_args set to @c NULL.
 *
 * @deprecated Provided for backwards compatibility with the 1.3 API.

</member>
        <member name="M:svn_io_run_diff3_2(System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServ">
Similar to svn_io_run_diff3_3(), but with @a diff3_cmd encoded in
 * internal encoding used by APR.
 *
 * @deprecated Provided for backwards compatibility with the 1.5 API.
 * @since New in 1.4.

</member>
        <member name="M:svn_io_run_diff3_3(System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServ">
Invoke the configured @c diff3 program, in utf8-encoded @a dir
 * like this:
 *
 *          diff3 -E -m @a mine @a older @a yours &gt; @a merged
 *
 * (See the diff3 documentation for details.)
 *
 * If @a user_args is non-NULL, replace "-E" with the <tt>const char*</tt>
 * elements that @a user_args contains.
 *
 * @a mine, @a older and @a yours are utf8-encoded paths (relative to
 * @a dir or absolute) to three files that already exist.
 *
 * @a merged is an open file handle, and is left open after the merge
 * result is written to it. (@a merged should *not* be the same file
 * as @a mine, or nondeterministic things may happen!)
 *
 * @a mine_label, @a older_label, @a yours_label are utf8-encoded label
 * parameters for diff3's -L option.  Any of them may be @c NULL, in
 * which case the corresponding @a mine, @a older, or @a yours parameter is
 * used instead.
 *
 * Set @a *exitcode to diff3's exit status.  If @a *exitcode is anything
 * other than 0 or 1, then return @c SVN_ERR_EXTERNAL_PROGRAM.  (Note the
 * following from the diff3 info pages: "An exit status of 0 means
 * `diff3' was successful, 1 means some conflicts were found, and 2
 * means trouble.")
 *
 * @a diff3_cmd must be non-NULL.
 *
 * Do all allocation in @a pool.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_io_run_diff(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsConst*,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32*,apr_file_t*,apr_file_t*,System.SByte!System">
Similar to svn_io_run_diff2() but with @diff_cmd encoded in internal
 * encoding used by APR.
 *
 * @deprecated Provided for backwards compatibility with the 1.5 API. 
</member>
        <member name="M:svn_io_run_diff2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsConst*,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32*,apr_file_t*,apr_file_t*,System.SByte!Syste">
Invoke the configured @c diff program, with @a user_args (an array
 * of utf8-encoded @a num_user_args arguments) if they are specified
 * (that is, if @a user_args is non-NULL), or "-u" if they are not.
 * If @a user_args is NULL, the value of @a num_user_args is ignored.
 *
 * Diff runs in utf8-encoded @a dir, and its exit status is stored in
 * @a exitcode, if it is not @c NULL.
 *
 * If @a label1 and/or @a label2 are not NULL they will be passed to the diff
 * process as the arguments of "-L" options.  @a label1 and @a label2 are also
 * in utf8, and will be converted to native charset along with the other args.
 *
 * @a from is the first file passed to diff, and @a to is the second.  The
 * stdout of diff will be sent to @a outfile, and the stderr to @a errfile.
 *
 * @a diff_cmd must be non-NULL.
 *
 * Do all allocation in @a pool.
 * @since New in 1.6.0.

</member>
        <member name="M:svn_io_run_cmd(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsConst*,System.Int32*,apr_exit_why_e*,System.Int32,apr_file_t*,apr_file_t*,apr_file_t*,apr_pool_t*)">
Run a command to completion, by first calling svn_io_start_cmd() and
 * then calling svn_io_wait_for_cmd().  The parameters correspond to
 * the same-named parameters of those two functions.

</member>
        <member name="M:svn_io_wait_for_cmd(apr_proc_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32*,apr_exit_why_e*,apr_pool_t*)">
 Wait for the process @a *cmd_proc to complete and optionally retrieve
 its exit code.  @a cmd is used only in error messages.

 If @a exitcode is not NULL, and SVN_NO_ERROR is returned, @a *exitcode
 will contain the exit code of the process.  If @a exitcode is NULL and
 the exit code is non-zero, then an @c SVN_ERR_EXTERNAL_PROGRAM error
 will be returned.

 If @a exitwhy is not NULL, and SVN_NO_ERROR is returned, @a *exitwhy
 will indicate why the process terminated.  If @a exitwhy is NULL,
 and the exit reason is not @c APR_PROC_CHECK_EXIT(), then an
 @c SVN_ERR_EXTERNAL_PROGRAM error will be returned.

 @since New in 1.3.

</member>
        <member name="M:svn_io_start_cmd(apr_proc_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_file_t*,apr_file_t*,apr_file_t*,apr_pool_t*)">
 Start @a cmd with @a args, using utf8-encoded @a path as working
 directory.  Connect @a cmd's stdin, stdout, and stderr to @a infile,
 @a outfile, and @a errfile, except where they are NULL.  Return the
 process handle for the invoked program in @a *cmd_proc.

 @a args is a list of utf8-encoded <tt>const char *</tt> arguments,
 terminated by @c NULL.  @a args[0] is the name of the program, though it
 need not be the same as @a cmd.

 If @a inherit is TRUE, the invoked program inherits its environment from
 the caller and @a cmd, if not absolute, is searched for in PATH.
 Otherwise, the invoked program runs with an empty environment and @a cmd
 must be an absolute path.

 @note On some platforms, failure to execute @a cmd in the child process
 will result in error output being written to @a errfile, if non-NULL, and
 a non-zero exit status being returned to the parent process.

 @since New in 1.3.

</member>
        <member name="M:svn_io_dir_walk(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,=FUNC:svn_error_t*(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_finfo_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*),System.Void*,apr_pool_t*)">
This function will recursively walk over the files and directories
 * rooted at @a dirname, a utf8-encoded path. For each file or directory,
 * @a walk_func is invoked, passing in the @a walk_baton, the utf8-encoded
 * full path to the entry, an @c apr_finfo_t structure, and a temporary
 * pool for allocations.  For any directory, @a walk_func will be invoked
 * on the directory itself before being invoked on any subdirectories or
 * files within the directory.
 *
 * The set of information passed to @a walk_func is specified by @a wanted,
 * and the items specified by @c APR_FINFO_TYPE and @c APR_FINFO_NAME.
 *
 * All allocations will be performed in @a pool.

</member>
        <member name="D:svn_io_walk_func_t">
Callback function type for svn_io_dir_walk() 
</member>
        <member name="M:svn_io_get_dirents(apr_hash_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Similar to svn_io_get_dirents2(), but @a *dirents is a hash table
 * with @c svn_node_kind_t values.
 *
 * @deprecated Provided for backwards compatibility with the 1.2 API.

</member>
        <member name="M:svn_io_get_dirents2(apr_hash_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Read all of the disk entries in directory @a path, a utf8-encoded
 * path.  Set @a *dirents to a hash mapping dirent names (<tt>char *</tt>) to
 * @c svn_io_dirent_t structures, allocated in @a pool.
 *
 * @note The `.' and `..' directories normally returned by
 * apr_dir_read() are NOT returned in the hash.
 *
 * @note The kind field in the @a dirents is set according to the mapping
 *       as documented for svn_io_check_path()
 *
 * @since New in 1.3.

</member>
        <member name="M:svn_io_get_dir_filenames(apr_hash_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Read all of the disk entries in directory @a path, a utf8-encoded
 * path.  Set @a *dirents to a hash mapping dirent names (<tt>char *</tt>) to
 * undefined non-NULL values, allocated in @a pool.
 *
 * @note The `.' and `..' directories normally returned by
 * apr_dir_read() are NOT returned in the hash.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_io_remove_dir(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Similar to svn_io_remove_dir2(), but with @a ignore_enoent set to
 * @c FALSE and @a cancel_func and @a cancel_baton set to @c NULL.
 *
 * @deprecated Provided for backward compatibility with the 1.4 API

</member>
        <member name="M:svn_io_remove_dir2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
Recursively remove directory @a path.  @a path is utf8-encoded.
 * If @a ignore_enoent is @c TRUE, don't fail if the target directory
 * doesn't exist.  Use @a pool for temporary allocations.
 *
 * Because recursive delete of a directory tree can be a lengthy operation,
 * provide @a cancel_func and @a cancel_baton for interruptability.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_io_remove_file(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Remove file @a path, a utf8-encoded path.  This wraps apr_file_remove(),
 * converting any error to a Subversion error.

</member>
        <member name="M:svn_stringbuf_from_aprfile(svn_stringbuf_t**,apr_file_t*,apr_pool_t*)">
Sets @a *result to a string containing the contents of the already opened
 * @a file.  Reads from the current position in file to the end.  Does not
 * close the file or reset the cursor position.
 *
 * @note due to memory pseudo-reallocation behavior (due to pools), this
 *   can be a memory-intensive operation for large files.

</member>
        <member name="M:svn_stringbuf_from_file(svn_stringbuf_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Similar to svn_stringbuf_from_file2(), except that if @a filename
 * is "-", return the error @c SVN_ERR_UNSUPPORTED_FEATURE and don't
 * touch @a *result.
 *
 * @deprecated Provided for backwards compatibility with the 1.4 API.

</member>
        <member name="M:svn_stringbuf_from_file2(svn_stringbuf_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
@} 
Set @a *result to a string containing the contents of @a
 * filename, which is either "-" (indicating that stdin should be
 * read) or the utf8-encoded path of a real file.
 *
 * @warning Callers should be aware of possible unexpected results
 * when using this function to read from stdin where additional
 * stdin-reading processes abound.  For example, if a program tries
 * both to invoke an external editor and to read from stdin, stdin
 * could be trashed and the editor might act funky or die outright.
 *
 * @note due to memory pseudo-reallocation behavior (due to pools), this
 *   can be a memory-intensive operation for large files.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_string_from_stream(svn_string_t**,svn_stream_t*,apr_pool_t*,apr_pool_t*)">
Read the contents of @a stream into memory, returning the data in
 * @a result. The stream will be closed when it has been successfully and
 * completely read.
 *
 * The returned memory is allocated in @a result_pool, and any temporary
 * allocations are performed in @a scratch_pool.
 *
 * @note due to memory pseudo-reallocation behavior (due to pools), this
 *   can be a memory-intensive operation for large files.
 *
 * @since New in 1.6

</member>
        <member name="M:svn_stream_contents_same(System.Int32*,svn_stream_t*,svn_stream_t*,apr_pool_t*)">
Set @a *same to TRUE if @a stream1 and @a stream2 have the same
 * contents, else set it to FALSE.  Use @a pool for temporary allocations.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_stream_copy(svn_stream_t*,svn_stream_t*,apr_pool_t*)">
 Same as svn_stream_copy3(), but without the cancellation function
 or stream closing.

 @since New in 1.1.
 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="M:svn_stream_copy2(svn_stream_t*,svn_stream_t*,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
 Same as svn_stream_copy3() but the streams are not closed.

 @since New in 1.5.
 @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="M:svn_stream_copy3(svn_stream_t*,svn_stream_t*,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
 Read the contents of the readable stream @a from and write them to the
 writable stream @a to calling @a cancel_func before copying each chunk.

 @a cancel_func may be @c NULL.

 @note both @a from and @a to will be closed upon successful completion of
 the copy (but an error may still be returned, based on trying to close
 the two streams). If the closure is not desired, then you can use
 svn_stream_disown() to protect either or both of the streams from
 being closed.
 ### TODO: should close the streams ALWAYS, even on error exit

 @since New in 1.6.

</member>
        <member name="M:svn_stream_readline(svn_stream_t*,svn_stringbuf_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32*,apr_pool_t*)">
Allocate @a *stringbuf in @a pool, and read into it one line (terminated
 * by @a eol) from @a stream. The line-terminator is read from the stream,
 * but is not added to the end of the stringbuf.  Instead, the stringbuf
 * ends with a usual '\\0'.
 *
 * If @a stream runs out of bytes before encountering a line-terminator,
 * then set @a *eof to @c TRUE, otherwise set @a *eof to FALSE.

</member>
        <member name="M:svn_stream_printf_from_utf8(svn_stream_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,BTEllipsis)">
Write to @a stream using a printf-style @a fmt specifier, passed through
 * apr_psprintf() using memory from @a pool.  The resulting string
 * will be translated to @a encoding before it is sent to @a stream.
 *
 * @note Use @c APR_LOCALE_CHARSET to translate to the encoding of the
 * current locale.
 *
 * @since New in 1.3.

</member>
        <member name="M:svn_stream_printf(svn_stream_t*,apr_pool_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,BTEllipsis)">
Write to @a stream using a printf-style @a fmt specifier, passed through
 * apr_psprintf() using memory from @a pool.

</member>
        <member name="M:svn_stream_close(svn_stream_t*)">
Close a generic stream. @see svn_stream_t. 
</member>
        <member name="M:svn_stream_write(svn_stream_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.UInt32*)">
Write to a generic stream. @see svn_stream_t. 
</member>
        <member name="M:svn_stream_read(svn_stream_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.UInt32*)">
Read from a generic stream. @see svn_stream_t. 
</member>
        <member name="M:svn_stream_checksummed(svn_stream_t*,System.Byte!System.Runtime.CompilerServices.IsConst**,System.Byte!System.Runtime.CompilerServices.IsConst**,System.Int32,apr_pool_t*)">
 Similar to svn_stream_checksummed2(), but always returning the MD5
 checksum in @a read_digest and @a write_digest.

 @since New in 1.4.
 @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="M:svn_stream_checksummed2(svn_stream_t*,svn_checksum_t**,svn_checksum_t**,svn_checksum_kind_t,System.Int32,apr_pool_t*)">
Return a stream that calculates checksums for all data read
 * and written.  The stream @a stream is used to read and write all data.
 * The stream and the resulting digests are allocated in @a pool.
 *
 * When the stream is closed, @a *read_checksum and @a *write_checksum
 * are set to point to the resulting checksums, of type @a read_checksum_kind
 * and @a write_checksum_kind, respectively.
 *
 * Both @a read_checksum and @a write_checksum can be @c NULL, in which case
 * the respective checksum isn't calculated.
 *
 * If @a read_all is TRUE, make sure that all data available on @a
 * stream is read (and checksummed) when the stream is closed.
 *
 * Read and write operations can be mixed without interfering.
 *
 * The @a stream passed into this function is closed when the created
 * stream is closed.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_stream_compressed(svn_stream_t*,apr_pool_t*)">
Return a stream that decompresses all data read and compresses all
 * data written. The stream @a stream is used to read and write all
 * compressed data. All compression data structures are allocated on
 * @a pool. If compression support is not compiled in then
 * svn_stream_compressed() returns @a stream unmodified. Make sure you
 * call svn_stream_close() on the stream returned by this function,
 * so that all data are flushed and cleaned up.
 *
 * @note From 1.4, compression support is always compiled in.

</member>
        <member name="M:svn_stream_from_string(svn_string_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Return a generic read-only stream connected to string @a str.
 *  Allocate the stream in @a pool.

</member>
        <member name="M:svn_stream_from_stringbuf(svn_stringbuf_t*,apr_pool_t*)">
Return a generic stream connected to stringbuf @a str.  Allocate the
 * stream in @a pool.

</member>
        <member name="M:svn_stream_for_stdout(svn_stream_t**,apr_pool_t*)">
Set @a *out to a generic stream connected to stdout, allocated in
 * @a pool.  The stream and its underlying APR handle will be closed
 * when @a pool is cleared or destroyed.

</member>
        <member name="M:svn_stream_from_aprfile(apr_file_t*,apr_pool_t*)">
Similar to svn_stream_from_aprfile2(), except that the file will
 * always be disowned.
 *
 * @note The stream returned is not considered to "own" the underlying
 *       file, meaning that svn_stream_close() on the stream will not
 *       close the file.
 *
 * @deprecated Provided for backward compatibility with the 1.3 API.

</member>
        <member name="M:svn_stream_from_aprfile2(apr_file_t*,System.Int32,apr_pool_t*)">
Create a stream from an APR file.  For convenience, if @a file is
 * @c NULL, an empty stream created by svn_stream_empty() is returned.
 *
 * This function should normally be called with @a disown set to FALSE,
 * in which case closing the stream will also close the underlying file.
 *
 * If @a disown is TRUE, the stream will disown the underlying file,
 * meaning that svn_stream_close() will not close the file.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_stream_open_unique(svn_stream_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_io_file_del_t,apr_pool_t*,apr_pool_t*)">
Create a writable stream to a file in the directory @a dirpath.
 * The file will have an arbitrary and unique name, and the full path
 * will be returned in @a temp_path. The stream will be returned in
 * @a stream. Both will be allocated from @a result_pool.
 *
 * If @a dirpath is @c NULL, use the path returned from svn_io_temp_dir().
 * (Note that when using the system-provided temp directory, it may not
 * be possibly to atomically rename the resulting file due to cross-device
 * issues.)
 *
 * The file will be deleted according to @a delete_when.
 *
 * Temporary allocations will be performed in @a scratch_pool.
 *
 * @since New in 1.6
 * @see svn_io_open_unique_file3()

</member>
        <member name="M:svn_stream_open_writable(svn_stream_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*,apr_pool_t*)">
Create a stream to write a file at @a path. The file will be *created*
 * using the APR_BUFFERED and APR_BINARY flag, and APR_OS_DEFAULT for the
 * perms. The file will be created "exclusively", so if it already exists,
 * then an error will be thrown. If you'd like to use different values, or
 * open an existing file, then open the file yourself, and use the
 * svn_stream_from_aprfile2() interface.
 *
 * The stream will be returned in @a stream, and allocated from @a result_pool.
 * Temporary allocations will be performed in @a scratch_pool.
 *
 * @since New in 1.6

</member>
        <member name="M:svn_stream_open_readonly(svn_stream_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*,apr_pool_t*)">
Create a stream to read the file at @a path. It will be opened using
 * the APR_BUFFERED and APR_BINARY flag, and APR_OS_DEFAULT for the perms.
 * If you'd like to use different values, then open the file yourself, and
 * use the svn_stream_from_aprfile2() interface.
 *
 * The stream will be returned in @a stream, and allocated from @a result_pool.
 * Temporary allocations will be performed in @a scratch_pool.
 *
 * @since New in 1.6

</member>
        <member name="M:svn_stream_disown(svn_stream_t*,apr_pool_t*)">
Return a stream allocated in @a pool which forwards all requests
 * to @a stream.  Destruction is explicitly excluded from forwarding.
 *
 * @see notes/destruction-of-stacked-resources
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_stream_empty(apr_pool_t*)">
Create a stream that is empty for reading and infinite for writing. 
</member>
        <member name="M:svn_stream_set_close(svn_stream_t*,=FUNC:svn_error_t*(System.Void*))">
Set @a stream's close function to @a close_fn 
</member>
        <member name="M:svn_stream_set_write(svn_stream_t*,=FUNC:svn_error_t*(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.UInt32*))">
Set @a stream's write function to @a write_fn 
</member>
        <member name="M:svn_stream_set_read(svn_stream_t*,=FUNC:svn_error_t*(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.UInt32*))">
Set @a stream's read function to @a read_fn 
</member>
        <member name="M:svn_stream_set_baton(svn_stream_t*,System.Void*)">
Set @a stream's baton to @a baton 
</member>
        <member name="M:svn_stream_create(System.Void*,apr_pool_t*)">
Create a generic stream.  @see svn_stream_t. 
</member>
        <member name="D:svn_close_fn_t">
Close handler function for a generic stream.  @see svn_stream_t. 
</member>
        <member name="D:svn_write_fn_t">
Write handler function for a generic stream.  @see svn_stream_t. 
</member>
        <member name="D:svn_read_fn_t">
Read handler function for a generic stream.  @see svn_stream_t. 
</member>
        <member name="T:svn_stream_t">
Generic byte-streams
 *
 * @defgroup svn_io_byte_streams Generic byte streams
 * @{

An abstract stream of bytes--either incoming or outgoing or both.
 *
 * The creator of a stream sets functions to handle read and write.
 * Both of these handlers accept a baton whose value is determined at
 * stream creation time; this baton can point to a structure
 * containing data associated with the stream.  If a caller attempts
 * to invoke a handler which has not been set, it will generate a
 * runtime assertion failure.  The creator can also set a handler for
 * close requests so that it can flush buffered data or whatever;
 * if a close handler is not specified, a close request on the stream
 * will simply be ignored.  Note that svn_stream_close() does not
 * deallocate the memory used to allocate the stream structure; free
 * the pool you created the stream in to free that memory.
 *
 * The read and write handlers accept length arguments via pointer.
 * On entry to the handler, the pointed-to value should be the amount
 * of data which can be read or the amount of data to write.  When the
 * handler returns, the value is reset to the amount of data actually
 * read or written.  Handlers are obliged to complete a read or write
 * to the maximum extent possible; thus, a short read with no
 * associated error implies the end of the input stream, and a short
 * write should never occur without an associated error.

</member>
        <member name="M:svn_io_dir_file_copy(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Copy file @a file from location @a src_path to location @a dest_path.
 * Use @a pool for memory allocations.

</member>
        <member name="M:svn_io_file_flush_to_disk(apr_file_t*,apr_pool_t*)">
 Flush any unwritten data from @a file to disk.  Use @a pool for
 memory allocations.

 @since New in 1.1.

</member>
        <member name="M:svn_io_file_lock2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,apr_pool_t*)">
 Lock file at @a lock_file. If @a exclusive is TRUE,
 obtain exclusive lock, otherwise obtain shared lock.

 If @a nonblocking is TRUE, do not wait for the lock if it
 is not available: throw an error instead.

 Lock will be automatically released when @a pool is cleared or destroyed.
 Use @a pool for memory allocations.

 @since New in 1.1.

</member>
        <member name="M:svn_io_file_lock(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
 Lock file at @a lock_file. If @a exclusive is TRUE,
 obtain exclusive lock, otherwise obtain shared lock.
 Lock will be automatically released when @a pool is cleared or destroyed.
 Use @a pool for memory allocations.

 @deprecated Provided for backward compatibility with the 1.0 API.

</member>
        <member name="M:svn_io_file_create(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Create file at utf8-encoded @a file with contents @a contents.
 * @a file must not already exist.
 * Use @a pool for memory allocations.

</member>
        <member name="M:svn_io_files_contents_same_p(System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *same to TRUE if @a file1 and @a file2 have the same
 * contents, else set it to FALSE.  Use @a pool for temporary allocations.

</member>
        <member name="M:svn_io_file_checksum(System.Byte*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Put the md5 checksum of @a file into @a digest.
 * @a digest points to @c APR_MD5_DIGESTSIZE bytes of storage.
 * Use @a pool only for temporary allocations.
 *
 * @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="M:svn_io_file_checksum2(svn_checksum_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_checksum_kind_t,apr_pool_t*)">
Return in @a *checksum the checksum of type @a kind of @a file
 * Use @a pool for temporary allocations and to allocate @a *checksum.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_io_filesizes_different_p(System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *different_p to non-zero if @a file1 and @a file2 have different
 * sizes, else set to zero.  Both @a file1 and @a file2 are utf8-encoded.
 *
 * Setting @a *different_p to zero does not mean the files definitely
 * have the same size, it merely means that the sizes are not
 * definitely different.  That is, if the size of one or both files
 * cannot be determined, then the sizes are not known to be different,
 * so @a *different_p is set to 0.

</member>
        <member name="M:svn_io_sleep_for_timestamps(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Sleep to ensure that any files modified after we exit have a different
 * timestamp than the one we recorded. If @a path is not NULL, check if we
 * can determine how long we should wait for a new timestamp on the filesystem
 * containing @a path, an existing file or directory. If @a path is NULL or we
 * can't determine the timestamp resolution, sleep until the next second.
 *
 * Use @a pool for any necessary allocations. @a pool can be null if @a path
 * is NULL.
 *
 * Errors while retrieving the timestamp resolution will result in sleeping
 * to the next second, to keep the working copy stable in error conditions.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_io_set_file_affected_time(System.Int64,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set the timestamp of file @a path to @a apr_time.  @a path is
 *  utf8-encoded.
 *
 * @note This is the APR mtime which corresponds to the traditional mtime
 * on Unix, and the last write time on Windows.

</member>
        <member name="M:svn_io_file_affected_time(System.Int64*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *apr_time to the time of last modification of the contents of the
 * file @a path.  @a path is utf8-encoded.
 *
 * @note This is the APR mtime which corresponds to the traditional mtime
 * on Unix, and the last write time on Windows.

</member>
        <member name="M:svn_io_read_length_line(apr_file_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.UInt32*,apr_pool_t*)">
Read a line from @a file into @a buf, but not exceeding @a *limit bytes.
 * Does not include newline, instead '\\0' is put there.
 * Length (as in strlen) is returned in @a *limit.
 * @a buf should be pre-allocated.
 * @a file should be already opened.
 *
 * When the file is out of lines, @c APR_EOF will be returned.

</member>
        <member name="M:svn_io_is_file_executable(System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Determine whether a file is executable by the current user.
 * Set @a *executable to @c TRUE if the file @a path is executable by the
 * current user, otherwise set it to @c FALSE.
 *
 * On Windows and on platforms without userids, always returns @c FALSE.

</member>
        <member name="M:svn_io_set_file_executable(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,apr_pool_t*)">
Set @a path's "executability" (but do nothing if it is a symlink).
 *
 * @a path is the utf8-encoded path to the file.  If @a executable
 * is @c TRUE, then make the file executable.  If @c FALSE, make it
 * non-executable.  If @a ignore_enoent is @c TRUE, don't fail if the target
 * file doesn't exist.
 *
 * When making the file executable on operating systems with unix style
 * permissions, never add an execute permission where there is not
 * already a read permission: that is, only make the file executable
 * for the user, group or world if the corresponding read permission
 * is already set for user, group or world.
 *
 * When making the file non-executable on operating systems with unix style
 * permissions, remove all execute permissions.
 *
 * On other operating systems, toggle the file's "executability" as much as
 * the operating system allows.
 *
 * @note If @a path is a directory, act on it as though it were a
 * file, as described above, but note that you probably don't want to
 * call this function on directories.  We have left it effective on
 * directories for compatibility reasons, but as its name implies, it
 * should be used only for files.

</member>
        <member name="M:svn_io_set_file_read_write_carefully(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Int32,apr_pool_t*)">
Similar to svn_io_set_file_read_* functions.
 * Change the read-write permissions of a file.
 * @since New in 1.1.
 *
 * When making @a path read-write on operating systems with unix style
 * permissions, set the permissions on @a path to the permissions that
 * are set when a new file is created (effectively honoring the user's
 * umask).
 *
 * When making the file read-only on operating systems with unix style
 * permissions, remove all write permissions.
 *
 * On other operating systems, toggle the file's "writability" as much as
 * the operating system allows.
 *
 * @a path is the utf8-encoded path to the file.  If @a enable_write
 * is @c TRUE, then make the file read-write.  If @c FALSE, make it
 * read-only.  If @a ignore_enoent is @c TRUE, don't fail if the target
 * file doesn't exist.
 *
 * @deprecated Provided for backward compatibility with the 1.3 API.

</member>
        <member name="M:svn_io_set_file_read_write(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Make a file as writable as the operating system allows.
 * @a path is the utf8-encoded path to the file.  If @a ignore_enoent is
 * @c TRUE, don't fail if the target file doesn't exist.
 * @warning On Unix this function will do the equivalent of chmod a+w path.
 * If this is not what you want you should not use this function, but rather
 * use apr_file_perms_set().
 *
 * If @a path is a symlink, do nothing.
 *
 * @note If @a path is a directory, act on it as though it were a
 * file, as described above, but note that you probably don't want to
 * call this function on directories.  We have left it effective on
 * directories for compatibility reasons, but as its name implies, it
 * should be used only for files.

</member>
        <member name="M:svn_io_set_file_read_only(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Make a file as read-only as the operating system allows.
 * @a path is the utf8-encoded path to the file. If @a ignore_enoent is
 * @c TRUE, don't fail if the target file doesn't exist.
 *
 * If @a path is a symlink, do nothing.
 *
 * @note If @a path is a directory, act on it as though it were a
 * file, as described above, but note that you probably don't want to
 * call this function on directories.  We have left it effective on
 * directories for compatibility reasons, but as its name implies, it
 * should be used only for files.

</member>
        <member name="M:svn_io_append_file(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Append @a src to @a dst.  @a dst will be appended to if it exists, else it
 * will be created.  Both @a src and @a dst are utf8-encoded.

</member>
        <member name="M:svn_io_dir_empty(System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *is_empty_p to @c TRUE if directory @a path is empty, else to
 * @c FALSE if it is not empty.  @a path must be a directory, and is
 * utf8-encoded.  Use @a pool for temporary allocation.

</member>
        <member name="M:svn_io_make_dir_recursively(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Create directory @a path on the file system, creating intermediate
 * directories as required, like <tt>mkdir -p</tt>.  Report no error if @a
 * path already exists.  @a path is utf8-encoded.
 *
 * This is essentially a wrapper for apr_dir_make_recursive(), passing
 * @c APR_OS_DEFAULT as the permissions.

</member>
        <member name="M:svn_io_copy_dir_recursively(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,=FUNC:svn_error_t*(System.Void*),System.Void*,apr_pool_t*)">
Recursively copy directory @a src into @a dst_parent, as a new entry named
 * @a dst_basename.  If @a dst_basename already exists in @a dst_parent,
 * return error.  @a copy_perms will be passed through to svn_io_copy_file()
 * when any files are copied.  @a src, @a dst_parent, and @a dst_basename are
 * all utf8-encoded.
 *
 * If @a cancel_func is non-NULL, invoke it with @a cancel_baton at
 * various points during the operation.  If it returns any error
 * (typically @c SVN_ERR_CANCELLED), return that error immediately.

</member>
        <member name="M:svn_io_copy_link(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Copy symbolic link @a src to @a dst atomically.  Overwrite @a dst
 if it exists, else create it.  Both @a src and @a dst are
 utf8-encoded filenames.  After copying, the @a dst link will point
 to the same thing @a src does.

 @since New in 1.1.

</member>
        <member name="M:svn_io_copy_perms(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Copy permission flags from @a src onto the file at @a dst. Both
 * filenames are utf8-encoded filenames.

</member>
        <member name="M:svn_io_copy_file(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Copy @a src to @a dst atomically, in a "byte-for-byte" manner.
 * Overwrite @a dst if it exists, else create it.  Both @a src and @a dst
 * are utf8-encoded filenames.  If @a copy_perms is TRUE, set @a dst's
 * permissions to match those of @a src.

</member>
        <member name="M:svn_io_temp_dir(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,apr_pool_t*)">
Set @a *dir to a directory path (allocated in @a pool) deemed
 * usable for the creation of temporary files and subdirectories.

</member>
        <member name="M:svn_io_read_link(svn_string_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Set @a *dest to the path that the symlink at @a path references.
 Allocate the string from @a pool.

 @since New in 1.1.

</member>
        <member name="M:svn_io_create_unique_link(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Like svn_io_open_unique_file(), except that instead of creating a
 file, a symlink is generated that references the path @a dest.

 @since New in 1.1.

</member>
        <member name="M:svn_io_open_unique_file(apr_file_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Like svn_io_open_unique_file2, but can't delete on pool cleanup.
 *
 * @deprecated Provided for backward compatibility with the 1.0 API
 *
 * @note In 1.4 the API was extended to require either @a f or
 *       @a unique_name_p (the other can be NULL).  Before that, both were
 *       required.

</member>
        <member name="M:svn_io_open_unique_file2(apr_file_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_io_file_del_t,apr_pool_t*)">
Like svn_io_open_uniquely_named(), but takes a joined dirpath and
 * filename, and a single pool.
 *
 * @since New in 1.4
 *
 * @deprecated Provided for backward compatibility with the 1.5 API

</member>
        <member name="M:svn_io_open_unique_file3(apr_file_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_io_file_del_t,apr_pool_t*,apr_pool_t*)">
Create a writable file in the directory @a dirpath. The file will have
 * an arbitrary and unique name, and the full path will be returned in
 * @a temp_path. The file will be returned in @a file. Both will be
 * allocated from @a result_pool.
 *
 * If @a dirpath is @c NULL, use the path returned from svn_io_temp_dir().
 * (Note that when using the system-provided temp directory, it may not
 * be possibly to atomically rename the resulting file due to cross-device
 * issues.)
 *
 * The file will be deleted according to @a delete_when.
 *
 * Temporary allocations will be performed in @a scratch_pool.
 *
 * @since New in 1.6
 * @see svn_stream_open_unique()

</member>
        <member name="M:svn_io_check_resolved_path(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_node_kind_t*,apr_pool_t*)">
Like svn_io_check_path(), but resolve symlinks.  This returns the
    same varieties of @a kind as svn_io_check_path(). 
</member>
        <member name="M:svn_io_check_special_path(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_node_kind_t*,System.Int32*,apr_pool_t*)">
 Like svn_io_check_path(), but also set *is_special to @c TRUE if
 the path is not a normal file.

 @since New in 1.1.

</member>
        <member name="M:svn_io_check_path(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_node_kind_t*,apr_pool_t*)">
Determine the @a kind of @a path.  @a path should be UTF-8 encoded.
 *
 * If @a path is a file, set @a *kind to @c svn_node_file.
 *
 * If @a path is a directory, set @a *kind to @c svn_node_dir.
 *
 * If @a path does not exist, set @a *kind to @c svn_node_none.
 *
 * If @a path exists but is none of the above, set @a *kind to @c
 * svn_node_unknown.
 *
 * If @a path is not a valid pathname, set @a *kind to #svn_node_none.  If
 * unable to determine @a path's kind for any other reason, return an error,
 * with @a *kind's value undefined.
 *
 * Use @a pool for temporary allocations.
 *
 * @see svn_node_kind_t

</member>
        <member name="F:svn_io_dirent_t.special">
If @c kind is @c svn_node_file, whether this entry is a special file;
   * else FALSE.
   *
   * @see svn_io_check_special_path().

</member>
        <member name="F:svn_io_dirent_t.kind">
The kind of this entry. 
</member>
        <member name="T:svn_io_dirent_t">
Represents the kind and special status of a directory entry.
 *
 * @since New in 1.3.

</member>
        <member name="F:svn_io_file_del_on_pool_cleanup">
Remove when the associated pool is cleared 
</member>
        <member name="F:svn_io_file_del_on_close">
Remove when the file is closed 
</member>
        <member name="F:svn_io_file_del_none">
No deletion ever 
</member>
        <member name="M:svn_checksum__from_digest(System.Byte!System.Runtime.CompilerServices.IsConst*,svn_checksum_kind_t,apr_pool_t*)">
 Internal function for creating a checksum from a binary digest.

 @since New in 1.6

</member>
        <member name="M:svn_checksum_size(svn_checksum_t!System.Runtime.CompilerServices.IsConst*)">
 Return the digest size of @a checksum.

 @since New in 1.6.

</member>
        <member name="M:svn_checksum_final(svn_checksum_t**,svn_checksum_ctx_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Finalize the checksum used when creating @a ctx, and put the resultant
 checksum in @a *checksum, allocated in @a pool.

 @since New in 1.6.

</member>
        <member name="M:svn_checksum_update(svn_checksum_ctx_t*,System.Void!System.Runtime.CompilerServices.IsConst*,System.UInt32)">
 Update the checksum represented by @a ctx, with @a len bytes starting at
 @a data.

 @since New in 1.6.

</member>
        <member name="M:svn_checksum_ctx_create(svn_checksum_kind_t,apr_pool_t*)">
 Create a new @c svn_checksum_ctx_t structure, allocated from @a pool for
 calculating checksums of type @a kind.  @see svn_checksum_final()

 @since New in 1.6.

</member>
        <member name="M:svn_checksum_empty_checksum(svn_checksum_kind_t,apr_pool_t*)">
 Return in @a pool a newly allocated checksum populated with the checksum
 of type @a kind for the empty string.

 @since New in 1.6.

</member>
        <member name="M:svn_checksum(svn_checksum_t**,svn_checksum_kind_t,System.Void!System.Runtime.CompilerServices.IsConst*,System.UInt32,apr_pool_t*)">
 Return in @a *checksum the checksum of type @a kind for the bytes beginning
 at @a data, and going for @a len.  @a *checksum is allocated in @a pool.

 @since New in 1.6.

</member>
        <member name="M:svn_checksum_parse_hex(svn_checksum_t**,svn_checksum_kind_t,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Parse the hex representation @a hex of a checksum of kind @a kind and
 * set @a *checksum to the result, allocating in @a pool.
 *
 * If @a hex is @c NULL or is the all-zeros checksum, then set @a *checksum
 * to @c NULL.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_checksum_to_cstring(svn_checksum_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Return the hex representation of @a checksum, allocating the
 * string in @a pool.  If @a checksum-&gt;digest is all zeros (that is,
 * 0, not '0'), then return NULL.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_checksum_to_cstring_display(svn_checksum_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Return the hex representation of @a checksum, allocating the string
 * in @a pool.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_checksum_dup(svn_checksum_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return a deep copy of @a checksum, allocated in @a pool.

 @since New in 1.6.

</member>
        <member name="M:svn_checksum_match(svn_checksum_t!System.Runtime.CompilerServices.IsConst*,svn_checksum_t!System.Runtime.CompilerServices.IsConst*)">
Compare checksums @a checksum1 and @a checksum2.  If their kinds do not
 * match or if neither is all zeros, and their content does not match, then
 * return FALSE; else return TRUE.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_checksum_clear(svn_checksum_t*)">
Set @c checksum-&gt;digest to all zeros, which, by convention, matches
 * all other checksums.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_checksum_create(svn_checksum_kind_t,apr_pool_t*)">
Return a new checksum structure of type @a kind, initialized to the all-
 * zeros value, allocated in @a pool.
 *
 * @since New in 1.6.

</member>
        <member name="T:svn_checksum_ctx_t">
Opaque type for creating checksums of data.

</member>
        <member name="F:svn_checksum_t.kind">
The type of the checksum.  This should never be changed by consumers
      of the APIs. 
</member>
        <member name="F:svn_checksum_t.digest">
The bytes of the checksum. 
</member>
        <member name="T:svn_checksum_t">
 A generic checksum representation.

 @since New in 1.6.

</member>
        <member name="F:svn_checksum_sha1">
The checksum is (or should be set to) a SHA1 checksum. 
</member>
        <member name="F:svn_checksum_md5">
The checksum is (or should be set to) an MD5 checksum. 
</member>
        <member name="M:svn_cstring_casecmp(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
 Compare two strings @a atr1 and @a atr2, treating case-equivalent
 unaccented Latin (ASCII subset) letters as equal.

 Returns in integer greater than, equal to, or less than 0,
 according to whether @a str1 is considered greater than, equal to,
 or less than @a str2.

 @since New in 1.5.

</member>
        <member name="M:svn_cstring_join(apr_array_header_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return a cstring which is the concatenation of @a strings (an array
 of char *) each followed by @a separator (that is, @a separator
 will also end the resulting string).  Allocate the result in @a pool.
 If @a strings is empty, then return the empty string.

 @since New in 1.2.

</member>
        <member name="M:svn_cstring_count_newlines(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
 Return the number of line breaks in @a msg, allowing any kind of newline
 termination (CR, LF, CRLF, or LFCR), even inconsistent.

 @since New in 1.2.

</member>
        <member name="M:svn_cstring_match_glob_list(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_array_header_t*)">
Return @c TRUE iff @a str matches any of the elements of @a list, a list
 * of zero or more glob patterns.

</member>
        <member name="M:svn_cstring_split_append(apr_array_header_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Like svn_cstring_split(), but append to existing @a array instead of
 * creating a new one.  Allocate the copied substrings in @a pool
 * (i.e., caller decides whether or not to pass @a array-&gt;pool as @a pool).

</member>
        <member name="M:svn_cstring_split(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
@} 
C strings.
 *
 * @defgroup svn_string_cstrings c string functions
 * @{

Divide @a input into substrings along @a sep_chars boundaries, return an
 * array of copies of those substrings, allocating both the array and
 * the copies in @a pool.
 *
 * None of the elements added to the array contain any of the
 * characters in @a sep_chars, and none of the new elements are empty
 * (thus, it is possible that the returned array will have length
 * zero).
 *
 * If @a chop_whitespace is TRUE, then remove leading and trailing
 * whitespace from the returned strings.

</member>
        <member name="M:svn_string_compare_stringbuf(svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_stringbuf_t!System.Runtime.CompilerServices.IsConst*)">
Return @c TRUE iff @a str1 and @a str2 have identical length and data. 
</member>
        <member name="M:svn_stringbuf_find_char_backward(svn_stringbuf_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte)">
Return position of last occurrence of @a ch in @a str, or return
 * @a str-&gt;len if no occurrence.

</member>
        <member name="M:svn_stringbuf_strip_whitespace(svn_stringbuf_t*)">
Strip whitespace from both sides of @a str (modified in place). 
</member>
        <member name="M:svn_stringbuf_first_non_whitespace(svn_stringbuf_t!System.Runtime.CompilerServices.IsConst*)">
Return offset of first non-whitespace character in @a str, or return
 * @a str-&gt;len if none.

</member>
        <member name="M:svn_stringbuf_compare(svn_stringbuf_t!System.Runtime.CompilerServices.IsConst*,svn_stringbuf_t!System.Runtime.CompilerServices.IsConst*)">
Return @c TRUE iff @a str1 and @a str2 have identical length and data. 
</member>
        <member name="M:svn_stringbuf_dup(svn_stringbuf_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Return a duplicate of @a original_string. 
</member>
        <member name="M:svn_stringbuf_appendcstr(svn_stringbuf_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Append a C string onto @a targetstr.
 *
 * reallocs if necessary. @a targetstr is affected, nothing else is.

</member>
        <member name="M:svn_stringbuf_appendstr(svn_stringbuf_t*,svn_stringbuf_t!System.Runtime.CompilerServices.IsConst*)">
Append an @c svn_stringbuf_t onto @a targetstr.
 *
 * reallocs if necessary. @a targetstr is affected, nothing else is.

</member>
        <member name="M:svn_stringbuf_appendbytes(svn_stringbuf_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.UInt32)">
Append an array of bytes onto @a targetstr.
 *
 * reallocs if necessary. @a targetstr is affected, nothing else is.

</member>
        <member name="M:svn_stringbuf_fillchar(svn_stringbuf_t*,System.Byte)">
Fill bytestring @a str with character @a c. 
</member>
        <member name="M:svn_stringbuf_chop(svn_stringbuf_t*,System.UInt32)">
Chop @a nbytes bytes off end of @a str, but not more than @a str-&gt;len. 
</member>
        <member name="M:svn_stringbuf_isempty(svn_stringbuf_t!System.Runtime.CompilerServices.IsConst*)">
Return @c TRUE if a bytestring is empty (has length zero). 
</member>
        <member name="M:svn_stringbuf_setempty(svn_stringbuf_t*)">
Set a bytestring @a str to empty (0 length). 
</member>
        <member name="M:svn_stringbuf_set(svn_stringbuf_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Set a bytestring @a str to @a value 
</member>
        <member name="M:svn_stringbuf_ensure(svn_stringbuf_t*,System.UInt32)">
Make sure that the string @a str has at least @a minimum_size bytes of
 * space available in the memory block.
 *
 * (@a minimum_size should include space for the terminating NULL character.)

</member>
        <member name="M:svn_stringbuf_createv(apr_pool_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
Create a new bytestring by formatting @a cstring (NULL-terminated)
 * from a @c va_list (see svn_stringbuf_createf()).

</member>
        <member name="M:svn_stringbuf_createf(apr_pool_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,BTEllipsis)">
Create a new bytestring by formatting @a cstring (NULL-terminated)
 * from varargs, which are as appropriate for apr_psprintf().

</member>
        <member name="M:svn_stringbuf_create_from_string(svn_string_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Create a new stringbuf with the contents of the given string 
</member>
        <member name="M:svn_stringbuf_create_ensure(System.UInt32,apr_pool_t*)">
Create a new empty bytestring with at least @a minimum_size bytes of
 * space available in the memory block.
 *
 * The allocated string buffer will be one byte larger then @a size to account
 * for a final '\0'.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_stringbuf_ncreate(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.UInt32,apr_pool_t*)">
Create a new bytestring containing a generic string of bytes
 * (NON-NULL-terminated)

</member>
        <member name="M:svn_stringbuf_create(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
@} 
svn_stringbuf_t functions.
 *
 * @defgroup svn_string_svn_stringbuf_t svn_stringbuf_t functions
 * @{

Create a new bytestring containing a C string (NULL-terminated). 
</member>
        <member name="M:svn_string_find_char_backward(svn_string_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte)">
Return position of last occurrence of @a ch in @a str, or return
 * @a str-&gt;len if no occurrence.

</member>
        <member name="M:svn_string_first_non_whitespace(svn_string_t!System.Runtime.CompilerServices.IsConst*)">
Return offset of first non-whitespace character in @a str, or return
 * @a str-&gt;len if none.

</member>
        <member name="M:svn_string_compare(svn_string_t!System.Runtime.CompilerServices.IsConst*,svn_string_t!System.Runtime.CompilerServices.IsConst*)">
Return @c TRUE iff @a str1 and @a str2 have identical length and data. 
</member>
        <member name="M:svn_string_dup(svn_string_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Return a duplicate of @a original_string. 
</member>
        <member name="M:svn_string_isempty(svn_string_t!System.Runtime.CompilerServices.IsConst*)">
Return TRUE if a bytestring is empty (has length zero). 
</member>
        <member name="M:svn_string_createv(apr_pool_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
Create a new bytestring by formatting @a cstring (NULL-terminated)
 * from a @c va_list (see svn_stringbuf_createf()).

</member>
        <member name="M:svn_string_createf(apr_pool_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,BTEllipsis)">
Create a new bytestring by formatting @a cstring (NULL-terminated)
 * from varargs, which are as appropriate for apr_psprintf().

</member>
        <member name="M:svn_string_create_from_buf(svn_stringbuf_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Create a new string with the contents of the given stringbuf 
</member>
        <member name="M:svn_string_ncreate(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.UInt32,apr_pool_t*)">
Create a new bytestring containing a generic string of bytes
 * (NOT NULL-terminated) 
</member>
        <member name="M:svn_string_create(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
svn_string_t functions.
 *
 * @defgroup svn_string_svn_string_t svn_string_t functions
 * @{

Create a new bytestring containing a C string (NULL-terminated). 
</member>
        <member name="F:svn_stringbuf_t.blocksize">
total size of buffer allocated 
</member>
        <member name="F:svn_stringbuf_t.len">
length of bytestring 
</member>
        <member name="F:svn_stringbuf_t.data">
pointer to the bytestring 
</member>
        <member name="F:svn_stringbuf_t.pool">
a pool from which this string was originally allocated, and is not
   * necessarily specific to this string.  This is used only for allocating
   * more memory from when the string needs to grow.

</member>
        <member name="T:svn_stringbuf_t">
A buffered string, capable of appending without an allocation and copy
 * for each append. 
</member>
        <member name="T:svn_string_t">
 @copyright
 ====================================================================
 Copyright (c) 2000-2006 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_string.h
 @brief Counted-length strings for Subversion, plus some C string goodies.

 There are two string datatypes: @c svn_string_t and @c svn_stringbuf_t.
 The former is a simple pointer/length pair useful for passing around
 strings (or arbitrary bytes) with a counted length. @c svn_stringbuf_t is
 buffered to enable efficient appending of strings without an allocation
 and copy for each append operation.

 @c svn_string_t contains a <tt>const char *</tt> for its data, so it is
 most appropriate for constant data and for functions which expect constant,
 counted data. Functions should generally use <tt>const @c svn_string_t
 *</tt> as their parameter to indicate they are expecting a constant,
 counted string.

 @c svn_stringbuf_t uses a plain <tt>char *</tt> for its data, so it is
 most appropriate for modifiable data.

 <h3>Invariants</h3>

   1. Null termination:

      Both structures maintain a significant invariant:

         <tt>s-&gt;data[s-&gt;len] == '\\0'</tt>

      The functions defined within this header file will maintain
      the invariant (which does imply that memory is
      allocated/defined as @c len+1 bytes).  If code outside of the
      @c svn_string.h functions manually builds these structures,
      then they must enforce this invariant.

      Note that an @c svn_string(buf)_t may contain binary data,
      which means that strlen(s-&gt;data) does not have to equal @c
      s-&gt;len. The NULL terminator is provided to make it easier to
      pass @c s-&gt;data to C string interfaces.


   2. Non-NULL input:

      All the functions assume their input data is non-NULL,
      unless otherwise documented, and may seg fault if passed
      NULL.  The input data may *contain* null bytes, of course, just
      the data pointer itself must not be NULL.

 <h3>Memory allocation</h3>

   All the functions make a deep copy of all input data, and never store
   a pointer to the original input data.

 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_types.h
 @brief Subversion's data types

@defgroup svn_string String handling
@{

A simple counted string. 
</member>
        <member name="M:svn_error_abort_on_malfunction(System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Handle a malfunction by printing a message to stderr and aborting.
 *
 * This function implements @c svn_error_malfunction_handler_t.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_error_raise_on_malfunction(System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Handle a malfunction by returning an error object that describes it.
 *
 * When @a can_return is false, abort()
 *
 * This function implements @c svn_error_malfunction_handler_t.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_error_set_malfunction_handler(=FUNC:svn_error_t*(System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*))">
Cause subsequent malfunctions to be handled by @a func.
 * Return the handler that was previously in effect.
 *
 * @a func may not be null.
 *
 * @note The default handler is svn_error_abort_on_malfunction().
 *
 * @note This function must be called in a single-threaded context.
 *
 * @since New in 1.6.

</member>
        <member name="D:svn_error_malfunction_handler_t">
A type of function that handles an assertion failure or other internal
 * malfunction detected within the Subversion libraries.
 *
 * The error occurred in the source file @a file at line @a line, and was an
 * assertion failure of the expression @a expr, or, if @a expr is null, an
 * unconditional error.
 *
 * If @a can_return is false a function of this type must never return.
 *
 * If @a can_return is true a function of this type must do one of:
 *   - Return an error object describing the error, using an error code in
 *     the category SVN_ERR_MALFUNC_CATEGORY_START.
 *   - Never return.
 *
 * The function may alter its behaviour according to compile-time
 * and run-time and even interactive conditions.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_error__malfunction(System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
A statement macro for checking error values.
 *
 * Evaluate @a expr.  If it yields an error, return that error from the
 * current function.  Otherwise, continue.
 *
 * The <tt>do { ... } while (0)</tt> wrapper has no semantic effect,
 * but it makes this macro syntactically equivalent to the expression
 * statement it resembles.  Without it, statements like
 *
 * @code
 *   if (a)
 *     SVN_ERR (some operation);
 *   else
 *     foo;
 * @endcode
 *
 * would not mean what they appear to.

A statement macro, very similar to @c SVN_ERR.
 *
 * This macro will wrap the error with the specified text before
 * returning the error.

A statement macro, similar to @c SVN_ERR, but returns an integer.
 *
 * Evaluate @a expr. If it yields an error, handle that error and
 * return @c EXIT_FAILURE.

@} 
 Return TRUE if @a err is an error specifically related to locking a
 path in the repository, FALSE otherwise.

 SVN_ERR_FS_OUT_OF_DATE is in here because it's a non-fatal error
 that can be thrown when attempting to lock an item.

 @since New in 1.2.

 Return TRUE if @a err is an error specifically related to unlocking
 a path in the repository, FALSE otherwise.

 @since New in 1.2.

Report that an internal malfunction has occurred, and possibly terminate
 * the program.
 *
 * Act as determined by the current "malfunction handler" which may have
 * been specified by a call to svn_error_set_malfunction_handler() or else
 * is the default handler as specified in that function's documentation. If
 * the malfunction handler returns, then cause the function using this macro
 * to return the error object that it generated.
 *
 * @note The intended use of this macro is where execution reaches a point
 * that cannot possibly be reached unless there is a bug in the program.
 *
 * @since New in 1.6.

Similar to SVN_ERR_MALFUNCTION(), but without the option of returning
 * an error to the calling function.
 *
 * If possible you should use SVN_ERR_MALFUNCTION() instead.
 *
 * @since New in 1.6.

Check that a condition is true: if not, report an error and possibly
 * terminate the program.
 *
 * If the Boolean expression @a expr is true, do nothing. Otherwise,
 * act as determined by the current "malfunction handler" which may have
 * been specified by a call to svn_error_set_malfunction_handler() or else
 * is the default handler as specified in that function's documentation. If
 * the malfunction handler returns, then cause the function using this macro
 * to return the error object that it generated.
 *
 * @note The intended use of this macro is to check a condition that cannot
 * possibly be false unless there is a bug in the program.
 *
 * @note The condition to be checked should not be computationally expensive
 * if it is reached often, as, unlike traditional "assert" statements, the
 * evaluation of this expression is not compiled out in release-mode builds.
 *
 * @since New in 1.6.

Similar to SVN_ERR_ASSERT(), but without the option of returning
 * an error to the calling function.
 *
 * If possible you should use SVN_ERR_ASSERT() instead.
 *
 * @since New in 1.6.

A helper function for the macros that report malfunctions. Handle a
 * malfunction by calling the current "malfunction handler" which may have
 * been specified by a call to svn_error_set_malfunction_handler() or else
 * is the default handler as specified in that function's documentation.
 *
 * Pass all of the parameters to the handler. The error occurred in the
 * source file @a file at line @a line, and was an assertion failure of the
 * expression @a expr, or, if @a expr is null, an unconditional error.
 *
 * If @a can_return is true, the handler can return an error object
 * that is returned by the caller. If @a can_return is false the
 * method should never return. (The caller will call abort())
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_handle_warning(_iobuf*,svn_error_t*)">
Like svn_handle_warning2() but with @c prefix set to "svn: "
 *
 * @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_handle_warning2(_iobuf*,svn_error_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
 Very basic default warning handler: print out the error @a error to the
 stdio stream @a stream, prefixed by @a prefix.  Allocations are
 performed in the error's pool.

 @since New in 1.2.

</member>
        <member name="M:svn_handle_error(svn_error_t*,_iobuf*,System.Int32)">
Like svn_handle_error2() but with @c prefix set to "svn: "
 *
 * @deprecated Provided for backward compatibility with the 1.1 API.

</member>
        <member name="M:svn_handle_error2(svn_error_t*,_iobuf*,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
 Very basic default error handler: print out error stack @a error to the
 stdio stream @a stream, with each error prefixed by @a prefix; quit and
 clear @a error iff the @a fatal flag is set.  Allocations are performed
 in the @a error's pool.

 If you're not sure what prefix to pass, just pass "svn: ".  That's
 what code that used to call svn_handle_error() and now calls
 svn_handle_error2() does.

 @since New in 1.2.

</member>
        <member name="M:svn_error_clear(svn_error_t*)">
Free the memory used by @a error, as well as all ancestors and
 * descendants of @a error.
 *
 * Unlike other Subversion objects, errors are managed explicitly; you
 * MUST clear an error if you are ignoring it, or you are leaking memory.
 * For convenience, @a error may be @c NULL, in which case this function does
 * nothing; thus, svn_error_clear(svn_foo(...)) works as an idiom to
 * ignore errors.

</member>
        <member name="M:svn_error_dup(svn_error_t*)">
Create a new error that is a deep copy of @a err and return it.
 *
 * @since New in 1.2.

</member>
        <member name="M:svn_error_root_cause(svn_error_t*)">
Return the root cause of @a err by finding the last error in its
 * chain (e.g. it or its children).  @a err may be @c SVN_NO_ERROR, in
 * which case @c SVN_NO_ERROR is returned.
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_error_compose(svn_error_t*,svn_error_t*)">
Add @a new_err to the end of @a chain's chain of errors.  The @a new_err
 * chain will be copied into @a chain's pool and destroyed, so @a new_err
 * itself becomes invalid after this function.

</member>
        <member name="M:svn_error_compose_create(svn_error_t*,svn_error_t*)">
Wrapper macro to collect file and line information 
Compose two errors, returning the composition as a brand new error
 * and consuming the original errors.  Either or both of @a err1 and
 * @a err2 may be @c SVN_NO_ERROR.  If both are not @c SVN_NO_ERROR,
 * @a err2 will follow @a err1 in the chain of the returned error.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_error_quick_wrap(svn_error_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Wrapper macro to collect file and line information 
A quick n' easy way to create a wrapped exception with your own
 * message, before throwing it up the stack.  (It uses all of the
 * @a child's fields.)

</member>
        <member name="M:svn_error_wrap_apr(System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,BTEllipsis)">
Wrapper macro to collect file and line information 
Wrap a @a status from an APR function.  If @a fmt is NULL, this is
 * equivalent to svn_error_create(status,NULL,NULL).  Otherwise,
 * the error message is constructed by formatting @a fmt and the
 * following arguments according to apr_psprintf(), and then
 * appending ": " and the error message corresponding to @a status.
 * (If UTF-8 translation of the APR error message fails, the ": " and
 * APR error are not appended to the error message.)

</member>
        <member name="M:svn_error_createf(System.Int32,svn_error_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,BTEllipsis)">
Wrapper macro to collect file and line information 
Create an error structure with the given @a apr_err and @a child,
 * with a printf-style error message produced by passing @a fmt, using
 * apr_psprintf().

</member>
        <member name="M:svn_error_create(System.Int32,svn_error_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
SVN error creation and destruction.
 *
 * @defgroup svn_error_error_creation_destroy Error creation and destruction
 * @{

Create a nested exception structure.
 *
 * Input:  an APR or SVN custom error code,
 *         a "child" error to wrap,
 *         a specific message
 *
 * Returns:  a new error structure (containing the old one).
 *
 * @note Errors are always allocated in a subpool of the global pool,
 *        since an error's lifetime is generally not related to the
 *        lifetime of any convenient pool.  Errors must be freed
 *        with svn_error_clear().  The specific message should be @c NULL
 *        if there is nothing to add to the general message associated
 *        with the error code.
 *
 *        If creating the "bottommost" error in a chain, pass @c NULL for
 *        the child argument.

</member>
        <member name="M:svn_err_best_message(svn_error_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.UInt32)">
If @a err has a custom error message, return that, otherwise
 * store the generic error string associated with @a err-&gt;apr_err into
 * @a buf (terminating with NULL) and return @a buf.
 *
 * @since New in 1.4.
 *
 * @note @a buf and @a bufsize are provided in the interface so that
 * this function is thread-safe and yet does no allocation.

</member>
        <member name="M:svn_strerror(System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.UInt32)">
Put an English description of @a statcode into @a buf and return @a buf,
 * NULL-terminated. @a statcode is either an svn error or apr error.

</member>
        <member name="M:svn_error__locate(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32!System.Runtime.CompilerServices.IsLong)">
Set the error location for debug mode. 
</member>
        <member name="T:svn_errno_t">
 @copyright
 ====================================================================
 Copyright (c) 2000-2004, 2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_error.h
 @brief Common exception handling for Subversion.

 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_types.h
 @brief Subversion's data types

the best kind of (@c svn_error_t *) ! 
 @copyright
 ====================================================================
 Copyright (c) 2000-2009 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_error_codes.h
 @brief Subversion error codes.

Collection of Subversion error code values, located within the
 * APR user error space. 
</member>
        <member name="M:svn_location_segment_dup(svn_location_segment_t*,apr_pool_t*)">
 Return a deep copy of @a segment, allocated in @a pool.

 @since New in 1.5.

</member>
        <member name="D:svn_location_segment_receiver_t">
A callback invoked by generators of @c svn_location_segment_t
objects, used to report information about a versioned object's
history in terms of its location in the repository filesystem over
time.

</member>
        <member name="F:svn_location_segment_t.path">
The absolute (sans leading slash) path for this segment.  May be
      NULL to indicate gaps in an object's history.  
</member>
        <member name="F:svn_location_segment_t.range_start">
The beginning (oldest) and ending (youngest) revisions for this
      segment. 
</member>
        <member name="T:svn_location_segment_t">
@defgroup node_location_seg_reporting Node location segment reporting.
 *  @{ 
 A representation of a segment of a object's version history with an
 emphasis on the object's location in the repository as of various
 revisions.

 @since New in 1.5.

</member>
        <member name="M:svn_merge_range_contains_rev(svn_merge_range_t*,System.Int32!System.Runtime.CompilerServices.IsLong)">
 Returns true if the changeset committed in revision @a rev is one
 of the changesets in the range @a range.

 @since New in 1.5.

</member>
        <member name="M:svn_merge_range_dup(svn_merge_range_t*,apr_pool_t*)">
 Return a copy of @a range, allocated in @a pool.

 @since New in 1.5.

</member>
        <member name="F:svn_merge_range_t.inheritable">
Whether this merge range should be inherited by treewise
descendants of the path to which the range applies. 
</member>
        <member name="F:svn_merge_range_t.start">
If the 'start' field is less than the 'end' field then 'start' is
exclusive and 'end' inclusive of the range described.  This is termed
a forward merge range.  If 'start' is greater than 'end' then the
opposite is true.  This is termed a reverse merge range.  If 'start'
equals 'end' the meaning of the range is not defined.

</member>
        <member name="T:svn_merge_range_t">
 Mergeinfo representing a merge of a range of revisions.

 @since New in 1.5

</member>
        <member name="M:svn_uuid_generate(apr_pool_t*)">
 Return a formatted Universal Unique IDentifier (UUID) string.

 @since New in 1.4.

</member>
        <member name="M:svn_lock_dup(svn_lock_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return a deep copy of @a lock, allocated in @a pool.

 @since New in 1.2.

</member>
        <member name="M:svn_lock_create(apr_pool_t*)">
 Returns an @c svn_lock_t, allocated in @a pool with all fields initialized
 to NULL values.

 @note To allow for extending the @c svn_lock_t structure in the future
 releases, this function should always be used to allocate the structure.

 @since New in 1.2.

</member>
        <member name="D:svn_cancel_func_t">
A user defined callback that subversion will call with a user defined
 * baton to see if the current operation should be continued.  If the operation
 * should continue, the function should return @c SVN_NO_ERROR, if not, it
 * should return @c SVN_ERR_CANCELLED.

</member>
        <member name="M:svn_mime_type_is_binary(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Return FALSE iff @a mime_type is a textual type.
 *
 * All mime types that start with "text/" are textual, plus some special
 * cases (for example, "image/x-xbitmap").

</member>
        <member name="M:svn_mime_type_validate(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
A buffer size that may be used when processing a stream of data.
 *
 * @note We don't use this constant any longer, since it is considered to be
 * unnecessarily large.
 *
 * @deprecated Provided for backwards compatibility with the 1.3 API.

The maximum amount we can ever hold in memory. 
Validate @a mime_type.
 *
 * If @a mime_type does not contain a "/", or ends with non-alphanumeric
 * data, return @c SVN_ERR_BAD_MIME_TYPE, else return success.
 *
 * Use @a pool only to find error allocation.
 *
 * Goal: to match both "foo/bar" and "foo/bar; charset=blah", without
 * being too strict about it, but to disallow mime types that have
 * quotes, newlines, or other garbage on the end, such as might be
 * unsafe in an HTTP header.

</member>
        <member name="D:svn_commit_callback_t">
Same as @c svn_commit_callback2_t, but uses individual
 * data elements instead of the @c svn_commit_info_t structure
 *
 * @deprecated Provided for backward compatibility with the 1.3 API.

</member>
        <member name="D:svn_commit_callback2_t">
Callback function type for commits.
 *
 * When a commit succeeds, an instance of this is invoked with the
 * @a commit_info, along with the @a baton closure.
 * @a pool can be used for temporary allocations.
 *
 * @since New in 1.4.

</member>
        <member name="D:svn_log_message_receiver_t">
 Similar to @c svn_log_entry_receiver_t, except this uses separate
 parameters for each part of the log entry.

 @deprecated Provided for backward compatibility with the 1.4 API.

</member>
        <member name="D:svn_log_entry_receiver_t">
The callback invoked by log message loopers, such as
 * @c svn_ra_plugin_t.get_log() and svn_repos_get_logs().
 *
 * This function is invoked once on each log message, in the order
 * determined by the caller (see above-mentioned functions).
 *
 * @a baton is what you think it is, and @a log_entry contains relevent
 * information for the log message.  Any of @a log_entry-&gt;author,
 * @a log_entry-&gt;date, or @a log_entry-&gt;message may be @c NULL.
 *
 * If @a log_entry-&gt;date is neither NULL nor the empty string, it was
 * generated by svn_time_to_cstring() and can be converted to
 * @c apr_time_t with svn_time_from_cstring().
 *
 * If @a log_entry-&gt;changed_paths is non-@c NULL, then it contains as keys
 * every path committed in @a log_entry-&gt;revision; the values are
 * (@c svn_log_changed_path_t *) structures.
 *
 * If @a log_entry-&gt;has_children is @c TRUE, the message will be followed
 * immediately by any number of merged revisions (child messages), which are
 * terminated by an invocation with SVN_INVALID_REVNUM.  This usage may
 * be recursive.
 *
 * Use @a pool for temporary allocation.  If the caller is iterating
 * over log messages, invoking this receiver on each, we recommend the
 * standard pool loop recipe: create a subpool, pass it as @a pool to
 * each call, clear it after each iteration, destroy it after the loop
 * is done.  (For allocation that must last beyond the lifetime of a
 * given receiver call, use a pool in @a baton.)
 *
 * @since New in 1.5.

</member>
        <member name="M:svn_log_entry_dup(svn_log_entry_t*,apr_pool_t*)">
Return a deep copy of @a log_entry, allocated in @a pool.
 *
 * The resulting svn_log_entry_t has @c changed_paths set to the same
 * value as @c changed_path2. @c changed_paths will be @c NULL if
 * @c changed_paths2 was @c NULL.
 *
 * @since New in 1.6.

</member>
        <member name="M:svn_log_entry_create(apr_pool_t*)">
 Returns an @c svn_log_entry_t, allocated in @a pool with all fields
 initialized to NULL values.

 @note To allow for extending the @c svn_log_entry_t structure in future
 releases, this function should always be used to allocate the structure.

 @since New in 1.5.

</member>
        <member name="F:svn_log_entry_t.changed_paths2">
A hash containing as keys every path committed in @a revision; the
   * values are (@c svn_log_changed_path2_t *) stuctures.
   *
   * If this value is not @c NULL, it MUST have the same value as
   * changed_paths or svn_log_entry_dup() will not create an identical copy.
   *
   * The subversion core libraries will always set this field to the same
   * value as changed_paths for compatibity with users assuming an older
   * version.
   *
   * @since New in 1.6.

</member>
        <member name="F:svn_log_entry_t.has_children">
 Whether or not this message has children.

 When a log operation requests additional merge information, extra log
 entries may be returned as a result of this entry.  The new entries, are
 considered children of the original entry, and will follow it.  When
 the HAS_CHILDREN flag is set, the receiver should increment its stack
 depth, and wait until an entry is provided with SVN_INVALID_REVNUM which
 indicates the end of the children.

 For log operations which do not request additional merge information, the
 HAS_CHILDREN flag is always FALSE.

 For more information see:
 http://subversion.tigris.org/merge-tracking/design.html#commutative-reporting

</member>
        <member name="F:svn_log_entry_t.revprops">
The hash of requested revision properties, which may be NULL if it
   * would contain no revprops. 
</member>
        <member name="F:svn_log_entry_t.revision">
The revision of the commit. 
</member>
        <member name="F:svn_log_entry_t.changed_paths">
A hash containing as keys every path committed in @a revision; the
   * values are (@c svn_log_changed_path_t *) stuctures.
   *
   * The subversion core libraries will always set this field to the same
   * value as changed_paths2 for compatibity reasons.
   *
   * @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="T:svn_log_entry_t">
 A structure to represent all the information about a particular log entry.

 @note To allow for extending the @c svn_log_entry_t structure in future
 releases, always use svn_log_entry_create() to allocate the structure.

 @since New in 1.5.

</member>
        <member name="M:svn_log_changed_path_dup(svn_log_changed_path_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return a deep copy of @a changed_path, allocated in @a pool.

 @since New in 1.3.
 @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="F:svn_log_changed_path_t.copyfrom_rev">
Source revision of copy (if any). 
</member>
        <member name="F:svn_log_changed_path_t.copyfrom_path">
Source path of copy (if any). 
</member>
        <member name="F:svn_log_changed_path_t.action">
'A'dd, 'D'elete, 'R'eplace, 'M'odify 
</member>
        <member name="T:svn_log_changed_path_t">
 A structure to represent a path that changed for a log entry.  Same as
 @c svn_log_changed_path2_t, but without the node kind.

 @deprecated Provided for backward compatibility with the 1.5 API.

</member>
        <member name="M:svn_log_changed_path2_dup(svn_log_changed_path2_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return a deep copy of @a changed_path, allocated in @a pool.

 @since New in 1.6.

</member>
        <member name="M:svn_log_changed_path2_create(apr_pool_t*)">
 Returns an @c svn_log_changed_path2_t, allocated in @a pool with all fields
 initialized to NULL, None or empty values.

 @note To allow for extending the @c svn_log_changed_path2_t structure in
 future releases, this function should always be used to allocate the
 structure.

 @since New in 1.6.

</member>
        <member name="F:svn_log_changed_path2_t.node_kind">
The type of the node, may be svn_node_unknown. 
</member>
        <member name="F:svn_log_changed_path2_t.copyfrom_rev">
Source revision of copy (if any). 
</member>
        <member name="F:svn_log_changed_path2_t.copyfrom_path">
Source path of copy (if any). 
</member>
        <member name="F:svn_log_changed_path2_t.action">
'A'dd, 'D'elete, 'R'eplace, 'M'odify 
</member>
        <member name="T:svn_log_changed_path2_t">
 A structure to represent a path that changed for a log entry.

 @note To allow for extending the @c svn_log_changed_path2_t structure in
 future releases, always use svn_log_changed_path2_create() to allocate
 the structure.

 @since New in 1.6.

</member>
        <member name="M:svn_commit_info_dup(svn_commit_info_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
 Return a deep copy @a src_commit_info allocated in @a pool.

 @since New in 1.4.

</member>
        <member name="M:svn_create_commit_info(apr_pool_t*)">
 Allocate an object of type @c svn_commit_info_t in @a pool and
 return it.

 The @c revision field of the new struct is set to @c
 SVN_INVALID_REVNUM.  All other fields are initialized to @c NULL.

 @note Any object of the type @c svn_commit_info_t should
 be created using this function.
 This is to provide for extending the svn_commit_info_t in
 the future.

 @since New in 1.3.

</member>
        <member name="F:svn_commit_info_t.post_commit_err">
error message from post-commit hook, or NULL. 
</member>
        <member name="F:svn_commit_info_t.author">
author of the commit. 
</member>
        <member name="F:svn_commit_info_t.date">
server-side date of the commit. 
</member>
        <member name="F:svn_commit_info_t.revision">
just-committed revision. 
</member>
        <member name="M:svn_dirent_dup(svn_dirent_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Return a deep copy of @a dirent, allocated in @a pool.
 *
 * @since New in 1.4.

</member>
        <member name="F:svn_dirent_t.last_author">
author of created_rev 
</member>
        <member name="F:svn_dirent_t.time">
time of created_rev (mod-time) 
</member>
        <member name="F:svn_dirent_t.created_rev">
last rev in which this node changed 
</member>
        <member name="F:svn_dirent_t.has_props">
does the node have props? 
</member>
        <member name="F:svn_dirent_t.size">
length of file text, or 0 for directories 
</member>
        <member name="F:svn_dirent_t.kind">
node kind 
</member>
        <member name="T:svn_dirent_t">
 It is sometimes convenient to indicate which parts of an @c svn_dirent_t
 object you are actually interested in, so that calculating and sending
 the data corresponding to the other fields can be avoided.  These values
 can be used for that purpose.

 @defgroup svn_dirent_fields Dirent fields
 @{

An indication that you are interested in the @c kind field 
An indication that you are interested in the @c size field 
An indication that you are interested in the @c has_props field 
An indication that you are interested in the @c created_rev field 
An indication that you are interested in the @c time field 
An indication that you are interested in the @c last_author field 
A combination of all the dirent fields 
@} 
A general subversion directory entry. 
</member>
        <member name="M:svn_depth_from_word(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Return the appropriate depth for @a depth_str.  @a word is as
 * returned from svn_depth_to_word().  If @a depth_str does not
 * represent a recognized depth, return @c svn_depth_unknown.
 *
 * @since New in 1.5.

</member>
        <member name="T:svn_recurse_kind">
An enum to indicate whether recursion is needed. 
</member>
        <member name="D:svn_boolean_t">
The 'official' invalid file size constant. 
In printf()-style functions, format file sizes using this. 
YABT:  Yet Another Boolean Type 
</member>
        <member name="D:svn_filesize_t">
Originally intended to be used in printf()-style functions to format
 * revision numbers.  Deprecated due to incompatibilities with language
 * translation tools (e.g. gettext).
 *
 * New code should use a bare "%ld" format specifier for formatting revision
 * numbers.
 *
 * @deprecated Provided for backward compatibility with the 1.0 API.

The size of a file in the Subversion FS. 
</member>
        <member name="M:svn_revnum_parse(System.Int32!System.Runtime.CompilerServices.IsLong*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**)">
Valid revision numbers begin at 0 
The 'official' invalid revision num 
Not really invalid...just unimportant -- one day, this can be its
 * own unique value, for now, just make it the same as
 * @c SVN_INVALID_REVNUM.

Convert NULL-terminated C string @a str to a revision number. 
 Parse NULL-terminated C string @a str as a revision number and
 store its value in @a rev.  If @a endptr is non-NULL, then the
 address of the first non-numeric character in @a str is stored in
 it.  If there are no digits in @a str, then @a endptr is set (if
 non-NULL), and the error @c SVN_ERR_REVNUM_PARSE_FAILURE error is
 returned.  Negative numbers parsed from @a str are considered
 invalid, and result in the same error.

 @since New in 1.5.

</member>
        <member name="D:svn_revnum_t">
About Special Files in Subversion
 *
 * Subversion denotes files that cannot be portably created or
 * modified as "special" files (svn_node_special).  It stores these
 * files in the repository as a plain text file with the svn:special
 * property set.  The file contents contain: a platform-specific type
 * string, a space character, then any information necessary to create
 * the file on a supported platform.  For example, if a symbolic link
 * were being represented, the repository file would have the
 * following contents:
 *
 * "link /path/to/link/target"
 *
 * Where 'link' is the identifier string showing that this special
 * file should be a symbolic link and '/path/to/link/target' is the
 * destination of the symbolic link.
 *
 * Special files are stored in the text-base exactly as they are
 * stored in the repository.  The platform specific files are created
 * in the working copy at EOL/keyword translation time using
 * svn_subst_copy_and_translate2().  If the current platform does not
 * support a specific special file type, the file is copied into the
 * working copy as it is seen in the repository.  Because of this,
 * users of other platforms can still view and modify the special
 * files, even if they do not have their unique properties.
 *
 * New types of special files can be added by:
 *  1. Implementing a platform-dependent routine to create a uniquely
 *     named special file and one to read the special file in
 *     libsvn_subr/io.c.
 *  2. Creating a new textual name similar to
 *     SVN_SUBST__SPECIAL_LINK_STR in libsvn_subr/subst.c.
 *  3. Handling the translation/detranslation case for the new type in
 *     create_special_file and detranslate_special_file, using the
 *     routines from 1.

A revision number. 
</member>
        <member name="M:svn_node_kind_from_word(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Return the appropriate node_kind for @a word.  @a word is as
 * returned from svn_node_kind_to_word().  If @a word does not
 * represent a recognized kind or is @c NULL, return @c svn_node_unknown.
 *
 * @since New in 1.6.

</member>
        <member name="F:svn_node_unknown">
something's here, but we don't know what 
</member>
        <member name="F:svn_node_dir">
directory 
</member>
        <member name="F:svn_node_file">
regular file 
</member>
        <member name="F:svn_node_none">
absent 
</member>
        <member name="F:svn_error_t.line">
Source line where the error originated.  Only used iff @c SVN_DEBUG. 
</member>
        <member name="F:svn_error_t.file">
Source file where the error originated.  Only used iff @c SVN_DEBUG. 
</member>
        <member name="F:svn_error_t.pool">
The pool holding this error and any child errors it wraps 
</member>
        <member name="T:svn_error_t">
ptr to the error we "wrap" 
</member>
        <member name="F:svn_error_t.message">
details from producer of error 
</member>
        <member name="F:svn_error_t.apr_err">
APR error value, possibly SVN_ custom err 
</member>
        <member name="M:apr_filepath_encoding(System.Int32*,apr_pool_t*)">
The FilePath character encoding is unknown 
The FilePath character encoding is locale-dependent 
The FilePath character encoding is UTF-8 
Determine the encoding used internally by the FilePath functions
@param style points to a variable which receives the encoding style flag
@param p the pool to allocate any working storage
@remark Use @c apr_os_locale_encoding and/or @c apr_os_default_encoding
to get the name of the path encoding if it's not UTF-8.

</member>
        <member name="M:apr_filepath_set(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set the default file path (for relative file names)
@param path the default path returned
@param p the pool to allocate any working storage

</member>
        <member name="M:apr_filepath_get(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte**,System.Int32,apr_pool_t*)">
Return the default file path (for relative file names)
@param path the default path string returned
@param flags optional flag APR_FILEPATH_NATIVE to retrieve the
             default file path in os-native format.
@param p the pool to allocate the default path string from

</member>
        <member name="M:apr_filepath_list_merge(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte**,apr_array_header_t*,apr_pool_t*)">
Merge a list of search path components into a single search path
@param liststr the returned search path; may be NULL if @a pathelts is empty
@param pathelts the components of the search path
@param p the pool to allocate the search path from
@remark emtpy strings in the source array are ignored.
@remark the path separator in @a liststr is system specific;
e.g., ':' on Unix, ';' on Windows, etc.

</member>
        <member name="M:apr_filepath_list_split(apr_array_header_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Split a search path into separate components
@param pathelts the returned components of the search path
@param liststr the search path (e.g., <tt>getenv("PATH")</tt>)
@param p the pool to allocate the array and path components from
@remark empty path componenta do not become part of @a pathelts.
@remark the path separator in @a liststr is system specific;
e.g., ':' on Unix, ';' on Windows, etc.

</member>
        <member name="M:apr_filepath_merge(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
Merge additional file path onto the previously processed rootpath
@param newpath the merged paths returned
@param rootpath the root file path (NULL uses the current working path)
@param addpath the path to add to the root path
@param flags the desired APR_FILEPATH_ rules to apply when merging
@param p the pool to allocate the new path string from
@remark if the flag APR_FILEPATH_TRUENAME is given, and the addpath 
contains wildcard characters ('*', '?') on platforms that don't support 
such characters within filenames, the paths will be merged, but the 
result code will be APR_EPATHWILD, and all further segments will not
reflect the true filenames including the wildcard and following segments.

</member>
        <member name="M:apr_filepath_root(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.Int32,apr_pool_t*)">
@} 
@defgroup apr_filepath Filepath Manipulation Functions
@{

Cause apr_filepath_merge to fail if addpath is above rootpath 
 * @bug in APR 0.9 and 1.x, this flag's behavior is undefined
 * if the rootpath is NULL or empty.  In APR 2.0 this should be
 * changed to imply NOTABSOLUTE if the rootpath is NULL or empty.

internal: Only meaningful with APR_FILEPATH_NOTABOVEROOT 
Cause apr_filepath_merge to fail if addpath is above rootpath,
 * even given a rootpath /foo/bar and an addpath ../bar/bash

Fail apr_filepath_merge if the merged path is relative 
Fail apr_filepath_merge if the merged path is absolute 
Return the file system's native path format (e.g. path delimiters
 * of ':' on MacOS9, '\' on Win32, etc.) 
Resolve the true case of existing directories and file elements
 * of addpath, (resolving any aliases on Win32) and append a proper 
 * trailing slash if a directory

Extract the rootpath from the given filepath
@param rootpath the root file path returned with APR_SUCCESS or APR_EINCOMPLETE
@param filepath the pathname to parse for its root component
@param flags the desired rules to apply, from
<PRE>
     APR_FILEPATH_NATIVE    Use native path seperators (e.g. '\' on Win32)
     APR_FILEPATH_TRUENAME  Tests that the root exists, and makes it proper
</PRE>
@param p the pool to allocate the new path string from
@remark on return, filepath points to the first non-root character in the
given filepath.  In the simplest example, given a filepath of "/foo", 
returns the rootpath of "/" and filepath points at "foo".  This is far 
more complex on other platforms, which will canonicalize the root form
to a consistant format, given the APR_FILEPATH_TRUENAME flag, and also
test for the validity of that root (e.g., that a drive d:/ or network 
share //machine/foovol/). 
The function returns APR_ERELATIVE if filepath isn't rooted (an
error), APR_EINCOMPLETE if the root path is ambigious (but potentially
legitimate, e.g. "/" on Windows is incomplete because it doesn't specify
the drive letter), or APR_EBADPATH if the root is simply invalid.
APR_SUCCESS is returned if filepath is an absolute path.

</member>
        <member name="M:apr_dir_rewind(apr_dir_t*)">
Rewind the directory to the first entry.
@param thedir the directory descriptor to rewind.

</member>
        <member name="M:apr_dir_read(apr_finfo_t*,System.Int32,apr_dir_t*)">
 * Read the next entry from the specified directory. 
 * @param finfo the file info structure and filled in by apr_dir_read
 * @param wanted The desired apr_finfo_t fields, as a bit flag of APR_FINFO_
                 values 
 * @param thedir the directory descriptor returned from apr_dir_open
 * @remark No ordering is guaranteed for the entries read.
 *
 * @note If @c APR_INCOMPLETE is returned all the fields in @a finfo may
 *       not be filled in, and you need to check the @c finfo-&gt;valid bitmask
 *       to verify that what you're looking for is there. When no more
 *       entries are available, APR_ENOENT is returned.

</member>
        <member name="M:apr_dir_close(apr_dir_t*)">
close the specified directory. 
@param thedir the directory descriptor to close.

</member>
        <member name="M:apr_dir_open(apr_dir_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
@} 
@defgroup apr_dir Directory Manipulation Functions
@{

Open the specified directory.
@param new_dir The opened directory descriptor.
@param dirname The full path to the directory (use / on all systems)
@param pool The pool to use.

</member>
        <member name="M:apr_stat(apr_finfo_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,apr_pool_t*)">
 * get the specified file's stats.  The file is specified by filename, 
 * instead of using a pre-opened file.
 * @param finfo Where to store the information about the file, which is
 * never touched if the call fails.
 * @param fname The name of the file to stat.
 * @param wanted The desired apr_finfo_t fields, as a bit flag of APR_FINFO_
                 values 
 * @param pool the pool to use to allocate the new file. 
 *
 * @note If @c APR_INCOMPLETE is returned all the fields in @a finfo may
 *       not be filled in, and you need to check the @c finfo-&gt;valid bitmask
 *       to verify that what you're looking for is there.

</member>
        <member name="T:apr_file_t">
The file's handle, if accessed (can be submitted to apr_duphandle) 
</member>
        <member name="F:apr_finfo_t.name">
The file's name (no path) in filesystem case 
</member>
        <member name="F:apr_finfo_t.fname">
The pathname of the file (possibly unrooted) 
</member>
        <member name="F:apr_finfo_t.ctime">
The time the file was created, or the inode was last changed 
</member>
        <member name="F:apr_finfo_t.mtime">
The time the file was last modified 
</member>
        <member name="F:apr_finfo_t.atime">
The time the file was last accessed 
</member>
        <member name="F:apr_finfo_t.csize">
The storage size consumed by the file 
</member>
        <member name="F:apr_finfo_t.size">
The size of the file 
</member>
        <member name="F:apr_finfo_t.nlink">
The number of hard links to the file. 
</member>
        <member name="F:apr_finfo_t.device">
The id of the device the file is on. 
</member>
        <member name="F:apr_finfo_t.inode">
The inode of the file. 
</member>
        <member name="F:apr_finfo_t.group">
The group id that owns the file 
</member>
        <member name="F:apr_finfo_t.user">
The user id that owns the file 
</member>
        <member name="F:apr_finfo_t.filetype">
The type of file.  One of APR_REG, APR_DIR, APR_CHR, APR_BLK, APR_PIPE, 
     * APR_LNK or APR_SOCK.  If the type is undetermined, the value is APR_NOFILE.
     * If the type cannot be determined, the value is APR_UNKFILE.

</member>
        <member name="F:apr_finfo_t.protection">
The access permissions of the file.  Mimics Unix access rights. 
</member>
        <member name="F:apr_finfo_t.valid">
The bitmask describing valid fields of this apr_finfo_t structure 
     *  including all available 'wanted' fields and potentially more 
</member>
        <member name="F:apr_finfo_t.pool">
Allocates memory and closes lingering handles in the specified pool 
</member>
        <member name="T:apr_finfo_t">
@defgroup apr_file_stat Stat Functions
@{

file info structure 

The file information structure.  This is analogous to the POSIX
stat structure.

</member>
        <member name="D:apr_dev_t">
Structure for determining the device the file is on.

</member>
        <member name="D:apr_fileperms_t">
Structure for determining file permissions.

</member>
        <member name="T:apr_dir_t">
@defgroup apr_file_permissions File Permissions flags 
@{

@} 
Structure for referencing directories.

</member>
        <member name="M:apr_table_compress(apr_table_t*,System.UInt32)">
 Eliminate redundant entries in a table by either overwriting
 or merging duplicates.

 @param t Table.
 @param flags APR_OVERLAP_TABLES_MERGE to merge, or
              APR_OVERLAP_TABLES_SET to overwrite
 @remark When merging duplicates, the two values are concatenated,
         separated by the string ", ".

</member>
        <member name="M:apr_table_vdo(=FUNC:System.Int32(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*),System.Void*,apr_table_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
 Iterate over a table running the provided function once for every
 element in the table.  The @param vp varargs parameter must be a
 list of zero or more (char *) keys followed by a NULL pointer.  If
 zero keys are given, the @param comp function will be invoked for
 every element in the table.  Otherwise, the function is invoked
 only for those elements matching the keys specified.

 If an invocation of the @param comp function returns zero,
 iteration will continue using the next specified key, if any.

 @param comp The function to run
 @param rec The data to pass as the first argument to the function
 @param t The table to iterate over
 @param vp List of zero or more (char *) keys followed by NULL
 @return FALSE if one of the comp() iterations returned zero; TRUE if all
            iterations returned non-zero
 @see apr_table_do_callback_fn_t

</member>
        <member name="M:apr_table_do(=FUNC:System.Int32(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*),System.Void*,apr_table_t!System.Runtime.CompilerServices.IsConst*,BTEllipsis)">
 Iterate over a table running the provided function once for every
 element in the table.  The varargs array must be a list of zero or
 more (char *) keys followed by a NULL pointer.  If zero keys are
 given, the @param comp function will be invoked for every element
 in the table.  Otherwise, the function is invoked only for those
 elements matching the keys specified.

 If an invocation of the @param comp function returns zero,
 iteration will continue using the next specified key, if any.

 @param comp The function to run
 @param rec The data to pass as the first argument to the function
 @param t The table to iterate over
 @param ... A varargs array of zero or more (char *) keys followed by NULL
 @return FALSE if one of the comp() iterations returned zero; TRUE if all
            iterations returned non-zero
 @see apr_table_do_callback_fn_t

</member>
        <member name="D:apr_table_do_callback_fn_t">
Declaration prototype for the iterator callback function of apr_table_do()
and apr_table_vdo().
@param rec The data passed as the first argument to apr_table_[v]do()
@param key The key from this iteration of the table
@param value The value from this iteration of the table
@remark Iteration continues while this callback function returns non-zero.
To export the callback function for apr_table_[v]do() it must be declared 
in the _NONSTD convention.

</member>
        <member name="M:apr_table_overlay(apr_pool_t*,apr_table_t!System.Runtime.CompilerServices.IsConst*,apr_table_t!System.Runtime.CompilerServices.IsConst*)">
Merge two tables into one new table.
@param p The pool to use for the new table
@param overlay The first table to put in the new table
@param base The table to add at the end of the new table
@return A new table containing all of the data from the two passed in

</member>
        <member name="M:apr_table_addn(apr_table_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Add data to a table, regardless of whether there is another element with the
same key.
@param t The table to add to
@param key The key to use
@param val The value to add.
@remark When adding data, this function does not make a copy of the key or the
        value, so care should be taken to ensure that the values will not 
        change after they have been added.

</member>
        <member name="M:apr_table_add(apr_table_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Add data to a table, regardless of whether there is another element with the
same key.
@param t The table to add to
@param key The key to use
@param val The value to add.
@remark When adding data, this function makes a copy of both the key and the
        value.

</member>
        <member name="M:apr_table_mergen(apr_table_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Add data to a table by merging the value with data that has already been 
stored. The merging is done by concatenating the two values, separated
by the string ", ".
@param t The table to search for the data
@param key The key to merge data for (case does not matter)
@param val The data to add
@remark If the key is not found, then this function acts like apr_table_addn

</member>
        <member name="M:apr_table_merge(apr_table_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Add data to a table by merging the value with data that has already been 
stored. The merging is done by concatenating the two values, separated
by the string ", ".
@param t The table to search for the data
@param key The key to merge data for (case does not matter)
@param val The data to add
@remark If the key is not found, then this function acts like apr_table_add

</member>
        <member name="M:apr_table_unset(apr_table_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Remove data from the table.
@param t The table to remove data from
@param key The key of the data being removed (case does not matter)

</member>
        <member name="M:apr_table_setn(apr_table_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Add a key/value pair to a table.  If another element already exists with the
same key, this will overwrite the old data.
@param t The table to add the data to.
@param key The key to use (case does not matter)
@param val The value to add
@warning When adding data, this function does not make a copy of the key or 
         the value, so care should be taken to ensure that the values will 
         not change after they have been added..

</member>
        <member name="M:apr_table_set(apr_table_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Add a key/value pair to a table.  If another element already exists with the
same key, this will overwrite the old data.
@param t The table to add the data to.
@param key The key to use (case does not matter)
@param val The value to add
@remark When adding data, this function makes a copy of both the key and the
        value.

</member>
        <member name="M:apr_table_get(apr_table_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Get the value associated with a given key from the table.  After this call,
the data is still in the table.
@param t The table to search for the key
@param key The key to search for (case does not matter)
@return The value associated with the key, or NULL if the key does not exist. 

</member>
        <member name="M:apr_table_clear(apr_table_t*)">
Delete all of the elements from a table.
@param t The table to clear

</member>
        <member name="M:apr_table_clone(apr_pool_t*,apr_table_t!System.Runtime.CompilerServices.IsConst*)">
Create a new table whose contents are deep copied from the given
table. A deep copy operation copies all fields, and makes copies
of dynamically allocated memory pointed to by the fields.
@param p The pool to allocate the new table out of
@param t The table to clone
@return A deep copy of the table passed in

</member>
        <member name="M:apr_table_copy(apr_pool_t*,apr_table_t!System.Runtime.CompilerServices.IsConst*)">
Create a new table and copy another table into it.
@param p The pool to allocate the new table out of
@param t The table to copy
@return A copy of the table passed in
@warning The table keys and respective values are not copied

</member>
        <member name="M:apr_table_make(apr_pool_t*,System.Int32)">
Make a new table.
@param p The pool to allocate the pool out of
@param nelts The number of elements in the initial table.
@return The new table.
@warning This table can only store text data

</member>
        <member name="M:apr_array_pstrcat(apr_pool_t*,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst)">
Generate a new string from the apr_pool_t containing the concatenated 
sequence of substrings referenced as elements within the array.  The string 
will be empty if all substrings are empty or null, or if there are no 
elements in the array.  If sep is non-NUL, it will be inserted between 
elements as a separator.
@param p The pool to allocate the string out of
@param arr The array to generate the string from
@param sep The separator to use
@return A string containing all of the data in the array.

</member>
        <member name="M:apr_array_append(apr_pool_t*,apr_array_header_t!System.Runtime.CompilerServices.IsConst*,apr_array_header_t!System.Runtime.CompilerServices.IsConst*)">
Append one array to the end of another, creating a new array in the process.
@param p The pool to allocate the new array out of
@param first The array to put first in the new array.
@param second The array to put second in the new array.
@return A new array containing the data from the two arrays passed in.

</member>
        <member name="M:apr_array_copy_hdr(apr_pool_t*,apr_array_header_t!System.Runtime.CompilerServices.IsConst*)">
Copy the headers of the array, and arrange for the elements to be copied if
and only if the code subsequently does a push or arraycat.
@param p The pool to allocate the copy of the array out of
@param arr The array to copy
@return An exact copy of the array passed in
@remark The alternate apr_array_copy copies the *entire* array.

</member>
        <member name="M:apr_array_copy(apr_pool_t*,apr_array_header_t!System.Runtime.CompilerServices.IsConst*)">
Copy the entire array.
@param p The pool to allocate the copy of the array out of
@param arr The array to copy
@return An exact copy of the array passed in
@remark The alternate apr_array_copy_hdr copies only the header, and arranges 
        for the elements to be copied if (and only if) the code subsequently
        does a push or arraycat.

</member>
        <member name="M:apr_array_cat(apr_array_header_t*,apr_array_header_t!System.Runtime.CompilerServices.IsConst*)">
Concatenate two arrays together.
@param dst The destination array, and the one to go first in the combined 
           array
@param src The source array to add to the destination array

</member>
        <member name="M:apr_array_clear(apr_array_header_t*)">
Remove all elements from an array.
@param arr The array to remove all elements from.
@remark As the underlying storage is allocated from a pool, no
memory is freed by this operation, but is available for reuse.

</member>
        <member name="M:apr_array_pop(apr_array_header_t*)">
A helper macro for accessing a member of an APR array.
 *
 * @param ary the array
 * @param i the index into the array to return
 * @param type the type of the objects stored in the array
 *
 * @return the item at index i

A helper macro for pushing elements into an APR array.
 *
 * @param ary the array
 * @param type the type of the objects stored in the array
 *
 * @return the location where the new object should be placed

Remove an element from an array (as a first-in, last-out stack).
@param arr The array to remove an element from.
@return Location of the element in the array.
@remark If there are no elements in the array, NULL is returned.

</member>
        <member name="M:apr_array_push(apr_array_header_t*)">
Add a new element to an array (as a first-in, last-out stack).
@param arr The array to add an element to.
@return Location for the new element in the array.
@remark If there are no free spots in the array, then this function will
        allocate new space for the new element.

</member>
        <member name="M:apr_array_make(apr_pool_t*,System.Int32,System.Int32)">
Create an array.
@param p The pool to allocate the memory out of
@param nelts the number of elements in the initial array
@param elt_size The size of each element in the array.
@return The new array

</member>
        <member name="M:apr_is_empty_array(apr_array_header_t!System.Runtime.CompilerServices.IsConst*)">
Determine if the array is empty (either NULL or having no elements).
@param a The array to check
@return True if empty, False otherwise

</member>
        <member name="M:apr_is_empty_table(apr_table_t!System.Runtime.CompilerServices.IsConst*)">
Determine if the table is empty (either NULL or having no elements).
@param t The table to check
@return True if empty, False otherwise

</member>
        <member name="M:apr_table_elts(apr_table_t!System.Runtime.CompilerServices.IsConst*)">
Get the elements from a table.
@param t The table
@return An array containing the contents of the table

</member>
        <member name="F:apr_table_entry_t.key_checksum">
A checksum for the key, for use by the apr_table internals 
</member>
        <member name="F:apr_table_entry_t.val">
The value for the current table entry 
</member>
        <member name="F:apr_table_entry_t.key">
The key for the current table entry 
</member>
        <member name="T:apr_table_entry_t">
The (opaque) structure for string-content tables.


The type for each entry in a string-content table 
</member>
        <member name="F:apr_array_header_t.elts">
The elements in the array 
</member>
        <member name="F:apr_array_header_t.nalloc">
The number of elements allocated in the array 
</member>
        <member name="F:apr_array_header_t.nelts">
The number of active elements in the array 
</member>
        <member name="F:apr_array_header_t.elt_size">
The amount of memory allocated for each element of the array 
</member>
        <member name="F:apr_array_header_t.pool">
The pool the array is allocated out of 
</member>
        <member name="T:apr_array_header_t">
@see apr_array_header_t 

An opaque array type 
</member>
        <member name="T:apr_table_t">
@file apr_tables.h
@brief APR Table library

 @defgroup apr_tables Table and Array Functions
 @ingroup APR 
 Arrays are used to store data which is referenced sequentially or
 as a stack.  Functions are provided to push and pop individual
 elements as well as to operate on the entire array.

 Tables are used to store data which can be referenced by key.
 Limited capabilities are provided for tables with multiple elements
 which share a key; while key lookup will return only a single
 element, iteration is available.  Additionally, a table can be
 compressed to resolve duplicates.

 Both arrays and tables may store string or binary data; some features,
 such as concatenation or merging of elements, work only for string
 data.
 @{

the table abstract data type 
</member>
        <member name="M:apr_gid_compare(System.Void*,System.Void*)">
Compare two group identifiers for equality.
@param left One gid to test
@param right Another gid to test
@return APR_SUCCESS if the apr_gid_t strutures identify the same group,
APR_EMISMATCH if not, APR_BADARG if an apr_gid_t is invalid.
@remark This function is available only if APR_HAS_USER is defined.

</member>
        <member name="M:apr_gid_get(System.Void**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Get the groupid for a specified group name
@param groupid Pointer to the group id (on output)
@param groupname The group name to look up
@param p The pool from which to allocate the string
@remark This function is available only if APR_HAS_USER is defined.

</member>
        <member name="M:apr_gid_name_get(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte**,System.Void*,apr_pool_t*)">
Get the group name for a specified groupid
@param groupname Pointer to new string containing group name (on output)
@param groupid The groupid
@param p The pool from which to allocate the string
@remark This function is available only if APR_HAS_USER is defined.

</member>
        <member name="M:apr_uid_compare(System.Void*,System.Void*)">
Compare two user identifiers for equality.
@param left One uid to test
@param right Another uid to test
@return APR_SUCCESS if the apr_uid_t strutures identify the same user,
APR_EMISMATCH if not, APR_BADARG if an apr_uid_t is invalid.
@remark This function is available only if APR_HAS_USER is defined.

</member>
        <member name="M:apr_uid_homepath_get(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Get the home directory for the named user
@param dirname Pointer to new string containing directory name (on output)
@param username The named user
@param p The pool from which to allocate the string
@remark This function is available only if APR_HAS_USER is defined.

</member>
        <member name="M:apr_uid_get(System.Void**,System.Void**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Get the userid (and groupid) for the specified username
@param userid   Returns the user id
@param groupid  Returns the user's group id
@param username The username to lookup
@param p The pool from which to allocate working space
@remark This function is available only if APR_HAS_USER is defined.

</member>
        <member name="M:apr_uid_name_get(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte**,System.Void*,apr_pool_t*)">
Get the user name for a specified userid
@param username Pointer to new string containing user name (on output)
@param userid The userid
@param p The pool from which to allocate the string
@remark This function is available only if APR_HAS_USER is defined.

</member>
        <member name="M:apr_uid_current(System.Void**,System.Void**,apr_pool_t*)">
Get the userid (and groupid) of the calling process
@param userid   Returns the user id
@param groupid  Returns the user's group id
@param p The pool from which to allocate working space
@remark This function is available only if APR_HAS_USER is defined.

</member>
        <member name="D:apr_gid_t">
Structure for determining group ownership.

</member>
        <member name="D:apr_uid_t">
@file apr_file_info.h
@brief APR File Information

@file apr_user.h
@brief APR User ID Services 

@defgroup apr_user User and Group ID Services
@ingroup APR 
@{

Structure for determining user ownership.

</member>
        <member name="M:apr_time_clock_hires(apr_pool_t*)">
Improve the clock resolution for the lifetime of the given pool.
Generally this is only desireable on benchmarking and other very
time-sensitive applications, and has no impact on most platforms.
@param p The pool to associate the finer clock resolution 

</member>
        <member name="M:apr_strftime(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.UInt32*,System.UInt32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_time_exp_t*)">
formats the exploded time according to the format specified
@param s string to write to
@param retsize The length of the returned string
@param max The maximum length of the string
@param format The format for the time string
@param tm The time to convert

</member>
        <member name="M:apr_ctime(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int64)">
length of a CTIME date 
apr_ctime formats dates in the ctime() format
in an efficient manner.  it is a fixed length format
and requires the indicated amount of storage including
the trailing NUL terminator.
Unlike ANSI/ISO C ctime(), apr_ctime() does not include
a \n at the end of the string.
@param date_str String to write to.
@param t the time to convert 

</member>
        <member name="M:apr_rfc822_date(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int64)">
length of a RFC822 Date 
apr_rfc822_date formats dates in the RFC822
format in an efficient manner.  It is a fixed length
format which requires the indicated amount of storage,
including the trailing NUL terminator.
@param date_str String to write to.
@param t the time to convert 

</member>
        <member name="M:apr_sleep(System.Int64)">
Sleep for the specified number of micro-seconds.
@param t desired amount of time to sleep.
@warning May sleep for longer than the specified time. 

</member>
        <member name="M:apr_time_exp_gmt_get(System.Int64*,apr_time_exp_t*)">
Convert time value from human readable format to a numeric apr_time_t that
always represents GMT
@param result the resulting imploded time
@param input the input exploded time

</member>
        <member name="M:apr_time_exp_get(System.Int64*,apr_time_exp_t*)">
Convert time value from human readable format to a numeric apr_time_t 
e.g. elapsed usec since epoch
@param result the resulting imploded time
@param input the input exploded time

</member>
        <member name="M:apr_time_exp_lt(apr_time_exp_t*,System.Int64)">
convert a time to its human readable components in local timezone
@param result the exploded time
@param input the time to explode

</member>
        <member name="M:apr_time_exp_gmt(apr_time_exp_t*,System.Int64)">
convert a time to its human readable components in GMT timezone
@param result the exploded time
@param input the time to explode

</member>
        <member name="M:apr_time_exp_tz(apr_time_exp_t*,System.Int64,System.Int32)">
convert a time to its human readable components using an offset
from GMT
@param result the exploded time
@param input the time to explode
@param offs the number of seconds offset to apply

</member>
        <member name="M:apr_time_ansi_put(System.Int64*,System.Int64)">
convert an ansi time_t to an apr_time_t
@param result the resulting apr_time_t
@param input the time_t to convert

</member>
        <member name="F:apr_time_exp_t.tm_gmtoff">
seconds east of UTC 
</member>
        <member name="F:apr_time_exp_t.tm_isdst">
daylight saving time 
</member>
        <member name="F:apr_time_exp_t.tm_yday">
(0-365) days since jan 1 
</member>
        <member name="F:apr_time_exp_t.tm_wday">
(0-6) days since sunday 
</member>
        <member name="F:apr_time_exp_t.tm_year">
year since 1900 
</member>
        <member name="F:apr_time_exp_t.tm_mon">
(0-11) month of the year 
</member>
        <member name="F:apr_time_exp_t.tm_mday">
(1-31) day of the month 
</member>
        <member name="F:apr_time_exp_t.tm_hour">
(0-23) hours past midnight 
</member>
        <member name="F:apr_time_exp_t.tm_min">
(0-59) minutes past tm_hour 
</member>
        <member name="F:apr_time_exp_t.tm_sec">
(0-61) seconds past tm_min 
</member>
        <member name="F:apr_time_exp_t.tm_usec">
microseconds past tm_sec 
</member>
        <member name="T:apr_time_exp_t">
@see apr_time_exp_t 

a structure similar to ANSI struct tm with the following differences:
 - tm_usec isn't an ANSI field
 - tm_gmtoff isn't an ANSI field (it's a bsdism)

</member>
        <member name="M:apr_time_now">
number of microseconds per second 
@return apr_time_t as a second 
@return apr_time_t as a usec 
@return apr_time_t as a msec 
@return apr_time_t as a msec 
@return milliseconds as an apr_time_t 
@return seconds as an apr_time_t 
@return a second and usec combination as an apr_time_t 
@return the current time

</member>
        <member name="D:apr_short_interval_time_t">
short interval for I/O timeouts, in microseconds 
</member>
        <member name="D:apr_interval_time_t">
mechanism to properly type apr_time_t literals 
mechanism to properly print apr_time_t values 
intervals for I/O timeouts, in microseconds 
</member>
        <member name="D:apr_time_t">
number of microseconds since 00:00:00 january 1, 1970 UTC 
</member>
        <member name="F:apr_day_snames">
day names 
</member>
        <member name="F:apr_month_snames">
@file apr_time.h
@brief APR Time Library

@defgroup apr_time Time Routines
@ingroup APR 
@{

month names 
</member>
        <member name="M:apr_pool_cleanup_for_exec">
Run all registered child cleanups, in preparation for an exec()
call in a forked child -- close files, etc., but *don't* flush I/O
buffers, *don't* wait for subprocesses, and *don't* free any
memory.

</member>
        <member name="M:apr_pool_cleanup_null(System.Void*)">
 An empty cleanup function.
 
 Passed to apr_pool_cleanup_register() when no cleanup is required.

 @param data The data to cleanup, will not be used by this function.

</member>
        <member name="M:apr_pool_cleanup_run(apr_pool_t*,System.Void*,=FUNC:System.Int32(System.Void*))">
 Run the specified cleanup function immediately and unregister it.

 The cleanup most recently registered with @a p having the same values of
 @a data and @a cleanup will be removed and @a cleanup will be called
 with @a data as the argument.

 @param p The pool to remove the cleanup from
 @param data The data to remove from cleanup
 @param cleanup The function to remove from cleanup

</member>
        <member name="M:apr_pool_child_cleanup_set(apr_pool_t*,System.Void!System.Runtime.CompilerServices.IsConst*,=FUNC:System.Int32(System.Void*),=FUNC:System.Int32(System.Void*))">
 Replace the child cleanup function of a previously registered cleanup.
 
 The cleanup most recently registered with @a p having the same values of
 @a data and @a plain_cleanup will have the registered child cleanup
 function replaced with @a child_cleanup.

 @param p The pool of the registered cleanup
 @param data The data of the registered cleanup
 @param plain_cleanup The plain cleanup function of the registered cleanup
 @param child_cleanup The function to register as the child cleanup

</member>
        <member name="M:apr_pool_cleanup_kill(apr_pool_t*,System.Void!System.Runtime.CompilerServices.IsConst*,=FUNC:System.Int32(System.Void*))">
 Remove a previously registered cleanup function.
 
 The cleanup most recently registered with @a p having the same values of
 @a data and @a cleanup will be removed.

 @param p The pool to remove the cleanup from
 @param data The data of the registered cleanup
 @param cleanup The function to remove from cleanup
 @remarks For some strange reason only the plain_cleanup is handled by this
          function

</member>
        <member name="M:apr_pool_pre_cleanup_register(apr_pool_t*,System.Void!System.Runtime.CompilerServices.IsConst*,=FUNC:System.Int32(System.Void*))">
 Register a function to be called when a pool is cleared or destroyed.

 Unlike apr_pool_cleanup_register which register a cleanup
 that is called AFTER all subpools are destroyed this function register
 a function that will be called before any of the subpool is destoryed.

 @param p The pool register the cleanup with
 @param data The data to pass to the cleanup function.
 @param plain_cleanup The function to call when the pool is cleared
                      or destroyed

</member>
        <member name="M:apr_pool_cleanup_register(apr_pool_t*,System.Void!System.Runtime.CompilerServices.IsConst*,=FUNC:System.Int32(System.Void*),=FUNC:System.Int32(System.Void*))">
 @defgroup PoolCleanup  Pool Cleanup Functions

 Cleanups are performed in the reverse order they were registered.  That is:
 Last In, First Out.  A cleanup function can safely allocate memory from
 the pool that is being cleaned up. It can also safely register additional
 cleanups which will be run LIFO, directly after the current cleanup
 terminates.  Cleanups have to take caution in calling functions that
 create subpools. Subpools, created during cleanup will NOT automatically
 be cleaned up.  In other words, cleanups are to clean up after themselves.

 @{

Register a function to be called when a pool is cleared or destroyed
@param p The pool register the cleanup with
@param data The data to pass to the cleanup function.
@param plain_cleanup The function to call when the pool is cleared
                     or destroyed
@param child_cleanup The function to call when a child process is about
                     to exec - this function is called in the child, obviously!

</member>
        <member name="M:apr_pool_userdata_get(System.Void**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Return the data associated with the current pool.
@param data The user data associated with the pool.
@param key The key for the data to retrieve
@param pool The current pool.

</member>
        <member name="M:apr_pool_userdata_setn(System.Void!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,=FUNC:System.Int32(System.Void*),apr_pool_t*)">
 Set the data associated with the current pool
 @param data The user data associated with the pool.
 @param key The key to use for association
 @param cleanup The cleanup program to use to cleanup the data (NULL if none)
 @param pool The current pool
 @note same as apr_pool_userdata_set(), except that this version doesn't
       make a copy of the key (this function is useful, for example, when
       the key is a string literal)
 @warning This should NOT be used if the key could change addresses by
       any means between the apr_pool_userdata_setn() call and a
       subsequent apr_pool_userdata_get() on that key, such as if a
       static string is used as a userdata key in a DSO and the DSO could
       be unloaded and reloaded between the _setn() and the _get().  You
       MUST use apr_pool_userdata_set() in such cases.
 @warning More generally, the key and the data to be attached to the
       pool should have a life span at least as long as the pool itself.


</member>
        <member name="M:apr_pool_userdata_set(System.Void!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,=FUNC:System.Int32(System.Void*),apr_pool_t*)">
 Set the data associated with the current pool
 @param data The user data associated with the pool.
 @param key The key to use for association
 @param cleanup The cleanup program to use to cleanup the data (NULL if none)
 @param pool The current pool
 @warning The data to be attached to the pool should have a life span
          at least as long as the pool it is being attached to.

      Users of APR must take EXTREME care when choosing a key to
      use for their data.  It is possible to accidentally overwrite
      data by choosing a key that another part of the program is using.
      Therefore it is advised that steps are taken to ensure that unique
      keys are used for all of the userdata objects in a particular pool
      (the same key in two different pools or a pool and one of its
      subpools is okay) at all times.  Careful namespace prefixing of
      key names is a typical way to help ensure this uniqueness.


</member>
        <member name="M:apr_pool_tag(apr_pool_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Tag a pool (give it a name)
@param pool The pool to tag
@param tag  The tag

</member>
        <member name="M:apr_pool_is_ancestor(apr_pool_t*,apr_pool_t*)">
Determine if pool a is an ancestor of pool b.
@param a The pool to search
@param b The pool to search for
@return True if a is an ancestor of b, NULL is considered an ancestor
        of all pools.
@remark if compiled with APR_POOL_DEBUG, this function will also
return true if A is a pool which has been guaranteed by the caller
(using apr_pool_join) to have a lifetime at least as long as some
ancestor of pool B.

</member>
        <member name="M:apr_pool_parent_get(apr_pool_t*)">
Get the parent pool of the specified pool.
@param pool The pool for retrieving the parent pool.
@return The parent of the given pool.

</member>
        <member name="M:apr_pool_abort_get(apr_pool_t*)">
Get the abort function associated with the specified pool.
@param pool The pool for retrieving the abort function.
@return The abort function for the given pool.

</member>
        <member name="M:apr_pool_abort_set(=FUNC:System.Int32(System.Int32),apr_pool_t*)">
Set the function to be called when an allocation failure occurs.
@remark If the program wants APR to exit on a memory allocation error,
     then this function can be called to set the callback to use (for
     performing cleanup and then exiting). If this function is not called,
     then APR will return an error and expect the calling program to
     deal with the error accordingly.

</member>
        <member name="M:apr_pcalloc_debug(apr_pool_t*,System.UInt32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Allocate a block of memory from a pool and set all of the memory to 0
@param p The pool to allocate from
@param size The amount of memory to allocate
@return The allocated memory

Debug version of apr_pcalloc
@param p See: apr_pcalloc
@param size See: apr_pcalloc
@param file_line Where the function is called from.
       This is usually APR_POOL__FILE_LINE__.
@return See: apr_pcalloc

</member>
        <member name="M:apr_palloc_debug(apr_pool_t*,System.UInt32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Debug version of apr_palloc
@param p See: apr_palloc
@param size See: apr_palloc
@param file_line Where the function is called from.
       This is usually APR_POOL__FILE_LINE__.
@return See: apr_palloc

</member>
        <member name="M:apr_palloc(apr_pool_t*,System.UInt32)">
Allocate a block of memory from a pool
@param p The pool to allocate from
@param size The amount of memory to allocate
@return The allocated memory

</member>
        <member name="M:apr_pool_destroy_debug(apr_pool_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Debug version of apr_pool_destroy.
@param p See: apr_pool_destroy.
@param file_line Where the function is called from.
       This is usually APR_POOL__FILE_LINE__.
@remark Only available when APR_POOL_DEBUG is defined.
        Call this directly if you have you apr_pool_destroy
        calls in a wrapper function and wish to override
        the file_line argument to reflect the caller of
        your wrapper function.  If you do not have
        apr_pool_destroy in a wrapper, trust the macro
        and don't call apr_pool_destroy_debug directly.

</member>
        <member name="M:apr_pool_destroy(apr_pool_t*)">
Destroy the pool. This takes similar action as apr_pool_clear() and then
frees all the memory.
@param p The pool to destroy
@remark This will actually free the memory

</member>
        <member name="M:apr_pool_clear_debug(apr_pool_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Debug version of apr_pool_clear.
@param p See: apr_pool_clear.
@param file_line Where the function is called from.
       This is usually APR_POOL__FILE_LINE__.
@remark Only available when APR_POOL_DEBUG is defined.
        Call this directly if you have you apr_pool_clear
        calls in a wrapper function and wish to override
        the file_line argument to reflect the caller of
        your wrapper function.  If you do not have
        apr_pool_clear in a wrapper, trust the macro
        and don't call apr_pool_destroy_clear directly.

</member>
        <member name="M:apr_pool_clear(apr_pool_t*)">
Clear all memory in the pool and run all the cleanups. This also destroys all
subpools.
@param p The pool to clear
@remark This does not actually free the memory, it just allows the pool
        to re-use this memory for the next allocation.
@see apr_pool_destroy()

</member>
        <member name="M:apr_pool_allocator_get(apr_pool_t*)">
Create a new pool.
@param newpool The pool we have just created.
@param parent The parent pool.  If this is NULL, the new pool is a root
       pool.  If it is non-NULL, the new pool will inherit all
       of its parent pool's attributes, except the apr_pool_t will
       be a sub-pool.
@remark This function is thread-safe, in the sense that multiple threads
        can safely create subpools of the same parent pool concurrently.
        Similarly, a subpool can be created by one thread at the same
        time that another thread accesses the parent pool.

Create a new pool.
@param newpool The pool we have just created.

Find the pool's allocator
@param pool The pool to get the allocator from.

</member>
        <member name="M:apr_pool_create_unmanaged_ex_debug(apr_pool_t**,=FUNC:System.Int32(System.Int32),apr_allocator_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Debug version of apr_pool_create_unmanaged_ex.
@param newpool @see apr_pool_create_unmanaged.
@param abort_fn @see apr_pool_create_unmanaged.
@param allocator @see apr_pool_create_unmanaged.
@param file_line Where the function is called from.
       This is usually APR_POOL__FILE_LINE__.
@remark Only available when APR_POOL_DEBUG is defined.
        Call this directly if you have you apr_pool_create_unmanaged_ex
        calls in a wrapper function and wish to override
        the file_line argument to reflect the caller of
        your wrapper function.  If you do not have
        apr_pool_create_core_ex in a wrapper, trust the macro
        and don't call apr_pool_create_core_ex_debug directly.

</member>
        <member name="M:apr_pool_create_core_ex_debug(apr_pool_t**,=FUNC:System.Int32(System.Int32),apr_allocator_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Debug version of apr_pool_create_core_ex.
@deprecated @see apr_pool_create_unmanaged_ex_debug.

</member>
        <member name="M:apr_pool_create_ex_debug(apr_pool_t**,apr_pool_t*,=FUNC:System.Int32(System.Int32),apr_allocator_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Debug version of apr_pool_create_ex.
@param newpool @see apr_pool_create.
@param parent @see apr_pool_create.
@param abort_fn @see apr_pool_create.
@param allocator @see apr_pool_create.
@param file_line Where the function is called from.
       This is usually APR_POOL__FILE_LINE__.
@remark Only available when APR_POOL_DEBUG is defined.
        Call this directly if you have you apr_pool_create_ex
        calls in a wrapper function and wish to override
        the file_line argument to reflect the caller of
        your wrapper function.  If you do not have
        apr_pool_create_ex in a wrapper, trust the macro
        and don't call apr_pool_create_ex_debug directly.

</member>
        <member name="M:apr_pool_create_unmanaged_ex(apr_pool_t**,=FUNC:System.Int32(System.Int32),apr_allocator_t*)">
Create a new unmanaged pool.
@param newpool The pool we have just created.
@param abort_fn A function to use if the pool cannot allocate more memory.
@param allocator The allocator to use with the new pool.  If NULL a
       new allocator will be crated with newpool as owner.
@remark An unmanaged pool is a special pool without a parent; it will
        NOT be destroyed upon apr_terminate.  It must be explicitly
        destroyed by calling apr_pool_destroy, to prevent memory leaks.
        Use of this function is discouraged, think twice about whether
        you really really need it.

</member>
        <member name="M:apr_pool_create_core_ex(apr_pool_t**,=FUNC:System.Int32(System.Int32),apr_allocator_t*)">
Create a new pool.
@deprecated @see apr_pool_create_unmanaged_ex.

</member>
        <member name="M:apr_pool_create_ex(apr_pool_t**,apr_pool_t*,=FUNC:System.Int32(System.Int32),apr_allocator_t*)">
Create a new pool.
@param newpool The pool we have just created.
@param parent The parent pool.  If this is NULL, the new pool is a root
       pool.  If it is non-NULL, the new pool will inherit all
       of its parent pool's attributes, except the apr_pool_t will
       be a sub-pool.
@param abort_fn A function to use if the pool cannot allocate more memory.
@param allocator The allocator to use with the new pool.  If NULL the
       allocator of the parent pool will be used.
@remark This function is thread-safe, in the sense that multiple threads
        can safely create subpools of the same parent pool concurrently.
        Similarly, a subpool can be created by one thread at the same
        time that another thread accesses the parent pool.

</member>
        <member name="M:apr_allocator_mutex_get(apr_allocator_t*)">
Get the mutex currently set for the allocator
@param allocator The allocator

</member>
        <member name="M:apr_allocator_mutex_set(apr_allocator_t*,apr_thread_mutex_t*)">
Set a mutex for the allocator to use
@param allocator The allocator to set the mutex for
@param mutex The mutex

</member>
        <member name="M:apr_thread_mutex_pool_get(apr_thread_mutex_t!System.Runtime.CompilerServices.IsConst*)">
Get the pool used by this thread_mutex.
@return apr_pool_t the pool

</member>
        <member name="M:apr_thread_mutex_destroy(apr_thread_mutex_t*)">
Destroy the mutex and free the memory associated with the lock.
@param mutex the mutex to destroy.

</member>
        <member name="M:apr_thread_mutex_unlock(apr_thread_mutex_t*)">
Release the lock for the given mutex.
@param mutex the mutex from which to release the lock.

</member>
        <member name="M:apr_thread_mutex_trylock(apr_thread_mutex_t*)">
Attempt to acquire the lock for the given mutex. If the mutex has already
been acquired, the call returns immediately with APR_EBUSY. Note: it
is important that the APR_STATUS_IS_EBUSY(s) macro be used to determine
if the return value was APR_EBUSY, for portability reasons.
@param mutex the mutex on which to attempt the lock acquiring.

</member>
        <member name="M:apr_thread_mutex_lock(apr_thread_mutex_t*)">
Acquire the lock for the given mutex. If the mutex is already locked,
the current thread will be put to sleep until the lock becomes available.
@param mutex the mutex on which to acquire the lock.

</member>
        <member name="M:apr_thread_mutex_create(apr_thread_mutex_t**,System.UInt32,apr_pool_t*)">
Create and initialize a mutex that can be used to synchronize threads.
@param mutex the memory address where the newly created mutex will be
       stored.
@param flags Or'ed value of:
<PRE>
          APR_THREAD_MUTEX_DEFAULT   platform-optimal lock behavior.
          APR_THREAD_MUTEX_NESTED    enable nested (recursive) locks.
          APR_THREAD_MUTEX_UNNESTED  disable nested locks (non-recursive).
</PRE>
@param pool the pool from which to allocate the mutex.
@warning Be cautious in using APR_THREAD_MUTEX_DEFAULT.  While this is the
most optimial mutex based on a given platform's performance charateristics,
it will behave as either a nested or an unnested lock.

</member>
        <member name="T:apr_thread_mutex_t">
@file apr_thread_mutex.h
@brief APR Thread Mutex Routines

@defgroup apr_thread_mutex Thread Mutex Routines
@ingroup APR 
@{

Opaque thread-local mutex structure 
</member>
        <member name="M:apr_allocator_max_free_set(apr_allocator_t*,System.UInt32)">
Set the current threshold at which the allocator should start
giving blocks back to the system.
@param allocator The allocator the set the threshold on
@param size The threshold.  0 == unlimited.

</member>
        <member name="M:apr_allocator_owner_get(apr_allocator_t*)">
Get the current owner of the allocator
@param allocator The allocator to get the owner from

</member>
        <member name="M:apr_allocator_owner_set(apr_allocator_t*,apr_pool_t*)">
Set the owner of the allocator
@param allocator The allocator to set the owner for
@param pool The pool that is to own the allocator
@remark Typically pool is the highest level pool using the allocator

</member>
        <member name="M:apr_allocator_free(apr_allocator_t*,apr_memnode_t*)">
Free a list of blocks of mem, giving them back to the allocator.
The list is typically terminated by a memnode with its next field
set to NULL.
@param allocator The allocator to give the mem back to
@param memnode The memory node to return

</member>
        <member name="M:apr_allocator_alloc(apr_allocator_t*,System.UInt32)">
Allocate a block of mem from the allocator
@param allocator The allocator to allocate from
@param size The size of the mem to allocate (excluding the
       memnode structure)

</member>
        <member name="M:apr_allocator_destroy(apr_allocator_t*)">
Destroy an allocator
@param allocator The allocator to be destroyed
@remark Any memnodes not given back to the allocator prior to destroying
        will _not_ be free()d.

</member>
        <member name="M:apr_allocator_create(apr_allocator_t**)">
The base size of a memory node - aligned.  
Symbolic constants 
 Create a new allocator
 @param allocator The allocator we have just created.


</member>
        <member name="T:apr_memnode_t">
the structure which holds information about the allocation 

basic memory node structure
 * @note The next, ref and first_avail fields are available for use by the
 *       caller of apr_allocator_alloc(), the remaining fields are read-only.
 *       The next field has to be used with caution and sensibly set when the
 *       memnode is passed back to apr_allocator_free().  See apr_allocator_free()
 *       for details.  
 *       The ref and first_avail fields will be properly restored by
 *       apr_allocator_free().

</member>
        <member name="M:apr_pool_terminate">
Tear down all of the internal structures required to use pools
@remark Programs do NOT need to call this directly.  APR will call this
     automatically from apr_terminate.
@internal

</member>
        <member name="M:apr_pool_initialize">
Setup all of the internal structures required to use pools
@remark Programs do NOT need to call this directly.  APR will call this
     automatically from apr_initialize.
@internal

</member>
        <member name="D:apr_abortfunc_t">
 Declaration helper macro to construct apr_foo_pool_get()s.

 This standardized macro is used by opaque (APR) data types to return
 the apr_pool_t that is associated with the data type.

 APR_POOL_DECLARE_ACCESSOR() is used in a header file to declare the
 accessor function. A typical usage and result would be:
 <pre>
    APR_POOL_DECLARE_ACCESSOR(file);
 becomes:
    APR_DECLARE(apr_pool_t *) apr_file_pool_get(apr_file_t *ob);
 </pre>
 @remark Doxygen unwraps this macro (via doxygen.conf) to provide 
 actual help for each specific occurance of apr_foo_pool_get.
 @remark the linkage is specified for APR. It would be possible to expand
       the macros to support other linkages.

 Implementation helper macro to provide apr_foo_pool_get()s.

 In the implementation, the APR_POOL_IMPLEMENT_ACCESSOR() is used to
 actually define the function. It assumes the field is named "pool".

 Pool debug levels

 <pre>
 | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
 ---------------------------------
 |   |   |   |   |   |   |   | x |  General debug code enabled (useful in
                                    combination with --with-efence).

 |   |   |   |   |   |   | x |   |  Verbose output on stderr (report
                                    CREATE, CLEAR, DESTROY).

 |   |   |   | x |   |   |   |   |  Verbose output on stderr (report
                                    PALLOC, PCALLOC).

 |   |   |   |   |   | x |   |   |  Lifetime checking. On each use of a
                                    pool, check its lifetime.  If the pool
                                    is out of scope, abort().
                                    In combination with the verbose flag
                                    above, it will output LIFE in such an
                                    event prior to aborting.

 |   |   |   |   | x |   |   |   |  Pool owner checking.  On each use of a
                                    pool, check if the current thread is the
                                    pools owner.  If not, abort().  In
                                    combination with the verbose flag above,
                                    it will output OWNER in such an event
                                    prior to aborting.  Use the debug
                                    function apr_pool_owner_set() to switch
                                    a pools ownership.

 When no debug level was specified, assume general debug mode.
 If level 0 was specified, debugging is switched off
 </pre>

the place in the code where the particular function was called 
A function that is called when allocation fails. 
</member>
        <member name="M:apr_generate_random_bytes(System.Byte*,System.UInt32)">
@} 
@defgroup apr_random Random Functions
@{

Generate random bytes.
@param buf Buffer to fill with random bytes
@param length Length of buffer in bytes

</member>
        <member name="M:apr_terminate2">
Tear down any APR internal data structures which aren't torn down 
automatically, same as apr_terminate
@remark An APR program must call either the apr_terminate or apr_terminate2 
        function once it it has finished using APR services.  The APR 
        developers suggest using atexit(apr_terminate) to ensure this is done.
        apr_terminate2 exists to allow non-c language apps to tear down apr, 
        while apr_terminate is recommended from c language applications.

</member>
        <member name="M:apr_terminate">
Tear down any APR internal data structures which aren't torn down 
automatically.
@remark An APR program must call this function at termination once it 
        has stopped using APR services.  The APR developers suggest using
        atexit to ensure this is called.  When using APR from a language
        other than C that has problems with the calling convention, use
        apr_terminate2() instead.

</member>
        <member name="M:apr_app_initialize(System.Int32*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsConst**)">
Set up an application with normalized argc, argv (and optionally env) in
order to deal with platform-specific oddities, such as Win32 services,
code pages and signals.  This must be the first function called for any
APR program.
@param argc Pointer to the argc that may be corrected
@param argv Pointer to the argv that may be corrected
@param env Pointer to the env that may be corrected, may be NULL
@remark See apr_initialize if this is a library consumer of apr.
Otherwise, this call is identical to apr_initialize, and must be closed
with a call to apr_terminate at the end of program execution.

</member>
        <member name="M:apr_initialize">
Finding offsets of elements within structures.
Taken from the X code... they've sweated portability of this stuff
so we don't have to.  Sigh...
@param p_type pointer type name
@param field  data field within the structure pointed to
@return offset

Finding offsets of elements within structures.
@param s_type structure type name
@param field  data field within the structure
@return offset

Alignment macros

Default alignment 
String and memory functions

Properly quote a value as a string in the C preprocessor 
Helper macro for APR_STRINGIFY 
@} 
@defgroup apr_library Library initialization and termination
@{

Setup any APR internal data structures.  This MUST be the first function 
called for any APR library.
@remark See apr_app_initialize if this is an application, rather than
a library consumer of apr.

</member>
        <member name="D:apr_signum_t">
@defgroup apr_general Miscellaneous library routines
@ingroup APR 
This is collection of oddballs that didn't fit anywhere else,
and might move to more appropriate headers with the release
of APR 1.0.
@{

FALSE 
TRUE 
a space 
a carrige return 
a line feed 
a tab 
signal numbers typedef 
</member>
        <member name="D:sig_atomic_t">
 @file apr_pools.h
 @brief APR memory allocation

 Resource allocation routines...

 designed so that we don't have to keep track of EVERYTHING so that
 it can be explicitly freed later (a fundamentally unsound strategy ---
 particularly in the presence of die()).

 Instead, we maintain pools, and allocate items (both memory and I/O
 handlers) from the pools --- currently there are two, one for
 per-transaction info, and one for config info.  When a transaction is
 over, we can delete everything in the per-transaction apr_pool_t without
 fear, and without thinking too hard about it either.

 Note that most operations on pools are not thread-safe: a single pool
 should only be accessed by a single thread at any given time. The one
 exception to this rule is creating a subpool of a given pool: one or more
 threads can safely create subpools at the same time that another thread
 accesses the parent pool.

@file apr_general.h
This is collection of oddballs that didn't fit anywhere else,
and might move to more appropriate headers with the release
of APR 1.0.
@brief APR Miscellaneous library routines

</member>
        <member name="M:apr_strerror(System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.UInt32)">
Return a human readable string describing the specified error.
@param statcode The error code the get a string for.
@param buf A buffer to hold the error string.
@param bufsize Size of the buffer to hold the string.

</member>
        <member name="D:apr_status_t">
@defgroup apr_errno Error Codes
@ingroup APR
@{

Type for specifying an error or status code.

</member>
        <member name="P:SharpSvn.SvnMoveArgs.CreateParents">
            <summary>Creates parent directories if required</summary>
        </member>
        <member name="T:SharpSvn.SvnMoveArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.Move(System.String,System.String,SharpSvn.SvnMoveArgs)" /> and
<see cref="M:SharpSvn.SvnClient.RemoteMove(System.Uri,System.Uri,SharpSvn.SvnMoveArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnLookListArgs">
            <summary>Base Extended Parameter container of <see cref="T:SharpSvn.SvnLookClient" /> commands</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnDumpRepositoryArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnRepositoryClient" />'s CreateRepository method</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnGetWorkingCopyVersionArgs.CommandType">
            <summary>Gets the <see cref="T:SharpSvn.SvnCommandType" /> of the command</summary>
        </member>
        <member name="T:SharpSvn.SvnGetAppliedMergeInfoArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnClient" />'s GetAppliedMergeInfo method</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnLoadRepositoryArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnRepositoryClient" />'s CreateRepository method</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnGetSuggestedMergeSourcesArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnClient" />'s GetSuggestedMergeSources method</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnAddArgs.AddParents">
            <summary>
If TRUE, recurse up path's directory and look for
a versioned directory.  If found, add all intermediate paths between it
and path.  If not found, fail with SVN_ERR_CLIENT_NO_VERSIONED_PARENTS.
</summary>
        </member>
        <member name="P:SharpSvn.SvnAddArgs.Force">
            <summary>If force is not set and path is already under version control, return the error
SVN_ERR_ENTRY_EXISTS. If force is set, do not error on already-versioned items. When used
on a directory in conjunction with the recursive flag, this has the effect of scheduling
for addition unversioned files and directories scattered deep within a versioned tree.</summary>
        </member>
        <member name="T:SharpSvn.SvnAddArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.Add(System.String,SharpSvn.SvnAddArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnSetRevisionPropertyArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.SetRevisionProperty(SharpSvn.SvnUriTarget,System.String,SharpSvn.SvnSetRevisionPropertyArgs,System.String)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnReintegrationMergeArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.ReintegrationMerge(System.String,SharpSvn.SvnTarget,SharpSvn.SvnReintegrationMergeArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnCopyArgs.IgnoreExternals">
            <summary>Gets or sets a boolean that if set to true tells copy not to process
externals definitions as part of this operation.</summary>
        </member>
        <member name="P:SharpSvn.SvnCopyArgs.AlwaysCopyAsChild">
            <summary>Always copies the result to below the target (this behaviour is always used if multiple targets are provided)</summary>
        </member>
        <member name="P:SharpSvn.SvnCopyArgs.CreateParents">
            <summary>Creates parent directories if required</summary>
        </member>
        <member name="T:SharpSvn.SvnCopyArgs">
            <summary>Extended Parameter container of SvnClient.Copy(SvnTarget^,String^,SvnCopyArgs^)" /&gt; and
<see cref="M:SharpSvn.SvnClient.RemoteCopy(SharpSvn.SvnTarget,System.Uri,SharpSvn.SvnCopyArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnPropertyListArgs.ChangeLists">
            <summary>Gets the list of changelist-names</summary>
        </member>
        <member name="T:SharpSvn.SvnPropertyListArgs">
            <summary>Extended Parameter container for SvnClient.PropertyList</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnLookRevisionPropertyArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnLookClient" />'s Property method</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnDiffArgs.ChangeLists">
            <summary>Gets the list of changelist-names</summary>
        </member>
        <member name="T:SharpSvn.SvnDiffArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnClient" />'s Diff command</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnMergeArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.Merge(System.String,SharpSvn.SvnTarget,SharpSvn.SvnRevisionRange,SharpSvn.SvnMergeArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnResolveArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.Resolved(System.String)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnRelocateArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.Relocate(System.String,System.Uri,System.Uri,SharpSvn.SvnRelocateArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnGetPropertyArgs.ChangeLists">
            <summary>Gets the list of changelist-names</summary>
        </member>
        <member name="T:SharpSvn.SvnGetPropertyArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnClient" />'s GetProperty</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="M:SharpSvn.Diff.SvnFileDiff.#ctor(svn_diff_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,SharpSvn.Implementation.AprPool)">
            <summary>originalPath and modifiedPath must live at least as long as pool</summary>
        </member>
        <member name="P:SharpSvn.Diff.SvnDiffWriteDifferencesArgs.CommandType">
            <summary>Gets the <see cref="T:SharpSvn.SvnCommandType" /> of the command</summary>
        </member>
        <member name="P:SharpSvn.Diff.SvnDiffWriteMergedArgs.CommandType">
            <summary>Gets the <see cref="T:SharpSvn.SvnCommandType" /> of the command</summary>
        </member>
        <member name="P:SharpSvn.Diff.SvnDiffWriteMergedArgs.ConflictSeparator">
            <summary>Gets or sets a replacement for the conflict separator (null is use original)</summary>
        </member>
        <member name="P:SharpSvn.Diff.SvnDiffWriteMergedArgs.ConflictLatest">
            <summary>Gets or sets a replacement for the Conflict latest line (null is use original)</summary>
        </member>
        <member name="P:SharpSvn.Diff.SvnDiffWriteMergedArgs.ConflictModified">
            <summary>Gets or sets a replacement for the Conflict modified line (null is use original)</summary>
        </member>
        <member name="P:SharpSvn.Diff.SvnDiffWriteMergedArgs.AncestorPath">
            <summary>Gets or sets a replacement for the Ancestor Path (null is use original)</summary>
        </member>
        <member name="P:SharpSvn.Diff.SvnDiffWriteMergedArgs.LatestPath">
            <summary>Gets or sets a replacement for the Latest Path (null is use original)</summary>
        </member>
        <member name="P:SharpSvn.Diff.SvnDiffWriteMergedArgs.ModifiedPath">
            <summary>Gets or sets a replacement for the Modified Path (null is use original)</summary>
        </member>
        <member name="P:SharpSvn.Diff.SvnDiffWriteMergedArgs.OriginalPath">
            <summary>Gets or sets a replacement for the Original Path (null is use original)</summary>
        </member>
        <member name="P:SharpSvn.Diff.SvnFileDiffArgs.CommandType">
            <summary>Gets the <see cref="T:SharpSvn.SvnCommandType" /> of the command</summary>
        </member>
        <member name="F:SharpSvn.Diff.SvnDiffDisplay.OnlyConflicts">
            <summary>Like svn_diff_conflict_display_modified_original_latest, but
*only* showing conflicts.</summary>
        </member>
        <member name="F:SharpSvn.Diff.SvnDiffDisplay.Latest">
            <summary>Just display latest, with no markers.</summary>
        </member>
        <member name="F:SharpSvn.Diff.SvnDiffDisplay.Modified">
            <summary>Just display modified, with no markers.</summary>
        </member>
        <member name="F:SharpSvn.Diff.SvnDiffDisplay.ModifiedOridingalLatest">
            <summary>Display modified, original, and latest, with conflict markers.</summary>
        </member>
        <member name="F:SharpSvn.Diff.SvnDiffDisplay.ResolvedModifiedLatest">
            <summary>Like svn_diff_conflict_display_modified_latest, but with an
extra effort to identify common sequences between modified and
latest.</summary>
        </member>
        <member name="F:SharpSvn.Diff.SvnDiffDisplay.ModifiedLatest">
            <summary>Display modified and latest, with conflict markers</summary>
        </member>
        <member name="T:SharpSvn.SvnLookPropertyListArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnLookClient" />'s Changed method</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnCropWorkingCopyArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.CreateDirectory(System.String,SharpSvn.SvnCreateDirectoryArgs)" /> and <see cref="M:SharpSvn.SvnClient.RemoteCreateDirectory(System.Uri,SharpSvn.SvnCreateDirectoryArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnCleanUpArgs">
            <summary>Extended parameter container for <see cref="T:SharpSvn.SvnClient" />Cleanup</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnCreateRepositoryArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnRepositoryClient" />'s CreateRepository method</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnGetRevisionPropertyArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnClient" />'s GetRevisionProperty</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnLookGetPropertyArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnLookClient" />'s Changed method</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.Remote.SvnRemotePropertiesArgs.NodeKind">
            <summary>Only retrieve the properties if the node is of the specified kind. Unknown for retrieving the kind</summary>
        </member>
        <member name="T:SharpSvn.SvnDiffMergeArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.DiffMerge(System.String,SharpSvn.SvnTarget,SharpSvn.SvnTarget,SharpSvn.SvnDiffMergeArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnMergesEligibleArgs.RetrieveProperties">
            <summary>Gets the list of properties to retrieve. Only SVN 1.5+ repositories allow adding custom properties to this list</summary>
        </member>
        <member name="P:SharpSvn.SvnMergesEligibleArgs.RetrieveChangedPaths">
            <summary>Gets or sets a boolean indicating whether the paths changed in the revision should be provided</summary>
        </member>
        <member name="T:SharpSvn.SvnMergesEligibleArgs">
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnUpgradeRepositoryArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnRepositoryClient" />'s RecoverRepository method</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="T:SharpSvn.SvnLockArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.Lock(System.String,SharpSvn.SvnLockArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnChangeInfoArgs.RetrieveChangedPaths">
            <summary>Gets or sets a boolean indicating whether the paths changed in the revision should be provided</summary>
            <remarks>Defaults to true</remarks>
        </member>
        <member name="T:SharpSvn.SvnChangeInfoArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnLookClient" />'s ChangeInfo command</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.Remote.SvnRemoteLocationSegmentsArgs.OperationalRevision">
            <summary>Gets the revision in which the Url's are evaluated (Aka peg revision)</summary>
        </member>
        <member name="T:SharpSvn.SvnLookWriteArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnLookClient" />'s Write method</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="M:SharpSvn.SvnExternalItem.TryParse(System.String,SharpSvn.SvnExternalItem[]@)">
            <summary>Tries to parse a single SvnExternalItem</summary>
        </member>
        <member name="M:SharpSvn.SvnExternalItem.TryParse(System.String,SharpSvn.SvnExternalItem@)">
            <summary>Tries to parse a single SvnExternalItem</summary>
        </member>
        <member name="M:SharpSvn.SvnExternalItem.WriteTo(System.Text.StringBuilder,System.Boolean)">
            <summary>Writes the value to the specified <see cref="T:System.Text.StringBuilder" /></summary>
        </member>
        <member name="M:SharpSvn.SvnExternalItem.ToString(System.Boolean)">
            <summary>Creates a string containing the external in string format. Optionally preferring formats compatible with older clients</summary>
        </member>
        <member name="M:SharpSvn.SvnExternalItem.ToString">
            <summary>Creates a string containing the external in string format. Preferring formats compatible with older clients</summary>
        </member>
        <member name="P:SharpSvn.SvnExternalItem.Reference">
            <summary>Gets the absolute or relative url of the external (What to insert)</summary>
        </member>
        <member name="P:SharpSvn.SvnExternalItem.Target">
            <summary>Gets the target path of the external (Where to place the external)</summary>
        </member>
        <member name="T:SharpSvn.SvnExportArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.Export(SharpSvn.SvnTarget,System.String,SharpSvn.SvnExportArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnInfoArgs.ChangeLists">
            <summary>Gets the list of changelist-names</summary>
        </member>
        <member name="T:SharpSvn.SvnInfoArgs">
            <summary>Extended Parameter container of SvnClient.Info</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnListChangeListArgs.ChangeLists">
            <summary>Gets the list of changelist-names</summary>
        </member>
        <member name="T:SharpSvn.SvnListChangeListArgs">
            <summary>Extended Parameter container for SvnClient.ListChangeList</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnCheckOutArgs.AllowObstructions">
            <summary>Gets or sets the AllowObsstructions value</summary>
            <remarks>
                <para> If AllowObstructions is TRUE then the update tolerates
existing unversioned items that obstruct added paths from @a URL.  Only
obstructions of the same type (file or dir) as the added item are
tolerated.  The text of obstructing files is left as-is, effectively
treating it as a user modification after the update.  Working
properties of obstructing items are set equal to the base properties.</para>
                <para>If AllowObstructions is FALSE then the update will abort
if there are any unversioned obstructing items
</para>
            </remarks>
        </member>
        <member name="P:SharpSvn.SvnCheckOutArgs.Revision">
            <summary>Gets or sets the revision to load. Defaults to the peg revision or Head</summary>
        </member>
        <member name="T:SharpSvn.SvnCheckOutArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.CheckOut(SharpSvn.SvnUriTarget,System.String,SharpSvn.SvnCheckOutArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnRemoveFromChangeListArgs.ChangeLists">
            <summary>Gets the list of changelist-names</summary>
        </member>
        <member name="T:SharpSvn.SvnRemoveFromChangeListArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.RemoveFromChangeList(System.String,SharpSvn.SvnRemoveFromChangeListArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnSetPropertyArgs.ChangeLists">
            <summary>Gets the list of changelist-names</summary>
        </member>
        <member name="T:SharpSvn.SvnSetPropertyArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.SetProperty(System.String,System.String,System.String,SharpSvn.SvnSetPropertyArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnHookArguments.LookOrigin">
            <summary>Gets a <see cref="T:SharpSvn.SvnLookOrigin" /> instance for the current hook request</summary>
        </member>
        <member name="T:SharpSvn.SvnDeleteRepositoryArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnRepositoryClient" />'s DeleteRepository method</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="M:SharpSvn.Diff.SvnDiff`1.CreateComparer">
            <summary>Creates the comparer used to compare the tokens. Defaults to Comparer&lt;TToken&gt;::Default</summary>
        </member>
        <member name="P:SharpSvn.Diff.SvnDiff`1.TokenComparer">
            <summary>Gets the comparer used to compare the tokens</summary>
            <remarks>The instance returned is creatd by <see cref="M:SharpSvn.Diff.SvnDiff`1.CreateComparer" /></remarks>
        </member>
        <member name="P:SharpSvn.Diff.SvnDiff`1.HasDifferences">
            <summary>Gets a boolean indicating whether the merge result contains differences</summary>
        </member>
        <member name="P:SharpSvn.Diff.SvnDiff`1.HasConflicts">
            <summary>Gets a boolean indicating whether the merge result contains conflicts</summary>
        </member>
        <member name="M:svn_utf_cstring_from_utf8_string(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,svn_string_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *dest to a natively-encoded C string from utf8 string @a src;
 * allocate @a *dest in @a pool.

</member>
        <member name="M:svn_utf_cstring_from_utf8_stringbuf(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,svn_stringbuf_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *dest to a natively-encoded C string from utf8 stringbuf @a src;
 * allocate @a *dest in @a pool.

</member>
        <member name="M:svn_utf_cstring_from_utf8_fuzzy(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Return a fuzzily native-encoded C string from utf8 C string @a src,
 * allocated in @a pool.  A fuzzy recoding leaves all 7-bit ascii
 * characters the same, and substitutes "?\\XXX" for others, where XXX
 * is the unsigned decimal code for that character.
 *
 * This function cannot error; it is guaranteed to return something.
 * First it will recode as described above and then attempt to convert
 * the (new) 7-bit UTF-8 string to native encoding.  If that fails, it
 * will return the raw fuzzily recoded string, which may or may not be
 * meaningful in the client's locale, but is (presumably) better than
 * nothing.
 *
 * ### Notes:
 *
 * Improvement is possible, even imminent.  The original problem was
 * that if you converted a UTF-8 string (say, a log message) into a
 * locale that couldn't represent all the characters, you'd just get a
 * static placeholder saying "[unconvertible log message]".  Then
 * Justin Erenkrantz pointed out how on platforms that didn't support
 * conversion at all, "svn log" would still fail completely when it
 * encountered unconvertible data.
 *
 * Now for both cases, the caller can at least fall back on this
 * function, which converts the message as best it can, substituting
 * "?\\XXX" escape codes for the non-ascii characters.
 *
 * Ultimately, some callers may prefer the iconv "//TRANSLIT" option,
 * so when we can detect that at configure time, things will change.
 * Also, this should (?) be moved to apr/apu eventually.
 *
 * See http://subversion.tigris.org/issues/show_bug.cgi?id=807 for
 * details.

</member>
        <member name="M:svn_utf_cstring_from_utf8_ex(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Like svn_utf_cstring_from_utf8_ex2() but with @a convset_key which is
 * ignored.
 *
 * @deprecated Provided for backward compatibility with the 1.3 API.

</member>
        <member name="M:svn_utf_cstring_from_utf8_ex2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *dest to a @a topage encoded C string from utf8 encoded C string
 * @a src; allocate @a *dest in @a pool.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_utf_cstring_from_utf8(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *dest to a natively-encoded C string from utf8 C string @a src;
 * allocate @a *dest in @a pool.

</member>
        <member name="M:svn_utf_string_from_utf8(svn_string_t!System.Runtime.CompilerServices.IsConst**,svn_string_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *dest to a natively-encoded string from utf8 string @a src;
 * allocate @a *dest in @a pool.

</member>
        <member name="M:svn_utf_stringbuf_from_utf8(svn_stringbuf_t**,svn_stringbuf_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *dest to a natively-encoded stringbuf from utf8 stringbuf @a src;
 * allocate @a *dest in @a pool.

</member>
        <member name="M:svn_utf_cstring_to_utf8_ex(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Like svn_utf_cstring_to_utf8_ex2() but with @a convset_key which is
 * ignored.
 *
 * @deprecated Provided for backward compatibility with the 1.3 API.

</member>
        <member name="M:svn_utf_cstring_to_utf8_ex2(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *dest to a utf8 encoded C string from @a frompage encoded C
 * string @a src; allocate @a *dest in @a pool.
 *
 * @since New in 1.4.

</member>
        <member name="M:svn_utf_cstring_to_utf8(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *dest to a utf8-encoded C string from native C string @a src;
 * allocate @a *dest in @a pool.

</member>
        <member name="M:svn_utf_string_to_utf8(svn_string_t!System.Runtime.CompilerServices.IsConst**,svn_string_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *dest to a utf8-encoded string from native string @a src; allocate
 * @a *dest in @a pool.

</member>
        <member name="M:svn_utf_stringbuf_to_utf8(svn_stringbuf_t**,svn_stringbuf_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Set @a *dest to a utf8-encoded stringbuf from native stringbuf @a src;
 * allocate @a *dest in @a pool.

</member>
        <member name="T:apr_xlate_t">
 @copyright
 ====================================================================
 Copyright (c) 2000-2004, 2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_utf.h
 @brief UTF-8 conversion routines
 Whenever a conversion routine cannot convert to or from UTF-8, the
 error returned has code @c APR_EINVAL.

@defgroup APR_Util APR Utility Functions
@{

 APU_DECLARE_EXPORT is defined when building the APR-UTIL dynamic library,
 so that all public symbols are exported.

 APU_DECLARE_STATIC is defined when including the APR-UTIL public headers,
 to provide static linkage when the dynamic library may be unavailable.

 APU_DECLARE_STATIC and APU_DECLARE_EXPORT are left undefined when
 including the APR-UTIL public headers, to import and link the symbols from 
 the dynamic APR-UTIL library and assure appropriate indirection and calling
 conventions at compile time.

@} 
</member>
        <member name="M:svn_dso_load(apr_dso_handle_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
 Attempt to load @a libname, returning it in @a dso.

 If @a libname cannot be loaded set @a dso to NULL and return
 @c SVN_NO_ERROR.

 @note Due to pool lifetime issues DSOs are all loaded into a global
       pool, so you must be certain that there is a bounded number of
       them that will ever be loaded by the system, otherwise you will
       leak memory.

 @since New in 1.4.

</member>
        <member name="M:svn_dso_initialize">
 Initialize the DSO loading routines.

 @note This should be called prior to the creation of any pool that
       is passed to a function that comes from a DSO, otherwise you
       risk having the DSO unloaded before all pool cleanup callbacks
       that live in the DSO have been executed.  If it is not called
       prior to @c svn_dso_load being used for the first time there
       will be a best effort attempt made to initialize the subsystem,
       but it will not be entirely thread safe and it risks running
       into the previously mentioned problems with DSO unloading and
       pool cleanup callbacks.

 Calls svn_dso_initialize2(void) upon error aborts.

 @deprecated Provided for backwards compatibility with the 1.5 API.

 @since New in 1.4.

</member>
        <member name="T:apr_dso_handle_t">
 @copyright
 ====================================================================
 Copyright (c) 2006, 2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_dso.h
 @brief DSO loading routines

</member>
        <member name="P:SharpSvn.SvnFileVersionsArgs.LineStyle">
            <summary>Gets or sets a value indicating how to translate line endings (<see cref="F:SharpSvn.SvnLineStyle.Default" /> = no translation</summary>
        </member>
        <member name="P:SharpSvn.SvnFileVersionsArgs.ToDirectory">
            <summary>Gets or sets a directory to receive all file versions</summary>
            <value>The directory to place the versions in or <c>null</c> to only delegate the files to the event handler</value>
        </member>
        <member name="P:SharpSvn.SvnFileVersionsArgs.Range">
            <summary>Gets or sets the blame range as <see cref="T:SharpSvn.SvnRevisionRange" /></summary>
        </member>
        <member name="T:SharpSvn.SvnFileVersionsArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.FileVersions(SharpSvn.SvnTarget,SharpSvn.SvnFileVersionsArgs,System.EventHandler`1{SharpSvn.SvnFileVersionEventArgs})" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnHotCopyRepositoryArgs.CleanLogFiles">
            <summary>Gets or sets a value indicating whether to clean the database logfiles after the hotcopy</summary>
        </member>
        <member name="T:SharpSvn.SvnHotCopyRepositoryArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnRepositoryClient" />'s CreateRepository method</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnSetRevisionPropertyRepositoryArgs.Author">
            <summary>Gets or sets the author passed to the hook scripts</summary>
        </member>
        <member name="P:SharpSvn.SvnSetRevisionPropertyRepositoryArgs.CallPostRevPropChangeHook">
            <summary>Gets or sets a value indicating whether to call the hook after changing the revision property</summary>
        </member>
        <member name="P:SharpSvn.SvnSetRevisionPropertyRepositoryArgs.CallPreRevPropChangeHook">
            <summary>Gets or sets a value indicating whether to call the hook before changing the revision property</summary>
        </member>
        <member name="T:SharpSvn.SvnSetRevisionPropertyRepositoryArgs">
            <summary>Extended Parameter container of <see cref="T:SharpSvn.SvnRepositoryClient" />'s CreateRepository method</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnUpdateArgs.AllowObstructions">
            <summary>If @a allow_unver_obstructions is <c>true</c> then the update tolerates
existing unversioned items that obstruct added paths from @a URL</summary>
            <remarks>
Only obstructions of the same type (file or dir) as the added item are
tolerated.  The text of obstructing files is left as-is, effectively
treating it as a user modification after the update.  Working
properties of obstructing items are set equal to the base properties.
If AllowUnversionedObstructions is <c>false</c> then the update will abort
if there are any unversioned obstructing items.
</remarks>
        </member>
        <member name="P:SharpSvn.SvnUpdateArgs.Revision">
            <summary>The revision to update to; None by default</summary>
            <remarks>
Revision must be of kind Number, Head or Date. If Revision
does not meet these requirements, Updated returns the error
SVN_ERR_CLIENT_BAD_REVISION.
</remarks>
        </member>
        <member name="P:SharpSvn.SvnUpdateArgs.IgnoreExternals">
            <summary>Gets or sets a value indicating whether to ignore externals
definitions as part of this operation.</summary>
        </member>
        <member name="P:SharpSvn.SvnUpdateArgs.KeepDepth">
            <summary>
Gets or sets whether in addition to updating paths also the
sticky ambient depth value must be set to depth
</summary>
        </member>
        <member name="P:SharpSvn.SvnUpdateArgs.Depth">
            <summary>Gets or sets the depth of the update</summary>
            <remarks>
                <para>If Depth is Infinity, update fully recursively. Else if it
is Immediates or Files, update each target and its file
entries, but not its subdirectories.  Else if Empty, update
exactly each target, nonrecursively (essentially, update the
target's properties).</para>
                <para>If Depth is Unknown, take the working depth from the specified paths
</para>
            </remarks>
        </member>
        <member name="T:SharpSvn.SvnUpdateArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.Update(System.String,SharpSvn.SvnUpdateArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="M:serf_ssl_trust_cert(serf_ssl_context_t*,serf_ssl_certificate_t*)">
Adds the certificate @a cert to the list of trusted certificates in 
@a ssl_ctx that will be used for verification. 
See also @a serf_ssl_load_cert_file.

</member>
        <member name="M:serf_ssl_load_cert_file(serf_ssl_certificate_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Load a CA certificate file from a path @a file_path. If the file was loaded
and parsed correctly, a certificate @a cert will be created and returned.
This certificate object will be alloced in @a pool.

</member>
        <member name="M:serf_ssl_cert_export(serf_ssl_certificate_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Export a certificate to base64-encoded, zero-terminated string.
The returned string is allocated in @a pool. Returns NULL on failure.

</member>
        <member name="M:serf_ssl_cert_certificate(serf_ssl_certificate_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Extract the fields of the certificate in a table with keys (sha1, notBefore,
notAfter). The returned table will be allocated in @a pool.

</member>
        <member name="M:serf_ssl_cert_subject(serf_ssl_certificate_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Extract the fields of the subject in a table with keys (E, CN, OU, O, L, 
ST and C). The returned table will be allocated in @a pool.

</member>
        <member name="M:serf_ssl_cert_issuer(serf_ssl_certificate_t!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)">
Extract the fields of the issuer in a table with keys (E, CN, OU, O, L, 
ST and C). The returned table will be allocated in @a pool.

</member>
        <member name="M:serf_ssl_cert_depth(serf_ssl_certificate_t!System.Runtime.CompilerServices.IsConst*)">
Return the depth of the certificate.

</member>
        <member name="M:serf_ssl_use_default_certificates(serf_ssl_context_t*)">
Use the default root CA certificates as included with the OpenSSL library.

</member>
        <member name="M:serf_ssl_server_cert_callback_set(serf_ssl_context_t*,=FUNC:System.Int32(System.Void*,System.Int32,serf_ssl_certificate_t!System.Runtime.CompilerServices.IsConst*),System.Void*)">
Set a callback to override the default SSL server certificate validation 
algorithm.

</member>
        <member name="M:serf_bucket_headers_do(serf_bucket_t*,=FUNC:System.Int32(System.Void*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*),System.Void*)">
 Iterates over all headers of the message and invokes the callback 
 function with header key and value. Stop iterating when no more
 headers are available or when the callback function returned a 
 non-0 value.

 @param headers_bucket headers to iterate over
 @param func callback routine to invoke for every header in the bucket
 @param baton baton to pass on each invocation to func

</member>
        <member name="D:serf_bucket_headers_do_callback_fn_t">
@param baton opaque baton as passed to @see serf_bucket_headers_do
@param key The header key from this iteration through the table
@param value The header value from this iteration through the table

</member>
        <member name="M:serf_bucket_headers_setx(serf_bucket_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.UInt32,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.UInt32,System.Int32)">
 Set, extended: fine grained copy control of header and value.

 Set the specified @a header, with length @a header_size with the
 @a value, and length @a value_size, into the bucket. The header will
 be copied if @a header_copy is set, and the value is copied if
 @a value_copy is set. If the values are not copied, then they should
 remain in scope at least as long as the bucket.

 If @a headers_bucket already contains a header with the same name
 as @a header, then append @a value to the existing value,
 separating with a comma (as per RFC 2616, section 4.2).  In this
 case, the new value must be allocated and the header re-used, so
 behave as if @a value_copy were true and @a header_copy false.

</member>
        <member name="M:serf_bucket_headers_setn(serf_bucket_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
 Set, no copies.

 Set the specified @a header and @a value into the bucket, without
 copying either attribute. Both attributes should remain in scope at
 least as long as the bucket.

 @note In the case where a header already exists this will result
       in a reallocation and copy, @see serf_bucket_headers_setn.

</member>
        <member name="M:serf_bucket_headers_setc(serf_bucket_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
 Set, copies: header and value copied.

 Copy the specified @a header and @a value into the bucket, using space
 from this bucket's allocator.

</member>
        <member name="M:serf_bucket_headers_set(serf_bucket_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
 Set, default: value copied.

 Set the specified @a header within the bucket, copying the @a value
 into space from this bucket's allocator. The header is NOT copied,
 so it should remain in scope at least as long as the bucket.

</member>
        <member name="M:serf_bucket_simple_copy_create(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.UInt32,serf_bucket_alloc_t*)">
Equivalent to serf_bucket_simple_create, except that the bucket takes
ownership of a private copy of the data.

</member>
        <member name="M:serf_bucket_aggregate_become(serf_bucket_t*)">
Transform @a bucket in-place into an aggregate bucket. 
</member>
        <member name="M:serf_bucket_aggregate_cleanup(serf_bucket_t*,serf_bucket_alloc_t*)">
serf_bucket_aggregate_cleanup will instantly destroy all buckets in
    the aggregate bucket that have been read completely. Whereas normally, 
    these buckets are destroyed on every read operation. 
</member>
        <member name="M:serf_bucket_response_set_head(serf_bucket_t*)">
Advise the response @a bucket that this was from a HEAD request and
that it should not expect to see a response body.

</member>
        <member name="M:serf_bucket_response_get_headers(serf_bucket_t*)">
Get the headers bucket for @a response.

</member>
        <member name="M:serf_bucket_response_wait_for_headers(serf_bucket_t*)">
 Wait for the HTTP headers to be processed for a @a response.

 If the headers are available, APR_SUCCESS is returned.
 If the headers aren't available, APR_EAGAIN is returned.

</member>
        <member name="M:serf_bucket_response_status(serf_bucket_t*,serf_status_line*)">
Return the Status-Line information, if available. This function
works like other bucket read functions: it may return APR_EAGAIN or
APR_EOF to signal the state of the bucket for reading. A return
value of APR_SUCCESS will always indicate that status line
information was returned; for other return values the caller must
check the version field in @a sline. A value of 0 means that the
data is not (yet) present.

</member>
        <member name="M:serf_bucket_request_set_root(serf_bucket_t*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
Sets the root url of the remote host. If this request contains a relative
url, it will be prefixed with the root url to form an absolute url.
@a bucket is the request bucket. @a root_url is the absolute url of the
root of the remote host, without the closing '/'.

</member>
        <member name="F:serf_bucket_type_request">
@file serf_bucket_types.h
@brief serf-supported bucket types

</member>
        <member name="M:apu_version(apr_version_t*)">
@defgroup APR_Util APR Utility Functions
@{

 APU_DECLARE_EXPORT is defined when building the APR-UTIL dynamic library,
 so that all public symbols are exported.

 APU_DECLARE_STATIC is defined when including the APR-UTIL public headers,
 to provide static linkage when the dynamic library may be unavailable.

 APU_DECLARE_STATIC and APU_DECLARE_EXPORT are left undefined when
 including the APR-UTIL public headers, to import and link the symbols from 
 the dynamic APR-UTIL library and assure appropriate indirection and calling
 conventions at compile time.

@} 
</member>
        <member name="P:SharpSvn.SvnDiffSummaryArgs.ChangeLists">
            <summary>Gets the list of changelist-names</summary>
        </member>
        <member name="T:SharpSvn.SvnDiffSummaryArgs">
            <summary>Extended Parameter container for SvnClient.DiffSummary</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="M:SharpSvn.SvnPropertyNames.FormatDate(System.DateTime)">
            <summary>Formats a DateTime in Subversions string format</summary>
        </member>
        <member name="M:SharpSvn.SvnPropertyNames.TryParseDate(System.String,System.DateTime@)">
            <summary>Tries to parse a Svn property into a <see cref="T:System.DateTime" /> value</summary>
        </member>
        <member name="F:SharpSvn.SvnPropertyNames.TortoiseSvnDirectoryProperties">
            <summary>Gets a list of TortoiseSvn defined directory properties, which are applied recursively on all directories below the set root</summary>
        </member>
        <member name="F:SharpSvn.SvnPropertyNames.SvnBooleanValue">
            <summary>
Properties whose values are interpreted as booleans (such as
svn:executable, svn:needs_lock, and svn:special) always fold their
value to this.
</summary>
        </member>
        <member name="F:SharpSvn.SvnPropertyNames.SvnPropertyPrefix">
            <summary>All Subversion property names start with this</summary>
        </member>
        <member name="F:SharpSvn.SvnKeywords.PredefinedKeywords">
            <summary>Gets a list of TortoiseSvn defined directory properties, which are applied recursively on all directories below the set root</summary>
        </member>
        <member name="F:SharpSvn.SvnKeywords.Header">
            <summary>A full combination of the first four keywords.</summary>
        </member>
        <member name="F:SharpSvn.SvnKeywords.Id">
            <summary>A compressed combination of the other four keywords.</summary>
        </member>
        <member name="F:SharpSvn.SvnKeywords.URL">
            <summary>Short version of HeadURL</summary>
        </member>
        <member name="F:SharpSvn.SvnKeywords.HeadURL">
            <summary>The URL for the head revision of this file.</summary>
        </member>
        <member name="F:SharpSvn.SvnKeywords.Author">
            <summary>Short version of LastChangedBy</summary>
        </member>
        <member name="F:SharpSvn.SvnKeywords.LastChangedBy">
            <summary>Who most recently committed to this file.</summary>
        </member>
        <member name="F:SharpSvn.SvnKeywords.Date">
            <summary>Short version of LastChangedDate</summary>
        </member>
        <member name="F:SharpSvn.SvnKeywords.LastChangedDate">
            <summary>The most recent date (repository time) when this file was changed.</summary>
        </member>
        <member name="F:SharpSvn.SvnKeywords.Revision">
            <summary>Medium version of LastChangedRevision, matching the one CVS uses</summary>
        </member>
        <member name="F:SharpSvn.SvnKeywords.Rev">
            <summary>Short version of LastChangedRevision</summary>
        </member>
        <member name="F:SharpSvn.SvnKeywords.LastChangedRevision">
            <summary>The most recent revision in which this file was changed</summary>
        </member>
        <member name="F:SharpSvn.SvnKeywords.MaxLength">
            <summary>The maximum size of an expanded or un-expanded keyword.</summary>
        </member>
        <member name="M:SharpSvn.SvnClientReporter.WriteLine(System.String)">
            <summary>Writes the specified message to the result writer and appends a <see cref="P:System.Environment.NewLine" /></summary>
        </member>
        <member name="M:SharpSvn.SvnClientReporter.WriteProgress(System.String)">
            <summary>Writes the progress message to the result writer</summary>
            <remarks>The default implementation calls <see cref="M:SharpSvn.SvnClientReporter.Write(System.String)" /> with the specified message</remarks>
        </member>
        <member name="M:SharpSvn.SvnClientReporter.Write(System.String)">
            <summary>Writes the specified message to the result writer</summary>
        </member>
        <member name="T:SharpSvn.SvnClientReporter">
            <summary>Subversion Client Context wrapper; base class of objects using client context</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnBlameArgs.Range">
            <summary>Gets or sets the blame range as <see cref="T:SharpSvn.SvnRevisionRange" /></summary>
        </member>
        <member name="T:SharpSvn.SvnBlameArgs">
            <summary>Extended Parameter container for SvnClient.Blame</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.Remote.SvnRemoteLogArgs.RetrieveAllProperties">
            <summary>Gets or sets a boolean indication whether to retrieve all revision properties</summary>
            <remarks>Default value: false</remarks>
        </member>
        <member name="P:SharpSvn.Remote.SvnRemoteLogArgs.RetrieveProperties">
            <summary>Gets the list of properties to retrieve. Only SVN 1.5+ repositories allow adding custom properties to this list</summary>
            <remarks>This list defaults to the author, date, logmessage properties. Clear the list to retrieve no properties,
or set RetrieveAllProperties to true to retrieve all properties.
</remarks>
        </member>
        <member name="P:SharpSvn.Remote.SvnRemoteLogArgs.RetrieveMergedRevisions">
            <summary>Gets or sets a boolean indicating whether the merged revisions should be fetched instead of the node changes</summary>
        </member>
        <member name="P:SharpSvn.Remote.SvnRemoteLogArgs.StrictNodeHistory">
            <summary>Gets or sets a boolean indicating whether only the history of this exact node should be fetched (Aka stop on copying)</summary>
            <remarks>If @a StrictNodeHistory is set, copy history (if any exists) will
not be traversed while harvesting revision logs for each target. </remarks>
        </member>
        <member name="P:SharpSvn.Remote.SvnRemoteLogArgs.RetrieveChangedPaths">
            <summary>Gets or sets a boolean indicating whether the paths changed in the revision should be provided</summary>
        </member>
        <member name="P:SharpSvn.Remote.SvnRemoteLogArgs.Limit">
            <summary>Gets or sets the limit on the number of log items fetched</summary>
        </member>
        <member name="T:SharpSvn.SvnWriteArgs">
            <summary>Extended Parameter container of <see cref="M:SharpSvn.SvnClient.Write(SharpSvn.SvnTarget,System.IO.Stream,SharpSvn.SvnWriteArgs)" /></summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="M:svn_client__derive_location(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.Int32!System.Runtime.CompilerServices.IsLong*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_opt_revision_t!System.Runtime.CompilerServices.IsConst*,svn_ra_session_t*,svn_wc_adm_access_t*,svn_client_ctx_t*,apr_pool_t*)">
 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_types.h
 @brief Subversion's data types

 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_opt.h
 @brief Option and argument parsing for Subversion command lines

 @copyright
 ====================================================================
 Copyright (c) 2000-2006 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_string.h
 @brief Counted-length strings for Subversion, plus some C string goodies.

 There are two string datatypes: @c svn_string_t and @c svn_stringbuf_t.
 The former is a simple pointer/length pair useful for passing around
 strings (or arbitrary bytes) with a counted length. @c svn_stringbuf_t is
 buffered to enable efficient appending of strings without an allocation
 and copy for each append operation.

 @c svn_string_t contains a <tt>const char *</tt> for its data, so it is
 most appropriate for constant data and for functions which expect constant,
 counted data. Functions should generally use <tt>const @c svn_string_t
 *</tt> as their parameter to indicate they are expecting a constant,
 counted string.

 @c svn_stringbuf_t uses a plain <tt>char *</tt> for its data, so it is
 most appropriate for modifiable data.

 <h3>Invariants</h3>

   1. Null termination:

      Both structures maintain a significant invariant:

         <tt>s-&gt;data[s-&gt;len] == '\\0'</tt>

      The functions defined within this header file will maintain
      the invariant (which does imply that memory is
      allocated/defined as @c len+1 bytes).  If code outside of the
      @c svn_string.h functions manually builds these structures,
      then they must enforce this invariant.

      Note that an @c svn_string(buf)_t may contain binary data,
      which means that strlen(s-&gt;data) does not have to equal @c
      s-&gt;len. The NULL terminator is provided to make it easier to
      pass @c s-&gt;data to C string interfaces.


   2. Non-NULL input:

      All the functions assume their input data is non-NULL,
      unless otherwise documented, and may seg fault if passed
      NULL.  The input data may *contain* null bytes, of course, just
      the data pointer itself must not be NULL.

 <h3>Memory allocation</h3>

   All the functions make a deep copy of all input data, and never store
   a pointer to the original input data.

 @copyright
 ====================================================================
 Copyright (c) 2000-2004, 2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_error.h
 @brief Common exception handling for Subversion.

 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_ra.h
 @brief Repository Access

 @copyright
 ====================================================================
 Copyright (c) 2000-2008 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_client.h
 @brief Subversion's client library

 Requires:  The working copy library and repository access library.
 Provides:  Broad wrappers around working copy library functionality.
 Used By:   Client programs.

</member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.CreateFileNode(SharpSvn.Delta.SvnDeltaNode,System.String)">
            <summary>Factory function to create a new SvnDeltaNode instance for the specified file</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.CreateDirectoryNode(SharpSvn.Delta.SvnDeltaNode,System.String)">
            <summary>Factory function to creates a new SvnDeltaNode instance for the specified directory</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnAbort(SharpSvn.Delta.SvnDeltaAbortEventArgs)">
            <summary>Called when a delta run is aborted</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnClose(SharpSvn.Delta.SvnDeltaCloseEventArgs)">
            <summary>Called when a delta run is complete</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnFileAbsent(SharpSvn.Delta.SvnDeltaFileAbsentEventArgs)">
            <summary>Called to specify that information on a file won't be provided (e.g. Authorization)</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnFileClose(SharpSvn.Delta.SvnDeltaFileCloseEventArgs)">
            <summary>Called to close a directory opened with <see cref="E:SharpSvn.Delta.SvnDeltaEditor.FileOpen" /> or <see cref="E:SharpSvn.Delta.SvnDeltaEditor.FileAdd" /></summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnFilePropertyChange(SharpSvn.Delta.SvnDeltaFilePropertyChangeEventArgs)">
            <summary>Called to change a property on a file</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnFileChange(SharpSvn.Delta.SvnDeltaFileChangeEventArgs)">
            <summary>Called when a file is about to receive content changes</summary>
            <remarks>The actual changes are not passed to this function, but are streamed to the target
specified by the <see cref="P:SharpSvn.Delta.SvnDeltaFileChangeEventArgs.Target" /> property of the <see cref="T:SharpSvn.Delta.SvnDeltaFileChangeEventArgs" /></remarks>
        </member>
        <member name="E:SharpSvn.Delta.SvnDeltaEditor.FileDelta">
            <summary>Raised when a file is about to receive content changes</summary>
            <remarks>The actual changes are not passed to this event, but are streamed to the target
specified by the <see cref="P:SharpSvn.Delta.SvnDeltaFileChangeEventArgs.Target" /> property of the <see cref="T:SharpSvn.Delta.SvnDeltaFileChangeEventArgs" /></remarks>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnFileOpen(SharpSvn.Delta.SvnDeltaFileOpenEventArgs)">
            <summary>Called to open a file receiving changes</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnFileAdd(SharpSvn.Delta.SvnDeltaFileAddEventArgs)">
            <summary>Called instead of <see cref="M:SharpSvn.Delta.SvnDeltaEditor.OnFileAdd(SharpSvn.Delta.SvnDeltaFileAddEventArgs)" /> when a new file is added to a directory</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnDirectoryAbsent(SharpSvn.Delta.SvnDeltaDirectoryAbsentEventArgs)">
            <summary>Called to specify that information on a directory won't be provided (e.g. Authorization)</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnDirectoryClose(SharpSvn.Delta.SvnDeltaDirectoryCloseEventArgs)">
            <summary>Called to close a directory opened with <see cref="E:SharpSvn.Delta.SvnDeltaEditor.DirectoryOpen" /> or <see cref="E:SharpSvn.Delta.SvnDeltaEditor.DirectoryAdd" /></summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnDirectoryPropertyChange(SharpSvn.Delta.SvnDeltaDirectoryPropertyChangeEventArgs)">
            <summary>Called to change a property on a directory</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnDirectoryOpen(SharpSvn.Delta.SvnDeltaDirectoryOpenEventArgs)">
            <summary>Called to open a directory receiving changes</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnDirectoryAdd(SharpSvn.Delta.SvnDeltaDirectoryAddEventArgs)">
            <summary>Called instead of OnDirectoryOpen when a new directory is added</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnDeleteEntry(SharpSvn.Delta.SvnDeltaDeleteEntryEventArgs)">
            <summary>Called when an entry (directory or file) is removed from a directory</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnOpen(SharpSvn.Delta.SvnDeltaOpenEventArgs)">
            <summary>Called before the first directory operations</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaEditor.OnSetTarget(SharpSvn.Delta.SvnDeltaSetTargetEventArgs)">
            <summary>Called before open root to specify the target settings</summary>
        </member>
        <member name="T:SharpSvn.Delta.SvnDeltaEditor">
            <summary>The SvnDeltaEditor is a generic receiver of Subversion changes.
Hook events on this class or override methods on descendants of this class to
receive changes</summary>
        </member>
        <member name="E:SharpSvn.Delta.SvnDeltaFileChangeEventArgs.DeltaComplete">
            <summary>Raised when <see cref="P:SharpSvn.Delta.SvnDeltaFileChangeEventArgs.Target" /> is not null and completes its processing</summary>
        </member>
        <member name="P:SharpSvn.Delta.SvnDeltaFileChangeEventArgs.Target">
            <summary>Gets or sets the <see cref="T:SharpSvn.Delta.SvnDeltaTarget" /> that receives the actual differences
after this event returns</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaFileTransform.OnDeltaWindow(SharpSvn.Delta.SvnDeltaWindowEventArgs)">
            <summary>Called when a delta window is ready for processing</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaFileTransform.#ctor(System.String,System.String,System.Boolean)">
            <summary>Creates a new <see cref="T:SharpSvn.Delta.SvnDeltaFileTransform" /> instance to transform
<paramref name="baseFile" />, into <paramref name="toFile" /> while optionally verifying
<paramref name="baseFile" /> if <paramref name="verifyBase" /> is <c>true</c> and
verification data is available.</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaTarget.OnDeltaComplete(SharpSvn.Delta.SvnDeltaCompleteEventArgs)">
            <summary>Called after the last delta window was successfully received</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaTarget.OnDeltaWindow(SharpSvn.Delta.SvnDeltaWindowEventArgs)">
            <summary>Called when a new delta window is ready for processing</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaTarget.OnFileChange(SharpSvn.Delta.SvnDeltaFileChangeEventArgs)">
            <summary>Called before the first <see cref="M:SharpSvn.Delta.SvnDeltaTarget.OnDeltaWindow(SharpSvn.Delta.SvnDeltaWindowEventArgs)" /> invocation to allow initializing</summary>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaCompleteEventArgs.Detach(System.Boolean)">
            <summary>Detaches the SvnEventArgs from the unmanaged storage; optionally keeping the property values for later use</summary>
            <description>After this method is called all properties are either stored managed, or are no longer readable</description>
        </member>
        <member name="M:SharpSvn.Delta.SvnDeltaWindowEventArgs.Detach(System.Boolean)">
            <summary>Detaches the SvnEventArgs from the unmanaged storage; optionally keeping the property values for later use</summary>
            <description>After this method is called all properties are either stored managed, or are no longer readable</description>
        </member>
        <member name="T:SharpSvn.SvnListArgs">
            <summary>Extended Parameter container for SvnClient.List</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnMergesMergedArgs.RetrieveProperties">
            <summary>Gets the list of properties to retrieve. Only SVN 1.5+ repositories allow adding custom properties to this list</summary>
        </member>
        <member name="P:SharpSvn.SvnMergesMergedArgs.RetrieveChangedPaths">
            <summary>Gets or sets a boolean indicating whether the paths changed in the revision should be provided</summary>
        </member>
        <member name="T:SharpSvn.SvnMergesMergedArgs">
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnLogArgs.RetrieveAllProperties">
            <summary>Gets or sets a boolean indication whether to retrieve all revision properties</summary>
            <remarks>Default value: false</remarks>
        </member>
        <member name="P:SharpSvn.SvnLogArgs.RetrieveProperties">
            <summary>Gets the list of properties to retrieve. Only SVN 1.5+ repositories allow adding custom properties to this list</summary>
            <remarks>This list defaults to the author, date, logmessage properties. Clear the list to retrieve no properties,
or set RetrieveAllProperties to true to retrieve all properties.
</remarks>
        </member>
        <member name="P:SharpSvn.SvnLogArgs.BaseUri">
            <summary>Gets or sets the base uri to which relative Uri's are relative</summary>
        </member>
        <member name="P:SharpSvn.SvnLogArgs.RetrieveMergedRevisions">
            <summary>Gets or sets a boolean indicating whether the merged revisions should be fetched instead of the node changes</summary>
        </member>
        <member name="P:SharpSvn.SvnLogArgs.StrictNodeHistory">
            <summary>Gets or sets a boolean indicating whether only the history of this exact node should be fetched (Aka stop on copying)</summary>
            <remarks>If @a StrictNodeHistory is set, copy history (if any exists) will
not be traversed while harvesting revision logs for each target. </remarks>
        </member>
        <member name="P:SharpSvn.SvnLogArgs.RetrieveChangedPaths">
            <summary>Gets or sets a boolean indicating whether the paths changed in the revision should be provided</summary>
        </member>
        <member name="P:SharpSvn.SvnLogArgs.Limit">
            <summary>Gets or sets the limit on the number of log items fetched</summary>
        </member>
        <member name="P:SharpSvn.SvnLogArgs.Range">
            <summary>Gets or sets the range specified by <see cref="P:SharpSvn.SvnLogArgs.Start" />-<see cref="P:SharpSvn.SvnLogArgs.End" /> wrapped as a <see cref="T:SharpSvn.SvnRevisionRange" /></summary>
            <remarks>New code should either use <see cref="P:SharpSvn.SvnLogArgs.Start" /> and <see cref="P:SharpSvn.SvnLogArgs.End" /> or <see cref="P:SharpSvn.SvnLogArgs.Ranges" /></remarks>
        </member>
        <member name="P:SharpSvn.SvnLogArgs.OperationalRevision">
            <summary>Gets the revision in which the Url's are evaluated (Aka peg revision)</summary>
        </member>
        <member name="M:SharpSvn.SvnLogArgs.#ctor(SharpSvn.SvnRevisionRange)">
            <summary>Initializes a new <see cref="T:SharpSvn.SvnLogArgs" /> instance with the specified range</summary>
        </member>
        <member name="M:SharpSvn.SvnLogArgs.#ctor">
            <summary>Initializes a new <see cref="T:SharpSvn.SvnLogArgs" /> instance with default properties</summary>
        </member>
        <member name="T:SharpSvn.SvnLogArgs">
            <summary>Extended Parameter container of SvnClient.Log</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.Security.SvnAuthentication.ConsoleSslClientCertificatePasswordHandler">
            <summary>Console based SslClientCertificatePassword implementation</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthentication.ConsoleSslClientCertificateHandler">
            <summary>Console based SslClientCertificate implementation</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthentication.ConsoleSslServerTrustHandler">
            <summary>Console based SslServerTrust implementation</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthentication.ConsoleUserNamePasswordHandler">
            <summary>Console based UserNamePasswordHandler implementation</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthentication.ConsoleUserNameHandler">
            <summary>Console based UserNameHandler implementation</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthentication.SubversionWindowsSslServerTrustHandler">
            <summary>Subversion CryptoApi Ssl Trust handler</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthentication.SubversionWindowsSslClientCertificatePasswordHandler">
            <summary>Subversion SslClientCertificatePassword file backend using Windows CryptoStore (managed representation)</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthentication.SubversionFileSslClientCertificatePasswordHandler">
            <summary>Subversion SslClientCertificatePassword file backend (managed representation)</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthentication.SubversionFileSslClientCertificateHandler">
            <summary>Subversion SslClientCertificate file backend (managed representation)</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthentication.SubversionFileSslServerTrustHandler">
            <summary>Subversion SslServerTrust file backend (managed representation)</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthentication.SubversionWindowsUserNamePasswordHandler">
            <summary>Subversion UserNameHandler file backend using Windows CryptoStore (managed representation)</summary>
            <remarks>Should be added after <see cref="P:SharpSvn.Security.SvnAuthentication.SubversionFileUserNamePasswordHandler" /></remarks>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthentication.SubversionFileUserNamePasswordHandler">
            <summary>Subversion UserNamePasswordHandler file backend (managed representation)</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthentication.SubversionFileUserNameHandler">
            <summary>Subversion UserNameHandler file backend (managed representation)</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthentication.DefaultCredentials">
            <summary>Simple credential handler to provide a static credential</summary>
            <remarks>When set implements a <see cref="E:SharpSvn.Security.SvnAuthentication.UserNameHandlers" /> and <see cref="E:SharpSvn.Security.SvnAuthentication.UserNamePasswordHandlers" />
instance over the specified credential instance</remarks>
        </member>
        <member name="M:SharpSvn.Security.SvnAuthentication.GetCachedItems(SharpSvn.Security.SvnAuthenticationCacheType)">
            <summary>Gets a list of subversion cached credentials of the specified type</summary>
            <param name="type">The type of credentials to retrieve</param>
            <remarks>This list only contains credentials cached by Subversion; not by external authentication stores</remarks>
        </member>
        <member name="M:SharpSvn.Security.SvnAuthentication.AddConsoleHandlers">
            <summary>Adds all default console handlers</summary>
        </member>
        <member name="M:SharpSvn.Security.SvnAuthentication.AddSubversionFileHandlers">
            <summary>Adds all default subversion-configuration-based handlers</summary>
        </member>
        <member name="M:SharpSvn.Security.SvnAuthentication.Clear">
            <summary>Removes all currently registered providers and caching data</summary>
        </member>
        <member name="M:SharpSvn.Security.SvnAuthentication.ClearAuthenticationCache">
            <summary>Clears the in-memory authentication cache of this client</summary>
        </member>
        <member name="M:SharpSvn.Security.SvnAuthentication.CopyAuthenticationCache(SharpSvn.SvnClientContext)">
            <summary>Copies the in-memory cache from the specified client to this client; merging and overwriting existing credentials</summary>
        </member>
        <member name="M:SharpSvn.Security.SvnAuthentication.GetAuthorizationBaton(System.Int32@)">
            <summary>Retrieves an authorization baton allocated in the specified pool; containing the current authorization settings</summary>
            <summary>Retrieves an authorization baton allocated in the specified pool; containing the current authorization settings</summary>
        </member>
        <member name="T:SharpSvn.Security.SvnAuthentication">
            <summary>Container for all subversion authentication settings on a client</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnBeforeEngineDialogEventArgs.Handle">
            <summary>The Window handle (HWND) of the owner Window</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnSslClientCertificatePasswordEventArgs.Password">
            <summary>The password to authorize with</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnSslServerTrustEventArgs.CertificateValue">
            <summary>Text version of the certificate</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnSslServerTrustEventArgs.Issuer">
            <summary>Issuer value of the certificate</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnSslServerTrustEventArgs.ValidUntil">
            <summary>Text valid-until value of the certificate</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnSslServerTrustEventArgs.ValidFrom">
            <summary>Text valid-from value of the certificate</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnSslServerTrustEventArgs.Fingerprint">
            <summary>Fingerprint name of the certificate</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnSslServerTrustEventArgs.CommonName">
            <summary>Common name of the certificate</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnUserNameEventArgs.UserName">
            <summary>The username to authorize with</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnUserNamePasswordEventArgs.Password">
            <summary>The password to authorize with</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnUserNamePasswordEventArgs.UserName">
            <summary>The username to authorize with</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnUserNamePasswordEventArgs.InitialUserName">
            <summary>Default username; can be NULL</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthenticationEventArgs.Realm">
            <summary>If realm is non-null, maybe use it in the prompt string</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthenticationEventArgs.MaySave">
            <summary>If MaySave is false, the auth system does not allow the credentials
to be saved (to disk). A prompt function shall not ask the user if the
credentials shall be saved if may_save is FALSE. For example, a GUI client
with a remember password checkbox would grey out the checkbox if may_save
is false</summary>
        </member>
        <member name="M:SharpSvn.Security.SvnAuthenticationCacheItem.Delete">
            <summary>Deletes the externally cached credentials</summary>
            <remarks>Does /not/ delete in memory credentials. You should call ClearAuthenticationCache() to clear the in memory cache</remarks>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthenticationCacheItem.IsDeleted">
            <summary>Gets a boolean indicating whether the credentials were deleted since creating this instance</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthenticationCacheItem.RealmUri">
            <summary>Gets the Uri part of the Realm string</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthenticationCacheItem.Realm">
            <summary>Gets the realm of the cached item</summary>
        </member>
        <member name="P:SharpSvn.Security.SvnAuthenticationCacheItem.CacheType">
            <summary>Gets the type of the cached item</summary>
        </member>
        <member name="T:SharpSvn.SvnClientConfigurationException">
            <summary>SharpSvn configuration loader exception</summary>
        </member>
        <member name="T:SharpSvn.SvnClientException">
            <summary>SharpSvn SvnClient exception</summary>
        </member>
        <member name="P:SharpSvn.SvnException.Targets">
            <summary>When not NULL, contains a String, Uri or SvnTarget, or an IEnumberable of one of these,
containing (some of) the targets of the command executed. This to help debugging issues from just
handling the exceptions</summary>
        </member>
        <member name="P:SharpSvn.SvnException.RootCause">
            <summary>Gets the root cause of the exception; commonly the most <see cref="P:System.Exception.InnerException" /></summary>
        </member>
        <member name="P:SharpSvn.SvnException.SvnErrorCode">
            <summary>Gets the raw subversion error code casted to a <see cref="T:SharpSvn.SvnErrorCode" /></summary>
        </member>
        <member name="P:SharpSvn.SvnException.WindowsErrorCode">
            <summary>Gets the operating system error code when there is one
(Only valid if SvnErrorCategory returns <See cref="F:SharpSvn.SvnErrorCategory.OperatingSystem" />)
</summary>
        </member>
        <member name="P:SharpSvn.SvnException.OperatingSystemErrorCode">
            <summary>Gets the operating system error code when there is one
(Only valid if SvnErrorCategory returns <See cref="F:SharpSvn.SvnErrorCategory.OperatingSystem" />)
</summary>
        </member>
        <member name="P:SharpSvn.SvnException.SubversionErrorCode">
            <summary>Gets the raw subversion error code</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.OnProcessing(SharpSvn.SvnProcessingEventArgs)">
            <summary>Raises the <see cref="E:SharpSvn.Remote.SvnRemoteSession.Processing" /> event.</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>Raises the <see cref="T:System.Exception" /> event.</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>Raises the <see cref="E:SharpSvn.Remote.SvnRemoteSession.Progress" /> event.</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>Raises the <see cref="E:SharpSvn.Remote.SvnRemoteSession.Cancel" /> event.</summary>
        </member>
        <member name="E:SharpSvn.Remote.SvnRemoteSession.Processing">
            <summary>
Raised just before a command is executed. This allows a listener
to cleanup before a new command is started
</summary>
        </member>
        <member name="E:SharpSvn.Remote.SvnRemoteSession.Progress">
            <summary>
Raised on progress. The event is first
raised on the <see cref="T:SharpSvn.SvnClientArgs" /> object and
then on the <see cref="T:SharpSvn.SvnClient" /></summary>
        </member>
        <member name="E:SharpSvn.Remote.SvnRemoteSession.SvnError">
            <summary>
Raised when a subversion exception occurs.
Set <see cref="P:SharpSvn.SvnCancelEventArgs.Cancel" /> to true to cancel
throwing the exception
</summary>
        </member>
        <member name="E:SharpSvn.Remote.SvnRemoteSession.Cancel">
            <summary>
Raised to allow canceling operations. The event is first
raised on the <see cref="T:SharpSvn.SvnClientArgs" /> object and
then on the <see cref="T:SharpSvn.SvnLookClient" /></summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.Log(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnRevisionRange,SharpSvn.Remote.SvnRemoteLogArgs,System.EventHandler`1{SharpSvn.Remote.SvnRemoteLogEventArgs})">
            <summary>Streamingly retrieve the log messages for a set of revision(s).</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.Log(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnRevisionRange,System.EventHandler`1{SharpSvn.Remote.SvnRemoteLogEventArgs})">
            <overloads>Streamingly retrieve the log messages for a set of revision(s)</overloads>
            <summary>Streamingly retrieve the log messages for a set of revision(s).</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.Log(System.String,SharpSvn.SvnRevisionRange,SharpSvn.Remote.SvnRemoteLogArgs,System.EventHandler`1{SharpSvn.Remote.SvnRemoteLogEventArgs})">
            <summary>Streamingly retrieve the log messages for a set of revision(s).</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.ResolveRevision(SharpSvn.SvnRevision,SharpSvn.Remote.SvnRemoteCommonArgs,System.Int64@)">
            <summary>Resolves a dated or head revision to an actual revision number</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.ResolveRevision(SharpSvn.SvnRevision,System.Int64@)">
            <overloads>Resolves a dated or head revision to an actual revision number</overloads>
            <summary>Resolves a dated or head revision to an actual revision number</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.GetLatestRevision(SharpSvn.Remote.SvnRemoteCommonArgs,System.Int64@)">
            <summary>Get the latest revision in the repository</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.GetLatestRevision(System.Int64@)">
            <overloads>Get the latest revision in the repository</overloads>
            <summary>Get the latest revision in the repository</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.Reparent(System.Uri,SharpSvn.Remote.SvnRemoteCommonArgs)">
            <summary>Reparents the session to the specified Uri in the same repository</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.Reparent(System.Uri)">
            <overloads>Reparents the session to the specified Uri</overloads>
            <summary>Reparents the session to the specified Uri in the same repository</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.Open(System.Uri,SharpSvn.Remote.SvnRemoteOpenArgs)">
            <summary>Opens the session to the specified Uri</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.Open(System.Uri)">
            <overloads>Opens the session to the specified Uri</overloads>
            <summary>Opens the session to the specified Uri</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.#ctor(System.Uri)">
            <summary>Initializes a new SvnRemoteSession instance and then <see cref="M:SharpSvn.Remote.SvnRemoteSession.Open(System.Uri)" /> a session to the specified url</summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteSession.#ctor">
            <summary>Initializes a new SvnRemoteSession instance</summary>
        </member>
        <member name="T:SharpSvn.Remote.SvnRemoteSession">
            <summary>This class gives access to the Subversion network protocol. Make sure all
passed paths use '/' as path separator. Refer to svn_ra.h for details about the
functions on this class, or use the more polished wrappers on the SvnClient class
</summary>
        </member>
        <member name="E:SharpSvn.SvnLookClient.Cancel">
            <summary>
Raised to allow canceling operations. The event is first
raised on the <see cref="T:SharpSvn.SvnClientArgs" /> object and
then on the <see cref="T:SharpSvn.SvnLookClient" /></summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetList(SharpSvn.SvnLookOrigin,System.String,SharpSvn.SvnLookListArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnLookListEventArgs}@)">
            <summary>Gets the content of a path directly from a repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetList(SharpSvn.SvnLookOrigin,System.String,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnLookListEventArgs}@)">
            <overloads>Gets the content of a path directly from a repository</overloads>
            <summary>Gets the content of a path directly from a repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.List(SharpSvn.SvnLookOrigin,System.String,SharpSvn.SvnLookListArgs,System.EventHandler`1{SharpSvn.SvnLookListEventArgs})">
            <summary>Lists the content of a path directly from a repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.List(SharpSvn.SvnLookOrigin,System.String,System.EventHandler`1{SharpSvn.SvnLookListEventArgs})">
            <overloads>Lists the content of a path directly from a repository</overloads>
            <summary>Lists the content of a path directly from a repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.Write(SharpSvn.SvnLookOrigin,System.String,System.IO.Stream,SharpSvn.SvnLookWriteArgs)">
            <summary>Writes the content of the specified path to a stream directly from a repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.Write(SharpSvn.SvnLookOrigin,System.String,System.IO.Stream)">
            <overloads>Writes the content of the specified path to a stream directly from a repository</overloads>
            <summary>Writes the content of the specified path to a stream directly from a repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetPropertyList(SharpSvn.SvnLookOrigin,System.String,SharpSvn.SvnLookPropertyListArgs,SharpSvn.SvnPropertyCollection@)">
            <summary>Gets all properties on files or dirs (<c>svn proplist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetPropertyList(SharpSvn.SvnLookOrigin,System.String,SharpSvn.SvnPropertyCollection@)">
            <overloads>Gets all properties on files or dirs (<c>svn proplist</c>)</overloads>
            <summary>Gets all properties on files or dirs (<c>svn proplist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetProperty(SharpSvn.SvnLookOrigin,System.String,System.String,SharpSvn.SvnLookGetPropertyArgs,SharpSvn.SvnPropertyValue@)">
            <summary>Gets the property value of the specified path directly from a repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetProperty(SharpSvn.SvnLookOrigin,System.String,System.String,SharpSvn.SvnLookGetPropertyArgs,System.String@)">
            <summary>Gets the property value of the specified path directly from a repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetProperty(SharpSvn.SvnLookOrigin,System.String,System.String,SharpSvn.SvnPropertyValue@)">
            <summary>Gets the property value of the specified path directly from a repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetProperty(SharpSvn.SvnLookOrigin,System.String,System.String,System.String@)">
            <overloads>Gets the property value of the specified path directly from a repository</overloads>
            <summary>Gets the property value of the specified path directly from a repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetRevisionProperty(SharpSvn.SvnLookOrigin,System.String,SharpSvn.SvnLookRevisionPropertyArgs,SharpSvn.SvnPropertyValue@)">
            <summary>Gets the specified revision property directly from the repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetRevisionProperty(SharpSvn.SvnLookOrigin,System.String,SharpSvn.SvnLookRevisionPropertyArgs,System.String@)">
            <summary>Gets the specified revision property directly from the repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetRevisionProperty(SharpSvn.SvnLookOrigin,System.String,SharpSvn.SvnPropertyValue@)">
            <summary>Gets the specified revision property directly from the repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetRevisionProperty(SharpSvn.SvnLookOrigin,System.String,System.String@)">
            <overloads>Gets a revision property directly from a repository</overloads>
            <summary>Gets the specified revision property directly from the repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetChanged(SharpSvn.SvnLookOrigin,SharpSvn.SvnChangedArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnChangedEventArgs}@)">
            <summary>Equivalent to <c>svnlook changed</c></summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetChanged(SharpSvn.SvnLookOrigin,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnChangedEventArgs}@)">
            <overloads>Gets the changed paths directly from a repository</overloads>
            <summary>Equivalent to <c>svnlook changed</c></summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.Changed(SharpSvn.SvnLookOrigin,SharpSvn.SvnChangedArgs,System.EventHandler`1{SharpSvn.SvnChangedEventArgs})">
            <summary>Equivalent to <c>svnlook changed</c></summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.Changed(SharpSvn.SvnLookOrigin,System.EventHandler`1{SharpSvn.SvnChangedEventArgs})">
            <overloads>Gets the changed paths directly from a repository</overloads>
            <summary>Equivalent to <c>svnlook changed</c></summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetChangeInfo(SharpSvn.SvnLookOrigin,SharpSvn.SvnChangeInfoArgs,SharpSvn.SvnChangeInfoEventArgs@)">
            <summary>Gets the change information (author, date, log, paths, etc.) of a change in a repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.GetChangeInfo(SharpSvn.SvnLookOrigin,SharpSvn.SvnChangeInfoEventArgs@)">
            <overloads>Gets the change information of a change directly from a repository</overloads>
            <summary>Gets the change information (author, date, log, paths, etc.) of the last change in a repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.ChangeInfo(SharpSvn.SvnLookOrigin,SharpSvn.SvnChangeInfoArgs,System.EventHandler`1{SharpSvn.SvnChangeInfoEventArgs})">
            <summary>Gets the change information (author, date, log, paths, etc.) of a change in a repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.ChangeInfo(SharpSvn.SvnLookOrigin,System.EventHandler`1{SharpSvn.SvnChangeInfoEventArgs})">
            <overloads>Gets the change information of a change directly from a repository</overloads>
            <summary>Gets the change information (author, date, log, paths, etc.) of the last change in a repository</summary>
        </member>
        <member name="M:SharpSvn.SvnLookClient.#ctor">
            <summary>Initializes a new <see cref="T:SharpSvn.SvnLookClient" /> instance with default properties</summary>
        </member>
        <member name="T:SharpSvn.SvnLookClient">
            <summary>
Managed wrapper of some of the most common svnlook functions
</summary>
            <remarks>
At this time this class is a limited subset of svnlook functionality and
is experimental
</remarks>
        </member>
        <member name="M:SharpSvn.SvnLookOrigin.#ctor(System.String,System.String)">
            <summary>Initializes a new SvnLookOrigin instance for a transaction in repositoryPath</summary>
        </member>
        <member name="M:SharpSvn.SvnLookOrigin.#ctor(System.String,System.Int64)">
            <summary>Initializes a new SvnLookOrigin instance for a specific revision of repositoryPath</summary>
        </member>
        <member name="M:SharpSvn.SvnLookOrigin.#ctor(System.String)">
            <overloads>Initializes a new SvnLookOrigin</overloads>
            <summary>Initializes a new SvnLookOrigin instance for the head revision of repositoryPath</summary>
        </member>
        <member name="T:SharpSvn.SvnLookOrigin">
            <summary>Container for the location to use with the <see cref="T:SharpSvn.SvnLookClient" /> commands</summary>
        </member>
        <member name="T:SharpSvn.SvnLookClientArgs">
            <summary>Base Extended Parameter container of <see cref="T:SharpSvn.SvnLookClient" /> commands</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="M:SharpSvn.SvnWorkingCopyClient.GetVersion(System.String,SharpSvn.SvnGetWorkingCopyVersionArgs,SharpSvn.SvnWorkingCopyVersion@)">
            <summary>Gets the working copy version (<c>svnversion</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnWorkingCopyClient.GetVersion(System.String,SharpSvn.SvnWorkingCopyVersion@)">
            <summary>Gets the working copy version (<c>svnversion</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnWorkingCopyClient.GetEntries(System.String,SharpSvn.SvnWorkingCopyEntriesArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnWorkingCopyEntryEventArgs}@)">
            <summary>Gets a list of entries contained in the specified working copy path</summary>
            <remarks>Helper method used by AnkhSVN to detect nested working copies</remarks>
            <remarks>Only the entry structures representing files and SVN_WC_ENTRY_THIS_DIR contain complete information.  The entry
structures representing subdirs have only the `kind' and `state' fields filled in. If you want info on a subdir, you must use this
routine to open its @a path and read the @c SVN_WC_ENTRY_THIS_DIR structure, or call svn_wc_entry() on its @a path.
</remarks>
        </member>
        <member name="M:SharpSvn.SvnWorkingCopyClient.GetEntries(System.String,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnWorkingCopyEntryEventArgs}@)">
            <summary>Gets a list of entries contained in the specified working copy path</summary>
            <remarks>Helper method used by AnkhSVN to detect nested working copies</remarks>
            <remarks>Only the entry structures representing files and SVN_WC_ENTRY_THIS_DIR contain complete information.  The entry
structures representing subdirs have only the `kind' and `state' fields filled in. If you want info on a subdir, you must use this
routine to open its @a path and read the @c SVN_WC_ENTRY_THIS_DIR structure, or call svn_wc_entry() on its @a path.
</remarks>
        </member>
        <member name="M:SharpSvn.SvnWorkingCopyClient.ListEntries(System.String,SharpSvn.SvnWorkingCopyEntriesArgs,System.EventHandler`1{SharpSvn.SvnWorkingCopyEntryEventArgs})">
            <summary>Enumerates through the list of entries contained in the specified working copy path</summary>
            <remarks>Only the entry structures representing files and SVN_WC_ENTRY_THIS_DIR contain complete information.  The entry
structures representing subdirs have only the `kind' and `state' fields filled in. If you want info on a subdir, you must use this
routine to open its @a path and read the @c SVN_WC_ENTRY_THIS_DIR structure, or call svn_wc_entry() on its @a path.
</remarks>
        </member>
        <member name="M:SharpSvn.SvnWorkingCopyClient.ListEntries(System.String,System.EventHandler`1{SharpSvn.SvnWorkingCopyEntryEventArgs})">
            <summary>Enumerates through the list of entries contained in the specified working copy path</summary>
            <remarks>Only the entry structures representing files and SVN_WC_ENTRY_THIS_DIR contain complete information.  The entry
structures representing subdirs have only the `kind' and `state' fields filled in. If you want info on a subdir, you must use this
routine to open its @a path and read the @c SVN_WC_ENTRY_THIS_DIR structure, or call svn_wc_entry() on its @a path.
</remarks>
        </member>
        <member name="M:SharpSvn.SvnWorkingCopyClient.GetState(System.String,SharpSvn.SvnWorkingCopyStateArgs,SharpSvn.SvnWorkingCopyState@)">
            <summary>Gets the text file status of a working copy path</summary>
        </member>
        <member name="M:SharpSvn.SvnWorkingCopyClient.GetState(System.String,SharpSvn.SvnWorkingCopyState@)">
            <summary>Gets the text file status of a working copy path</summary>
        </member>
        <member name="E:SharpSvn.SvnRepositoryClient.Cancel">
            <summary>
Raised to allow canceling operations. The event is first
raised on the <see cref="T:SharpSvn.SvnClientArgs" /> object and
then on the <see cref="T:SharpSvn.SvnRepositoryClient" /></summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.HotCopy(System.String,System.String)">
            <overloads>Makes a hot copy of a repository</overloads>
            <summary>Makes a hot copy of a repository</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.DeleteRevisionProperty(System.String,SharpSvn.SvnRevision,System.String,SharpSvn.SvnSetRevisionPropertyRepositoryArgs)">
            <summary>Set the property NAME on revision REVISION</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.DeleteRevisionProperty(System.String,SharpSvn.SvnRevision,System.String)">
            <overloads>Delete the property NAME on revision REVISION</overloads>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.SetRevisionProperty(System.String,SharpSvn.SvnRevision,System.String,System.Collections.Generic.ICollection`1{System.Byte},SharpSvn.SvnSetRevisionPropertyRepositoryArgs)">
            <summary>Set the property NAME on revision REVISION</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.SetRevisionProperty(System.String,SharpSvn.SvnRevision,System.String,System.String,SharpSvn.SvnSetRevisionPropertyRepositoryArgs)">
            <summary>Set the property NAME on revision REVISION</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.SetRevisionProperty(System.String,SharpSvn.SvnRevision,System.String,System.Collections.Generic.ICollection`1{System.Byte})">
            <summary>Set the property NAME on revision REVISION</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.SetRevisionProperty(System.String,SharpSvn.SvnRevision,System.String,System.String)">
            <overloads>Set the property NAME on revision REVISION</overloads>
            <summary>Set the property NAME on revision REVISION</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.UpgradeRepository(System.String,SharpSvn.SvnUpgradeRepositoryArgs)">
            <summary>In-Place Upgrades a repository to a later version</summary>
            <remarks>
 NOTE: This functionality is provided as a convenience for
administrators wishing to make use of new Subversion functionality
without a potentially costly full repository dump/load.  As such,
the operation performs only the minimum amount of work needed to
accomplish this while maintaining the integrity of the repository.
It does *not* guarantee the most optimized repository state as a
dump and subsequent load would.
</remarks>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.UpgradeRepository(System.String)">
            <overloads>In-Place Upgrades a repository to a later version</overloads>
            <summary>In-Place Upgrades a repository to a later version</summary>
            <remarks>
 NOTE: This functionality is provided as a convenience for
administrators wishing to make use of new Subversion functionality
without a potentially costly full repository dump/load.  As such,
the operation performs only the minimum amount of work needed to
accomplish this while maintaining the integrity of the repository.
It does *not* guarantee the most optimized repository state as a
dump and subsequent load would.
</remarks>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.DumpRepository(System.String,System.IO.Stream,SharpSvn.SvnDumpRepositoryArgs)">
            <summary>Dumps a repository to a file (svnadmin dump)</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.DumpRepository(System.String,System.IO.Stream)">
            <overloads>Dumps a repository to a file (svnadmin dump)</overloads>
            <summary>Dumps a repository to a file (svnadmin dump)</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.LoadRepository(System.String,System.IO.Stream,SharpSvn.SvnLoadRepositoryArgs)">
            <summary>Loads a repository from a file (svnadmin load)</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.LoadRepository(System.String,System.IO.Stream)">
            <overloads>Loads a repository from a file (svnadmin load)</overloads>
            <summary>Loads a repository from a file (svnadmin load)</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.RecoverRepository(System.String,SharpSvn.SvnRecoverRepositoryArgs)">
            <summary>Recovers the repository at the specified local path</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.RecoverRepository(System.String)">
            <summary>Recovers the repository at the specified local path</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.DeleteRepository(System.String,SharpSvn.SvnDeleteRepositoryArgs)">
            <summary>Deletes the repository at the specified local path</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.DeleteRepository(System.String)">
            <summary>Deletes the repository at the specified local path</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.CreateRepository(System.String,SharpSvn.SvnCreateRepositoryArgs)">
            <summary>Creates a default repository at the specified local path</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.CreateRepository(System.String)">
            <summary>Creates a default repository at the specified local path</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.FindRepositoryRoot(System.Uri)">
            <summary>Helper which allows splitting file:/// uri's in the repository root and the file within</summary>
        </member>
        <member name="M:SharpSvn.SvnRepositoryClient.#ctor">
            <summary>Initializes a new <see cref="T:SharpSvn.SvnRepositoryClient" /> instance with default properties</summary>
        </member>
        <member name="T:SharpSvn.SvnRepositoryClient">
            <summary>
Managed wrapper of some of the most common repository management functions.
</summary>
            <remarks>
At this time this class is just included to enable a standalone test framework
over the SvnClient api; without depending on external tools)
</remarks>
        </member>
        <member name="M:SharpSvn.SvnClientArgsWithConflict.OnConflict(SharpSvn.SvnConflictEventArgs)">
            <summary>Raises the <see cref="E:SharpSvn.SvnClientArgsWithConflict.Conflict" /> event</summary>
        </member>
        <member name="E:SharpSvn.SvnClientArgsWithConflict.Conflict">
            <summary>
Raised on conflict. The event is first
raised on the <see cref="T:SharpSvn.SvnClientArgsWithConflict" /> object and
then on the <see cref="T:SharpSvn.SvnClient" /></summary>
        </member>
        <member name="T:SharpSvn.SvnClientArgsWithConflict">
            <summary>Base class of all <see cref="T:SharpSvn.SvnClient" /> arguments which allow handling conflicts</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnClientArgsWithCommit.LogProperties">
            <summary>Gets a list of 'extra' revision properties to set on commit</summary>
        </member>
        <member name="P:SharpSvn.SvnClientArgsWithCommit.LogMessage">
            <summary>Gets or sets the logmessage applied to the commit</summary>
        </member>
        <member name="M:SharpSvn.SvnClientArgsWithCommit.OnCommitting(SharpSvn.SvnCommittingEventArgs)">
            <summary>Applies the <see cref="P:SharpSvn.SvnClientArgsWithCommit.LogMessage" /> and raises the <see cref="E:SharpSvn.SvnClientArgsWithCommit.Committing" /> event</summary>
        </member>
        <member name="E:SharpSvn.SvnClientArgsWithCommit.Committing">
            <summary>Raised just before committing to allow modifying the log message</summary>
        </member>
        <member name="T:SharpSvn.SvnClientArgsWithCommit">
            <summary>Base class of all <see cref="T:SharpSvn.SvnClient" /> arguments which allow committing</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="M:SharpSvn.SvnClientArgs.AddExpectedError(SharpSvn.SvnErrorCategory[])">
            <summary>Adds error categories to the list of errors not to throw exceptions for</summary>
        </member>
        <member name="M:SharpSvn.SvnClientArgs.AddExpectedError(SharpSvn.SvnErrorCategory)">
            <summary>Adds an error category to the list of errors not to throw exceptions for</summary>
        </member>
        <member name="M:SharpSvn.SvnClientArgs.AddExpectedError(SharpSvn.SvnErrorCode[])">
            <summary>Adds error codes to the list of errors not to throw exceptions for</summary>
        </member>
        <member name="M:SharpSvn.SvnClientArgs.AddExpectedError(SharpSvn.SvnErrorCode)">
            <summary>Adds an error code to the list of errors not to throw exceptions for</summary>
        </member>
        <member name="P:SharpSvn.SvnClientArgs.Warnings">
            <summary>Gets a collection of warnings issued by the last command invocation</summary>
        </member>
        <member name="P:SharpSvn.SvnClientArgs.LastException">
            <summary>
Gets the last exception thrown by a Subversion api command to which this argument was provided
</summary>
        </member>
        <member name="P:SharpSvn.SvnClientArgs.ThrowOnCancel">
            <summary>
Gets or sets a boolean indicating whether the call must throw an error if the operation is cancelled
<see cref="P:SharpSvn.SvnClientArgs.IsLastInvocationCanceled" /> is true and the returnvalue <c>false</c> if the operation was canceled.
(The <see cref="P:SharpSvn.SvnClientArgs.LastException" /> property is set to the cancel exception). Defaults to true
</summary>
        </member>
        <member name="P:SharpSvn.SvnClientArgs.ThrowOnWarning">
            <summary>
Gets or sets a boolean indicating whether the call must throw an error if a non fatal error occurs.
(E.g. locking or updating an external failed). Defaults to false
</summary>
        </member>
        <member name="P:SharpSvn.SvnClientArgs.ThrowOnError">
            <summary>
Gets or sets a boolean indicating whether the call must throw an error if an error occurs.
If an exception would occur, the method returns false and the <see cref="P:SharpSvn.SvnClientArgs.LastException" /> property
is set to the exception which would have been throw. Defaults to true.
</summary>
        </member>
        <member name="P:SharpSvn.SvnClientArgs.CommandType">
            <summary>Gets the <see cref="T:SharpSvn.SvnCommandType" /> of the command</summary>
        </member>
        <member name="M:SharpSvn.SvnClientArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>Called when handling a <see cref="T:SharpSvn.SvnException" /></summary>
        </member>
        <member name="M:SharpSvn.SvnClientArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>Raises the <see cref="E:SharpSvn.SvnClientArgs.Notify" /> event</summary>
        </member>
        <member name="M:SharpSvn.SvnClientArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>Raises the <see cref="E:SharpSvn.SvnClientArgs.Progress" /> event</summary>
        </member>
        <member name="M:SharpSvn.SvnClientArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>Raises the <see cref="E:SharpSvn.SvnClientArgs.Cancel" /> event</summary>
        </member>
        <member name="E:SharpSvn.SvnClientArgs.SvnError">
            <summary>Raised to notify errors from an command</summary>
        </member>
        <member name="E:SharpSvn.SvnClientArgs.Notify">
            <summary>Raised to notify changes by an in-progress command</summary>
        </member>
        <member name="E:SharpSvn.SvnClientArgs.Progress">
            <summary>Raised to notify of progress by an in-progress command</summary>
        </member>
        <member name="E:SharpSvn.SvnClientArgs.Cancel">
            <summary>Raised to allow canceling an in-progress command</summary>
        </member>
        <member name="T:SharpSvn.SvnClientArgs">
            <summary>Base class of all <see cref="T:SharpSvn.SvnClient" /> arguments</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="M:SharpSvn.SvnClient.GetRevisionPropertyList(SharpSvn.SvnUriTarget,SharpSvn.SvnRevisionPropertyListArgs,SharpSvn.SvnPropertyCollection@)">
            <summary>Gets all revision properties on a a specific revision (<c>svn proplist --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetRevisionPropertyList(SharpSvn.SvnUriTarget,SharpSvn.SvnPropertyCollection@)">
            <overloads>Gets all revision properties on a a specific revision (<c>svn proplist --revision</c>)</overloads>
            <summary>Gets all revision properties on a a specific revision (<c>svn proplist --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetRevisionProperty(SharpSvn.SvnUriTarget,System.String,SharpSvn.SvnGetRevisionPropertyArgs,SharpSvn.SvnPropertyValue@)">
            <summary>Gets the value of a revision property on files or dirs in a specific revision (<c>svn propget --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetRevisionProperty(SharpSvn.SvnUriTarget,System.String,SharpSvn.SvnGetRevisionPropertyArgs,System.String@)">
            <summary>Gets the value of a revision property on files or dirs in a specific revision (<c>svn propget --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetRevisionProperty(SharpSvn.SvnUriTarget,System.String,SharpSvn.SvnPropertyValue@)">
            <summary>Gets the value of a revision property on files or dirs in a specific revision (<c>svn propget --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetRevisionProperty(SharpSvn.SvnUriTarget,System.String,System.String@)">
            <summary>Gets the value of a revision property on files or dirs in a specific revision (<c>svn propget --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.DeleteRevisionProperty(SharpSvn.SvnUriTarget,System.String,SharpSvn.SvnSetRevisionPropertyArgs)">
            <summary>Deletes the value of a revision property on files, dirs in a specific revision(<c>svn propdel --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.DeleteRevisionProperty(SharpSvn.SvnUriTarget,System.String)">
            <summary>Deletes the value of a revision property on files, dirs in a specific revision(<c>svn propdel --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.SetRevisionProperty(SharpSvn.SvnUriTarget,System.String,SharpSvn.SvnSetRevisionPropertyArgs,System.Collections.Generic.ICollection`1{System.Byte})">
            <summary>Sets the value of a revision property on files, dirs in a specific revision (<c>svn propset --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.SetRevisionProperty(SharpSvn.SvnUriTarget,System.String,SharpSvn.SvnSetRevisionPropertyArgs,System.String)">
            <summary>Sets the value of a revision property on files, dirs in a specific revision (<c>svn propset --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.SetRevisionProperty(SharpSvn.SvnUriTarget,System.String,System.Collections.Generic.ICollection`1{System.Byte})">
            <summary>Sets the value of a revision property on files, dirs in a specific revision (<c>svn propset --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.SetRevisionProperty(SharpSvn.SvnUriTarget,System.String,System.String)">
            <overloads>Sets the value of a revision property on files, dirs in a specific revision (<c>svn propset --revision</c>)</overloads>
            <summary>Sets the value of a revision property on files, dirs in a specific revision (<c>svn propset --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.TryGetRepositoryId(System.String,System.Guid@)">
            <summary>Gets the Uuid of a Path, or <see cref="F:System.Guid.Empty" /> if path is not versioned</summary>
            <returns>true if successfull, otherwise false</returns>
        </member>
        <member name="M:SharpSvn.SvnClient.TryGetRepositoryId(System.Uri,System.Guid@)">
            <summary>Gets the Uuid of a Uri, or <see cref="F:System.Guid.Empty" /> if path is not versioned</summary>
            <returns>true if successfull, otherwise false</returns>
        </member>
        <member name="M:SharpSvn.SvnClient.GetRepositoryRoot(System.String)">
            <summary>Gets the repository root from the specified path</summary>
            <value>The repository root <see cref="T:System.Uri" /> or <c>null</c> if the uri is not a working copy path</value>
            <remarks>SharpSvn makes sure the uri ends in a '/'</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.GetRepositoryRoot(System.Uri)">
            <overloads>Gets the repository root from the specified uri or path</overloads>
            <summary>Gets the repository root from the specified uri</summary>
            <value>The repository root <see cref="T:System.Uri" /> or <c>null</c> if the uri is not a repository uri</value>
            <remarks>SharpSvn makes sure the uri ends in a '/'</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.GetUriFromWorkingCopy(System.String)">
            <summary>Gets the repository Uri of a path, or <c>null</c> if path is not versioned</summary>
            <remarks>See also <see cref="M:SharpSvn.SvnTools.GetUriFromWorkingCopy(System.String)" /></remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.ReplayRevisions(SharpSvn.SvnTarget,SharpSvn.SvnRevisionRange,SharpSvn.Delta.SvnDeltaEditor,SharpSvn.SvnReplayRevisionArgs)">
            <summary>Replays the specified revisions on the specified target to the editory</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.ReplayRevisions(SharpSvn.SvnTarget,SharpSvn.SvnRevisionRange,SharpSvn.Delta.SvnDeltaEditor)">
            <overloads>Replays the specified revisions on the specified target to the editor</overloads>
            <summary>Replays the specified revisions on the specified target to the editor</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetFileVersions(SharpSvn.SvnTarget,SharpSvn.SvnFileVersionsArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnFileVersionEventArgs}@)">
            <summary>Gets a list of versions of the specified file</summary>
            <remarks>This function allows access to the raw data used to create a Blame report</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.GetFileVersions(SharpSvn.SvnTarget,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnFileVersionEventArgs}@)">
            <overloads>Gets a lists of versions of the specified file</overloads>
            <summary>Gets a list of versions of the specified file</summary>
            <remarks>This function allows access to the raw data used to create a Blame report</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.FileVersions(SharpSvn.SvnTarget,SharpSvn.SvnFileVersionsArgs,System.EventHandler`1{SharpSvn.SvnFileVersionEventArgs})">
            <summary>Lists the versions of the specified file</summary>
            <remarks>This function allows access to the raw data used to create a Blame report</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.FileVersions(SharpSvn.SvnTarget,System.EventHandler`1{SharpSvn.SvnFileVersionEventArgs})">
            <overloads>Lists the versions of the specified file</overloads>
            <summary>Lists the versions of the specified file</summary>
            <remarks>This function allows access to the raw data used to create a Blame report</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.GetCapabilities(SharpSvn.SvnTarget,SharpSvn.SvnGetCapabilitiesArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnCapability}@)">
            <summary>Checks whether the repository of the specified target has the specified capabilities</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetCapabilities(SharpSvn.SvnTarget,System.Collections.Generic.IEnumerable`1{SharpSvn.SvnCapability},System.Collections.ObjectModel.Collection`1{SharpSvn.SvnCapability}@)">
            <overloads>Checks whether the repository of the specified target has the specified capabilities</overloads>
            <summary>Checks whether the repository of the specified target has the specified capabilities</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetBlame(SharpSvn.SvnTarget,SharpSvn.SvnBlameArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnBlameEventArgs}@)">
            <summary>Retrieve the content of specified files or URLs with revision and author information per-line (<c>svn blame</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetBlame(SharpSvn.SvnTarget,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnBlameEventArgs}@)">
            <summary>Retrieve the content of specified files or URLs with revision and author information per-line (<c>svn blame</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Blame(SharpSvn.SvnTarget,SharpSvn.SvnBlameArgs,System.EventHandler`1{SharpSvn.SvnBlameEventArgs})">
            <summary>Streamingly retrieve the content of specified files or URLs with revision and author information per-line (<c>svn blame</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Blame(SharpSvn.SvnTarget,System.EventHandler`1{SharpSvn.SvnBlameEventArgs})">
            <overloads>Streamingly retrieve the content of specified files or URLs with revision and author information per-line (<c>svn blame</c>)</overloads>
            <summary>Streamingly retrieve the content of specified files or URLs with revision and author information per-line (<c>svn blame</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetMergesMerged(SharpSvn.SvnTarget,SharpSvn.SvnTarget,SharpSvn.SvnMergesMergedArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnMergesMergedEventArgs}@)">
            <summary>Retrieves a list of previously merged revisions from the specified source</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetMergesMerged(SharpSvn.SvnTarget,SharpSvn.SvnTarget,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnMergesMergedEventArgs}@)">
            <summary>Retrieves a list of previously merged revisions from the specified source</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.ListMergesMerged(SharpSvn.SvnTarget,SharpSvn.SvnTarget,SharpSvn.SvnMergesMergedArgs,System.EventHandler`1{SharpSvn.SvnMergesMergedEventArgs})">
            <summary>Retrieves previously merged revisions from the specified source</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.ListMergesMerged(SharpSvn.SvnTarget,SharpSvn.SvnTarget,System.EventHandler`1{SharpSvn.SvnMergesMergedEventArgs})">
            <overloads>Retrieves a list of previously merged revisions from the specified source</overloads>
            <summary>Retrieves previously merged revisions from the specified source</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetMergesEligible(SharpSvn.SvnTarget,SharpSvn.SvnTarget,SharpSvn.SvnMergesEligibleArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnMergesEligibleEventArgs}@)">
            <summary>Retrieves a list of revisions of source that are available for merging</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetMergesEligible(SharpSvn.SvnTarget,SharpSvn.SvnTarget,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnMergesEligibleEventArgs}@)">
            <summary>Retrieves a list of revisions of source that are available for merging</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.ListMergesEligible(SharpSvn.SvnTarget,SharpSvn.SvnTarget,SharpSvn.SvnMergesEligibleArgs,System.EventHandler`1{SharpSvn.SvnMergesEligibleEventArgs})">
            <summary>Retrieves revisions of source that are available for merging</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.ListMergesEligible(SharpSvn.SvnTarget,SharpSvn.SvnTarget,System.EventHandler`1{SharpSvn.SvnMergesEligibleEventArgs})">
            <overloads>Retrieves a list of revisions of source that are available for merging</overloads>
            <summary>Retrieves revisions of source that are available for merging</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetAppliedMergeInfo(SharpSvn.SvnTarget,SharpSvn.SvnGetAppliedMergeInfoArgs,SharpSvn.SvnAppliedMergeInfo@)">
            <summary>Gets the merges which are applied on the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetAppliedMergeInfo(SharpSvn.SvnTarget,SharpSvn.SvnAppliedMergeInfo@)">
            <overloads>Gets the merges which are applied on the specified target (<c>svn mergeinfo</c>)</overloads>
            <summary>Gets the merges which are applied on the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetSuggestedMergeSources(SharpSvn.SvnTarget,SharpSvn.SvnGetSuggestedMergeSourcesArgs,SharpSvn.SvnMergeSourcesCollection@)">
            <summary>Gets a list of Uri's which might be valid merge sources</summary>
            <remarks>The list contains copy-from locations and previous merge locations</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.GetSuggestedMergeSources(SharpSvn.SvnTarget,SharpSvn.SvnMergeSourcesCollection@)">
            <overloads>Gets a list of Uri's which might be valid merge sources (<c>svn mergeinfo</c>)</overloads>
            <summary>Gets a list of Uri's which might be valid merge sources</summary>
            <remarks>The list contains copy-from locations and previous merge locations</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.GetChangeList(System.String,SharpSvn.SvnListChangeListArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnListChangeListEventArgs}@)">
            <summary>Gets the contents of the specified changelist below a specified directory (<c>svn changelist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetChangeList(System.String,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnListChangeListEventArgs}@)">
            <overloads>Gets the contents of the specified changelist below a specified directory (<c>svn changelist</c>)</overloads>
            <summary>Gets the contents of the specified changelist below a specified directory (<c>svn changelist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.ListChangeList(System.String,SharpSvn.SvnListChangeListArgs,System.EventHandler`1{SharpSvn.SvnListChangeListEventArgs})">
            <summary>Streamingly gets the contents of the specified changelist below a specified directory (<c>svn changelist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.ListChangeList(System.String,System.EventHandler`1{SharpSvn.SvnListChangeListEventArgs})">
            <overloads>Streamingly gets the contents of the specified changelist below a specified directory (<c>svn changelist</c>)</overloads>
            <summary>Streamingly gets the contents of the specified changelist below a specified directory (<c>svn changelist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoveFromChangeList(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnRemoveFromChangeListArgs)">
            <summary>Deassociate the specified path(s) from the specified changelist (<c>svn changelist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoveFromChangeList(System.Collections.Generic.ICollection`1{System.String})">
            <summary>Deassociate the specified path(s) from the specified changelist (<c>svn changelist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoveFromChangeList(System.String,SharpSvn.SvnRemoveFromChangeListArgs)">
            <summary>Deassociate the specified path(s) from the specified changelist (<c>svn changelist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoveFromChangeList(System.String)">
            <overloads>Deassociate the specified path(s) from the specified changelist (<c>svn changelist</c>)</overloads>
            <summary>Deassociate the specified path(s) from the specified changelist (<c>svn changelist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.AddToChangeList(System.Collections.Generic.ICollection`1{System.String},System.String,SharpSvn.SvnAddToChangeListArgs)">
            <summary>Associate the specified path(s) with the specified changelist (<c>svn changelist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.AddToChangeList(System.Collections.Generic.ICollection`1{System.String},System.String)">
            <summary>Associate the specified path(s) with the specified changelist (<c>svn changelist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.AddToChangeList(System.String,System.String,SharpSvn.SvnAddToChangeListArgs)">
            <summary>Associate the specified path(s) with the specified changelist (<c>svn changelist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.AddToChangeList(System.String,System.String)">
            <overloads>Associate the specified path(s) with the specified changelist (<c>svn changelist</c>)</overloads>
            <summary>Associate the specified path(s) with the specified changelist (<c>svn changelist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetDiffSummary(SharpSvn.SvnTarget,SharpSvn.SvnTarget,SharpSvn.SvnDiffSummaryArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnDiffSummaryEventArgs}@)">
            <summary>Streamingly retrieves the differences between two revisions or paths (<c>svn diff --summarize</c>)</summary>
            <remarks>Subversion limitation: Currently only works over Uri targets</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.GetDiffSummary(SharpSvn.SvnTarget,SharpSvn.SvnTarget,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnDiffSummaryEventArgs}@)">
            <overloads>Retrieves the differences between two revisions or paths (<c>svn diff --summarize</c>)</overloads>
            <summary>Streamingly retrieves the differences between two revisions or paths (<c>svn diff --summarize</c>)</summary>
            <remarks>Subversion limitation: Currently only works over Uri targets</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.DiffSummary(SharpSvn.SvnTarget,SharpSvn.SvnTarget,SharpSvn.SvnDiffSummaryArgs,System.EventHandler`1{SharpSvn.SvnDiffSummaryEventArgs})">
            <summary>Streamingly retrieves the differences between two revisions or paths (<c>svn diff --summarize</c>)</summary>
            <remarks>Subversion limitation: Currently only works over Uri targets</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.DiffSummary(SharpSvn.SvnTarget,SharpSvn.SvnTarget,System.EventHandler`1{SharpSvn.SvnDiffSummaryEventArgs})">
            <overloads>Streamingly retrieves the differences between two revisions or paths (<c>svn diff --summarize</c>)</overloads>
            <summary>Streamingly retrieves the differences between two revisions or paths (<c>svn diff --summarize</c>)</summary>
            <remarks>Subversion limitation: Currently only works over Uri targets</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.Diff(SharpSvn.SvnTarget,SharpSvn.SvnRevisionRange,SharpSvn.SvnDiffArgs,System.IO.Stream)">
            <summary>Retrieves the differences between two revisions or paths (<c>svn diff</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Diff(SharpSvn.SvnTarget,SharpSvn.SvnRevisionRange,System.IO.Stream)">
            <summary>Retrieves the differences between two revisions or paths (<c>svn diff</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Diff(SharpSvn.SvnTarget,SharpSvn.SvnTarget,SharpSvn.SvnDiffArgs,System.IO.Stream)">
            <summary>Retrieves the differences between two revisions or paths (<c>svn diff</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Diff(SharpSvn.SvnTarget,SharpSvn.SvnTarget,System.IO.Stream)">
            <overloads>Retrieves the differences between two revisions or paths (<c>svn diff</c>)</overloads>
            <summary>Retrieves the differences between two revisions or paths (<c>svn diff</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.ReintegrationMerge(System.String,SharpSvn.SvnTarget,SharpSvn.SvnReintegrationMergeArgs)">
            <summary>Perform a reintegration merge of source into targetPath</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.ReintegrationMerge(System.String,SharpSvn.SvnTarget)">
            <overloads>Perform a reintegration merge of source into targetPath</overloads>
            <summary>Perform a reintegration merge of source into targetPath</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Merge``1(System.String,SharpSvn.SvnTarget,System.Collections.Generic.ICollection`1{``0},SharpSvn.SvnMergeArgs)">
            <summary>Merges the changes in the specified revisions from source to targetPath (<c>svn merge</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Merge(System.String,SharpSvn.SvnTarget,SharpSvn.SvnRevisionRange,SharpSvn.SvnMergeArgs)">
            <summary>Merges the changes in the specified revisions from source to targetPath (<c>svn merge</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Merge``1(System.String,SharpSvn.SvnTarget,System.Collections.Generic.ICollection`1{``0})">
            <summary>Merges the changes in the specified revisions from source to targetPath (<c>svn merge</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Merge(System.String,SharpSvn.SvnTarget,SharpSvn.SvnRevisionRange)">
            <overloads>Merges the changes in the specified revisions from source to targetPath (<c>svn merge</c>)</overloads>
            <summary>Merges the changes in the specified revisions from source to targetPath (<c>svn merge</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.DiffMerge(System.String,SharpSvn.SvnTarget,SharpSvn.SvnTarget,SharpSvn.SvnDiffMergeArgs)">
            <summary>
Merges the changes from <paramref name="mergeFrom" /> to <paramref name="mergeTo" /> into <paramRef name="targetPath" /></summary>
        </member>
        <member name="M:SharpSvn.SvnClient.DiffMerge(System.String,SharpSvn.SvnTarget,SharpSvn.SvnTarget)">
            <overloads>Merges the differences between two sources to a working copy path (<c>svn merge</c>)</overloads>
            <summary>
Merges the changes from <paramref name="mergeFrom" /> to <paramref name="mergeTo" /> into <paramRef name="targetPath" /></summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetRevisionPropertyList(System.Uri,SharpSvn.SvnRevision,SharpSvn.SvnRevisionPropertyListArgs,SharpSvn.SvnPropertyCollection@)">
            <summary>Gets all revision properties on a a specific revision (<c>svn proplist --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetRevisionPropertyList(System.Uri,SharpSvn.SvnRevision,SharpSvn.SvnPropertyCollection@)">
            <overloads>Gets all revision properties on a a specific revision (<c>svn proplist --revision</c>)</overloads>
            <summary>Gets all revision properties on a a specific revision (<c>svn proplist --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetRevisionProperty(System.Uri,SharpSvn.SvnRevision,System.String,SharpSvn.SvnGetRevisionPropertyArgs,SharpSvn.SvnPropertyValue@)">
            <summary>Gets the value of a revision property on files or dirs in a specific revision (<c>svn propget --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetRevisionProperty(System.Uri,SharpSvn.SvnRevision,System.String,SharpSvn.SvnGetRevisionPropertyArgs,System.String@)">
            <summary>Gets the value of a revision property on files or dirs in a specific revision (<c>svn propget --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetRevisionProperty(System.Uri,SharpSvn.SvnRevision,System.String,SharpSvn.SvnPropertyValue@)">
            <summary>Gets the value of a revision property on files or dirs in a specific revision (<c>svn propget --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetRevisionProperty(System.Uri,SharpSvn.SvnRevision,System.String,System.String@)">
            <overloads>Gets the value of a revision property on files or dirs in a specific revision (<c>svn propget --revision</c>)</overloads>
            <summary>Gets the value of a revision property on files or dirs in a specific revision (<c>svn propget --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.DeleteRevisionProperty(System.Uri,SharpSvn.SvnRevision,System.String,SharpSvn.SvnSetRevisionPropertyArgs)">
            <summary>Deletes the value of a revision property on files, dirs in a specific revision(<c>svn propdel --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.DeleteRevisionProperty(System.Uri,SharpSvn.SvnRevision,System.String)">
            <overloads>Deletes the value of a revision property on files, dirs in a specific revision(<c>svn propdel --revision</c>)</overloads>
            <summary>Deletes the value of a revision property on files, dirs in a specific revision(<c>svn propdel --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.SetRevisionProperty(System.Uri,SharpSvn.SvnRevision,System.String,System.Collections.Generic.ICollection`1{System.Byte},SharpSvn.SvnSetRevisionPropertyArgs)">
            <summary>Sets the value of a revision property on files, dirs in a specific revision (<c>svn propset --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.SetRevisionProperty(System.Uri,SharpSvn.SvnRevision,System.String,System.String,SharpSvn.SvnSetRevisionPropertyArgs)">
            <summary>Sets the value of a revision property on files, dirs in a specific revision (<c>svn propset --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.SetRevisionProperty(System.Uri,SharpSvn.SvnRevision,System.String,System.Collections.Generic.ICollection`1{System.Byte})">
            <summary>Sets the value of a revision property on files, dirs in a specific revision (<c>svn propset --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.SetRevisionProperty(System.Uri,SharpSvn.SvnRevision,System.String,System.String)">
            <overloads>Sets the value of a revision property on files, dirs in a specific revision (<c>svn propset --revision</c>)</overloads>
            <summary>Sets the value of a revision property on files, dirs in a specific revision (<c>svn propset --revision</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetPropertyList(SharpSvn.SvnTarget,SharpSvn.SvnPropertyListArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnPropertyListEventArgs}@)">
            <summary>Gets all properties on files or dirs (<c>svn proplist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetPropertyList(SharpSvn.SvnTarget,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnPropertyListEventArgs}@)">
            <overloads>Gets all properties on files or dirs (<c>svn proplist</c>)</overloads>
            <summary>Gets all properties on files or dirs (<c>svn proplist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.PropertyList(SharpSvn.SvnTarget,SharpSvn.SvnPropertyListArgs,System.EventHandler`1{SharpSvn.SvnPropertyListEventArgs})">
            <summary>Streamingly lists all properties on files or dirs (<c>svn proplist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.PropertyList(SharpSvn.SvnTarget,System.EventHandler`1{SharpSvn.SvnPropertyListEventArgs})">
            <overloads>Streamingly lists all properties on files or dirs (<c>svn proplist</c>)</overloads>
            <summary>Streamingly lists all properties on files or dirs (<c>svn proplist</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.TryGetProperty(SharpSvn.SvnTarget,System.String,System.String@)">
            <summary>Tries to get a property from the specified path (<c>svn propget</c>)</summary>
            <remarks>Eats all (non-argument) exceptions</remarks>
            <returns>True if the property is fetched, otherwise false</returns>
            <remarks>Equivalent to GetProperty with <see cref="T:SharpSvn.SvnGetPropertyArgs" />'s ThrowOnError set to false</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.GetProperty(SharpSvn.SvnTarget,System.String,SharpSvn.SvnGetPropertyArgs,SharpSvn.SvnTargetPropertyCollection@)">
            <summary>Sets the specified property on the specfied path to value</summary>
            <remarks>Use <see cref="M:SharpSvn.SvnClient.DeleteProperty(System.String,System.String,SharpSvn.SvnSetPropertyArgs)" /> to remove an existing property</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.GetProperty(SharpSvn.SvnTarget,System.String,SharpSvn.SvnPropertyValue@)">
            <summary>Gets the specified property from the specfied path</summary>
            <returns>true if property is set, otherwise false</returns>
            <exception type="SvnException">path is not a valid workingcopy path</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.GetProperty(SharpSvn.SvnTarget,System.String,System.String@)">
            <overloads>Retrieves the value of a property on files, dirs, or revisions (<c>svn propget</c>)</overloads>
            <summary>Gets the specified property from the specfied path</summary>
            <returns>true if property is set, otherwise false</returns>
            <exception type="SvnException">path is not a valid workingcopy path</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.DeleteProperty(System.Uri,System.String,SharpSvn.SvnSetPropertyArgs)">
            <summary>Removes the specified property from the specfied path</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.DeleteProperty(System.Uri,System.String)">
            <summary>Removes the specified property from the specfied path</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.DeleteProperty(System.String,System.String,SharpSvn.SvnSetPropertyArgs)">
            <summary>Removes the specified property from the specfied path</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.DeleteProperty(System.String,System.String)">
            <overloads>Deletes a property from files, dirs (<c>svn propdel</c>)</overloads>
            <summary>Removes the specified property from the specfied path</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.SetProperty(System.Uri,System.String,System.Collections.Generic.ICollection`1{System.Byte},SharpSvn.SvnSetPropertyArgs)">
            <summary>Sets the specified property on the specfied path to value</summary>
            <remarks>Use <see cref="M:SharpSvn.SvnClient.DeleteProperty(System.String,System.String,SharpSvn.SvnSetPropertyArgs)" /> to remove an existing property</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.SetProperty(System.Uri,System.String,System.String,SharpSvn.SvnSetPropertyArgs)">
            <summary>Sets the specified property on the specfied path to value</summary>
            <remarks>Use <see cref="M:SharpSvn.SvnClient.DeleteProperty(System.String,System.String,SharpSvn.SvnSetPropertyArgs)" /> to remove an existing property</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.SetProperty(System.Uri,System.String,System.Collections.Generic.ICollection`1{System.Byte})">
            <summary>Sets the specified property on the specfied path to value</summary>
            <remarks>Use <see cref="M:SharpSvn.SvnClient.DeleteProperty(System.String,System.String,SharpSvn.SvnSetPropertyArgs)" /> to remove an existing property</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.SetProperty(System.Uri,System.String,System.String)">
            <overloads>Set the value of a property on files, dirs (<c>svn propset</c>)</overloads>
            <summary>Sets the specified property on the specfied path to value</summary>
            <remarks>Use <see cref="M:SharpSvn.SvnClient.DeleteProperty(System.String,System.String,SharpSvn.SvnSetPropertyArgs)" /> to remove an existing property</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.SetProperty(System.String,System.String,System.Collections.Generic.ICollection`1{System.Byte},SharpSvn.SvnSetPropertyArgs)">
            <summary>Sets the specified property on the specfied path to value</summary>
            <remarks>Use <see cref="M:SharpSvn.SvnClient.DeleteProperty(System.String,System.String,SharpSvn.SvnSetPropertyArgs)" /> to remove an existing property</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.SetProperty(System.String,System.String,System.String,SharpSvn.SvnSetPropertyArgs)">
            <summary>Sets the specified property on the specfied path to value</summary>
            <remarks>Use <see cref="M:SharpSvn.SvnClient.DeleteProperty(System.String,System.String,SharpSvn.SvnSetPropertyArgs)" /> to remove an existing property</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.SetProperty(System.String,System.String,System.Collections.Generic.ICollection`1{System.Byte})">
            <summary>Sets the specified property on the specfied path to value</summary>
            <remarks>Use <see cref="M:SharpSvn.SvnClient.DeleteProperty(System.String,System.String,SharpSvn.SvnSetPropertyArgs)" /> to remove an existing property</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.SetProperty(System.String,System.String,System.String)">
            <overloads>Set the value of a property on files, dirs (<c>svn propset</c>)</overloads>
            <summary>Sets the specified property on the specfied path to value</summary>
            <remarks>Use <see cref="M:SharpSvn.SvnClient.DeleteProperty(System.String,System.String,SharpSvn.SvnSetPropertyArgs)" /> to remove an existing property</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteUnlock(System.Collections.Generic.ICollection`1{System.Uri},SharpSvn.SvnUnlockArgs)">
            <summary>UnlockURLs (<c>svn unlock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteUnlock(System.Uri,SharpSvn.SvnUnlockArgs)">
            <summary>UnlockURLs (<c>svn unlock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteUnlock(System.Collections.Generic.ICollection`1{System.Uri})">
            <summary>UnlockURLs (<c>svn unlock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteUnlock(System.Uri)">
            <overloads>UnlockURLs (<c>svn unlock</c>)</overloads>
            <summary>UnlockURLs (<c>svn unlock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Unlock(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnUnlockArgs)">
            <summary>Unlock working copy paths  (<c>svn unlock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Unlock(System.String,SharpSvn.SvnUnlockArgs)">
            <summary>Unlock working copy paths  (<c>svn unlock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Unlock(System.Collections.Generic.ICollection`1{System.String})">
            <summary>Unlock working copy paths  (<c>svn unlock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Unlock(System.String)">
            <overloads>Unlock working copy paths  (<c>svn unlock</c>)</overloads>
            <summary>Unlock working copy paths  (<c>svn unlock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteLock(System.Collections.Generic.ICollection`1{System.Uri},SharpSvn.SvnLockArgs)">
            <summary>LockURLs in the repository, so that no other user can commit changes to them (<c>svn lock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteLock(System.Uri,SharpSvn.SvnLockArgs)">
            <summary>LockURLs in the repository, so that no other user can commit changes to them (<c>svn lock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteLock(System.Collections.Generic.ICollection`1{System.Uri},System.String)">
            <summary>LockURLs in the repository, so that no other user can commit changes to them (<c>svn lock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteLock(System.Uri,System.String)">
            <overloads>LockURLs in the repository, so that no other user can commit changes to them (<c>svn lock</c>)</overloads>
            <summary>LockURLs in the repository, so that no other user can commit changes to them (<c>svn lock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Lock(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnLockArgs)">
            <summary>Lock working copy paths  in the repository, so that no other user can commit changes to them (<c>svn lock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Lock(System.String,SharpSvn.SvnLockArgs)">
            <summary>Lock working copy paths  in the repository, so that no other user can commit changes to them (<c>svn lock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Lock(System.Collections.Generic.ICollection`1{System.String},System.String)">
            <summary>Lock working copy paths  in the repository, so that no other user can commit changes to them (<c>svn lock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Lock(System.String,System.String)">
            <overloads>Lock working copy paths  in the repository, so that no other user can commit changes to them (<c>svn lock</c>)</overloads>
            <summary>Lock working copy paths  in the repository, so that no other user can commit changes to them (<c>svn lock</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteMove(System.Collections.Generic.ICollection`1{System.Uri},System.Uri,SharpSvn.SvnMoveArgs,SharpSvn.SvnCommitResult@)">
            <summary>Move and/or rename something in repository, remembering history (<c>svn move</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteMove(System.Uri,System.Uri,SharpSvn.SvnMoveArgs,SharpSvn.SvnCommitResult@)">
            <summary>Move and/or rename something in repository, remembering history (<c>svn move</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteMove(System.Collections.Generic.ICollection`1{System.Uri},System.Uri,SharpSvn.SvnMoveArgs)">
            <summary>Move and/or rename something in repository, remembering history (<c>svn move</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteMove(System.Uri,System.Uri,SharpSvn.SvnMoveArgs)">
            <summary>Move and/or rename something in repository, remembering history (<c>svn move</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteMove(System.Collections.Generic.ICollection`1{System.Uri},System.Uri,SharpSvn.SvnCommitResult@)">
            <summary>Move and/or rename something in repository, remembering history (<c>svn move</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteMove(System.Uri,System.Uri,SharpSvn.SvnCommitResult@)">
            <summary>Move and/or rename something in repository, remembering history (<c>svn move</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteMove(System.Collections.Generic.ICollection`1{System.Uri},System.Uri)">
            <summary>Move and/or rename something in repository, remembering history (<c>svn move</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteMove(System.Uri,System.Uri)">
            <overloads>Move and/or rename something in repository, remembering history (<c>svn move</c>)</overloads>
            <summary>Move and/or rename something in repository, remembering history (<c>svn move</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Move(System.Collections.Generic.ICollection`1{System.String},System.String,SharpSvn.SvnMoveArgs)">
            <summary>Move and/or rename something in working copy, remembering history (<c>svn move</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Move(System.String,System.String,SharpSvn.SvnMoveArgs)">
            <summary>Move and/or rename something in working copy, remembering history (<c>svn move</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Move(System.Collections.Generic.ICollection`1{System.String},System.String)">
            <summary>Move and/or rename something in working copy, remembering history (<c>svn move</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Move(System.String,System.String)">
            <overloads>Move and/or rename something in working copy, remembering history (<c>svn move</c>)</overloads>
            <summary>Move and/or rename something in working copy, remembering history (<c>svn move</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteCopy``1(System.Collections.Generic.ICollection`1{``0},System.Uri,SharpSvn.SvnCopyArgs,SharpSvn.SvnCommitResult@)">
            <summary>Duplicate something in repository, remembering history (<c>svn copy</c>)</summary>
            <remarks>Can be called with either a list of <see cref="T:SharpSvn.SvnTarget" />, <see cref="T:SharpSvn.SvnUriTarget" /> or <see cref="T:SharpSvn.SvnPathTarget" />.
All members must be of the same type.</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteCopy(SharpSvn.SvnTarget,System.Uri,SharpSvn.SvnCopyArgs,SharpSvn.SvnCommitResult@)">
            <summary>Duplicate something in repository, remembering history (<c>svn copy</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteCopy``1(System.Collections.Generic.ICollection`1{``0},System.Uri,SharpSvn.SvnCopyArgs)">
            <summary>Duplicate something in repository, remembering history (<c>svn copy</c>)</summary>
            <remarks>Can be called with either a list of <see cref="T:SharpSvn.SvnTarget" />, <see cref="T:SharpSvn.SvnUriTarget" /> or <see cref="T:SharpSvn.SvnPathTarget" />.
All members must be of the same type.</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteCopy(SharpSvn.SvnTarget,System.Uri,SharpSvn.SvnCopyArgs)">
            <summary>Duplicate something in repository, remembering history (<c>svn copy</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteCopy``1(System.Collections.Generic.ICollection`1{``0},System.Uri,SharpSvn.SvnCommitResult@)">
            <summary>Duplicate something in repository, remembering history (<c>svn copy</c>)</summary>
            <remarks>Can be called with either a list of <see cref="T:SharpSvn.SvnTarget" />, <see cref="T:SharpSvn.SvnUriTarget" /> or <see cref="T:SharpSvn.SvnPathTarget" />.
All members must be of the same type.</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteCopy(SharpSvn.SvnTarget,System.Uri,SharpSvn.SvnCommitResult@)">
            <summary>Duplicate something in repository, remembering history (<c>svn copy</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteCopy``1(System.Collections.Generic.ICollection`1{``0},System.Uri)">
            <summary>Duplicate something in repository, remembering history (<c>svn copy</c>)</summary>
            <remarks>Can be called with either a list of <see cref="T:SharpSvn.SvnTarget" />, <see cref="T:SharpSvn.SvnUriTarget" /> or <see cref="T:SharpSvn.SvnPathTarget" />.
All members must be of the same type.</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteCopy(SharpSvn.SvnTarget,System.Uri)">
            <summary>Duplicate something in repository, remembering history (<c>svn copy</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Copy``1(System.Collections.Generic.ICollection`1{``0},System.String,SharpSvn.SvnCopyArgs)">
            <summary>Duplicate something in working copy, remembering history (<c>svn copy</c>)</summary>
            <remarks>Can be called with either a list of <see cref="T:SharpSvn.SvnTarget" />, <see cref="T:SharpSvn.SvnUriTarget" /> or <see cref="T:SharpSvn.SvnPathTarget" />.
All members must be of the same type.</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.Copy(SharpSvn.SvnTarget,System.String,SharpSvn.SvnCopyArgs)">
            <summary>Duplicate something in working copy, remembering history (<c>svn copy</c>)</summary>
            <remarks>Can be called with either a list of <see cref="T:SharpSvn.SvnTarget" />, <see cref="T:SharpSvn.SvnUriTarget" /> or <see cref="T:SharpSvn.SvnPathTarget" />.
All members must be of the same type.</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.Copy``1(System.Collections.Generic.ICollection`1{``0},System.String)">
            <summary>Duplicate something in working copy, remembering history (<c>svn copy</c>)</summary>
            <remarks>Can be called with either a list of <see cref="T:SharpSvn.SvnTarget" />, <see cref="T:SharpSvn.SvnUriTarget" /> or <see cref="T:SharpSvn.SvnPathTarget" />.
All members must be of the same type.</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.Copy(SharpSvn.SvnTarget,System.String)">
            <overloads>Duplicate something in working copy, remembering history (<c>svn copy</c>)</overloads>
            <summary>Duplicate something in working copy, remembering history (<c>svn copy</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.CleanUp(System.String,SharpSvn.SvnCleanUpArgs)">
            <summary>Cleans up the specified path, removing all workingcopy locks left behind by crashed clients</summary>
            <returns>true if the operation succeeded; false if it did not</returns>
            <exception type="SvnException">Operation failed and args.ThrowOnError = true</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.CleanUp(System.String)">
            <overloads> Recursively clean up the working copy, removing locks, resuming unfinished operations, etc.(<c>svn cleanup</c>)</overloads>
            <summary>Cleans up the specified path, removing all workingcopy locks left behind by crashed clients</summary>
            <exception type="SvnException">Operation failed</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.Resolve(System.String,SharpSvn.SvnAccept,SharpSvn.SvnResolveArgs)">
            <summary>Remove 'conflicted' state on a working copy file or directory using the specified choice</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Resolve(System.String,SharpSvn.SvnAccept)">
            <summary>Remove 'conflicted' state on a working copy file or directory using the specified choice</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Resolved(System.String)">
            <overloads>Remove 'conflicted' state on a working copy file or directory using the specified choice</overloads>
            <summary>Remove 'conflicted' state on a working copy file or directory using the specified choice</summary>
            <remarks>Calls <see cref="M:SharpSvn.SvnClient.Resolve(System.String,SharpSvn.SvnAccept)" /> with SvnAccept.Merged</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.Revert(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnRevertArgs)">
            <summary>Restore pristine working copy file (undo most local edits) (<c>svn revert</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Revert(System.Collections.Generic.ICollection`1{System.String})">
            <summary>Restore pristine working copy file (undo most local edits) (<c>svn revert</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Revert(System.String,SharpSvn.SvnRevertArgs)">
            <summary>Restore pristine working copy file (undo most local edits) (<c>svn revert</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Revert(System.String)">
            <overloads>Restore pristine working copy file (undo most local edits) (<c>svn revert</c>)</overloads>
            <summary>Restore pristine working copy file (undo most local edits) (<c>svn revert</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Commit(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnCommitArgs,SharpSvn.SvnCommitResult@)">
            <summary>Send changes from your working copy to the repository (<c>svn commit</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Commit(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnCommitArgs)">
            <summary>Send changes from your working copy to the repository (<c>svn commit</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Commit(System.String,SharpSvn.SvnCommitArgs,SharpSvn.SvnCommitResult@)">
            <summary>Send changes from your working copy to the repository (<c>svn commit</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Commit(System.String,SharpSvn.SvnCommitArgs)">
            <summary>Send changes from your working copy to the repository (<c>svn commit</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Commit(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnCommitResult@)">
            <summary>Send changes from your working copy to the repository (<c>svn commit</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Commit(System.Collections.Generic.ICollection`1{System.String})">
            <summary>Send changes from your working copy to the repository (<c>svn commit</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Commit(System.String,SharpSvn.SvnCommitResult@)">
            <summary>Send changes from your working copy to the repository (<c>svn commit</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Commit(System.String)">
            <overloads>Send changes from your working copy to the repository (<c>svn commit</c>)</overloads>
            <summary>Send changes from your working copy to the repository (<c>svn commit</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteImport(System.String,System.Uri,SharpSvn.SvnImportArgs,SharpSvn.SvnCommitResult@)">
            <summary>Importing as the subversion api does; without creating a working directory</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteImport(System.String,System.Uri,SharpSvn.SvnImportArgs)">
            <summary>Importing as the subversion api does; without creating a working directory</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteImport(System.String,System.Uri,SharpSvn.SvnCommitResult@)">
            <summary>Importing as the subversion api does; without creating a working directory</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteImport(System.String,System.Uri)">
            <overloads>Commit an unversioned file or tree into the repository (<c>svn import</c>)</overloads>
            <summary>Importing as the subversion api does; without creating a working directory</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Import(System.String,System.Uri,SharpSvn.SvnImportArgs,SharpSvn.SvnCommitResult@)">
            <summary>Performs a working copy import to the specified Uri,
by importing the root remotely, checking that out and then adding the files locally</summary>
            <remarks>Implemented as an Add follwed by an obstructed checkout</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.Import(System.String,System.Uri,SharpSvn.SvnImportArgs)">
            <summary>Performs a working copy import to the specified Uri,
by importing the root remotely, checking that out and then adding the files locally</summary>
            <remarks>Implemented as an Add follwed by an obstructed checkout</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.Import(System.String,System.Uri,SharpSvn.SvnCommitResult@)">
            <summary>Performs a working copy import to the specified Uri,
by importing the root remotely, checking that out and then adding the files locally</summary>
            <remarks>Implemented as an Add follwed by an obstructed checkout</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.Import(System.String,System.Uri)">
            <overloads>Commit an unversioned file or tree into the repository (<c>svn import</c> followed by <c>svn checkout</c>)</overloads>
            <summary>Performs a working copy import to the specified Uri,
by importing the root remotely, checking that out and then adding the files locally</summary>
            <remarks>Implemented as an Add follwed by an obstructed checkout</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteDelete(System.Collections.Generic.ICollection`1{System.Uri},SharpSvn.SvnDeleteArgs,SharpSvn.SvnCommitResult@)">
            <summary>Remove files and directories from version control at the repository (<c>svn delete|remove</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteDelete(System.Collections.Generic.ICollection`1{System.Uri},SharpSvn.SvnDeleteArgs)">
            <summary>Remove files and directories from version control at the repository (<c>svn delete|remove</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteDelete(System.Collections.Generic.ICollection`1{System.Uri})">
            <summary>Remove files and directories from version control at the repository (<c>svn delete|remove</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteDelete(System.Uri,SharpSvn.SvnDeleteArgs,SharpSvn.SvnCommitResult@)">
            <summary>Remove files and directories from version control at the repository (<c>svn delete|remove</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteDelete(System.Uri,SharpSvn.SvnDeleteArgs)">
            <summary>Remove files and directories from version control at the repository (<c>svn delete|remove</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteDelete(System.Uri)">
            <overloads>Remove files and directories from version control at the repository (<c>svn delete|remove</c>)</overloads>
            <summary>Remove files and directories from version control at the repository (<c>svn delete|remove</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Delete(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnDeleteArgs)">
            <summary>Remove files and directories from version control, scheduling (<c>svn delete|remove</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Delete(System.Collections.Generic.ICollection`1{System.String})">
            <summary>Remove files and directories from version control, scheduling (<c>svn delete|remove</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Delete(System.String,SharpSvn.SvnDeleteArgs)">
            <summary>Remove files and directories from version control, scheduling (<c>svn delete|remove</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Delete(System.String)">
            <overloads>Remove files and directories from version control, scheduling (<c>svn delete|remove</c>)</overloads>
            <summary>Remove files and directories from version control, scheduling (<c>svn delete|remove</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteCreateDirectories(System.Collections.Generic.ICollection`1{System.Uri},SharpSvn.SvnCreateDirectoryArgs,SharpSvn.SvnCommitResult@)">
            <summary>Create a new directory under version control at the repository (<c>svn mkdir</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteCreateDirectories(System.Collections.Generic.ICollection`1{System.Uri},SharpSvn.SvnCreateDirectoryArgs)">
            <summary>Create a new directory under version control at the repository (<c>svn mkdir</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteCreateDirectory(System.Uri,SharpSvn.SvnCreateDirectoryArgs,SharpSvn.SvnCommitResult@)">
            <summary>Create a new directory under version control at the repository (<c>svn mkdir</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteCreateDirectory(System.Uri,SharpSvn.SvnCreateDirectoryArgs)">
            <summary>Create a new directory under version control at the repository (<c>svn mkdir</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.RemoteCreateDirectory(System.Uri)">
            <overloads>Create a new directory under version control at the repository (<c>svn mkdir</c>)</overloads>
            <summary>Create a new directory under version control at the repository (<c>svn mkdir</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.CreateDirectories(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnCreateDirectoryArgs)">
            <summary>Create a new directory under version control, scheduling (<c>svn mkdir</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.CreateDirectories(System.Collections.Generic.ICollection`1{System.String})">
            <summary>Create a new directory under version control, scheduling (<c>svn mkdir</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.CreateDirectory(System.String,SharpSvn.SvnCreateDirectoryArgs)">
            <summary>Create a new directory under version control, scheduling (<c>svn mkdir</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.CreateDirectory(System.String)">
            <overloads>Create a new directory under version control, scheduling (<c>svn mkdir</c>)</overloads>
            <summary>Create a new directory under version control, scheduling (<c>svn mkdir</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetInfo(SharpSvn.SvnTarget,SharpSvn.SvnInfoArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnInfoEventArgs}@)">
            <summary>Gets information about the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetInfo(SharpSvn.SvnTarget,SharpSvn.SvnInfoEventArgs@)">
            <summary>Gets information about the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Info(SharpSvn.SvnTarget,SharpSvn.SvnInfoArgs,System.EventHandler`1{SharpSvn.SvnInfoEventArgs})">
            <summary>Gets information about the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Info(SharpSvn.SvnTarget,System.EventHandler`1{SharpSvn.SvnInfoEventArgs})">
            <overloads>Streamingly retrieves information about a local or remote item (<c>svn info</c>)</overloads>
            <summary>Gets information about the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetList(SharpSvn.SvnTarget,SharpSvn.SvnListArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnListEventArgs}@)">
            <summary>Streamingly lists directory entries in the repository. (<c>svn list</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetList(SharpSvn.SvnTarget,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnListEventArgs}@)">
            <overloads>Gets a list of directory entries in the repository. (<c>svn list</c>)</overloads>
            <summary>Streamingly lists directory entries in the repository. (<c>svn list</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.List(SharpSvn.SvnTarget,SharpSvn.SvnListArgs,System.EventHandler`1{SharpSvn.SvnListEventArgs})">
            <summary>Streamingly lists directory entries in the repository. (<c>svn list</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.List(SharpSvn.SvnTarget,System.EventHandler`1{SharpSvn.SvnListEventArgs})">
            <overloads>Streamingly lists directory entries in the repository. (<c>svn list</c>)</overloads>
            <summary>Streamingly lists directory entries in the repository. (<c>svn list</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Write(SharpSvn.SvnTarget,System.IO.Stream,SharpSvn.SvnWriteArgs)">
            <summary>Writes the content of specified files or URLs to a stream. (<c>svn cat</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Write(SharpSvn.SvnTarget,System.IO.Stream)">
            <overloads>Writes the content of specified files or URLs to a stream. (<c>svn cat</c>)</overloads>
            <summary>Writes the content of specified files or URLs to a stream. (<c>svn cat</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetLog(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnLogArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnLogEventArgs}@)">
            <summary>Gets log messages of the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetLog(System.Collections.Generic.ICollection`1{System.Uri},SharpSvn.SvnLogArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnLogEventArgs}@)">
            <summary>Gets log messages of the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetLog(System.String,SharpSvn.SvnLogArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnLogEventArgs}@)">
            <summary>Gets log messages of the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetLog(System.Uri,SharpSvn.SvnLogArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnLogEventArgs}@)">
            <summary>Gets log messages of the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetLog(System.Uri,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnLogEventArgs}@)">
            <summary>Gets log messages of the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetLog(System.String,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnLogEventArgs}@)">
            <overloads>Retrieve the log messages for a set of revision(s) and/or file(s). (<c>svn log</c>)</overloads>
            <summary>Gets log messages of the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Log(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnLogArgs,System.EventHandler`1{SharpSvn.SvnLogEventArgs})">
            <summary>Gets log messages of the specified target path</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Log(System.Collections.Generic.ICollection`1{System.Uri},SharpSvn.SvnLogArgs,System.EventHandler`1{SharpSvn.SvnLogEventArgs})">
            <summary>Gets log messages of the specified target path</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Log(System.String,SharpSvn.SvnLogArgs,System.EventHandler`1{SharpSvn.SvnLogEventArgs})">
            <summary>Gets log messages of the specified target</summary>
            <remarks>A pegrevision applied on the target overrides one set on the args object</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.Log(System.Uri,SharpSvn.SvnLogArgs,System.EventHandler`1{SharpSvn.SvnLogEventArgs})">
            <summary>Gets log messages of the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Log(System.Uri,System.EventHandler`1{SharpSvn.SvnLogEventArgs})">
            <summary>Gets log messages of the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Log(System.String,System.EventHandler`1{SharpSvn.SvnLogEventArgs})">
            <overloads>Streamingly retrieve the log messages for a set of revision(s) and/or file(s). (<c>svn log</c>)</overloads>
            <summary>Gets log messages of the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetStatus(System.String,SharpSvn.SvnStatusArgs,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnStatusEventArgs}@)">
            <summary>Gets a list of status data for the specified path</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.GetStatus(System.String,System.Collections.ObjectModel.Collection`1{SharpSvn.SvnStatusEventArgs}@)">
            <summary>Recursively gets a list of 'interesting' status data for the specified path</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Status(System.String,SharpSvn.SvnStatusArgs,System.EventHandler`1{SharpSvn.SvnStatusEventArgs})">
            <summary>Gets status data for the specified path</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Status(System.String,System.EventHandler`1{SharpSvn.SvnStatusEventArgs})">
            <overloads>Retrieve the status of working copy files and directories (<c>svn status</c>)</overloads>
            <summary>Recursively gets 'interesting' status data for the specified path</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Add(System.String,SharpSvn.SvnAddArgs)">
            <summary>Adds the specified path</summary>
            <returns>true if the operation succeeded; false if it did not</returns>
            <exception type="SvnException">Operation failed and args.ThrowOnError = true</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.Add(System.String,SharpSvn.SvnDepth)">
            <summary>Adds the specified path</summary>
            <exception type="SvnException">Operation failed</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.Add(System.String)">
            <overloads>Put files and directories under version control, scheduling them for addition to repository.
They will be added in next commit(<c>svn add</c>)</overloads>
            <summary>Recursively adds the specified path</summary>
            <exception type="SvnException">Operation failed</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.Relocate(System.String,System.Uri,System.Uri,SharpSvn.SvnRelocateArgs)">
            <summary>Update the working copy to a different repository (<c>svn switch --relocate</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Relocate(System.String,System.Uri,System.Uri)">
            <overloads>Update the working copy to a different repository (<c>svn switch --relocate</c>)</overloads>
            <summary>Update the working copy to a different repository (<c>svn switch --relocate</c>)</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.Switch(System.String,SharpSvn.SvnUriTarget,SharpSvn.SvnSwitchArgs,SharpSvn.SvnUpdateResult@)">
            <summary>Switches a path recursively to the specified target</summary>
            <exception type="SvnException">Operation failed</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.Switch(System.String,SharpSvn.SvnUriTarget,SharpSvn.SvnSwitchArgs)">
            <summary>Switches a path recursively to the specified target</summary>
            <exception type="SvnException">Operation failed</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.Switch(System.String,SharpSvn.SvnUriTarget,SharpSvn.SvnUpdateResult@)">
            <summary>Switches a path recursively to the specified target</summary>
            <exception type="SvnException">Operation failed</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.Switch(System.String,SharpSvn.SvnUriTarget)">
            <overloads>Update the working copy to a different URL (<c>svn switch</c>)</overloads>
            <summary>Switches a path recursively to the specified target</summary>
            <exception type="SvnException">Operation failed</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.Export(SharpSvn.SvnTarget,System.String,SharpSvn.SvnExportArgs,SharpSvn.SvnUpdateResult@)">
            <summary>Exports the specified target to the specified path</summary>
            <remarks>Subversion optimizes this call if you specify a workingcopy file instead of an url</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.Export(SharpSvn.SvnTarget,System.String,SharpSvn.SvnExportArgs)">
            <summary>Exports the specified target to the specified path</summary>
            <remarks>Subversion optimizes this call if you specify a workingcopy file instead of an url</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.Export(SharpSvn.SvnTarget,System.String,SharpSvn.SvnUpdateResult@)">
            <summary>Recursively exports the specified target to the specified path</summary>
            <remarks>Subversion optimizes this call if you specify a workingcopy file instead of an url</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.Export(SharpSvn.SvnTarget,System.String)">
            <overloads>Create an unversioned copy of a tree (<c>svn export</c>)</overloads>
            <summary>Recursively exports the specified target to the specified path</summary>
            <remarks>Subversion optimizes this call if you specify a workingcopy file instead of an url</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.Update(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnUpdateArgs,SharpSvn.SvnUpdateResult@)">
            <summary>Updates the specified paths to the specified revision</summary>
            <exception type="SvnException">Operation failed and args.ThrowOnError = true</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
            <returns>true if the operation succeeded; false if it did not</returns>
        </member>
        <member name="M:SharpSvn.SvnClient.Update(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnUpdateArgs)">
            <summary>Updates the specified paths to the specified revision</summary>
            <exception type="SvnException">Operation failed and args.ThrowOnError = true</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
            <returns>true if the operation succeeded; false if it did not</returns>
        </member>
        <member name="M:SharpSvn.SvnClient.Update(System.Collections.Generic.ICollection`1{System.String},SharpSvn.SvnUpdateResult@)">
            <summary>Recursively updates the specified paths to the latest (HEAD) revision</summary>
            <exception type="SvnException">Operation failed</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.Update(System.Collections.Generic.ICollection`1{System.String})">
            <summary>Recursively updates the specified paths to the latest (HEAD) revision</summary>
            <exception type="SvnException">Operation failed</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.Update(System.String,SharpSvn.SvnUpdateArgs,SharpSvn.SvnUpdateResult@)">
            <summary>Recursively updates the specified path to the latest (HEAD) revision</summary>
            <exception type="SvnException">Operation failed and args.ThrowOnError = true</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.Update(System.String,SharpSvn.SvnUpdateArgs)">
            <summary>Recursively updates the specified path</summary>
            <exception type="SvnException">Operation failed and args.ThrowOnError = true</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.Update(System.String,SharpSvn.SvnUpdateResult@)">
            <summary>Recursively updates the specified path to the latest (HEAD) revision</summary>
            <exception type="SvnException">Operation failed and args.ThrowOnError = true</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.Update(System.String)">
            <overloads>Bring changes from the repository into the working copy (<c>svn update</c>)</overloads>
            <summary>Recursively updates the specified path to the latest (HEAD) revision</summary>
            <exception type="SvnException">Operation failed</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.CheckOut(SharpSvn.SvnUriTarget,System.String,SharpSvn.SvnCheckOutArgs,SharpSvn.SvnUpdateResult@)">
            <summary>Performs a checkout of <paramref name="url" /> to <paramref name="path" /> to the specified param</summary>
            <exception type="SvnException">Operation failed and args.ThrowOnError = true</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
            <returns>true if the operation succeeded; false if it did not</returns>
        </member>
        <member name="M:SharpSvn.SvnClient.CheckOut(SharpSvn.SvnUriTarget,System.String,SharpSvn.SvnCheckOutArgs)">
            <summary>Performs a checkout of <paramref name="url" /> to <paramref name="path" /> to the specified param</summary>
            <exception type="SvnException">Operation failed and args.ThrowOnError = true</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
            <returns>true if the operation succeeded; false if it did not</returns>
        </member>
        <member name="M:SharpSvn.SvnClient.CheckOut(SharpSvn.SvnUriTarget,System.String,SharpSvn.SvnUpdateResult@)">
            <summary>Performs a recursive checkout of <paramref name="url" /> to <paramref name="path" /></summary>
            <exception type="SvnException">Operation failed</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.CheckOut(SharpSvn.SvnUriTarget,System.String)">
            <overloads>Check out a working copy from a repository. (<c>svn checkout</c>)</overloads>
            <summary>Performs a recursive checkout of <paramref name="url" /> to <paramref name="path" /></summary>
            <exception type="SvnException">Operation failed</exception>
            <exception type="ArgumentException">Parameters invalid</exception>
        </member>
        <member name="M:SharpSvn.SvnClient.OnProcessing(SharpSvn.SvnProcessingEventArgs)">
            <summary>Raises the <see cref="E:SharpSvn.SvnClient.Processing" /> event.</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>Raises the <see cref="T:System.Exception" /> event.</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.OnConflict(SharpSvn.SvnConflictEventArgs)">
            <summary>Raises the <see cref="E:SharpSvn.SvnClient.Conflict" /> event.</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>Raises the <see cref="E:SharpSvn.SvnClient.Notify" /> event.</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.OnCommitting(SharpSvn.SvnCommittingEventArgs)">
            <summary>Raises the <see cref="E:SharpSvn.SvnClient.Committing" /> event.</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>Raises the <see cref="E:SharpSvn.SvnClient.Progress" /> event.</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>Raises the <see cref="E:SharpSvn.SvnClient.Cancel" /> event.</summary>
        </member>
        <member name="E:SharpSvn.SvnClient.Processing">
            <summary>
Raised just before a command is executed. This allows a listener
to cleanup before a new command is started
</summary>
        </member>
        <member name="E:SharpSvn.SvnClient.SvnError">
            <summary>
Raised when a subversion exception occurs.
Set <see cref="P:SharpSvn.SvnCancelEventArgs.Cancel" /> to true to cancel
throwing the exception
</summary>
        </member>
        <member name="E:SharpSvn.SvnClient.Conflict">
            <summary>
Raised on conflict. The event is first
raised on the <see cref="T:SharpSvn.SvnClientArgsWithConflict" /> object and
then on the <see cref="T:SharpSvn.SvnClient" /></summary>
        </member>
        <member name="E:SharpSvn.SvnClient.Committing">
            <summary>
Raised on progress. The event is first
raised on the <see cref="T:SharpSvn.SvnClientArgsWithCommit" /> object and
then on the <see cref="T:SharpSvn.SvnClient" /></summary>
        </member>
        <member name="E:SharpSvn.SvnClient.Notify">
            <summary>
Raised on notifications. The event is first
raised on the <see cref="T:SharpSvn.SvnClientArgs" /> object and
then on the <see cref="T:SharpSvn.SvnClient" /></summary>
        </member>
        <member name="E:SharpSvn.SvnClient.Progress">
            <summary>
Raised on progress. The event is first
raised on the <see cref="T:SharpSvn.SvnClientArgs" /> object and
then on the <see cref="T:SharpSvn.SvnClient" /></summary>
        </member>
        <member name="E:SharpSvn.SvnClient.Cancel">
            <summary>
Raised to allow canceling operations. The event is first
raised on the <see cref="T:SharpSvn.SvnClientArgs" /> object and
then on the <see cref="T:SharpSvn.SvnClient" /></summary>
        </member>
        <member name="P:SharpSvn.SvnClient.Configuration">
            <summary>Gets the <see cref="T:SharpSvn.SvnClientConfiguration" /> instance of this <see cref="T:SharpSvn.SvnClient" /></summary>
        </member>
        <member name="P:SharpSvn.SvnClient.AdministrativeDirectoryName">
            <summary>
Gets the name of the subversion administrative directories. Most commonly ".svn"
</summary>
            <remarks>
An internal implementation of a setter is available on this property. Users should read
the subversion implementation of svn_wc_set_adm_dir before invoking the setter of this property
via reflection
</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.EnableSubversionLocalization">
            <summary>Enables the subversion localization engine. (Costs +- 400 KByte ram/language used and slows error handling within the subversion engine)</summary>
            <remarks>By default the subversion layer uses english messages for everything. After this method is called all messages are routed via
the managed resource handler</remarks>
        </member>
        <member name="M:SharpSvn.SvnClient.AddClientName(System.String,System.Version)">
            <summary>Adds the specified client name to web requests' UserAgent string</summary>
            <remarks>The name is filtered to be unique and conformant for the webrequest. Clients should use only alphanumerical ascii characters</remarks>
        </member>
        <member name="P:SharpSvn.SvnClient.SharpSvnVersion">
            <summary>Gets the version of the SharpSvn library</summary>
        </member>
        <member name="P:SharpSvn.SvnClient.Version">
            <summary>Gets the version number of SharpSvn's encapsulated subversion library</summary>
        </member>
        <member name="M:SharpSvn.SvnClient.#ctor">
            <summary>Initializes a new <see cref="T:SharpSvn.SvnClient" /> instance with default properties</summary>
        </member>
        <member name="T:SharpSvn.SvnClient">
            <summary>Subversion client instance; main entrance to the Subversion Client api</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="P:SharpSvn.SvnPropertyValue.Target">
            <summary>Gets the <see cref="T:SharpSvn.SvnTarget" /> the <see cref="T:SharpSvn.SvnPropertyValue" /> applies to;
<c>null</c> if it applies to a revision property</summary>
        </member>
        <member name="P:SharpSvn.SvnClientConfiguration.GlobalIgnorePattern">
            <summary>Gets the subversion global ignore pattern as specified in the configuration</summary>
        </member>
        <member name="P:SharpSvn.SvnClientConfiguration.UseSubversionDiff">
            <summary>Gets or sets a boolean indicating whether to always use the subversion integrated diff library
instead of the user configured diff tools</summary>
            <remarks>The default value of this property is true; to allow parsing the output of the diff library</remarks>
            <value>true if subversions internal diff must be used, otherwise false</value>
        </member>
        <member name="P:SharpSvn.SvnClientConfiguration.EnableSharpPlink">
            <summary>Gets or sets a boolean indicating whether to enable the SharpPlink handler when no other valid
handler for svn+ssh:// is registered</summary>
            <remarks>The default value of this property is true; this matches the behaviour of TortoiseSvn</remarks>
            <value>true if enabling SharpPlink on the first repository request, otherwise false</value>
        </member>
        <member name="P:SharpSvn.SvnClientConfiguration.LoadSvnMimeTypes">
            <summary>Gets or sets a boolean indicating whether to load the svn mimetypes file when calling Add or Import the first time</summary>
            <remarks>The default value of this property is true; this matches the behaviour of the svn commandline client</remarks>
            <value>true if loading the mimetypes file on the initial import, otherwise false</value>
        </member>
        <member name="P:SharpSvn.SvnClientConfiguration.LogMessageRequired">
            <summary>Gets or sets a boolean indicating whether commits will fail if no log message is provided</summary>
            <remarks>The default value of this property is true</remarks>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteLocationSegmentEventArgs.Detach(System.Boolean)">
            <summary>Detaches the SvnEventArgs from the unmanaged storage; optionally keeping the property values for later use</summary>
            <description>After this method is called all properties are either stored managed, or are no longer readable</description>
        </member>
        <member name="P:SharpSvn.Remote.SvnRemoteLocationSegmentEventArgs.Range">
            <summary>Retrieve StartRevision-EndRevision as a <see cref="T:SharpSvn.SvnRevisionRange" /></summary>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteListLockEventArgs.Detach(System.Boolean)">
            <summary>Detaches the SvnEventArgs from the unmanaged storage; optionally keeping the property values for later use</summary>
            <description>After this method is called all properties are either stored managed, or are no longer readable</description>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteListEventArgs.Detach(System.Boolean)">
            <summary>Detaches the SvnEventArgs from the unmanaged storage; optionally keeping the property values for later use</summary>
            <description>After this method is called all properties are either stored managed, or are no longer readable</description>
        </member>
        <member name="M:SharpSvn.Remote.SvnRemoteStatEventArgs.Detach(System.Boolean)">
            <summary>Detaches the SvnEventArgs from the unmanaged storage; optionally keeping the property values for later use</summary>
            <description>After this method is called all properties are either stored managed, or are no longer readable</description>
        </member>
        <member name="P:SharpSvn.Remote.SvnRemoteLogEventArgs.MergeLogNestingLevel">
            <summary>Gets the nesting level of the logs via merges</summary>
        </member>
        <member name="P:SharpSvn.Remote.SvnRemoteLogEventArgs.HasChildren">
            <summary>Set to true when the following items are merged-child items of this item.</summary>
        </member>
        <member name="M:SharpSvn.SvnFileVersionEventArgs.GetContentStream(SharpSvn.SvnFileVersionWriteArgs)">
            <summary>Gets the file contents of the current version as readable stream (Only valid in EventHandler)</summary>
            <exception cref="T:System.InvalidOperationException">Not in the EventHandler</exception>
            <remarks>The stream will be closed when the eventhandler returns. It is not seekabel but you can reset the stream to position 0</remarks>
        </member>
        <member name="M:SharpSvn.SvnFileVersionEventArgs.GetContentStream">
            <summary>Gets the file contents of the current version as readable stream (Only valid in EventHandler)</summary>
            <exception cref="T:System.InvalidOperationException">Not in the EventHandler</exception>
            <remarks>The stream will be closed when the eventhandler returns. It is not seekabel but you can reset the stream to position 0</remarks>
        </member>
        <member name="M:SharpSvn.SvnFileVersionEventArgs.WriteTo(System.IO.Stream,SharpSvn.SvnFileVersionWriteArgs)">
            <summary>Write the file contents to the specified file/stream (Only valid in EventHandler)</summary>
            <exception cref="T:System.InvalidOperationException">Not in the EventHandler</exception>
        </member>
        <member name="M:SharpSvn.SvnFileVersionEventArgs.WriteTo(System.String,SharpSvn.SvnFileVersionWriteArgs)">
            <summary>Write the file contents to the specified file/stream (Only valid in EventHandler)</summary>
            <exception cref="T:System.InvalidOperationException">Not in the EventHandler</exception>
        </member>
        <member name="M:SharpSvn.SvnFileVersionEventArgs.WriteTo(System.IO.Stream)">
            <summary>Write the file contents to the specified file/stream (Only valid in EventHandler)</summary>
            <exception cref="T:System.InvalidOperationException">Not in the EventHandler</exception>
        </member>
        <member name="M:SharpSvn.SvnFileVersionEventArgs.WriteTo(System.String)">
            <overloads>Write the file contents to the specified file/stream (Only valid in EventHandler)</overloads>
            <summary>Write the file contents to the specified file/stream (Only valid in EventHandler)</summary>
            <exception cref="T:System.InvalidOperationException">Not in the EventHandler</exception>
        </member>
        <member name="P:SharpSvn.SvnChangeInfoEventArgs.BaseRevision">
            <summary>Gets the revision the change is based on</summary>
        </member>
        <member name="M:SharpSvn.SvnChangedEventArgs.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.PristinePropertyStatus">
            <summary>Gets the raw property status of the node when available</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.PristineContentStatus">
            <summary>Gets the raw content status of the node when available</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.IsFileExternal">
            <summary>Gets a boolean indicating whether the node is a file external</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.TreeConflict">
            <summary>Gets the tree conflict data of this node or <c>null</c> if this node doesn't have a tree conflict</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.NodeKind">
            <summary>Gets the recorded node type of this node</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.WorkingCopyInfo">
            <summary>Gets an object containing detailed workingcopy information of this node</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.RemoteUpdateNodeKind">
            <summary>Out of Date: Gets the node kind of the OutOfDate commit</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.RemoteUpdateCommitAuthor">
            <summary>Out of Date: Gets the author of the OutOfDate commit</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.RemoteUpdateCommitTime">
            <summary>Out of Date: Last commit date of the item</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.RemoteUpdateRevision">
            <summary>Out of Date: Last commit version of the item</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.IsRemoteUpdated">
            <summary>Gets the out of date status of the item; if true the RemoteUpdate* properties are set</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.Switched">
            <summary>Gets a boolean indicating whether the file is switched in the working copy</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.LocalCopied">
            <summary>Gets a boolean indicating whether the file is copied in the working copy</summary>
            <remarks>A file or directory can be 'copied' if it's scheduled for addition-with-history
(or part of a subtree that is scheduled as such.).</remarks>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.Wedged">
            <summary>Gets a boolean indicating whether the workingcopy is locked</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.LocalLocked">
            <summary>Gets a boolean indicating whether the workingcopy is locked</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.LocalPropertyStatus">
            <summary>Property status in working copy</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.LocalContentStatus">
            <summary>Content status in working copy</summary>
        </member>
        <member name="P:SharpSvn.SvnStatusEventArgs.FullPath">
            <summary>The path the notification is about, translated via <see cref="M:SharpSvn.SvnTools.GetNormalizedFullPath(System.String)" /></summary>
            <remarks>The <see cref="P:SharpSvn.SvnStatusEventArgs.FullPath" /> property contains the path in normalized format; while <see cref="P:SharpSvn.SvnStatusEventArgs.Path" /> returns the exact path from the subversion api</remarks>
        </member>
        <member name="M:SharpSvn.SvnWorkingCopyInfo.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="P:SharpSvn.SvnWorkingCopyInfo.FileExternalPath">
            <summary>The entry is a intra-repository file external and this is the
repository root relative path to the file specified in the
externals definition, otherwise NULL if the entry is not a file
external.</summary>
        </member>
        <member name="P:SharpSvn.SvnWorkingCopyInfo.IsCopy">
            <summary>Gets a boolean indicating whether the node is in a copied state
(possibly because the entry is a child of a path that is
scheduled for addition or replacement when the entry itself is
normal</summary>
        </member>
        <member name="P:SharpSvn.SvnWorkingCopyInfo.Schedule">
            <summary>Gets the node scheduling (add, delete, replace)</summary>
        </member>
        <member name="P:SharpSvn.SvnWorkingCopyInfo.NodeKind">
            <summary>Gets the node kind</summary>
        </member>
        <member name="P:SharpSvn.SvnWorkingCopyInfo.RepositoryIdValue">
            <summary>Gets the repository id as String</summary>
        </member>
        <member name="P:SharpSvn.SvnWorkingCopyInfo.RepositoryId">
            <summary>Gets the repository id as Guid</summary>
        </member>
        <member name="P:SharpSvn.SvnWorkingCopyInfo.RepositoryUri">
            <summary>The repository Uri including a final '/'</summary>
        </member>
        <member name="P:SharpSvn.SvnWorkingCopyInfo.Uri">
            <summary>Url in repository, including final '/' if the entry specifies a directory</summary>
        </member>
        <member name="P:SharpSvn.SvnWorkingCopyInfo.Revision">
            <summary>Base revision</summary>
        </member>
        <member name="P:SharpSvn.SvnWorkingCopyInfo.Name">
            <summary>The entries name</summary>
        </member>
        <member name="M:SharpSvn.SvnPropertyListEventArgs.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="M:SharpSvn.SvnProgressEventArgs.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="M:SharpSvn.SvnProcessingEventArgs.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="P:SharpSvn.SvnMergesMergedEventArgs.SourceTarget">
            <summary>Gets the merge source passed to the SvnClient call</summary>
        </member>
        <member name="P:SharpSvn.SvnMergesMergedEventArgs.SourceUri">
            <summary>Gets the specified SourceUri or <c>null</c> if the source was a local path</summary>
        </member>
        <member name="P:SharpSvn.SvnMergesEligibleEventArgs.SourceTarget">
            <summary>Gets the merge source passed to the SvnClient call</summary>
        </member>
        <member name="P:SharpSvn.SvnMergesEligibleEventArgs.SourceUri">
            <summary>Gets the specified SourceUri or <c>null</c> if the source was a local path</summary>
        </member>
        <member name="P:SharpSvn.SvnAppliedMergeInfo.AppliedMerges">
            <summary>Gets a list of applied merges</summary>
        </member>
        <member name="M:SharpSvn.SvnMergeItemCollection.TryIntersect(System.Collections.Generic.ICollection`1{SharpSvn.SvnMergeItem},SharpSvn.SvnMergeIntersectArgs,SharpSvn.SvnMergeItemCollection@)">
            <remarks>ConsiderInheritance is ignored at this time</remarks>
        </member>
        <member name="M:SharpSvn.SvnMergeItemCollection.TryRemove(System.Collections.Generic.ICollection`1{SharpSvn.SvnMergeItem},SharpSvn.SvnMergeRemoveArgs,SharpSvn.SvnMergeItemCollection@)">
            <remarks>ConsiderInheritance is ignored at this time</remarks>
        </member>
        <member name="M:SharpSvn.SvnMergeItemCollection.#ctor(System.Collections.Generic.IEnumerable`1{SharpSvn.SvnMergeItem})">
            <summary>Initializes a new instance of the <see cref="T:SharpSvn.SvnMergeItemCollection" /> class with the values from the specified collection</summary>
        </member>
        <member name="M:SharpSvn.SvnMergeItemCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:SharpSvn.SvnMergeItemCollection" /> class with default properties</summary>
        </member>
        <member name="M:SharpSvn.SvnMergeRange.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="M:SharpSvn.SvnRevisionRange.FromRevision(System.Int64)">
            <summary>Creates a SvnRevision from {revision-1:revision}</summary>
        </member>
        <member name="P:SharpSvn.SvnLogEventArgs.MergeLogNestingLevel">
            <summary>Gets the nesting level of the logs via merges</summary>
        </member>
        <member name="P:SharpSvn.SvnLogEventArgs.HasChildren">
            <summary>Set to true when the following items are merged-child items of this item.</summary>
        </member>
        <member name="P:SharpSvn.SvnLogEventArgs.LogOrigin">
            <summary>Gets the log origin SharpSvn used for retrieving the logfile</summary>
        </member>
        <member name="M:SharpSvn.SvnLoggingEventArgs.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="P:SharpSvn.SvnLoggingEventArgs.RevisionProperties">
            <summary>Gets the list of custom properties retrieved with the log</summary>
            <remarks>Properties must be listed in SvnLogArgs.RetrieveProperties to be available here</remarks>
        </member>
        <member name="M:SharpSvn.SvnChangeItem.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="P:SharpSvn.SvnChangeItem.NodeKind">
            <summary>Gets the node kind of the changed path (Only available when committed to a 1.6+ repository)</summary>
        </member>
        <member name="P:SharpSvn.SvnChangeItem.RepositoryPath">
            <summary>Gets the relative uri of the path inside the repository</summary>
            <remarks>Does not include an initial '/'. Ends with a '/' if <see cref="P:SharpSvn.SvnChangeItem.NodeKind" /> is <see cref="F:SharpSvn.SvnNodeKind.Directory" />.</remarks>
        </member>
        <member name="P:SharpSvn.SvnChangeItem.Path">
            <summary>Gets the path inside rooted at the repository root (including initial '/')</summary>
        </member>
        <member name="M:SharpSvn.SvnListEventArgs.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="P:SharpSvn.SvnListEventArgs.Entry">
            <summary>Gets the information specified in RetrieveEntries on the args object</summary>
        </member>
        <member name="P:SharpSvn.SvnListEventArgs.Lock">
            <summary>Gets lock information if RetrieveLocks is set on the args object</summary>
        </member>
        <member name="P:SharpSvn.SvnListEventArgs.BaseUri">
            <summary>When retrieving a listing using an Uri target: contains the uri from which Path is relative</summary>
            <value>The Base Uri or <c>null</c> when the repository root is not available</value>
        </member>
        <member name="P:SharpSvn.SvnListEventArgs.RepositoryRoot">
            <summary>When retrieving a listing using an Uri target: contains the repository root</summary>
            <value>The Repository root or <c>null</c> when the repository root is not available</value>
        </member>
        <member name="P:SharpSvn.SvnListEventArgs.Name">
            <summary>Gets the filename of the item</summary>
        </member>
        <member name="P:SharpSvn.SvnListEventArgs.BasePath">
            <summary>Gets the origin path of the item</summary>
        </member>
        <member name="P:SharpSvn.SvnListEventArgs.Path">
            <summary>Gets the path of the item</summary>
        </member>
        <member name="M:SharpSvn.SvnDirEntry.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="P:SharpSvn.SvnDirEntry.Author">
            <summary>Gets the author of the last revision of this file</summary>
        </member>
        <member name="P:SharpSvn.SvnDirEntry.Time">
            <summary>Gets the time of the last change</summary>
        </member>
        <member name="P:SharpSvn.SvnDirEntry.Revision">
            <summary>Gets the last revision in which this node changed</summary>
        </member>
        <member name="P:SharpSvn.SvnDirEntry.HasProperties">
            <summary>Gets a boolean indicating whether this node has svn properties</summary>
        </member>
        <member name="P:SharpSvn.SvnDirEntry.FileSize">
            <summary>Gets the length of the file text or 0 for directories</summary>
        </member>
        <member name="M:SharpSvn.SvnInfoEventArgs.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="P:SharpSvn.SvnInfoEventArgs.HasLocalInfo">
            <summary>Gets a boolean indicating whether working copy information is available in this instance</summary>
        </member>
        <member name="P:SharpSvn.SvnInfoEventArgs.Lock">
            <summary>Gets information about the current lock on node</summary>
        </member>
        <member name="P:SharpSvn.SvnInfoEventArgs.LastChangeAuthor">
            <summary>Gets the author of the last revision in which node (or one of its descendants) changed</summary>
        </member>
        <member name="P:SharpSvn.SvnInfoEventArgs.LastChangeTime">
            <summary>Gets the timestamp of the last revision in which node (or one of its descendants) changed</summary>
        </member>
        <member name="P:SharpSvn.SvnInfoEventArgs.LastChangeRevision">
            <summary>Gets the last revision in which node (or one of its descendants) changed</summary>
        </member>
        <member name="P:SharpSvn.SvnInfoEventArgs.RepositoryIdValue">
            <summary>Gets the repository uuid or <c>null</c> if not available</summary>
        </member>
        <member name="P:SharpSvn.SvnInfoEventArgs.RepositoryId">
            <summary>Gets the uuid of the repository (if available). Otherwise Guid.Empty</summary>
        </member>
        <member name="P:SharpSvn.SvnInfoEventArgs.RepositoryRoot">
            <summary>Gets the repository root Uri; ending in a '/'</summary>
            <remarks>The unmanaged api does not add the '/' at the end, but this makes using <see cref="T:System.Uri" /> hard</remarks>
        </member>
        <member name="P:SharpSvn.SvnInfoEventArgs.NodeKind">
            <summary>Gets the node kind of the specified node</summary>
        </member>
        <member name="P:SharpSvn.SvnInfoEventArgs.Revision">
            <summary>Gets the queried revision</summary>
        </member>
        <member name="P:SharpSvn.SvnInfoEventArgs.Uri">
            <summary>Gets the full Uri of the node</summary>
        </member>
        <member name="P:SharpSvn.SvnInfoEventArgs.FullPath">
            <summary>The path the notification is about, translated via <see cref="M:SharpSvn.SvnTools.GetNormalizedFullPath(System.String)" /></summary>
            <remarks>The <see cref="P:SharpSvn.SvnInfoEventArgs.FullPath" /> property contains the path in normalized format; while <see cref="P:SharpSvn.SvnInfoEventArgs.Path" /> returns the exact path from the subversion api</remarks>
        </member>
        <member name="P:SharpSvn.SvnInfoEventArgs.Path">
            <summary>Gets the path of the file. The local path if requisting WORKING version, otherwise the name of the file
at the specified version</summary>
        </member>
        <member name="M:SharpSvn.SvnDiffSummaryEventArgs.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="M:SharpSvn.SvnBlameEventArgs.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="M:SharpSvn.SvnNotifyEventArgs.Detach(System.Boolean)">
            <summary>Detaches the SvnEventArgs from the unmanaged storage; optionally keeping the property values for later use</summary>
            <description>After this method is called all properties are either stored managed, or are no longer readable</description>
        </member>
        <member name="M:SharpSvn.SvnNotifyEventArgs.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.RevisionProperties">
            <summary>If action is svn_wc_notify_blame_revision, contains a list of revision properties for the specified revision</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.PropertyName">
            <summary>If action relates to properties, specifies the name of the property.</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.MergeRange">
            <summary>When @c action is @c svn_wc_notify_merge_begin, and both the left and right sides
of the merge are from the same URL.  In all other cases, it is NULL</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.ChangeListName">
            <summary>When action is svn_wc_notify_changelist_add or name.  In all other
cases, it is NULL</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.Lock">
            <summary>Points to the lock structure received from the repository when
action is @c svn_wc_notify_locked.  For other actions, it is
NULL.</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.OldRevision">
            <summary>[[[ The base revision before updating (Not guaranteed compatible with future Subversion versions!)]]]</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.Revision">
            <summary>When action is svn_wc_notify_update_completed, target revision
of the update, or @c SVN_INVALID_REVNUM if not available; when action is
c svn_wc_notify_blame_revision, processed revision. In all other cases,
it is @c SVN_INVALID_REVNUM.</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.LockState">
            <summary>Reflects the addition or removal of a lock token in the working copy.</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.PropertyState">
            <summary>The type of notification that is occurring about node properties.</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.ContentState">
            <summary>The type of notification that is occurring about node content.</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.Error">
            <summary>Points to an error describing the reason for the failure when
action is one of the following: @c svn_wc_notify_failed_lock, svn_wc_notify_failed_unlock,
svn_wc_notify_failed_external. Is @c NULL otherwise.</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.MimeTypeIsBinary">
            <summary>If MimeType is not null, a boolean indicating whether this mime type is interpreted as binary</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.MimeType">
            <summary>If non-NULL, indicates the mime-type of @c path. It is always @c NULL for directories.</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.NodeKind">
            <summary>Node kind of path/url</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.Action">
            <summary>Action that describes what happened to path/url</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.CommandType">
            <summary>Gets the commandtype of the command responsible for calling the notify</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.PathIsUri">
            <summary>Gets a boolean indicating whether the path is a Uri</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.FullPath">
            <summary>The path the notification is about, translated via <see cref="M:SharpSvn.SvnTools.GetNormalizedFullPath(System.String)" /></summary>
            <remarks>The <see cref="P:SharpSvn.SvnNotifyEventArgs.FullPath" /> property contains the path in normalized format; while <see cref="P:SharpSvn.SvnNotifyEventArgs.Path" /> returns the exact path from the subversion api</remarks>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.Uri">
            <summary>Gets the (relative or absolute uri) Uri the notification is about</summary>
        </member>
        <member name="P:SharpSvn.SvnNotifyEventArgs.Path">
            <summary>The path the notification is about</summary>
            <remarks>The <see cref="P:SharpSvn.SvnNotifyEventArgs.FullPath" /> property contains the path in normalized format; while <see cref="P:SharpSvn.SvnNotifyEventArgs.Path" /> returns the exact path from the subversion api</remarks>
        </member>
        <member name="M:SharpSvn.SvnLockInfo.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="P:SharpSvn.SvnLockInfo.IsRawNetworkComment">
            <summary>Gets a boolean indicating whether the Comment was generated by a Generic WebDav client</summary>
        </member>
        <member name="P:SharpSvn.SvnLockInfo.FullPath">
            <summary>The path the notification is about, translated via <see cref="M:SharpSvn.SvnTools.GetNormalizedFullPath(System.String)" /></summary>
            <remarks>The <see cref="P:SharpSvn.SvnLockInfo.FullPath" /> property contains the path in normalized format; while <see cref="P:SharpSvn.SvnLockInfo.Path" /> returns the exact path from the subversion api</remarks>
        </member>
        <member name="P:SharpSvn.SvnConflictEventArgs.MimeType">
            <summary>
                <see cref="P:SharpSvn.SvnConflictData.MimeType" />
            </summary>
        </member>
        <member name="P:SharpSvn.SvnConflictEventArgs.PropertyName">
            <summary>
                <see cref="P:SharpSvn.SvnConflictData.PropertyName" />
            </summary>
        </member>
        <member name="P:SharpSvn.SvnConflictEventArgs.Path">
            <summary>
                <see cref="P:SharpSvn.SvnConflictData.Name" />
            </summary>
        </member>
        <member name="P:SharpSvn.SvnConflictData.Operation">
            <summary>Gets the operation creating the tree conflict</summary>
        </member>
        <member name="P:SharpSvn.SvnConflictSource.NodeKind">
            <summary>Gets the <see cref="T:SharpSvn.SvnNodeKind" /> of <see cref="P:SharpSvn.SvnConflictSource.Uri" /></summary>
        </member>
        <member name="P:SharpSvn.SvnConflictSource.Revision">
            <summary>Gets the revision of <see cref="P:SharpSvn.SvnConflictSource.Uri" /></summary>
        </member>
        <member name="P:SharpSvn.SvnConflictSource.RepositoryPath">
            <summary>Gets the relative uri of the path inside the repository</summary>
            <remarks>Does not include an initial '/'. Ends with a '/' if <see cref="P:SharpSvn.SvnConflictSource.NodeKind" /> is <see cref="F:SharpSvn.SvnNodeKind.Directory" />.</remarks>
        </member>
        <member name="M:SharpSvn.SvnCommitItem.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="M:SharpSvn.SvnCommitResult.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="P:SharpSvn.SvnCommitResult.PostCommitError">
            <summary>error message from post-commit hook, or NULL</summary>
        </member>
        <member name="M:SharpSvn.SvnTarget.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="M:SharpSvn.SvnTarget.ToString">
            <summary>Gets the SvnTarget as string</summary>
        </member>
        <member name="P:SharpSvn.SvnTarget.TargetName">
            <summary>Gets the target name in normalized format</summary>
        </member>
        <member name="P:SharpSvn.SvnTarget.Revision">
            <summary>Gets the operational revision</summary>
        </member>
        <member name="P:SharpSvn.ISvnOrigin.NodeKind">
            <summary>(Optional) The node kind of <see cref="P:SharpSvn.ISvnOrigin.Target" /></summary>
        </member>
        <member name="P:SharpSvn.ISvnOrigin.RepositoryRoot">
            <summary>(Required) The repository root of <see cref="P:SharpSvn.ISvnOrigin.Target" /></summary>
        </member>
        <member name="P:SharpSvn.ISvnOrigin.Target">
            <summary>The target specified</summary>
        </member>
        <member name="P:SharpSvn.ISvnOrigin.Uri">
            <summary>(Required) The Uri of <see cref="P:SharpSvn.ISvnOrigin.Target" />. Only differs from target if <see cref="P:SharpSvn.ISvnOrigin.Target" />
specifies a <see cref="T:SharpSvn.SvnPathTarget" /></summary>
        </member>
        <member name="T:SharpSvn.ISvnOrigin">
            <summary>Generic encapsulation of a specific revision of a node in subversion</summary>
        </member>
        <member name="P:SharpSvn.SvnRevision.IsExplicit">
            <summary>Gets a boolean whether the revision specifies an explicit repository revision</summary>
            <remarks>Explicit: Is set, doesn't require a workingcopy and is repository wide applyable</remarks>
        </member>
        <member name="P:SharpSvn.SvnRevision.RequiresWorkingCopy">
            <summary>Gets a boolean indicating whether the revisionnumber requires a workingcopy to make any sense</summary>
        </member>
        <member name="M:SharpSvn.SvnRevision.GetHashCode">
            <summary>Serves as a hashcode for the specified type</summary>
        </member>
        <member name="P:SharpSvn.SvnClientContext.Authentication">
            <summary>Gets the <see cref="T:SharpSvn.Security.SvnAuthentication" /> instance managing authentication on behalf of this client</summary>
        </member>
        <member name="P:SharpSvn.SvnClientContext.PlinkPath">
            <summary>Gets the path to SharpSvn's plink. The path is encoded to be safe for subversion configuration settings</summary>
        </member>
        <member name="M:SharpSvn.SvnClientContext.MergeConfiguration(System.String)">
            <summary>Merges configuration from the specified path into the existing configuration</summary>
        </member>
        <member name="M:SharpSvn.SvnClientContext.LoadConfigurationDefault">
            <summary>Loads the standard subversion configuration and ensures the subversion config dir by creating default files</summary>
        </member>
        <member name="M:SharpSvn.SvnClientContext.LoadConfiguration(System.String,System.Boolean)">
            <summary>Loads the subversion configuration from the specified path and optionally ensures the path is a subversion config dir by creating default files</summary>
        </member>
        <member name="M:SharpSvn.SvnClientContext.LoadConfiguration(System.String)">
            <summary>Loads the subversion configuration from the specified path</summary>
        </member>
        <member name="T:SharpSvn.SvnClientContext">
            <summary>Subversion Client Context wrapper; base class of objects using client context</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="M:SharpSvn.SvnEventArgs.Detach(System.Boolean)">
            <summary>Detaches the SvnEventArgs from the unmanaged storage; optionally keeping the property values for later use</summary>
            <description>After this method is called all properties are either stored managed, or are no longer readable</description>
        </member>
        <member name="M:SharpSvn.SvnEventArgs.Detach">
            <summary>Detaches the SvnEventArgs from the unmanaged storage; optionally keeping the property values for later use</summary>
            <description>After this method is called all properties values are stored in managed code</description>
        </member>
        <member name="M:SharpSvn.SvnTools.PathCombine(System.String,System.String)">
            <summary>Long path capable version of <see cref="M:System.IO.Path.Combine(System.String,System.String)" /></summary>
        </member>
        <member name="M:SharpSvn.SvnTools.GetNormalizedDirectoryName(System.String)">
            <summary>Gets the normalized directory name of path (Long path enabled version of <see cref="M:System.IO.Path.GetDirectoryName(System.String)" />, always returning full paths)</summary>
        </member>
        <member name="M:SharpSvn.SvnTools.GetFileName(System.Uri)">
            <summary>Gets the filename of the specified target</summary>
        </member>
        <member name="M:SharpSvn.SvnTools.PathToRelativeUri(System.String)">
            <summary>
Converts a local relative path to a valid relative Uri
</summary>
        </member>
        <member name="M:SharpSvn.SvnTools.UriPartToPath(System.String)">
            <summary>
Converts a string from a Uri path to a local path name; unescaping when necessary
</summary>
        </member>
        <member name="M:SharpSvn.SvnTools.AppendPathSuffix(System.Uri,System.String)">
            <summary>
Appends the specified path suffix to the given Uri
</summary>
        </member>
        <member name="M:SharpSvn.SvnTools.IsAbsolutePath(System.String)">
            <summary>
Checks whether the specified path is an absolute path
</summary>
        </member>
        <member name="M:SharpSvn.SvnTools.GetNormalizedUri(System.Uri)">
            <summary>
Normalizes the Uri to a full absolute Uri
</summary>
        </member>
        <member name="M:SharpSvn.SvnTools.IsNormalizedFullPath(System.String)">
            <summary>
Checks whether normalization is required
</summary>
            <remarks>This method does not verify the casing of invariant parts</remarks>
        </member>
        <member name="M:SharpSvn.SvnTools.GetNormalizedFullPath(System.String)">
            <summary>
Normalizes the path to a full path
</summary>
            <summary>This normalizes drive letters to upper case and hostnames to lowercase to match Subversion 1.6 behavior</summary>
        </member>
        <member name="M:SharpSvn.SvnTools.IsBelowManagedPath(System.String)">
            <summary>Gets a boolean indicating whether at least one of the
parent paths or the path (file/directory) itself is a working copy.
</summary>
        </member>
        <member name="M:SharpSvn.SvnTools.IsManagedPath(System.String)">
            <summary>Gets a boolean indicating whether the path could contain a Subversion Working Copy</summary>
            <remarks>Assumes path is a directory</remarks>
        </member>
        <member name="M:SharpSvn.SvnTools.GetFullTruePath(System.String)">
            <summary>Gets the pathname exactly like it is on disk</summary>
        </member>
        <member name="M:SharpSvn.SvnTools.GetTruePath(System.String,System.Boolean)">
            <summary>Gets the absolute pathname exactly like it is on disk (fixing casing).
For not existing paths, if bestEffort is TRUE, returns a path based on existing parents. Otherwise return NULL for not existing paths</summary>
        </member>
        <member name="M:SharpSvn.SvnTools.GetTruePath(System.String)">
            <summary>Gets the absolute pathname exactly like it is on disk (fixing casing); returns NULL for non existing paths</summary>
        </member>
        <member name="M:SharpSvn.SvnTools.GetUriFromWorkingCopy(System.String)">
            <summary>Gets the repository Uri of a path, or <c>null</c> if path is not versioned</summary>
        </member>
        <member name="T:SharpSvn.SvnAprErrorCode">
            <summary>Generated mapping from apr_errno.h</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EDEADLOCK">
            <summary>System error EDEADLOCK</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOSYS">
            <summary>System error ENOSYS</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOLCK">
            <summary>System error ENOLCK</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EDEADLK">
            <summary>System error EDEADLK</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EDOM">
            <summary>System error EDOM</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EMLINK">
            <summary>System error EMLINK</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EROFS">
            <summary>System error EROFS</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EFBIG">
            <summary>System error EFBIG</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOTTY">
            <summary>System error ENOTTY</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EISDIR">
            <summary>System error EISDIR</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENODEV">
            <summary>System error ENODEV</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EFAULT">
            <summary>System error EFAULT</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ECHILD">
            <summary>System error ECHILD</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOEXEC">
            <summary>System error ENOEXEC</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_E2BIG">
            <summary>System error E2BIG</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENXIO">
            <summary>System error ENXIO</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EIO">
            <summary>System error EIO</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ESRCH">
            <summary>System error ESRCH</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EPERM">
            <summary>System error EPERM</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EBUSY">
            <summary>The given lock was busy.</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EMISMATCH">
            <summary>Two passwords do not match.</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOTIMPL">
            <summary>The APR function has not been implemented on this</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EINIT">
            <summary>Ininitalizer value.  If no option has been found, but</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_KEYBASED">
            <summary>APR is using a shared key as the key to the shared memory</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_FILEBASED">
            <summary>APR is using a file name as the key to the shared memory</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ANONYMOUS">
            <summary>APR is using anonymous shared memory</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_NOTFOUND">
            <summary>APR was unable to find the socket in the poll structure</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EOF">
            <summary>APR has encountered the end of the file</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_BADARG">
            <summary>Getopt found an option that is missing an argument</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_BADCH">
            <summary>Getopt found an option not in the option string</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_INCOMPLETE">
            <summary>The operation was incomplete although some processing</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_TIMEUP">
            <summary>The operation did not finish before the timeout</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_CHILD_NOTDONE">
            <summary>The child has not finished executing</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_CHILD_DONE">
            <summary>The child has finished executing</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_NOTDETACH">
            <summary>The thread is not detached</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_DETACH">
            <summary>The thread is detached</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_INPARENT">
            <summary>Program is currently executing in the parent</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_INCHILD">
            <summary>Program is currently executing in the child</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOTENOUGHENTROPY">
            <summary>APR_ENOTENOUGHENTROPY Not enough entropy to continue</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EPROC_UNKNOWN">
            <summary>The given process wasn't recognized by APR</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ESYMNOTFOUND">
            <summary>APR_ESYMNOTFOUND Could not find the requested symbol</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EABOVEROOT">
            <summary>The given path was above the root path.</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EINCOMPLETE">
            <summary>The given path was neither relative nor absolute.</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ERELATIVE">
            <summary>The given path was relative.</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EABSOLUTE">
            <summary>The given path was absolute.</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EDSOOPEN">
            <summary>APR was unable to open the dso object.  For more</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EBADMASK">
            <summary>The specified netmask is invalid</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EBADIP">
            <summary>The specified IP address is invalid</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOSHMAVAIL">
            <summary>There is no more shared memory available</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EGENERAL">
            <summary>General failure (specific information not available)</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOTHDKEY">
            <summary>APR was not given a thread key structure</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOTHREAD">
            <summary>APR was not given a thread structure</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOSOCKET">
            <summary>APR was not given a socket</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOPOLL">
            <summary>APR was not given a poll structure</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOLOCK">
            <summary>APR was not given a lock structure</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENODIR">
            <summary>APR was not given a directory structure</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOTIME">
            <summary>APR was not given a time structure</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOPROC">
            <summary>APR was not given a process structure</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EINVALSOCK">
            <summary>APR was given an invalid socket</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_EBADDATE">
            <summary>APR was given an invalid date</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOPOOL">
            <summary>APR was not provided a pool with which to allocate memory</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_ENOSTAT">
            <summary>APR was unable to perform a stat on the file</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_OS_START_SYSERR">
            <summary>APR_OS_START_SYSERR folds platform-specific system error values into</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_OS_START_EAIERR">
            <summary>APR_OS_START_EAIERR folds EAI_ error codes from getaddrinfo() into</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_OS_START_CANONERR">
            <summary>APR_OS_START_CANONERR is where APR versions of errno values are defined</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_OS_START_USEERR">
            <summary>APR_OS_START_USEERR is obsolete, defined for compatibility only.</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_OS_START_USERERR">
            <summary>APR_OS_START_USERERR are reserved for applications that use APR that</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_UTIL_START_STATUS">
            <summary>APR_UTIL_START_STATUS is where APR-Util starts defining it's</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_OS_START_STATUS">
            <summary>APR_OS_START_STATUS is where the APR specific status codes start.</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_UTIL_ERRSPACE_SIZE">
            <summary>APR_UTIL_ERRSPACE_SIZE is the size of the space that is reserved for</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_OS_ERRSPACE_SIZE">
            <summary>APR_OS_ERRSPACE_SIZE is the maximum number of errors you can fit</summary>
        </member>
        <member name="F:SharpSvn.SvnAprErrorCode.APR_OS_START_ERROR">
            <summary>APR_OS_START_ERROR is where the APR specific error values start.</summary>
        </member>
        <member name="T:SharpSvn.SvnWindowsErrorCode">
            <summary>Generated mapping from winerror.h</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_QUERY_STORAGE_ERROR">
            <summary>
The virtualization storage subsystem has generated an error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_INVALID_FILE_SIZE">
            <summary>
The file size of this virtual hard disk is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_INVALID_SIZE">
            <summary>
The size of the virtual hard disk is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_METADATA_WRITE_FAILURE">
            <summary>
Failed to write to the metadata of the virtual hard disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_METADATA_READ_FAILURE">
            <summary>
Failed to read the metadata of the virtual hard disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_CHILD_PARENT_TIMESTAMP_MISMATCH">
            <summary>
The chain of virtual hard disks is corrupted. The time stamp of the parent virtual hard disk does not match the time stamp of the differencing disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_CHILD_PARENT_ID_MISMATCH">
            <summary>
The chain of virtual hard disks is corrupted. There is a mismatch in the identifiers of the parent virtual hard disk and differencing disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_PARENT_VHD_NOT_FOUND">
            <summary>
The chain of virtual hard disks is broken. The system cannot locate the parent virtual hard disk for the differencing disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_BITMAP_MISMATCH">
            <summary>
The virtual hard disk is corrupted. The block bitmap does not match with the block data present in the virtual hard disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_INVALID_BLOCK_SIZE">
            <summary>
The system does not support this version of the virtual hard disk. The block size is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_BLOCK_ALLOCATION_TABLE_CORRUPT">
            <summary>
The virtual hard disk is corrupted. The block allocation table in the virtual hard disk is corrupt.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_BLOCK_ALLOCATION_FAILURE">
            <summary>
Failed to write to the virtual hard disk failed because the system failed to allocate a new block in the virtual hard disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_SPARSE_HEADER_CORRUPT">
            <summary>
The virtual hard disk is corrupted. The sparse header in the virtual hard disk is corrupt.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_SPARSE_HEADER_UNSUPPORTED_VERSION">
            <summary>
The system does not support this version of the virtual hard disk.This version of the sparse header is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_SPARSE_HEADER_CHECKSUM_MISMATCH">
            <summary>
The virtual hard disk is corrupted. The sparse header checksum does not match the on-disk checksum.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_FORMAT_UNSUPPORTED_VERSION">
            <summary>
The version does not support this version of the file format.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_FORMAT_UNKNOWN">
            <summary>
The system does not recognize the file format of this virtual hard disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_DRIVE_FOOTER_CORRUPT">
            <summary>
The virtual hard disk is corrupted. The virtual hard disk drive footer in the virtual hard disk is corrupted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_DRIVE_FOOTER_CHECKSUM_MISMATCH">
            <summary>
The virtual hard disk is corrupted. The virtual hard disk drive footer checksum does not match the on-disk checksum.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VHD_DRIVE_FOOTER_MISSING">
            <summary>
The virtual hard disk is corrupted. The virtual hard disk drive footer is missing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BCD_NOT_ALL_ENTRIES_SYNCHRONIZED">
            <summary>
Some BCD entries were not synchronized correctly with the firmware.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BCD_TOO_MANY_ELEMENTS">
            <summary>
Entries enumerated have exceeded the allowed threshold.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BCD_NOT_ALL_ENTRIES_IMPORTED">
            <summary>
Some BCD entries were not imported correctly from the BCD store.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_NUMBER_OF_DISKS_INVALID">
            <summary>
The specified number of disks is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PRIMARY_PACK_PRESENT">
            <summary>
A primary pack is already present.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_NO_VALID_LOG_COPIES">
            <summary>
The pack has no valid log copies.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PLEX_NOT_SIMPLE_SPANNED">
            <summary>
The operation is only supported on simple and spanned plexes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_VOLUME_MIRRORED">
            <summary>
The operation is not supported on mirrored volumes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_NUMBER_OF_DISKS_IN_MEMBER_INVALID">
            <summary>
The specified number of disks in a plex member is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_NUMBER_OF_DISKS_IN_PLEX_INVALID">
            <summary>
The specified number of disks in a plex is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PACK_LOG_UPDATE_FAILED">
            <summary>
All disks failed to be updated with the new content of the log.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_NOT_PRIMARY_PACK">
            <summary>
The specified pack is not the primary pack.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PACK_CONFIG_ONLINE">
            <summary>
The configuration of the pack is online.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PACK_CONFIG_OFFLINE">
            <summary>
The configuration of the pack is offline.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_BAD_BOOT_DISK">
            <summary>
The boot disk experienced failures.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DIFFERENT_SECTOR_SIZE">
            <summary>
All disks participating to the volume must have the same sector size.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_NUMBER_OF_EXTENTS_INVALID">
            <summary>
The specified number of extents is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_VOLUME_RETAINED">
            <summary>
The specified volume already has a retain partition.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_VOLUME_OFFLINE">
            <summary>
The specified volume is offline.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_VOLUME_NOT_RETAINED">
            <summary>
The specified volume does not have a retain partition.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_VOLUME_NOT_MIRRORED">
            <summary>
The operation is only supported on mirrored volumes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_VOLUME_LENGTH_NOT_SECTOR_SIZE_MULTIPLE">
            <summary>
The specified size for the volume is not a multiple of the sector size.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_VOLUME_LENGTH_INVALID">
            <summary>
The specified volume length is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_VOLUME_ID_INVALID">
            <summary>
The specified volume id is invalid. There are no volumes with the specified volume id.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_VOLUME_CONTAINS_MISSING_DISK">
            <summary>
The specified volume contains a missing disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_UNEXPECTED_DISK_LAYOUT_CHANGE">
            <summary>
An unexpected layout change occurred outside of the volume manager.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_TRANSACTION_IN_PROGRESS">
            <summary>
There is currently a transaction in process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_TOO_MANY_NOTIFICATION_REQUESTS">
            <summary>
There is already a pending request for notifications. Wait for the existing request to return before requesting for more notifications.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_STRUCTURE_SIZE_INVALID">
            <summary>
The Size fields in the VM_VOLUME_LAYOUT input structure are incorrectly set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PLEX_NOT_SIMPLE">
            <summary>
The operation is only supported on simple plexes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PLEX_NOT_RAID5">
            <summary>
The operation is only supported on RAID-5 plexes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PLEX_TYPE_INVALID">
            <summary>
The specified plex type is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PLEX_REGENERATING">
            <summary>
The specified plex is currently regenerating.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PLEX_MISSING">
            <summary>
The specified plex is missing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PLEX_LAST_ACTIVE">
            <summary>
The specified plex is the last active plex in the volume. The plex cannot be removed or else the volume will go offline.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PLEX_INDEX_INVALID">
            <summary>
The specified plex index is greater or equal than the number of plexes in the volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PLEX_INDEX_DUPLICATE">
            <summary>
The same plex index was specified more than once.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PLEX_IN_SYNC">
            <summary>
The specified plex is already in-sync with the other active plexes. It does not need to be regenerated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PARTITION_UPDATE_FAILED">
            <summary>
Failed to update the disk's partition layout.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PARTITION_STYLE_INVALID">
            <summary>
The specified disk has an unsupported partition style. Only MBR and GPT partition styles are supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PACK_WITHOUT_QUORUM">
            <summary>
The pack does not have a quorum of healthy disks.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PACK_HAS_QUORUM">
            <summary>
The specified pack already has a quorum of healthy disks.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PACK_OFFLINE">
            <summary>
The specified pack is offline.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PACK_NAME_INVALID">
            <summary>
The specified pack name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PACK_INVALID">
            <summary>
The specified pack is the invalid pack. The operation cannot complete with the invalid pack.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PACK_ID_INVALID">
            <summary>
The specified pack id is invalid. There are no packs with the specified pack id.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PACK_DUPLICATE">
            <summary>
The specified source and target packs are identical.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_NUMBER_OF_PLEXES_INVALID">
            <summary>
The specified number of plexes is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_NUMBER_OF_MEMBERS_INVALID">
            <summary>
The specified number of members is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_NOTIFICATION_RESET">
            <summary>
The notifications have been reset. Notifications for the current user are invalid. Unregister and re-register for notifications.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_NO_SUCH_USER">
            <summary>
The specified notification user does not exist. Failed to unregister user for notifications.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_NO_REGISTERED_USERS">
            <summary>
There are currently no registered users for notifications. The task number is irrelevant unless there are registered users.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_ALL_DISKS_FAILED">
            <summary>
All disks belonging to the pack failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_MEMBER_REGENERATING">
            <summary>
The specified member is already regenerating.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_MEMBER_NOT_DETACHED">
            <summary>
The specified member is not detached. Cannot replace a member which is not detached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_MEMBER_MISSING">
            <summary>
The specified member is missing. It cannot be regenerated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_MEMBER_INDEX_INVALID">
            <summary>
The specified member index is greater or equal than the number of members in the volume plex.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_MEMBER_INDEX_DUPLICATE">
            <summary>
The same member index was specified more than once.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_MEMBER_IN_SYNC">
            <summary>
The specified member is already in-sync with the other active members. It does not need to be regenerated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_MAXIMUM_REGISTERED_USERS">
            <summary>
There is already a maximum number of registered users.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_INTERLEAVE_LENGTH_INVALID">
            <summary>
The specified interleave length is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_FAULT_TOLERANT_NOT_SUPPORTED">
            <summary>
The system does not support fault tolerant volumes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_EXTENT_VOLUME_LENGTHS_DO_NOT_MATCH">
            <summary>
The specified extent lengths cannot be used to construct a volume with specified length.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_EXTENT_OVERLAPS_EBR_PARTITION">
            <summary>
The specified parition overlaps an EBR (the first track of an extended partition on a MBR disks).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_EXTENT_NOT_SECTOR_ALIGNED">
            <summary>
The specifed volume extent is not sector aligned.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_EXTENT_NOT_IN_PUBLIC_REGION">
            <summary>
The specified volume extent is not within the public region of the disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_EXTENT_NOT_CONTIGUOUS">
            <summary>
The specified volume is retained and can only be extended into a contiguous extent. The specified extent to grow the volume is not contiguous with the specified volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_EXTENT_ALREADY_USED">
            <summary>
The specified extent is already used by other volumes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DYNAMIC_DISK_NOT_SUPPORTED">
            <summary>
Dynamic disks are not supported on this system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_PLEXES">
            <summary>
A disk in the volume layout provides extents to more than one plex.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_MEMBERS">
            <summary>
A disk in the volume layout provides extents to more than one member of a plex.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_SET_NOT_CONTAINED">
            <summary>
The specified disk set contains volumes which exist on disks outside of the set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_SECTOR_SIZE_INVALID">
            <summary>
The specified disk has an invalid sector size.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_REVECTORING_FAILED">
            <summary>
The force revectoring of bad sectors failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_NOT_ENOUGH_SPACE">
            <summary>
There is not enough usable space for this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_NOT_EMPTY">
            <summary>
The specified disk is not empty.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_MISSING">
            <summary>
The specified disk is missing. The operation cannot complete on a missing disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_LAYOUT_TOO_MANY_PARTITIONS">
            <summary>
The disk layout contains more than the maximum number of supported partitions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_LAYOUT_PRIMARY_BETWEEN_LOGICAL_PARTITIONS">
            <summary>
The disk layout contains primary partitions in between logical drives. This is an invalid disk layout.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_LAYOUT_PARTITIONS_TOO_SMALL">
            <summary>
The disk layout contains partitions which are samller than the minimum size.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_LAYOUT_NOT_CYLINDER_ALIGNED">
            <summary>
The disk layout contains partitions which are not cylinder aligned.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_LAYOUT_NON_BASIC_BETWEEN_BASIC_PARTITIONS">
            <summary>
The disk layout contains non-basic partitions which appear after basic paritions. This is an invalid disk layout.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_LAYOUT_INVALID">
            <summary>
The specified disk has an invalid disk layout.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_LAST_VOTER">
            <summary>
The specified disk(s) cannot be removed since it is the last remaining voter.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_INVALID">
            <summary>
The specified disk is an invalid disk. Operation cannot complete on an invalid disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_ID_INVALID">
            <summary>
The specified disk id is invalid. There are no disks with the specified disk id.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_DYNAMIC">
            <summary>
The disk is already dynamic.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_DUPLICATE">
            <summary>
The same disk was specified more than once in the migration list.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_CONTAINS_NON_SIMPLE_VOLUME">
            <summary>
The disk contains non-simple volumes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_PACK_CONFIG_UPDATE_FAILED">
            <summary>
A majority of disks failed to be updated with the new configuration.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_CONFIGURATION_NOT_IN_SYNC">
            <summary>
The configuration on the disk is not insync with the in-memory configuration.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DISK_CONFIGURATION_CORRUPTED">
            <summary>
The configuration data on the disk is corrupted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_DATABASE_FULL">
            <summary>
The configuration database is full.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_INCOMPLETE_DISK_MIGRATION">
            <summary>
One or more disks were not fully migrated to the target pack. They may or may not require reimport after fixing the hardware problems.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLMGR_INCOMPLETE_REGENERATION">
            <summary>
The regeneration operation was not able to copy all data from the active plexes due to bad sectors.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_REMOTE_NODE_PARENT_GPA_PAGES_USED">
            <summary>
A virtual machine is running with its memory allocated across multiple NUMA nodes. This does not indicate a problem unless the performance of your virtual machine is unusually slow. If you are experiencing performance problems, you may need to modify the NUMA configuration. For detailed information, see http://go.microsoft.com/fwlink/?LinkId=92362.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_SAVED_STATE_INCOMPATIBLE">
            <summary>
Cannot restore this virtual machine to the saved state because of hypervisor incompatibility. Delete the saved state data and then try to start the virtual machine.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_SAVED_STATE_UNRECOGNIZED_ITEM">
            <summary>
Cannot restore this virtual machine because an item read from the saved state data is not recognized. Delete the saved state data and then try to start the virtual machine.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_SAVED_STATE_CORRUPT">
            <summary>
Cannot restore this virtual machine because the saved state data cannot be read. Delete the saved state data and then try to start the virtual machine.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_MBP_COUNT_EXCEEDED_LIMIT">
            <summary>
Cannot create the memory block for the virtualization infrastructure driver because the requested number of pages exceeded the limit. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_MBP_ALREADY_LOCKED_USING_RESERVED_PAGE">
            <summary>
Cannot lock or map the memory block page for the virtualization infrastructure driver because it has already been locked using a reserve page set page. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_RESERVE_PAGE_SET_TOO_SMALL">
            <summary>
The reserve page set for the virtualization infrastructure driver is too small to use in the lock request. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_RESERVE_PAGE_SET_IS_BEING_USED">
            <summary>
Cannot destroy or reuse the reserve page set for the virtualization infrastructure driver because it is in use. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_INVALID_CHILD_GPA_PAGE_SET">
            <summary>
The lock or unlock request uses an invalid guest operating system memory address. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_MMIO_RANGE_DESTROYED">
            <summary>
The memory mapped I/O for this page range no longer exists. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_MB_PROPERTY_ALREADY_SET_RESET">
            <summary>
Cannot set or reset the memory block property more than once for the virtualization infrastructure driver. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_KM_INTERFACE_ALREADY_INITIALIZED">
            <summary>
This kernel mode interface for the virtualization infrastructure driver has already been initialized. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_EXCEEDED_KM_CONTEXT_COUNT_LIMIT">
            <summary>
The maximum number of kernel mode clients for the virtualization infrastructure driver has been reached. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_INVALID_PROCESSOR_STATE">
            <summary>
Invalid state for the virtual processor. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_STOP_PENDING">
            <summary>
Cannot stop the virtual processor immediately because of a pending intercept.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_VIRTUAL_PROCESSOR_LIMIT_EXCEEDED">
            <summary>
Cannot add a virtual processor to the partition because the maximum has been reached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_MESSAGE_QUEUE_CLOSED">
            <summary>
The message queue for the virtualization infrastructure driver has been closed. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_MBPS_ARE_LOCKED">
            <summary>
Notifications cannot be created on the memory block because it is use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_INVALID_PPM_HANDLE">
            <summary>
The handle is not a valid parent partition mapping handle for the virtualization infrastructure driver.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_MEMORY_BLOCK_LOCK_COUNT_EXCEEDED">
            <summary>
The request to lock or map a memory block page failed because the virtualization infrastructure driver memory block limit has been reached. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_NO_MEMORY_BLOCK_NOTIFICATION_QUEUE">
            <summary>
Cannot install client notifications because no message queue for the virtualization infrastructure driver is associated with the memory block.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_INVALID_GPA_RANGE_HANDLE">
            <summary>
The handle is not a valid page range handle for the virtualization infrastructure driver.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_INVALID_MESSAGE_QUEUE_HANDLE">
            <summary>
The handle is not a valid message queue handle for the virtualization infrastructure driver.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_PAGE_RANGE_OVERFLOW">
            <summary>
The request exceeded the memory block page limit for the virtualization infrastructure driver. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_INVALID_MEMORY_BLOCK_HANDLE">
            <summary>
The handle is not a valid memory block handle for the virtualization infrastructure driver.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_NOTIFICATION_QUEUE_ALREADY_ASSOCIATED">
            <summary>
The memory block for the virtualization infrastructure driver is already associated with a message queue.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_INVALID_NUMA_NODE_INDEX">
            <summary>
The non-uniform memory access (NUMA) node index does not match a valid index in the system NUMA topology.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_INVALID_NUMA_SETTINGS">
            <summary>
The non-uniform memory access (NUMA) node settings do not match the system NUMA topology. In order to start the virtual machine, you will need to modify the NUMA configuration. For detailed information, see http://go.microsoft.com/fwlink/?LinkId=92362.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_CHILD_GPA_PAGE_SET_CORRUPTED">
            <summary>
Cannot unlock the page array for the guest operating system memory address because it does not match a previous lock request. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_MB_STILL_REFERENCED">
            <summary>
The memory block for the virtualization infrastructure driver is still being used and cannot be destroyed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_EXCEEDED_MBP_ENTRY_MAP_LIMIT">
            <summary>
The memory block page for the virtualization infrastructure driver cannot be mapped because the page map limit has been reached. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_MESSAGE_QUEUE_ALREADY_EXISTS">
            <summary>
A message queue with the same name already exists for the virtualization infrastructure driver.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_PARTITION_NAME_NOT_FOUND">
            <summary>
The virtualization infrastructure driver has encountered an error. Could not find the requested partition. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_PARTITION_DOES_NOT_EXIST">
            <summary>
The virtualization infrastructure driver has encountered an error. The requested partition does not exist. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_PARTITION_ALREADY_EXISTS">
            <summary>
Cannot create the partition for the virtualization infrastructure driver because another partition with the same name already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_MESSAGE_QUEUE_NAME_TOO_LONG">
            <summary>
The message queue name of the virtualization infrastructure driver exceeds the maximum.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_PARTITION_NAME_TOO_LONG">
            <summary>
The partition name of the virtualization infrastructure driver exceeds the maximum.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_INVALID_OBJECT_NAME">
            <summary>
The name of the partition or message queue for the virtualization infrastructure driver is invalid. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_HANDLER_NOT_PRESENT">
            <summary>
No handler exists to handle the message for the virtualization infrastructure driver. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_QUEUE_FULL">
            <summary>
The message queue for the virtualization infrastructure driver is full and cannot accept new messages. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_TOO_MANY_HANDLERS">
            <summary>
The number of registered handlers for the virtualization infrastructure driver exceeded the maximum. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VID_DUPLICATE_HANDLER">
            <summary>
The handler for the virtualization infrastructure driver is already registered. Restarting the virtual machine may fix the problem. If the problem persists, try restarting the physical computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_NOT_PRESENT">
            <summary>
No hypervisor is present on this system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_FEATURE_UNAVAILABLE">
            <summary>
A hypervisor feature is not available to the user.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_NO_RESOURCES">
            <summary>
There are not enough resources to complete the operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_INACTIVE">
            <summary>
The physical connection being used for debuggging has not recorded any receive activity since the last operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_NO_DATA">
            <summary>
An attempt to retrieve debugging data failed because none was available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_INVALID_PROXIMITY_DOMAIN_INFO">
            <summary>
The proximity domain information is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_OBJECT_IN_USE">
            <summary>
The hypervisor could not perform the operation because the object or value was either already in use or being used for a purpose that would not permit completing the operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_INVALID_SYNIC_STATE">
            <summary>
The hypervisor could not complete the operation because a required feature of the synthetic interrupt controller (SynIC) was disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_INVALID_SAVE_RESTORE_STATE">
            <summary>
The indicated partition is not in a valid state for saving or restoring.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_ACKNOWLEDGED">
            <summary>
The previous virtual interrupt has already been acknowledged.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_NOT_ACKNOWLEDGED">
            <summary>
The previous virtual interrupt has not been acknowledged.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_INSUFFICIENT_BUFFERS">
            <summary>
Not enough buffers were supplied to send a message.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_INVALID_CONNECTION_ID">
            <summary>
The hypervisor could not perform the operation because the specified connection identifier is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_INVALID_PORT_ID">
            <summary>
The hypervisor could not perform the operation because the specified port identifier is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_INVALID_VP_INDEX">
            <summary>
The hypervisor could not perform the operation because the specified VP index is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_INVALID_PARTITION_ID">
            <summary>
A partition with the specified partition Id does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_PARTITION_TOO_DEEP">
            <summary>
The maximum partition depth has been exceeded for the partition hierarchy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_INSUFFICIENT_MEMORY">
            <summary>
There is not enough memory in the hypervisor pool to complete the operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_PROPERTY_VALUE_OUT_OF_RANGE">
            <summary>
The specified value of a partition property is out of range or violates an invariant.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_UNKNOWN_PROPERTY">
            <summary>
The hypervisor does not recognize the specified partition property.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_OPERATION_DENIED">
            <summary>
The operation is not allowed in the current state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_INVALID_PARTITION_STATE">
            <summary>
The hypervisor could not perform the operation because the partition is entering or in an invalid state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_ACCESS_DENIED">
            <summary>
Access to the specified object was denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_INVALID_PARAMETER">
            <summary>
The hypervisor could not perform the operation beacuse an invalid parameter was specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_INVALID_ALIGNMENT">
            <summary>
The hypervisor could not perform the operation beacuse a parameter has an invalid alignment.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_INVALID_HYPERCALL_INPUT">
            <summary>
The hypervisor does not support the operation because the encoding for the hypercall input register is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HV_INVALID_HYPERCALL_CODE">
            <summary>
The hypervisor does not support the operation because the specified hypercall code is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_INDICATION_REQUIRED">
            <summary>
The request will be completed later by NDIS status indication.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_DOT11_POWER_STATE_INVALID">
            <summary>
The wireless local area network interface is power down and doesn't support the requested operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_DOT11_MEDIA_IN_USE">
            <summary>
The wireless local area network interface is busy and can not perform the requested operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_DOT11_AUTO_CONFIG_ENABLED">
            <summary>
The wireless local area network interface is in auto configuration mode and doesn't support the requested parameter change operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_LOW_POWER_STATE">
            <summary>
The miniport adapter is in low power state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_INVALID_PORT_STATE">
            <summary>
The current state of the specified port on this network interface does not support the requested operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_INVALID_PORT">
            <summary>
The specified port does not exist on this network interface.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_UNSUPPORTED_REVISION">
            <summary>
The revision number specified in the structure is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_INTERFACE_NOT_FOUND">
            <summary>
Network interface was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_PAUSED">
            <summary>
The offload operation on the network interface has been paused.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_INVALID_DEVICE_REQUEST">
            <summary>
The specified request is not a valid operation for the target device.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_INVALID_ADDRESS">
            <summary>
The network address used in the request is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_MEDIA_DISCONNECTED">
            <summary>
The I/O operation failed because network media is disconnected or wireless access point is out of range.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_RESOURCE_CONFLICT">
            <summary>
An attempt to allocate a hardware resource failed because the resource is used by another component.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_ALREADY_MAPPED">
            <summary>
An attempt was made to map a file that is alreay mapped.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_ERROR_READING_FILE">
            <summary>
An error occured while NDIS tried to map the file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_FILE_NOT_FOUND">
            <summary>
An attempt was made to map a file that can not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_GROUP_ADDRESS_IN_USE">
            <summary>
An attempt was made to remove a token ring group address that is in use by other components.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_UNSUPPORTED_MEDIA">
            <summary>
Network interface does not support this media type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_ADAPTER_REMOVED">
            <summary>
The network interface has been removed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_INVALID_OID">
            <summary>
Network interface does not support this OID (Object Identifier)
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_BUFFER_TOO_SHORT">
            <summary>
The length of buffer submitted for this operation is too small.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_INVALID_DATA">
            <summary>
The data used for this operation is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_INVALID_LENGTH">
            <summary>
The length of the buffer submitted for this operation is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_ADAPTER_NOT_READY">
            <summary>
Network interface is not ready to complete this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_INVALID_PACKET">
            <summary>
An attempt was made to send an invalid packet on a network interface.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_NOT_SUPPORTED">
            <summary>
Netword interface does not support this request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_RESET_IN_PROGRESS">
            <summary>
Network interface can not process the request because it is being reset.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_REQUEST_ABORTED">
            <summary>
Netowork interface aborted the request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_MULTICAST_NOT_FOUND">
            <summary>
At attempt was made to remove a multicast address that was never added.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_MULTICAST_EXISTS">
            <summary>
An attempt was made to add a duplicate multicast address to the list.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_MULTICAST_FULL">
            <summary>
The multicast list on the network interface is full.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_DEVICE_FAILED">
            <summary>
Network interface has encountered an internal unrecoverable failure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_OPEN_FAILED">
            <summary>
Failed to open the network interface.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_ADAPTER_NOT_FOUND">
            <summary>
Failed to find the network interface or network interface is not ready.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_BAD_CHARACTERISTICS">
            <summary>
An invalid characteristics table was used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_BAD_VERSION">
            <summary>
An invalid version was specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NDIS_INTERFACE_CLOSING">
            <summary>
The binding to the network interface is being closed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INVALID_TRANSFORM_COMBINATION">
            <summary>
The combination of IPsec transform types is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INCOMPATIBLE_CIPHER_TRANSFORM">
            <summary>
The IPsec cipher transform is not compatible with the policy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_DROP_NOICMP">
            <summary>
The packet should be dropped, no ICMP should be sent.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INVALID_CIPHER_TRANSFORM">
            <summary>
The IPsec cipher transform is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INVALID_AUTH_TRANSFORM">
            <summary>
The IPsec authentication transform is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_CALLOUT_NOTIFICATION_FAILED">
            <summary>
The notification function for a callout returned an error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_TOO_MANY_SUBLAYERS">
            <summary>
The maximum number of sublayers has been reached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INVALID_PARAMETER">
            <summary>
The parameter is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_PROVIDER_CONTEXT_MISMATCH">
            <summary>
The provider context is of the wrong type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_NEVER_MATCH">
            <summary>
The enumeration template or subscription will never match any objects.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_EM_NOT_SUPPORTED">
            <summary>
An IKE policy cannot contain an Extended Mode policy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INCOMPATIBLE_DH_GROUP">
            <summary>
The Diffie-Hellman group is not compatible with the policy type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INCOMPATIBLE_AUTH_METHOD">
            <summary>
The authentication method is not compatible with the policy type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_CONTEXT_INCOMPATIBLE_WITH_CALLOUT">
            <summary>
The raw context or the provider context is not compatible with the callout.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_CONTEXT_INCOMPATIBLE_WITH_LAYER">
            <summary>
The raw context or the provider context is not compatible with the layer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_ACTION_INCOMPATIBLE_WITH_SUBLAYER">
            <summary>
The action type is not compatible with the sublayer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_ACTION_INCOMPATIBLE_WITH_LAYER">
            <summary>
The action type is not compatible with the layer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_DUPLICATE_KEYMOD">
            <summary>
A policy cannot contain the same keying module more than once.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_DUPLICATE_CONDITION">
            <summary>
A filter cannot contain multiple conditions operating on a single field.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_RESERVED">
            <summary>
A reserved field is non-zero.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_OUT_OF_BOUNDS">
            <summary>
An integer value is outside the allowed range.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_TYPE_MISMATCH">
            <summary>
An FWP_VALUE or FWPM_CONDITION_VALUE is of the wrong type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_MATCH_TYPE_MISMATCH">
            <summary>
A filter condition contains a match type that is not compatible with the operands.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INVALID_WEIGHT">
            <summary>
The filter weight is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INVALID_ACTION_TYPE">
            <summary>
The action type is not one of the allowed action types for a filter.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_NULL_DISPLAY_NAME">
            <summary>
The displayData.name field cannot be null.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_ZERO_LENGTH_ARRAY">
            <summary>
An array that must contain at least one element is zero length.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INVALID_INTERVAL">
            <summary>
The time interval is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INVALID_RANGE">
            <summary>
An FWP_RANGE is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INVALID_NET_MASK">
            <summary>
A network mask is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INVALID_FLAGS">
            <summary>
The flags field contains an invalid value.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INVALID_ENUMERATOR">
            <summary>
An enumerator is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_NULL_POINTER">
            <summary>
A required pointer is null.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INCOMPATIBLE_SA_STATE">
            <summary>
The call is not allowed for the current security association state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_TRAFFIC_MISMATCH">
            <summary>
The traffic parameters do not match those for the security association context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_NOTIFICATION_DROPPED">
            <summary>
A notification could not be delivered because a message queue is at its maximum capacity.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_TOO_MANY_CALLOUTS">
            <summary>
The maximum number of callouts has been reached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_BUILTIN_OBJECT">
            <summary>
The object is built in so cannot be deleted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_LIFETIME_MISMATCH">
            <summary>
The call tried to associate two objects with incompatible lifetimes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_KM_CLIENTS_ONLY">
            <summary>
The call is allowed for kernel-mode callers only.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INCOMPATIBLE_LAYER">
            <summary>
The operation is not supported by the specified layer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_NET_EVENTS_DISABLED">
            <summary>
Collection of network diagnostic events is disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_TIMEOUT">
            <summary>
The call timed out while waiting to acquire the transaction lock.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_INCOMPATIBLE_TXN">
            <summary>
The call is not allowed from within a read-only transaction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_SESSION_ABORTED">
            <summary>
The session has been cancelled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_TXN_ABORTED">
            <summary>
The explicit transaction has been forcibly cancelled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_TXN_IN_PROGRESS">
            <summary>
The call is not allowed from within an explicit transaction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_NO_TXN_IN_PROGRESS">
            <summary>
The call must be made from within an explicit transaction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_WRONG_SESSION">
            <summary>
The call was made from the wrong session so cannot be completed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_DYNAMIC_SESSION_IN_PROGRESS">
            <summary>
The call is not allowed from within a dynamic session.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_IN_USE">
            <summary>
The object is referenced by other objects so cannot be deleted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_ALREADY_EXISTS">
            <summary>
An object with that GUID or LUID already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_NOT_FOUND">
            <summary>
The object does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_SUBLAYER_NOT_FOUND">
            <summary>
The sublayer does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_PROVIDER_CONTEXT_NOT_FOUND">
            <summary>
The provider context does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_PROVIDER_NOT_FOUND">
            <summary>
The provider does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_LAYER_NOT_FOUND">
            <summary>
The layer does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_FILTER_NOT_FOUND">
            <summary>
The filter does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_CONDITION_NOT_FOUND">
            <summary>
The filter condition does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FWP_E_CALLOUT_NOT_FOUND">
            <summary>
The callout does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_MOR_FAILED">
            <summary>
The system firmware failed to enable clearing of system memory on reboot.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NO_AUTOUNLOCK_MASTER_KEY">
            <summary>
The auto-unlock master key was not available from the operating system volume. Retry the operation using the BitLocker WMI interface.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NOT_ALLOWED_IN_VERSION">
            <summary>
BitLocker Drive Encryption can only be used for recovery purposes in this version of Windows.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_BCD_APPLICATIONS_PATH_INCORRECT">
            <summary>
The path specified in the Boot Configuration Data (BCD) for a BitLocker Drive Encryption integrity-protected application is incorrect. Please verify and correct your BCD settings and try again.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_RAW_BLOCKED">
            <summary>
BitLocker Drive Encryption cannot enter raw access mode for this volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_RAW_ACCESS">
            <summary>
No action was taken as BitLocker Drive Encryption is in raw access mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_DEBUGGER_ENABLED">
            <summary>
Boot debugging is enabled. Run bcdedit to turn it off.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_REBOOT_REQUIRED">
            <summary>
No action was taken as a system reboot is required.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_DRY_RUN_FAILED">
            <summary>
The BitLocker encryption key could not be obtained.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_TOKEN_NOT_IMPERSONATED">
            <summary>
The access token associated with the current thread is not an impersonated token.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_FS_MOUNTED">
            <summary>
This operation cannot be performed while the volume is in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NOT_ON_STACK">
            <summary>
Critical BitLocker Drive Encryption system files are not available. Use Windows Startup Repair to restore files.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NO_LICENSE">
            <summary>
This Windows license does not support BitLocker Drive Encryption. To use BitLocker Drive Encryption, please upgrade your Windows license.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_FIRMWARE_TYPE_NOT_SUPPORTED">
            <summary>
BitLocker Drive Encryption cannot be enabled on this computer. Contact the computer manufacturer for BIOS upgrade instructions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_FS_NOT_EXTENDED">
            <summary>
The file system does not extend to the end of the volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_FIPS_DISABLE_PROTECTION_NOT_ALLOWED">
            <summary>
The group policy setting requiring FIPS compliance prevented BitLocker from being disabled. Please contact your domain administrator for more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_AUTH_INVALID_CONFIG">
            <summary>
The Boot Configuration Data (BCD) settings have changed since BitLocker was enabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_AUTH_INVALID_APPLICATION">
            <summary>
A boot application has changed since BitLocker was enabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_PIN_INVALID">
            <summary>
The BitLocker encryption key could not be obtained from the Trusted Platform Module (TPM) and PIN.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_TPM_NO_VMK">
            <summary>
The BitLocker encryption key could not be obtained from the Trusted Platform Module (TPM).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_TPM_INVALID_PCR">
            <summary>
The Trusted Platform Module (TPM) was not able to unlock the volume because the system boot information changed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NOT_ALLOWED_IN_SAFE_MODE">
            <summary>
BitLocker Drive Encryption can only be used for recovery purposes in Safe-Mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_TPM_DISABLED">
            <summary>
The Trusted Platform Module (TPM) is disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_KEYFILE_NO_VMK">
            <summary>
The BitLocker encryption key could not be obtained from the startup key or recovery password.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_KEYFILE_INVALID">
            <summary>
The BitLocker startup key or recovery password file is corrupt or invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_KEYFILE_NOT_FOUND">
            <summary>
The BitLocker startup key or recovery password could not be read from the USB device. Ensure the USB device is plugged into the computer, then turn on BitLocker and try again. If the problem persists contact the computer manufacturer for BIOS upgrade instructions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NO_PROTECTORS_TO_TEST">
            <summary>
No TPM protectors exist on the volume to perform the hardware test.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_INVALID_PROTECTOR_TYPE">
            <summary>
The specified key protector is not of the correct type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NOT_DECRYPTED">
            <summary>
The volume must be fully decrypted to complete this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_FIPS_PREVENTS_EXTERNAL_KEY_EXPORT">
            <summary>
The group policy setting requiring FIPS compliance prevented the recovery password from being saved. Please contact your domain administrator for more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_FIPS_PREVENTS_RECOVERY_PASSWORD">
            <summary>
The group policy setting requiring FIPS compliance prevented the recovery password from being generated or used. Please contact your domain administrator for more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_FIPS_RNG_CHECK_FAILED">
            <summary>
The random number generator check test failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_INVALID_PASSWORD_FORMAT">
            <summary>
The format of the recovery password file is invalid. Select another recovery password and try again.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_INVALID_KEY_FORMAT">
            <summary>
The recovery password file on the USB device is corrupt. Try another USB device.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_PROTECTOR_NOT_FOUND">
            <summary>
The specified key protector was not found on the volume. Try another key protector.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_RELATIVE_PATH">
            <summary>
The file cannot be saved to a relative path.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_PROTECTOR_EXISTS">
            <summary>
An instance of this key protector already exists on the volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_BOOTABLE_CDDVD">
            <summary>
BitLocker Drive Encryption detected bootable media (CD, DVD, or USB) in the computer. Remove the media and restart the computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_CANNOT_ENCRYPT_NO_KEY">
            <summary>
A key must be specified before encryption may begin.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_CANNOT_SET_FVEK_ENCRYPTED">
            <summary>
The volume encryption algorithm and key cannot be set on an encrypted volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_POLICY_PASSWORD_REQUIRED">
            <summary>
Group policy requires a recovery password before encryption may begin.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_WRONG_SYSTEM_FS">
            <summary>
BitLocker requires the file system to be NTFS. Convert the volume to NTFS, then enable BitLocker.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_WRONG_BOOTSECTOR">
            <summary>
The system partition boot sector does not perform TPM measurements.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_AUTOUNLOCK_ENABLED">
            <summary>
BitLocker Drive Encryption cannot be turned off. Please turn off the auto unlock on all other volumes before turning off BitLocker on the current volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NOT_OS_VOLUME">
            <summary>
The volume specified is not the operating system volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_FAILED_AUTHENTICATION">
            <summary>
The recovery information provided does not match required recovery information to unlock the volume. Confirm the information and try again.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_FAILED_SECTOR_SIZE">
            <summary>
The volume encryption algorithm cannot be used on this sector size.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_TPM_SRK_AUTH_NOT_ZERO">
            <summary>
The authorization data for the Storage Root Key (SRK) of the Trusted Platform Module (TPM) is not zero and is therefore incompatible with BitLocker.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_OVERLAPPED_UPDATE">
            <summary>
The control block for the encrypted volume was updated by another thread. Try again.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_FOREIGN_VOLUME">
            <summary>
This volume cannot be bound to a TPM.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_RECOVERY_KEY_REQUIRED">
            <summary>
A recovery key protector is required.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_PROTECTION_DISABLED">
            <summary>
All protectors are effectively disabled (clear key exists).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_OS_NOT_PROTECTED">
            <summary>
The operating system volume is not protected by BitLocker Drive Encryption.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_VOLUME_BOUND_ALREADY">
            <summary>
The volume is already bound to the system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_CLUSTERING_NOT_SUPPORTED">
            <summary>
Cluster configurations are not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_KEY_REQUIRED">
            <summary>
One or more key protectors are required for this volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_CONV_WRITE">
            <summary>
A write operation failed while converting the volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_CONV_READ">
            <summary>
A read operation failed while converting the volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_AD_INSUFFICIENT_BUFFER">
            <summary>
The buffer supplied to a function was insufficient to contain the returned data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NOT_DATA_VOLUME">
            <summary>
The volume specified is not a data volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_TPM_NOT_OWNED">
            <summary>
You must take ownership of the Trusted Platform Module (TPM).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_VOLUME_NOT_BOUND">
            <summary>
Volume is not bound to the system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_BAD_DATA">
            <summary>
Data supplied is malformed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NOT_SUPPORTED">
            <summary>
This volume cannot be encrypted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_FAILED_BAD_FS">
            <summary>
The file system is corrupt. Run CHKDSK.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_FAILED_WRONG_FS">
            <summary>
The volume cannot be encrypted because the file system is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_SYSTEM_VOLUME">
            <summary>
The volume cannot be encrypted because it contains system boot information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_TOO_SMALL">
            <summary>
The volume cannot be encrypted because it does not have enough free space.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_BAD_INFORMATION">
            <summary>
The control block for the encrypted volume is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_AD_GUID_NOT_FOUND">
            <summary>
The specified GUID could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_AD_ATTR_NOT_SET">
            <summary>
The attribute was not set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_AD_NO_VALUES">
            <summary>
The attribute read from Active Directory has no (zero) values.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_AD_INVALID_DATASIZE">
            <summary>
The size of the data obtained from Active Directory was not expected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_AD_INVALID_DATATYPE">
            <summary>
The type of the data obtained from Active Directory was not expected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_AD_SCHEMA_NOT_INSTALLED">
            <summary>
The Active Directory Domain Services forest does not contain the required attributes and classes to host BitLocker Drive Encryption or Trusted Platform Module information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_ACTION_NOT_ALLOWED">
            <summary>
BitLocker Drive Encryption could not perform requested action. This condition may occur when two requests are issued at the same time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NOT_ACTIVATED">
            <summary>
BitLocker Drive Encryption is not enabled on this volume. Turn on BitLocker.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_SECURE_KEY_REQUIRED">
            <summary>
No secure key protector has been defined.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_WRONG_BOOTMGR">
            <summary>
You have an incompatible boot manager. Update the boot manager (BOOTMGR).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NO_BOOTMGR_METRIC">
            <summary>
You have an incompatible boot sector. Update the boot manager (BOOTMGR).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NO_BOOTSECTOR_METRIC">
            <summary>
If there is a bootable CD or DVD in your computer, remove it, restart the computer and turn on BitLocker again. If the problem persists contact the computer manufacturer for BIOS upgrade instructions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NO_MBR_METRIC">
            <summary>
The BIOS did not correctly communicate with the Master Boot Record (MBR). Contact the computer manufacturer for BIOS upgrade instructions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NO_TPM_BIOS">
            <summary>
The BIOS did not correctly communicate with the TPM. Contact the computer manufacturer for BIOS upgrade instructions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_NOT_ENCRYPTED">
            <summary>
The volume is not encrypted, no key is available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FVE_E_LOCKED_VOLUME">
            <summary>
This volume is locked by BitLocker Drive Encryption. Return to the control panel to unlock volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_CABAPI_FAILURE">
            <summary>
An error occured while attemption to compress or extract the data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_RULES_MANAGER_FAILED">
            <summary>
The execution of the Rules Manager failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_TASKSCHED_CHANNEL_NOT_ENABLED">
            <summary>
The Event Log channel Microsoft-Windows-TaskScheduler must be enabled to perform this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_PLA_CHANNEL_NOT_ENABLED">
            <summary>
The Event Log channel Microsoft-Windows-Diagnosis-PLA/Operational must be enabled to perform this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_INVALID_SESSION_NAME">
            <summary>
The session name provided is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_EXE_FULL_PATH_REQUIRED">
            <summary>
When specifying the executable that you want to trace, you must specify a full path to the executable and not just a filename.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_NO_DUPLICATES">
            <summary>
Duplicate items are not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_REPORT_WAIT_TIMEOUT">
            <summary>
The wait for the report generation tool to finish has timed out.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_DC_START_WAIT_TIMEOUT">
            <summary>
The wait for the Data Collector to start has timed out.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_DCS_START_WAIT_TIMEOUT">
            <summary>
The wait for the Data Collector Set start notification has timed out.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_DC_ALREADY_EXISTS">
            <summary>
Data Collector already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_EXE_PATH_NOT_VALID">
            <summary>
The executable path you have specified does not exist. Verify that the specified path is correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_EXE_ALREADY_CONFIGURED">
            <summary>
The executable path you have specified is already configured for API tracing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_NETWORK_EXE_NOT_VALID">
            <summary>
The executable path you have specified refers to a network share or UNC path.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_CONFLICT_INCL_EXCL_API">
            <summary>
A conflict was detected in the list of include/exclude APIs. Do not specify the same API in both the include list and the exclude list.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_DCS_NOT_RUNNING">
            <summary>
Data Collector Set is not running.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_CREDENTIALS_REQUIRED">
            <summary>
A user account is required in order to commit the current Data Collector Set properties.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_DCS_SINGLETON_REQUIRED">
            <summary>
The current configuration for this Data Collector Set requires that it contain exactly one Data Collector.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_PROPERTY_CONFLICT">
            <summary>
Property value conflict.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_S_PROPERTY_IGNORED">
            <summary>
Property value will be ignored.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_DCS_ALREADY_EXISTS">
            <summary>
Data Collector Set already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_NO_MIN_DISK">
            <summary>
Not enough free disk space to start Data Collector Set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_TOO_MANY_FOLDERS">
            <summary>
Unable to start Data Collector Set because there are too many folders.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_DCS_IN_USE">
            <summary>
The Data Collector Set or one of its dependencies is already in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PLA_E_DCS_NOT_FOUND">
            <summary>
Data Collector Set was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_PPI_NOT_SUPPORTED">
            <summary>
The BIOS does not support the physical presence interface.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_PPI_BIOS_FAILURE">
            <summary>
The BIOS failure prevented the successful execution of the requested TPM operation (e.g. invalid TPM operation request, BIOS communication error with the TPM).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_PPI_USER_ABORT">
            <summary>
The user failed to confirm the TPM operation request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_PPI_ACPI_FAILURE">
            <summary>
A general error was detected when attempting to acquire the BIOS's response to a Physical Presence command.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_TPM_INCOMPATIBLE">
            <summary>
TBS is not compatible with the version of TPM found on the system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_PPI_NOT_SUPPORTED">
            <summary>
The physical presence interface is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_TOO_MANY_RESOURCES">
            <summary>
A new virtual resource could not be created because there are too many open virtual resources.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_TOO_MANY_TBS_CONTEXTS">
            <summary>
A new TBS context could not be created because there are too many open contexts.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_HASH_TABLE_FULL">
            <summary>
No new entries can be added to the hash table.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_NOTHING_TO_UNLOAD">
            <summary>
No resources can be unloaded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_INVALID_RESOURCE">
            <summary>
The resource type did not match.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_RESOURCE_EXPIRED">
            <summary>
The requested resource is no longer available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_UNKNOWN_ORDINAL">
            <summary>
The TBS does not recognize the specified ordinal.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_COMMAND_FAILED">
            <summary>
The TPM command failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_NOT_ENOUGH_TPM_CONTEXTS">
            <summary>
There are too many TPM contexts in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_NOT_ENOUGH_SPACE">
            <summary>
The TPM does not have enough space to load the requested resource.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_LIST_NOT_FOUND">
            <summary>
The specified item was not found in the list.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_LIST_NO_MORE_ITEMS">
            <summary>
The specified list is empty, or the iteration has reached the end of the list.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_OUT_OF_MEMORY">
            <summary>
There was not enough memory to fulfill the request
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_COMMAND_CANCELED">
            <summary>
The command was canceled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_SCHEDULER_NOT_RUNNING">
            <summary>
The TBS scheduler is not running.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_RPC_INIT_FAILED">
            <summary>
The RPC subsystem could not be initialized.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_INVALID_PARAMETER">
            <summary>
One or more parameters is invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_INVALID_OUTPUT_POINTER">
            <summary>
The pointer to the returned handle location was NULL or invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_DUPLICATE_VHANDLE">
            <summary>
The specified virtual handle matches a virtual handle already in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_HASH_BAD_KEY">
            <summary>
No entry with the specified key was found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_TPM_ERROR">
            <summary>
An error occurred while communicating with the TPM
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_INVALID_CONTEXT_PARAM">
            <summary>
An invalid context parameter was specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_INVALID_CONTEXT_HANDLE">
            <summary>
The specified context handle is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_CLEANUP_FAILED">
            <summary>
The context could not be cleaned up.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBSIMP_E_BUFFER_TOO_SMALL">
            <summary>
The specified buffer was too small.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_FIPS_RNG_CHECK_FAILED">
            <summary>
The random number generated did not pass FIPS RNG check.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_INVALID_OWNER_AUTH">
            <summary>
The format of the owner auth data was invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_INVALID_PCR_DATA">
            <summary>
The specified PCR data was invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_INVALID_KEY_BLOB">
            <summary>
The data given does not appear to be a valid key blob
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_INVALID_CONTEXT_PARAMS">
            <summary>
One or more of the specified context parameters was not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_INVALID_DELEGATE_BLOB">
            <summary>
The data given does not appear to be a valid delegate blob.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_INVALID_PCR_INDEX">
            <summary>
The specified PCR index was invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_INVALID_MIGRATION_AUTHORIZATION_BLOB">
            <summary>
The requested supplied data does not appear to be a valid migration authorization blob.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_INVALID_KEY_PARAMS">
            <summary>
The key parameters structure was not valid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_ENCRYPTION_FAILED">
            <summary>
The encryption operation failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_INVALID_KEY_SIZE">
            <summary>
The key size is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_INVALID_ENCODING">
            <summary>
The encoding in the blob was not recognized.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_MESSAGE_TOO_LARGE">
            <summary>
The message was too large for the encoding scheme.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_TPM_COMMAND_ERROR">
            <summary>
The TPM returned an unexpected result.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_TBS_COMMUNICATION_ERROR">
            <summary>
An error occurred while communicating with the TBS.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_INVALID_CONTEXT_HANDLE">
            <summary>
The specified context handle was not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_AUTHORIZATION_FAILED">
            <summary>
The specified authorization information was invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_ACCESS_DENIED">
            <summary>
The caller does not have the appropriate rights to perform the requested operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_INTERNAL_ERROR">
            <summary>
An internal error was detected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_BUFFER_TOO_SMALL">
            <summary>
The specified buffer was too small.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_OUT_OF_MEMORY">
            <summary>
Not enough memory was available to satisfy the request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_INVALID_PARAMETER">
            <summary>
One or more input parameters is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_INVALID_OUTPUT_POINTER">
            <summary>
One or more output parameters was NULL or invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_TOO_MUCH_DATA">
            <summary>
The command buffer cannot contain any more data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_NOT_ENOUGH_DATA">
            <summary>
The command buffer does not contain enough data to satisfy the request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPMAPI_E_INVALID_STATE">
            <summary>
The command buffer is not in the correct state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_SERVICE_DISABLED">
            <summary>
The TBS service has been disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_TPM_NOT_FOUND">
            <summary>
A compatible Trusted Platform Module (TPM) Security Device cannot be found on this computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_BUFFER_TOO_LARGE">
            <summary>
The input or output buffer is too large.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_COMMAND_CANCELED">
            <summary>
The command was canceled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_PPI_NOT_SUPPORTED">
            <summary>
The physical presence interface is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_SERVICE_START_PENDING">
            <summary>
The TBS service has been started but is not yet running.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_TOO_MANY_RESOURCES">
            <summary>
A new virtual resource could not be created because there are too many open virtual resources.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_TOO_MANY_TBS_CONTEXTS">
            <summary>
A new context could not be created because there are too many open contexts.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_SERVICE_NOT_RUNNING">
            <summary>
The TBS service is not running and could not be started.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_INVALID_CONTEXT_PARAM">
            <summary>
One or more context parameters is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_IOERROR">
            <summary>
An error occurred while communicating with the TPM.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_INSUFFICIENT_BUFFER">
            <summary>
A specified output buffer is too small.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_INVALID_CONTEXT">
            <summary>
The specified context handle does not refer to a valid context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_INVALID_OUTPUT_POINTER">
            <summary>
A specified output pointer is bad.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_BAD_PARAMETER">
            <summary>
One or more input parameters is bad.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TBS_E_INTERNAL_ERROR">
            <summary>
An internal software error has been detected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DEFEND_LOCK_RUNNING">
            <summary>
The TPM is defending against dictionary attacks and is in a time-out period.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DOING_SELFTEST">
            <summary>
The TPM is currently executing a full selftest.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_NEEDS_SELFTEST">
            <summary>
SelfTestFull has not been run.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_RETRY">
            <summary>
The TPM is too busy to respond to the command immediately, but the command could be resubmitted at a later time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_EMBEDDED_COMMAND_UNSUPPORTED">
            <summary>
The command within the transport is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_EMBEDDED_COMMAND_BLOCKED">
            <summary>
The command within the transport was blocked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DUPLICATE_VHANDLE">
            <summary>
The TPM returned a duplicate handle and the command needs to be resubmitted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_INVALID_HANDLE">
            <summary>
The specified handle was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_COMMAND_BLOCKED">
            <summary>
The command was blocked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_NOCONTEXTSPACE">
            <summary>
There is no room in the context list for additional contexts.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_SIGNATURE">
            <summary>
Bad signature of CMK ticket.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_PERMANENTEK">
            <summary>
Attempt to revoke the EK and the EK is not revocable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_MA_AUTHORITY">
            <summary>
Incorrect migration authority.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_MA_SOURCE">
            <summary>
Migration source incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_MA_DESTINATION">
            <summary>
Migration destination not authenticated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_MA_TICKET_SIGNATURE">
            <summary>
Migration authority signature validation failure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_TOOMANYCONTEXTS">
            <summary>
Too many contexts held by the TPM.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BADCONTEXT">
            <summary>
The context blob is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_DELEGATE">
            <summary>
Delegation is not correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_HANDLE">
            <summary>
The handle is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DAA_WRONG_W">
            <summary>
The consistency check on w has failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DAA_ISSUER_VALIDITY">
            <summary>
The issuer's validity check has detected an inconsistency.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DAA_STAGE">
            <summary>
The atomic process indicated by the submitted DAA command is not the expected process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DAA_TPM_SETTINGS">
            <summary>
The consistency check on DAA_tpmSpecific has failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DAA_ISSUER_SETTINGS">
            <summary>
The consistency check on DAA_issuerSettings has failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DAA_INPUT_DATA1">
            <summary>
The consistency check on DAA parameter inputData1 has failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DAA_INPUT_DATA0">
            <summary>
The consistency check on DAA parameter inputData0 has failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DAA_RESOURCES">
            <summary>
The DAA command has no resources availble to execute the command.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_OWNER_CONTROL">
            <summary>
Attempt to context save a owner evict controlled key.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_TRANSPORT_NOTEXCLUSIVE">
            <summary>
There was a command executed outside of an exclusive transport session.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DELEGATE_ADMIN">
            <summary>
Delegation table management not enabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DELEGATE_FAMILY">
            <summary>
Attempt to manage a family other then the delegated family.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DELEGATE_LOCK">
            <summary>
The delegate administration is locked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_RESOURCEMISSING">
            <summary>
The resource pointed to by context is not loaded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_NOOPERATOR">
            <summary>
No operator AuthData value is set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_MAXNVWRITES">
            <summary>
The maximum number of NV writes without an owner has been exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_CONTEXT_GAP">
            <summary>
The gap between saved context counts is too large.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_NOT_FULLWRITE">
            <summary>
The write is not a complete write of the area.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_COUNTER">
            <summary>
The counter handle is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_KEY_OWNER_CONTROL">
            <summary>
The key is under control of the TPM Owner and can only be evicted by the TPM Owner.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_INVALID_STRUCTURE">
            <summary>
The structure tag and version are invalid or inconsistent.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_ATTRIBUTES">
            <summary>
The NV area attributes conflict.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_WRITE_LOCKED">
            <summary>
The NV area has already been written to.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_FAMILYCOUNT">
            <summary>
The family count value does not match.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_PER_NOWRITE">
            <summary>
There is no protection on the write to the NV area.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_READ_ONLY">
            <summary>
The NV area is read only and can't be written to.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_LOCALITY">
            <summary>
The locality is incorrect for the attempted operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_AREA_LOCKED">
            <summary>
The NV area is locked and not writtable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_AUTH_CONFLICT">
            <summary>
NV_LoadKey blob requires both owner and blob authorization.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_KEY_NOTSUPPORTED">
            <summary>
Wrong operation to load an NV key.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_REQUIRES_SIGN">
            <summary>
The operation requires a signed command.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_NO_NV_PERMISSION">
            <summary>
The permission to manipulate the NV storage is not available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_INVALID_FAMILY">
            <summary>
The command is attempting to use an invalid family ID.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_NOTFIPS">
            <summary>
The TPM is attempting to execute a command only available when in FIPS mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_INVALID_RESOURCE">
            <summary>
When saving context identified resource type does not match actual resource.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_TYPE">
            <summary>
Make identity blob not properly typed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_NOTLOCAL">
            <summary>
Attempt to reset a PCR register that requires locality and locality modifier not part of command transport.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_NOTRESETABLE">
            <summary>
Attempt to reset a PCR register that does not have the resettable attribute.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_AUDITFAIL_SUCCESSFUL">
            <summary>
TPM audit construction failed and the underlying command was returning success.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_AUDITFAIL_UNSUCCESSFUL">
            <summary>
TPM audit construction failed and the underlying command was returning a failure code also.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_NO_WRAP_TRANSPORT">
            <summary>
The TPM does not allow for wrapped transport sessions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_VERSION">
            <summary>
The TPM cannot perform this version of the capability.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_PRESENCE">
            <summary>
Either the physicalPresence or physicalPresenceLock bits have the wrong value.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_MODE">
            <summary>
A mode parameter is bad, such as capArea or subCapArea for TPM_GetCapability, phsicalPresence parameter for TPM_PhysicalPresence, or migrationType for TPM_CreateMigrationBlob.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_DATASIZE">
            <summary>
The size of the data (or blob) parameter is bad or inconsistent with the referenced key.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_SCHEME">
            <summary>
The signature or encryption scheme for this key is incorrect or not permitted in this situation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_MIGRATION">
            <summary>
The migration properties of this key are incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_KEY_PROPERTY">
            <summary>
The key properties in TPM_KEY_PARMs are not supported by this TPM.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_INAPPROPRIATE_SIG">
            <summary>
Signed data cannot include additional DER information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_INVALID_POSTINIT">
            <summary>
The command was received in the wrong sequence relative to TPM_Init and a subsequent TPM_Startup.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_WRONG_ENTITYTYPE">
            <summary>
The submitted entity type is not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_INVALID_KEYUSAGE">
            <summary>
The usage of a key is not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_NO_ENDORSEMENT">
            <summary>
The TPM does not have an Endorsement Key (EK) installed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_INVALID_AUTHHANDLE">
            <summary>
An invalid handle was used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DECRYPT_ERROR">
            <summary>
The decryption process did not complete.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_ENCRYPT_ERROR">
            <summary>
The encryption process had a problem.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_IOERROR">
            <summary>
An IO error occurred transmitting information to the TPM.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BADTAG">
            <summary>
The tag value sent to for a command is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_AUTH2FAIL">
            <summary>
The authorization for the second key in a 2 key function failed authorization.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_FAILEDSELFTEST">
            <summary>
Self-test has failed and the TPM has shutdown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_SHA_ERROR">
            <summary>
The calculation is unable to proceed because the existing SHA-1 thread has already encountered an error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_SHA_THREAD">
            <summary>
There is no existing SHA-1 thread.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_PARAM_SIZE">
            <summary>
The paramSize argument to the command has the incorrect value .
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_WRONGPCRVAL">
            <summary>
The named PCR value does not match the current PCR value.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_SIZE">
            <summary>
The TPM does not have the space to perform the operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_SHORTRANDOM">
            <summary>
A random string was too short.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_RESOURCES">
            <summary>
The TPM has insufficient internal resources to perform the requested action.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_OWNER_SET">
            <summary>
The Trusted Platform Module (TPM) already has an owner.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_NOTSEALED_BLOB">
            <summary>
An encrypted blob is invalid or was not created by this TPM.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_NOSRK">
            <summary>
There is no Storage Root Key (SRK) set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_NOSPACE">
            <summary>
No room to load key.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_INVALID_PCR_INFO">
            <summary>
PCR information could not be interpreted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_MIGRATEFAIL">
            <summary>
Migration authorization failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_INAPPROPRIATE_ENC">
            <summary>
Unacceptable encryption scheme.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_KEYNOTFOUND">
            <summary>
The key handle points to an invalid key.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_INVALID_KEYHANDLE">
            <summary>
The key handle cannot be interpreted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_INSTALL_DISABLED">
            <summary>
The ability to install an owner is disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_ORDINAL">
            <summary>
The ordinal was unknown or inconsistent.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_FAIL">
            <summary>
The operation failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DISABLED_CMD">
            <summary>
The target command has been disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DISABLED">
            <summary>
Enable the Trusted Platform Module (TPM).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_DEACTIVATED">
            <summary>
Activate the Trusted Platform Module (TPM).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_CLEAR_DISABLED">
            <summary>
The clear disable flag is set and all clear operations now require physical access.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_AUDITFAILURE">
            <summary>
An operation completed successfully but the auditing of that operation failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BAD_PARAMETER">
            <summary>
One or more parameter is bad.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_BADINDEX">
            <summary>
The index to a PCR, DIR or other register is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_AUTHFAIL">
            <summary>
Authentication failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TPM_E_ERROR_MASK">
            <summary>
This is an error mask to convert TPM hardware errors to win errors.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_SESSION_TYPE_CHANGE_IN_PROGRESS">
            <summary>
The function failed because the current session is changing its type. This function cannot be called when the current session is changing its type. There are currently three types of sessions: console, disconnected and remote.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INTERNAL_ERROR">
            <summary>
An internal error caused an operation to fail.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_PARAMETER_ARRAY_TOO_SMALL">
            <summary>
An array passed to the function cannot hold all of the data that the function must copy into the array.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_NO_MONITORS_CORRESPOND_TO_DISPLAY_DEVICE">
            <summary>
The function failed because the specified GDI device did not have any monitors associated with it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_POINTER">
            <summary>
The function failed because an invalid pointer parameter was passed to it. A pointer parameter is invalid if it is NULL, points to an invalid address, points to a kernel mode address, or is not correctly aligned.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MIRRORING_DEVICES_NOT_SUPPORTED">
            <summary>
This function does not support GDI mirroring display devices because GDI mirroring display devices do not have any physical monitors associated with them.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_DISPLAY_DEVICE_NOT_ATTACHED_TO_DESKTOP">
            <summary>
The function failed because the specified GDI display device was not attached to the Windows desktop.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_NO_DISPLAY_DEVICE_CORRESPONDS_TO_NAME">
            <summary>
This function cannot find an actual GDI display device which corresponds to the specified GDI display device name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_ONLY_CONSOLE_SESSION_SUPPORTED">
            <summary>
This function can only be used if a program is running in the local console session. It cannot be used if the program is running on a remote desktop session or on a terminal server session.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MCA_UNSUPPORTED_COLOR_TEMPERATURE">
            <summary>
SetMonitorColorTemperature()'s caller passed a color temperature to it which the current monitor did not support. This error implies that the monitor violated the MCCS 2.0 or MCCS 2.0 Revision 1 specification.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED">
            <summary>
The monitor returned an invalid monitor technology type. CRT, Plasma and LCD (TFT) are examples of monitor technology types. This error implies that the monitor violated the MCCS 2.0 or MCCS 2.0 Revision 1 specification.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MCA_UNSUPPORTED_MCCS_VERSION">
            <summary>
The Monitor Configuration API only works with monitors which support the MCCS 1.0 specification, MCCS 2.0 specification or the MCCS 2.0 Revision 1 specification.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MCA_MCCS_VERSION_MISMATCH">
            <summary>
The MCCS version in a monitor's mccs_ver capability does not match the MCCS version the monitor reports when the VCP Version (0xDF) VCP code is used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION">
            <summary>
The monitor does not comply with the MCCS specification it claims to support.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MCA_INVALID_VCP_VERSION">
            <summary>
The monitor's VCP Version (0xDF) VCP code returned an invalid version value.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_DDCCI_CURRENT_CURRENT_VALUE_GREATER_THAN_MAXIMUM_VALUE">
            <summary>
A continuous VCP code's current value is greater than its maximum value. This error code indicates that a monitor returned an invalid value.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MONITOR_NO_LONGER_EXISTS">
            <summary>
The operating system asynchronously destroyed the monitor which corresponds to this handle because the operating system's state changed. This error typically occurs because the monitor PDO associated with this handle was removed, the monitor PDO associated with this handle was stopped, or a display mode change occurred. A display mode change occurs when windows sends a WM_DISPLAYCHANGE windows message to applications.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_PHYSICAL_MONITOR_HANDLE">
            <summary>
This function failed because an invalid monitor handle was passed to it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_CHECKSUM">
            <summary>
An error occurred because the checksum field in a DDC/CI message did not match the message's computed checksum value. This error implies that the data was corrupted while it was being transmitted from a monitor to a computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_LENGTH">
            <summary>
An error occurred because the field length of a DDC/CI message contained an invalid value.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_COMMAND">
            <summary>
An operation failed because a DDC/CI message had an invalid value in its command field.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MCA_INTERNAL_ERROR">
            <summary>
An internal Monitor Configuration API error occured.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MCA_INVALID_CAPABILITIES_STRING">
            <summary>
The monitor returned a DDC/CI capabilities string which did not comply with the ACCESS.bus 3.0, DDC/CI 1.1, or MCCS 2 Revision 1 specification.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_DDCCI_MONITOR_RETURNED_INVALID_TIMING_STATUS_BYTE">
            <summary>
The function failed because a monitor returned an invalid Timing Status byte when the operating system used the DDC/CI Get Timing Report &amp; Timing Message command to get a timing report from a monitor.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_DDCCI_INVALID_DATA">
            <summary>
The data received from the monitor is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_DDCCI_VCP_NOT_SUPPORTED">
            <summary>
The monitor does not support the specified VCP code.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_I2C_ERROR_RECEIVING_DATA">
            <summary>
An error occurred while receiving data from the device on the I2C bus.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_I2C_ERROR_TRANSMITTING_DATA">
            <summary>
An error occurred while transmitting data to the device on the I2C bus.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_I2C_DEVICE_DOES_NOT_EXIST">
            <summary>
No device on the I2C bus has the specified address.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_I2C_NOT_SUPPORTED">
            <summary>
The monitor connected to the specified video output does not have an I2C bus.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_INVALID_CONFIGURATION_REQUEST">
            <summary>
The IOPMVideoOutput::Configure function returns this error code if the passed in sequence number is not the expected sequence number or the passed in OMAC value is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_SIGNALING_NOT_SUPPORTED">
            <summary>
The IOPMVideoOutput::COPPCompatibleGetInformation or IOPMVideoOutput::Configure method failed because the display driver does not support the OPM_GET_ACP_AND_CGMSA_SIGNALING and OPM_SET_ACP_AND_CGMSA_SIGNALING GUIDs.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_DOES_NOT_HAVE_OPM_SEMANTICS">
            <summary>
Either the IOPMVideoOutput::COPPCompatibleGetInformation, IOPMVideoOutput::GetInformation, or IOPMVideoOutput::Configure method failed. This error is only returned if a video output has COPP semantics. IOPMVideoOutput::COPPCompatibleGetInformation returns this error code if the caller requested OPM specific information. IOPMVideoOutput::GetInformation always returns this error if a video output has COPP semantics. IOPMVideoOutput::Configure returns this error when the caller tries to use an OPM specific command.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_DRIVER_INTERNAL_ERROR">
            <summary>
The method failed because an unexpected error occurred inside of a display driver.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_INVALID_INFORMATION_REQUEST">
            <summary>
The IOPMVideoOutput::GetInformation and IOPMVideoOutput::COPPCompatibleGetInformation methods return this error if the passed in sequence number is not the expected sequence number or the passed in OMAC value is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_DOES_NOT_HAVE_COPP_SEMANTICS">
            <summary>
Either the IOPMVideoOutput::COPPCompatibleGetInformation, IOPMVideoOutput::GetInformation, or IOPMVideoOutput::Configure method failed. This error is only returned if a video output has OPM semantics. IOPMVideoOutput::COPPCompatibleGetInformation always returns this error if a video output has OPM semantics. IOPMVideoOutput::GetInformation returns this error code if the caller requested COPP specific information. IOPMVideoOutput::Configure returns this error when the caller tries to use a COPP specific command.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_SESSION_TYPE_CHANGE_IN_PROGRESS">
            <summary>
The method failed because the session is changing its type. No IOPMVideoOutput methods can be called when a session is changing its type. There are currently three types of sessions: console, disconnected and remote.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_NO_LONGER_EXISTS">
            <summary>
The operating system asynchronously destroyed this OPM video output because the operating system's state changed. This error typically occurs because the monitor PDO associated with this video output was removed, the monitor PDO associated with this video output was stopped, the video output's session became a non-console session or the video output's desktop became an inactive desktop.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_ALL_HDCP_HARDWARE_ALREADY_IN_USE">
            <summary>
The IOPMVideoOutput::Configure method cannot enable HDCP because the display adapter's HDCP hardware is already being used by other physical outputs.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_RESOLUTION_TOO_HIGH">
            <summary>
The IOPMVideoOutput::Configure method cannot enable the specified output protection technology because the output's screen resolution is too high.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_HDCP_SRM_NEVER_SET">
            <summary>
The IOPMVideoOutput::GetInformation method cannot return the version of the SRM being used because the application never successfully passed an SRM to the video output.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_CGMSA">
            <summary>
The video output cannot enable the Content Generation Management System Analogue (CGMS-A) protection technology because it does not support CGMS-A.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_ACP">
            <summary>
The video output cannot enable Analogue Copy Protection (ACP) because it does not support ACP.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_HDCP">
            <summary>
The video output cannot enable the High-bandwidth Digital Content Protection (HDCP) System because it does not support HDCP.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_INVALID_SRM">
            <summary>
The HDCP System Renewability Message passed to this function did not comply with section 5 of the HDCP 1.1 specification.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_PVP_HFS_FAILED">
            <summary>
The function failed because the display adapter's Hardware Functionality Scan failed to validate the graphics hardware.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_THEATER_MODE_ENABLED">
            <summary>
A video output could not be created because the frame buffer is in theater mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_SPANNING_MODE_ENABLED">
            <summary>
A video output could not be created because the frame buffer is in spanning mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_PVP_INVALID_CERTIFICATE_LENGTH">
            <summary>
A certificate could not be returned because the certificate buffer passed to the function was too small.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_INVALID_HANDLE">
            <summary>
The function failed because the caller passed in an invalid OPM user mode handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_INTERNAL_ERROR">
            <summary>
An internal error caused this operation to fail.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_NO_VIDEO_OUTPUTS_EXIST">
            <summary>
The GDI display device passed to this function does not have any active video outputs.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_INVALID_ENCRYPTED_PARAMETERS">
            <summary>
The specified encrypted parameters are invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_UAB_NOT_SUPPORTED">
            <summary>
The driver does not support UAB.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_COPP_NOT_SUPPORTED">
            <summary>
The driver does not support COPP.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_OPM_NOT_SUPPORTED">
            <summary>
The driver does not support OPM.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_ADAPTER_ACCESS_NOT_EXCLUDED">
            <summary>
An operation is being attempted that requires the display adapter to be in a quiescent state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_START_DEFERRED">
            <summary>
Starting the adapter has been deferred temporarily.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_POLLING_TOO_FREQUENTLY">
            <summary>
The display adapter is being polled for children too frequently at the same polling level.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_NOT_POST_DEVICE_DRIVER">
            <summary>
The driver trying to start is not the same as the driver for the POSTed display adapter.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_LEADLINK_START_DEFERRED">
            <summary>
Starting the leadlink adapter has been deferred temporarily.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INCONSISTENT_DEVICE_LINK_STATE">
            <summary>
The adapter link was found to be in an inconsistent state. Not all adapters are in an expected PNP/Power state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_CHAINLINKS_NOT_POWERED_ON">
            <summary>
An attempt was made to power up a lead link display adapter when the chain links were powered down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_CHAINLINKS_NOT_STARTED">
            <summary>
An attempt was made to start a lead link display adapter when the chain links were not started yet.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_ADAPTER_CHAIN_NOT_READY">
            <summary>
The chain of linked adapters is not ready to start because of an unknown failure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_CHAINLINKS_NOT_ENUMERATED">
            <summary>
Some chain adapters in a linked configuration were not enumerated yet.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_LEADLINK_NOT_ENUMERATED">
            <summary>
Lead adapter in a linked configuration was not enumerated yet.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_NOT_A_LINKED_ADAPTER">
            <summary>
The display adapter is not linked to any other adapters.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_UNKNOWN_CHILD_STATUS">
            <summary>
Child device presence was not reliably detected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_CHILD_DESCRIPTOR_NOT_SUPPORTED">
            <summary>
Specified display adapter child device does not support descriptor exposure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_SPECIFIED_CHILD_ALREADY_CONNECTED">
            <summary>
Specified display adapter child device already has an external device connected to it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_CLIENTVIDPN_NOT_SET">
            <summary>
Client VidPN is not set on this adapter (e.g. no user mode initiated mode changes took place on this adapter yet).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_CLIENT_TYPE">
            <summary>
Specified client type was not recognized.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_CANCEL_VIDPN_TOPOLOGY_AUGMENTATION">
            <summary>
Miniport requested that augmentation be cancelled for the specified source of the specified VidPN's topology.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MAX_NUM_PATHS_REACHED">
            <summary>
Maximum supported number of present paths has been reached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE_CONSTRAINT">
            <summary>
Specified monitor frequency range constraint is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_MONITOR_CAPABILITY_ORIGIN">
            <summary>
Specified monitor capability origin is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_MODE_PRUNING_ALGORITHM">
            <summary>
Specified mode pruning algorithm is invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INCOMPATIBLE_PRIVATE_FORMAT">
            <summary>
Specified primary surface has a different private format attribute than the current primary surface
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_NO_AVAILABLE_IMPORTANCE_ORDINALS">
            <summary>
All available importance ordinals are already used in specified topology.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_TOPOLOGY_CHANGES_NOT_ALLOWED">
            <summary>
Topology changes are not allowed for the specified VidPN.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_SCANLINE_ORDERING">
            <summary>
Specified scanline ordering type is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_PINNED">
            <summary>
Specified content transformation is not pinned on the specified VidPN present path.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_UNASSIGNED_MODESET_ALREADY_EXISTS">
            <summary>
No more than one unassigned mode set can exist at any given time for a given VidPN source/target.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_COPYPROTECTION_TYPE">
            <summary>
Specified VidPN present path copy protection type is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_PATH_CONTENT_TYPE">
            <summary>
Specified VidPN present path content type is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY_RECOMMENDATION_REASON">
            <summary>
Specified VidPN topology recommendation reason is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_NO_MORE_ELEMENTS_IN_DATASET">
            <summary>
Specified data set (e.g. mode set, frequency range set, descriptor set, topology, etc.) does not contain any more elements.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_DATASET_IS_EMPTY">
            <summary>
Specified data set (e.g. mode set, frequency range set, descriptor set, topology, etc.) is empty.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MODE_NOT_IN_MODESET">
            <summary>
Specified mode is not in the specified mode set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MULTISAMPLING_NOT_SUPPORTED">
            <summary>
Multi-sampling is not supported on the respective VidPN present path.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_GAMMA_RAMP_NOT_SUPPORTED">
            <summary>
Specified gamma ramp is not supported on the respective VidPN present path.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_GAMMA_RAMP">
            <summary>
Specified gamma ramp is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_SUPPORTED">
            <summary>
Specified content geometry transformation is not supported on the respective VidPN present path.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_PATH_CONTENT_GEOMETRY_TRANSFORMATION">
            <summary>
Specified VidPN present path content geometry transformation is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_PATH_IMPORTANCE_ORDINAL">
            <summary>
Specified VidPN present path importance ordinal is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_CANT_ACCESS_ACTIVE_VIDPN">
            <summary>
Specified VidPN is active and cannot be accessed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE">
            <summary>
Specified VidPN source is already owned by a DMM client and cannot be used until that client releases it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_NO_DISPLAY_MODE_MANAGEMENT_SUPPORT">
            <summary>
Failed to acquire display mode management interface.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_TARGET_NOT_IN_TOPOLOGY">
            <summary>
Specified target is not part of the specified VidPN's topology.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_PIXELVALUEACCESSMODE">
            <summary>
Specified pixel value access mode is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_COLORBASIS">
            <summary>
Specified color basis is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_PIXELFORMAT">
            <summary>
Specified pixel format is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_STRIDE">
            <summary>
Specified stride is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_VISIBLEREGION_SIZE">
            <summary>
Specified visible region size is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_PRIMARYSURFACE_SIZE">
            <summary>
Specified primary surface size is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_SOURCE_NOT_IN_TOPOLOGY">
            <summary>
Specified source is not part of the specified VidPN's topology.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MONITOR_NOT_CONNECTED">
            <summary>
There is no monitor connected on the specified video present target.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_STALE_VIDPN_TOPOLOGY">
            <summary>
Specified VidPN topology is stale. Please reacquire the new topology.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_NO_ACTIVE_VIDPN">
            <summary>
VidPN manager of the display adapter in question does not have an active VidPN.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_NO_VIDPNMGR">
            <summary>
Display adapter in question does not have an associated VidPN manager.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MONITOR_COULD_NOT_BE_ASSOCIATED_WITH_ADAPTER">
            <summary>
Newly arrived monitor could not be associated with a display adapter.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_NO_AVAILABLE_VIDPN_TARGET">
            <summary>
Specified VidPN source cannot be used because there is no available VidPN target to connect it to.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_TARGET_ID_MUST_BE_UNIQUE">
            <summary>
ID of the specified video present target is already used by another target in the set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_SOURCE_ID_MUST_BE_UNIQUE">
            <summary>
ID of the specified video present source is already used by another source in the set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_RESOURCES_NOT_RELATED">
            <summary>
Two or more of the specified resources are not related to each other, as defined by the interface semantics.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_VIDPN_TARGET_SUBSET_TYPE">
            <summary>
Specified video present target subset type is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MONITORDESCRIPTOR_ID_MUST_BE_UNIQUE">
            <summary>
ID of the specified monitor descriptor is already used by another descriptor in the set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MONITORDESCRIPTOR_ALREADY_IN_SET">
            <summary>
Specified descriptor is already in the specified monitor descriptor set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MONITORDESCRIPTOR_NOT_IN_SET">
            <summary>
Specified descriptor is not in the specified monitor descriptor set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_MONITORDESCRIPTOR">
            <summary>
Specified monitor descriptor is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_MONITORDESCRIPTORSET">
            <summary>
Specified monitor descriptor set is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_TARGET">
            <summary>
Display adapter must have at least one video present target.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_SOURCE">
            <summary>
Display adapter must have at least one video present source.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_PATH_NOT_IN_TOPOLOGY">
            <summary>
Specified present path is not in VidPN's topology.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_VIDEO_PRESENT_TARGETS_LESS_THAN_SOURCES">
            <summary>
Number of video present targets must be greater than or equal to the number of video present sources.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_EMPTY_ADAPTER_MONITOR_MODE_SUPPORT_INTERSECTION">
            <summary>
System failed to determine a mode that is supported by both the display adapter and the monitor connected to it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MODE_ID_MUST_BE_UNIQUE">
            <summary>
ID of the specified mode is already used by another mode in the set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_NO_RECOMMENDED_FUNCTIONAL_VIDPN">
            <summary>
Miniport does not have any recommendation regarding the request to provide a functional VidPN given the current display adapter configuration.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_MONITOR_SOURCE_MODE">
            <summary>
Specified monitor source mode is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_MONITOR_SOURCEMODESET">
            <summary>
Specified monitor source mode set is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_STALE_MODESET">
            <summary>
Specified mode set is stale. Please reacquire the new mode set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_FREQUENCYRANGE_ALREADY_IN_SET">
            <summary>
Specified frequency range is already in the specified monitor frequency range set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_NO_PREFERRED_MODE">
            <summary>
Specified mode set does not specify preference for one of its modes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_FREQUENCYRANGE_NOT_IN_SET">
            <summary>
Specified frequency range is not in the specified monitor frequency range set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE">
            <summary>
Specified monitor frequency range is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGESET">
            <summary>
Specified monitor frequency range set is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_NO_RECOMMENDED_VIDPN_TOPOLOGY">
            <summary>
Miniport has no recommendation for augmentation of the specified VidPN's topology.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_VIDPN_PRESENT_PATH">
            <summary>
Specified VidPN present path is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_TARGET_ALREADY_IN_SET">
            <summary>
Specified video present target is already in the video present target set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_SOURCE_ALREADY_IN_SET">
            <summary>
Specified video present source is already in the video present source set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_VIDEOPRESENTTARGETSET">
            <summary>
Specified video present target set is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_VIDEOPRESENTSOURCESET">
            <summary>
Specified video present source set is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MODE_ALREADY_IN_MODESET">
            <summary>
Specified mode is already in the mode set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_PATH_ALREADY_IN_TOPOLOGY">
            <summary>
Specified video present path is already in VidPN's topology.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_PINNED_MODE_MUST_REMAIN_IN_SET">
            <summary>
Pinned mode must remain in the set on VidPN's cofunctional modality enumeration.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET_MODE">
            <summary>
Specified video present target mode is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE_MODE">
            <summary>
Specified video present source mode is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_TOTAL_REGION">
            <summary>
Specified video signal total region is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_ACTIVE_REGION">
            <summary>
Specified video signal active region is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_FREQUENCY">
            <summary>
Specified video signal frequency is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_VIDPN_TARGETMODESET">
            <summary>
Specified VidPN target mode set is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_VIDPN_SOURCEMODESET">
            <summary>
Specified VidPN source mode set is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_MODE_NOT_PINNED">
            <summary>
No mode is pinned on the specified VidPN source/target.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_VIDPN_MODALITY_NOT_SUPPORTED">
            <summary>
Specified VidPN modality is not supported (e.g. at least two of the pinned modes are not cofunctional).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET">
            <summary>
Specified video present target is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE">
            <summary>
Specified video present source is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_VIDPN">
            <summary>
Specified VidPN handle is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_VIDPN_TOPOLOGY_CURRENTLY_NOT_SUPPORTED">
            <summary>
Specified VidPN topology is valid but is not supported by the display adapter at this time, due to current allocation of its resources.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_VIDPN_TOPOLOGY_NOT_SUPPORTED">
            <summary>
Specified VidPN topology is valid but is not supported by this model of the display adapter.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY">
            <summary>
Specified VidPN topology is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_GPU_EXCEPTION_ON_DEVICE">
            <summary>
GPU exception is detected on the given device. The device is not able to be scheduled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_ALLOCATION_CONTENT_LOST">
            <summary>
The specified allocation lost its content.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_WRONG_ALLOCATION_DEVICE">
            <summary>
The allocation being referenced doesn't belong to the current device.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_ALLOCATION_HANDLE">
            <summary>
An invalid allocation handle is being referenced.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_ALLOCATION_INSTANCE">
            <summary>
An invalid allocation instance is being referenced.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_ALLOCATION_CLOSED">
            <summary>
The allocation being referenced has been closed permanently.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_CANT_RENDER_LOCKED_ALLOCATION">
            <summary>
A locked allocation can't be used in the current command buffer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_ALLOCATION_USAGE">
            <summary>
The allocation can't be used from it's current segment location for the specified operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_CANT_EVICT_PINNED_ALLOCATION">
            <summary>
The request failed because a pinned allocation can't be evicted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNSUPPORTED">
            <summary>
The current allocation can't be unswizzled by an aperture.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNAVAILABLE">
            <summary>
No more unswizzling aperture are currently available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_ALLOCATION_INVALID">
            <summary>
The allocation is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_TRY_AGAIN_NOW">
            <summary>
A problem couldn't be solved due to some currently existing condition. The problem should be tried again immediately.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_TRY_AGAIN_LATER">
            <summary>
A problem couldn't be solved due to some currently existing condition. The problem should be tried again later.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_TOO_MANY_REFERENCES">
            <summary>
An object being referenced has reach the maximum reference count already and can't be reference further.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_ALLOCATION_BUSY">
            <summary>
The allocation is currently busy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_CANT_LOCK_MEMORY">
            <summary>
Couldn't probe and lock the underlying memory of an allocation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_NO_VIDEO_MEMORY">
            <summary>
Not enough video memory available to complete the operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_PARTIAL_DATA_POPULATED">
            <summary>
Specified buffer is not big enough to contain entire requested dataset. Partial data populated up to the size of the buffer. Caller needs to provide buffer of size as specified in the partially populated buffer's content (interface specific).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_DRIVER_MISMATCH">
            <summary>
The kernel driver detected a version mismatch between it and the user mode driver.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_CANNOTCOLORCONVERT">
            <summary>
Not able to present with color convertion
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_PRESENT_DENIED">
            <summary>
Not able to present due to denial of desktop access
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_PRESENT_OCCLUDED">
            <summary>
Nothing to present due to desktop occlusion
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_PRESENT_MODE_CHANGED">
            <summary>
Present happened but ended up into the changed desktop mode
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_DRIVER_MODEL">
            <summary>
The driver stack doesn't match the expected driver model.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_ADAPTER_WAS_RESET">
            <summary>
Specified display adapter and all of its state has been reset.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INVALID_DISPLAY_ADAPTER">
            <summary>
Specified display adapter handle is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_INSUFFICIENT_DMA_BUFFER">
            <summary>
The driver needs more DMA buffer space in order to complete the requested operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRAPHICS_NOT_EXCLUSIVE_MODE_OWNER">
            <summary>
Exclusive mode ownership is needed to create unmanaged primary allocation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MONITOR_INVALID_DETAILED_TIMING_BLOCK">
            <summary>
Monitor descriptor contains an invalid detailed timing block.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MONITOR_NO_MORE_DESCRIPTOR_DATA">
            <summary>
There is no monitor descriptor data at the specified (offset, size) region.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MONITOR_INVALID_USER_FRIENDLY_MONDSC_BLOCK">
            <summary>
Provided monitor descriptor block is either corrupted or does not contain monitor's user friendly name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MONITOR_INVALID_SERIAL_NUMBER_MONDSC_BLOCK">
            <summary>
Provided monitor descriptor block is either corrupted or does not contain monitor's detailed serial number.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MONITOR_WMI_DATABLOCK_REGISTRATION_FAILED">
            <summary>
WMI data block registration failed for one of the MSMonitorClass WMI subclasses.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MONITOR_INVALID_STANDARD_TIMING_BLOCK">
            <summary>
Monitor descriptor contains an invalid standard timing block.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MONITOR_INVALID_DESCRIPTOR_CHECKSUM">
            <summary>
Checksum of the obtained monitor descriptor is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MONITOR_UNKNOWN_DESCRIPTOR_FORMAT">
            <summary>
Format of the obtained monitor descriptor is not supported by this release.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MONITOR_NO_DESCRIPTOR">
            <summary>
Monitor descriptor could not be obtained.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DWM_E_NOT_QUEUING_PRESENTS">
            <summary>
{DWM is not queuing presents for the specified window}
The window specified is not currently using queued presents.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DWM_E_NO_REDIRECTION_SURFACE_AVAILABLE">
            <summary>
{No DWM redirection surface is available}
The DWM was unable to provide a redireciton surface to complete the DirectX present.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DWM_E_REMOTING_NOT_SUPPORTED">
            <summary>
{Some desktop composition APIs are not supported while remoting}
The operation is not supported while running in a remote session.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DWM_E_COMPOSITIONDISABLED">
            <summary>
{Desktop composition is disabled}
The operation could not be completed because desktop composition is disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HUNG_DISPLAY_DRIVER_THREAD">
            <summary>
{Display Driver Stopped Responding}
The %hs display driver has stopped working normally. Save your work and reboot the system to restore full display functionality.
The next time you reboot the machine a dialog will be displayed giving you a chance to report this failure to Microsoft.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_NO_WAITER_FOR_REPLY">
            <summary>
No waiter is present for the filter's reply to this message.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_CONTEXT_ALREADY_LINKED">
            <summary>
The specifiec context is already attached to another object
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_ALREADY_ENLISTED">
            <summary>
The specified Transaction Context is already enlisted in a transaction
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_VOLUME_ALREADY_MOUNTED">
            <summary>
The specified volume is already mounted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_NO_DEVICE_OBJECT">
            <summary>
The requested device object does not exist for the given volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_NAME_CACHE_MISS">
            <summary>
The name requested was not found in Filter Manager's name cache and could not be retrieved from the file system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_INVALID_CONTEXT_REGISTRATION">
            <summary>
An invalid parameter was specified during context registration.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_CONTEXT_ALLOCATION_NOT_FOUND">
            <summary>
No registered context allocation definition was found for the given request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_INSTANCE_NOT_FOUND">
            <summary>
The system could not find the instance specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_VOLUME_NOT_FOUND">
            <summary>
The system could not find the volume specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_FILTER_NOT_FOUND">
            <summary>
The system could not find the filter specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_INSTANCE_NAME_COLLISION">
            <summary>
An instance already exists with this name on the volume specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_INSTANCE_ALTITUDE_COLLISION">
            <summary>
An instance already exists at this altitude on the volume specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_DO_NOT_DETACH">
            <summary>
Do not detach the filter from the volume at this time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_DO_NOT_ATTACH">
            <summary>
Do not attach the filter to the volume at this time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_CBDQ_DISABLED">
            <summary>
The callback data queue has been disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_DUPLICATE_ENTRY">
            <summary>
A duplicate handler definition has been provided for an operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_MUST_BE_NONPAGED_POOL">
            <summary>
Non-paged pool must be used for this type of context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_DELETING_OBJECT">
            <summary>
The object specified for this action is in the process of being deleted, therefore the action requested cannot be completed at this time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_INTERNAL_ERROR">
            <summary>
The Filter Manager had an internal error from which it cannot recover, therefore the operation has been failed. This is usually the result of a filter returning an invalid value from a pre-operation callback.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_POST_OPERATION_CLEANUP">
            <summary>
The filter must cleanup any operation specific context at this time because it is being removed from the system before the operation is completed by the lower drivers.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_FILTER_NOT_READY">
            <summary>
The filter is not ready for attachment to volumes because it has not finished initializing (FltStartFiltering has not been called).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_NOT_INITIALIZED">
            <summary>
The Filter Manager was not initialized when a filter tried to register. Make sure that the Filter Manager is getting loaded as a driver.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_NOT_SAFE_TO_POST_OPERATION">
            <summary>
Posting this operation to a worker thread for further processing is not safe at this time because it could lead to a system deadlock.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_INVALID_NAME_REQUEST">
            <summary>
An invalid name request was made. The name requested cannot be retrieved at this time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_DISALLOW_FAST_IO">
            <summary>
Disallow the Fast IO path for this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_INVALID_ASYNCHRONOUS_REQUEST">
            <summary>
Asynchronous requests are not valid for this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_CONTEXT_ALREADY_DEFINED">
            <summary>
A context is already defined for this object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_NO_HANDLER_DEFINED">
            <summary>
A handler was not defined by the filter for this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLT_IO_COMPLETE">
            <summary>
The IO was completed by a filter.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_PARTITIONS_DISABLED">
            <summary>
COM+ partitions are currently disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_REGISTRY_ACCESSDENIED">
            <summary>
The specified user cannot write to the system registry
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_SAFERINVALID">
            <summary>
The specified SAFER level is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_PRIVATE_ACCESSDENIED">
            <summary>
Access is denied because the component is private.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CANNOT_ALIAS_EVENTCLASS">
            <summary>
Alas, Event Class components cannot be aliased.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET">
            <summary>
The Base Application Partition exists in all partition sets and cannot be removed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_COMP_MOVE_PRIVATE">
            <summary>
A private component cannot be moved (or copied) to a library application or to the base partition
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_COMP_MOVE_DEST">
            <summary>
A component cannot be moved (or copied) to the System Application, an application proxy or a non-changeable application
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_COMP_MOVE_SOURCE">
            <summary>
A component cannot be moved (or copied) from the System Application, an application proxy or a non-changeable application
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS">
            <summary>
Legacy components may not exist in non-base partitions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT">
            <summary>
Applications containing one or more legacy components may not be exported to 1.0 format.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_PARTITION_MSI_ONLY">
            <summary>
Only Application Files (*.MSI files) can be installed into partitions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_PARTITION_ACCESSDENIED">
            <summary>
Access to the specified partition is denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED">
            <summary>
A recycled process may not be paused.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET">
            <summary>
The partition specified as default is not a member of the partition set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_PROGIDINUSEBYCLSID">
            <summary>
The ProgID provided to the copy operation is invalid. The ProgID is in use by another registered CLSID.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CANTMAKEINPROCSERVICE">
            <summary>
Library applications may not be NT services.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED">
            <summary>
A paused process may not be recycled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_PROCESSALREADYRECYCLED">
            <summary>
The process has already been recycled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CANTRECYCLESERVICEAPPS">
            <summary>
Applications running as NT services may not be recycled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CANTRECYCLELIBRARYAPPS">
            <summary>
Library applications may not be recycled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_USER_IN_SET">
            <summary>
One or more users are already assigned to a local partition set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE">
            <summary>
COM+ applications that run as NT service may not be pooled or recycled
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_INVALID_PARTITION">
            <summary>
The partition(s) specified are not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_APP_NOT_RUNNING">
            <summary>
The specified application is not currently running
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_OBJECT_DOES_NOT_EXIST">
            <summary>
One of the specified objects cannot be found
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_OBJECT_PARENT_MISSING">
            <summary>
One of the objects being inserted or updated does not belong to a valid parent collection
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSDTC_E_DUPLICATE_RESOURCE">
            <summary>
Cannot create a duplicate resource of type Distributed Transaction Coordinator
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMQC_E_UNTRUSTED_ENQUEUER">
            <summary>
The message was requeued or moved by a user not in the "QC Trusted User" role
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMQC_E_UNAUTHENTICATED">
            <summary>
An unauthenticated message was received by an application that accepts only authenticated messages
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMQC_E_BAD_MESSAGE">
            <summary>
The message is improperly formatted or was damaged in transit
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMQC_E_NO_IPERSISTSTREAM">
            <summary>
Unable to marshal an interface that does not support IPersistStream
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMQC_E_QUEUING_SERVICE_NOT_AVAILABLE">
            <summary>
MSMQ is required for the requested operation and is not installed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMQC_E_NO_QUEUEABLE_INTERFACES">
            <summary>
At least one interface must be marked "queued" in order to create a queued component instance with the "queue" moniker
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMQC_E_APPLICATION_NOT_QUEUED">
            <summary>
Only COM+ Applications marked "queued" can be invoked using the "queue" moniker
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CAT_SERVERFAULT">
            <summary>
The COM+ Catalog Server threw an exception during execution
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED">
            <summary>
The application cannot be paused or resumed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CAT_WRONGAPPBITNESS">
            <summary>
There was a type mismatch between a binary and an application
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CAT_UNACCEPTABLEBITNESS">
            <summary>
A binary of unknown or invalid type was provided
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CAT_BITNESSMISMATCH">
            <summary>
There was a type mismatch between binaries
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_MIG_SCHEMANOTFOUND">
            <summary>
The schema version to be migrated could not be found in the COM+ registry database
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_MIG_VERSIONNOTSUPPORTED">
            <summary>
This version of the COM+ registry database cannot be migrated
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_REGDB_ALREADYRUNNING">
            <summary>
The COM+ registry database is already running
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_REGDB_SYSTEMERR">
            <summary>
The COM+ registry database detected a system error
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_REGDB_NOTOPEN">
            <summary>
The COM+ registry database is not open
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_REGDB_NOTINITIALIZED">
            <summary>
The COM+ registry database has not been initialized
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_AMBIGUOUS_PARTITION_NAME">
            <summary>
The partition name is not unique and cannot be resolved to a partition id
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_AMBIGUOUS_APPLICATION_NAME">
            <summary>
The application name is not unique and cannot be resolved to an application id
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED">
            <summary>
Applications that contain one or more imported components cannot be installed into a non-base partition
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES">
            <summary>
The partition cannot be exported, because one or more components in the partition have the same file name
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CAT_PARTITION_IN_USE">
            <summary>
The partition cannot be deleted because it is the default partition for one or more users
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CAT_INVALID_PARTITION_NAME">
            <summary>
The specified partition name is invalid. Check that the name contains at least one visible character
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME">
            <summary>
The specified partition name is already in use on this computer
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_START_APP_DISABLED">
            <summary>
You cannot start an application that has been disabled
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_BASE_PARTITION_ONLY">
            <summary>
This function is valid for the base partition only
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE">
            <summary>
Library applications and application proxies are incompatible
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER">
            <summary>
An event class cannot also be a subscriber component
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT">
            <summary>
Cannot subscribe to this component (the component may have been imported)
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CAN_NOT_EXPORT_SYS_APP">
            <summary>
System application is not exportable
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CAN_NOT_START_APP">
            <summary>
Failed to start application because it is either a library application or an application proxy
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY">
            <summary>
Application Proxy is not exportable
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM">
            <summary>
This operation is not enabled on this platform
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_START_APP_NEEDS_COMPONENTS">
            <summary>
You must have components in an application in order to start the application
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_ROLE_DOES_NOT_EXIST">
            <summary>
A role assigned to a component, interface, or method did not exist in the application
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_APPLID_MATCHES_CLSID">
            <summary>
A CLSID with the same GUID as the new application ID is already installed on this machine
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_OBJECTNOTPOOLABLE">
            <summary>
This object is not poolable
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_NOTINREGISTRY">
            <summary>
Object was not found in registry
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_PROPERTY_OVERFLOW">
            <summary>
The property value is too large
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_REGFILE_CORRUPT">
            <summary>
The registration file is corrupt
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_COMPONENTEXISTS">
            <summary>
The component already exists
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_OBJECTEXISTS">
            <summary>
The object you are attempting to add or rename already exists
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_PROPERTYSAVEFAILED">
            <summary>
One or more property settings are either invalid or in conflict with each other
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_SERVICENOTINSTALLED">
            <summary>
The service is not installed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_COREQCOMPINSTALLED">
            <summary>
A component in the same DLL is already installed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_COMPFILE_NOREGISTRAR">
            <summary>
The component registrar referenced in this file is not available
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_SYSTEMAPP">
            <summary>
This operation cannot be performed on the system application
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_REGISTERTLB">
            <summary>
The system was unable to register the TypeLib
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_COMP_MOVE_BAD_DEST">
            <summary>
The component move failed because the destination application no longer exists
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_COMP_MOVE_LOCKED">
            <summary>
The component move was disallowed, because the source or destination application is either a system application or currently locked against changes
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_SESSION">
            <summary>
The server catalog version is not supported
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_NOTDELETEABLE">
            <summary>
The delete function has been disabled for this object
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_NOTCHANGEABLE">
            <summary>
Changes to this object and its sub-objects have been disabled
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_COMPFILE_NOTINSTALLABLE">
            <summary>
The file does not contain components or component information
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_COMPFILE_BADTLB">
            <summary>
The TypeLib could not be loaded
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_COMPFILE_CLASSNOTAVAIL">
            <summary>
The DLL does not support the components listed in the TypeLib
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_COMPFILE_GETCLASSOBJ">
            <summary>
GetClassObject failed in the DLL
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_COMPFILE_LOADDLLFAIL">
            <summary>
The DLL could not be loaded
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_COMPFILE_DOESNOTEXIST">
            <summary>
The file does not exist
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_REGISTRARFAILED">
            <summary>
Errors occurred while in the component registrar
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_APPDIRNOTFOUND">
            <summary>
Application install directory not found
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_BADREGISTRYLIBID">
            <summary>
The registered TypeLib ID is not valid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_DLLLOADFAILED">
            <summary>
DLL could not be loaded
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_NOSERVERSHARE">
            <summary>
No server file share available
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_DLLREGISTERSERVER">
            <summary>
DllRegisterServer failed on component install
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_REMOTEINTERFACE">
            <summary>
Interface information is either missing or changed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CLSIDORIIDMISMATCH">
            <summary>
Application file CLSIDs or IIDs do not match corresponding DLLs
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_USERPASSWDNOTVALID">
            <summary>
The identity or password set on the application is not valid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_AUTHENTICATIONLEVEL">
            <summary>
Unable to set required authentication level for update request
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_BADREGISTRYPROGID">
            <summary>
The component's progID is missing or corrupt
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_NOREGISTRYCLSID">
            <summary>
The component's CLSID is missing or corrupt
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_INVALIDUSERIDS">
            <summary>
One or more users in the application file are not valid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_NOUSER">
            <summary>
One or more users are not valid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_CANTCOPYFILE">
            <summary>
An error occurred copying the file
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_ROLEEXISTS">
            <summary>
The role already exists
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_APPLICATIONEXISTS">
            <summary>
The application is already installed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_BADPATH">
            <summary>
The file path is invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_APP_FILE_VERSION">
            <summary>
Invalid version number in application file
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_APP_FILE_READFAIL">
            <summary>
Error occurred reading the application file
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_APP_FILE_WRITEFAIL">
            <summary>
Error occurred writing to the application file
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_ALREADYINSTALLED">
            <summary>
The object is already registered
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_KEYMISSING">
            <summary>
The object was not found in the catalog
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_OBJECTINVALID">
            <summary>
One or more of the object's properties are missing or invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.COMADMIN_E_OBJECTERRORS">
            <summary>
Errors occurred accessing one or more objects - the ErrorInfo collection may have more detail
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_W_CACHE_ITEM_TOO_BIG">
            <summary>
The new cache item exceeds the maximum per-item size defined for the cache.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_W_CACHE_ITEM_STALE">
            <summary>
The requested cache item is too old and was deleted from the cache.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_W_CACHE_ITEM_NOT_FOUND">
            <summary>
The requested item could not be found in the cache.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_W_CARD_NOT_AUTHENTICATED">
            <summary>
No PIN was presented to the smart card.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_W_CANCELLED_BY_USER">
            <summary>
The action was cancelled by the user.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_W_EOF">
            <summary>
The end of the smart card file has been reached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_W_CHV_BLOCKED">
            <summary>
The card cannot be accessed because the maximum number of PIN entry attempts has been reached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_W_WRONG_CHV">
            <summary>
The card cannot be accessed because the wrong PIN was presented.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_W_SECURITY_VIOLATION">
            <summary>
Access was denied because of a security violation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_W_REMOVED_CARD">
            <summary>
The smart card has been removed, so that further communication is not possible.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_W_RESET_CARD">
            <summary>
The smart card has been reset, so any shared state information is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_W_UNPOWERED_CARD">
            <summary>
Power has been removed from the smart card, so that further communication is not possible.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_W_UNRESPONSIVE_CARD">
            <summary>
The smart card is not responding to a reset.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_W_UNSUPPORTED_CARD">
            <summary>
The reader cannot communicate with the smart card, due to ATR configuration conflicts.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_READ_ONLY_CARD">
            <summary>
The smart card is read only and cannot be written to.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_NO_PIN_CACHE">
            <summary>
The smart card PIN cannot be cached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_PIN_CACHE_EXPIRED">
            <summary>
The smart card PIN cache has expired.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_SERVER_TOO_BUSY">
            <summary>
The Smart card resource manager is too busy to complete this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_NO_KEY_CONTAINER">
            <summary>
The requested key container does not exist on the smart card.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_COMM_DATA_LOST">
            <summary>
A communications error with the smart card has been detected. Retry the operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_NO_READERS_AVAILABLE">
            <summary>
Cannot find a smart card reader.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_CERTIFICATE_UNAVAILABLE">
            <summary>
The requested certificate could not be obtained.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_NO_SUCH_CERTIFICATE">
            <summary>
The requested certificate does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_UNKNOWN_RES_MNG">
            <summary>
An unrecognized error code was returned from a layered component.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_INVALID_CHV">
            <summary>
The supplied PIN is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_BAD_SEEK">
            <summary>
There was an error trying to set the smart card file object pointer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_WRITE_TOO_MANY">
            <summary>
The smartcard does not have enough memory to store the information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_NO_ACCESS">
            <summary>
Access is denied to this file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_NO_FILE">
            <summary>
The supplied path does not represent a smart card file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_NO_DIR">
            <summary>
The supplied path does not represent a smart card directory.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_FILE_NOT_FOUND">
            <summary>
The identified file does not exist in the smart card.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_DIR_NOT_FOUND">
            <summary>
The identified directory does not exist in the smart card.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_UNSUPPORTED_FEATURE">
            <summary>
This smart card does not support the requested feature.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_ICC_CREATEORDER">
            <summary>
The requested order of object creation is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_ICC_INSTALLATION">
            <summary>
No Primary Provider can be found for the smart card.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_UNEXPECTED">
            <summary>
An unexpected card error has occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_SERVICE_STOPPED">
            <summary>
The Smart card resource manager has shut down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_NO_SERVICE">
            <summary>
The Smart card resource manager is not running.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_CARD_UNSUPPORTED">
            <summary>
The smart card does not meet minimal requirements for support.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_DUPLICATE_READER">
            <summary>
The reader driver did not produce a unique reader name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_READER_UNSUPPORTED">
            <summary>
The reader driver does not meet minimal requirements for support.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_PCI_TOO_SMALL">
            <summary>
The PCI Receive buffer was too small.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_P_SHUTDOWN">
            <summary>
The operation has been aborted to allow the server application to exit.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_READER_UNAVAILABLE">
            <summary>
The specified reader is not currently available for use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_NOT_TRANSACTED">
            <summary>
An attempt was made to end a non-existent transaction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_INVALID_ATR">
            <summary>
An ATR obtained from the registry is not a valid ATR string.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_F_UNKNOWN_ERROR">
            <summary>
An internal error has been detected, but the source is unknown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_F_COMM_ERROR">
            <summary>
An internal communications error has been detected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_SYSTEM_CANCELLED">
            <summary>
The action was cancelled by the system, presumably to log off or shut down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_INVALID_VALUE">
            <summary>
One or more of the supplied parameters values could not be properly interpreted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_NOT_READY">
            <summary>
The reader or smart card is not ready to accept commands.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_PROTO_MISMATCH">
            <summary>
The requested protocols are incompatible with the protocol currently in use with the smart card.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_CANT_DISPOSE">
            <summary>
The system could not dispose of the media in the requested manner.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_UNKNOWN_CARD">
            <summary>
The specified smart card name is not recognized.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_NO_SMARTCARD">
            <summary>
The operation requires a Smart Card, but no Smart Card is currently in the device.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_SHARING_VIOLATION">
            <summary>
The smart card cannot be accessed because of other connections outstanding.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_TIMEOUT">
            <summary>
The user-specified timeout value has expired.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_UNKNOWN_READER">
            <summary>
The specified reader name is not recognized.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_INSUFFICIENT_BUFFER">
            <summary>
The data buffer to receive returned data is too small for the returned data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_F_WAITED_TOO_LONG">
            <summary>
An internal consistency timer has expired.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_NO_MEMORY">
            <summary>
Not enough memory available to complete this command.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_INVALID_TARGET">
            <summary>
Registry startup information is missing or invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_INVALID_PARAMETER">
            <summary>
One or more of the supplied parameters could not be properly interpreted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_INVALID_HANDLE">
            <summary>
The supplied handle was invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_E_CANCELLED">
            <summary>
The action was cancelled by an SCardCancel request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCARD_F_INTERNAL_ERROR">
            <summary>
An internal consistency check failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_ERROR_NOT_INSTALLED">
            <summary>
No installed components were detected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_UNRECOVERABLE_STACK_OVERFLOW">
            <summary>
An unrecoverable stack overflow was encountered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DRIVER_STORE_DELETE_FAILED">
            <summary>
A problem was encountered while attempting to delete the driver from the store.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_FILE_HASH_NOT_IN_CATALOG">
            <summary>
The hash for the file is not present in the specified catalog file. The file is likely corrupt or the victim of tampering.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_WRONG_INF_TYPE">
            <summary>
The specified INF is the wrong type for this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DRIVER_INSTALL_BLOCKED">
            <summary>
The installation of this driver is forbidden by system policy. Contact your system administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DEVICE_INSTALL_BLOCKED">
            <summary>
The installation of this device is forbidden by system policy. Contact your system administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DRIVER_STORE_ADD_FAILED">
            <summary>
A problem was encountered while attempting to add the driver to the store.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DEVICE_INSTALLER_NOT_READY">
            <summary>
One of the installers for this device cannot perform the installation at this time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_ONLY_VALIDATE_VIA_AUTHENTICODE">
            <summary>
The file may only be validated by a catalog signed via Authenticode(tm).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_SIGNATURE_OSATTRIBUTE_MISMATCH">
            <summary>
The software was tested for compliance with Windows Logo requirements on a different version of Windows, and may not be compatible with this version.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_AUTHENTICODE_PUBLISHER_NOT_TRUSTED">
            <summary>
The publisher of an Authenticode(tm) signed catalog was not established as trusted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_AUTHENTICODE_TRUST_NOT_ESTABLISHED">
            <summary>
The publisher of an Authenticode(tm) signed catalog has not yet been established as trusted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_AUTHENTICODE_TRUSTED_PUBLISHER">
            <summary>
The INF was signed with an Authenticode(tm) catalog from a trusted publisher.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_AUTHENTICODE_DISALLOWED">
            <summary>
Authenticode(tm) signature verification is not supported for the specified INF.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_AUTHENTICODE_CATALOG">
            <summary>
A file could not be verified because it does not have an associated catalog signed via Authenticode(tm).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DI_FUNCTION_OBSOLETE">
            <summary>
The requested device install operation is obsolete.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_INF_IN_USE_BY_DEVICES">
            <summary>
One or more devices are presently installed using the specified INF.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NOT_AN_INSTALLED_OEM_INF">
            <summary>
The specified file is not an installed OEM INF.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_REMOTE_REQUEST_UNSUPPORTED">
            <summary>
The requested operation is not supported for a remote machine.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_PNP_REGISTRY_ERROR">
            <summary>
A problem was encountered when accessing the Plug and Play registry database.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_UNKNOWN_EXCEPTION">
            <summary>
An unknown exception was encountered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_SCE_DISABLED">
            <summary>
The Security Configuration Editor (SCE) APIs have been disabled on this Embedded product.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_INCORRECTLY_COPIED_INF">
            <summary>
An INF was copied into the Windows INF directory in an improper manner.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_SET_SYSTEM_RESTORE_POINT">
            <summary>
The operation involving unsigned file copying was rolled back, so that a system restore point could be set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_IN_WOW64">
            <summary>
Operation not allowed in WOW64.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DRIVER_NONNATIVE">
            <summary>
Driver is not intended for this platform.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_INVALID_TARGET">
            <summary>
Cannot copy to specified target.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_CANT_REMOVE_DEVINST">
            <summary>
The device could not be dynamically removed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NOT_DISABLEABLE">
            <summary>
The device cannot be disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DEVINSTALL_QUEUE_NONNATIVE">
            <summary>
An invalid attempt was made to use a device installation file queue for verification of digital signatures relative to other platforms.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_CATALOG_FOR_OEM_INF">
            <summary>
The third-party INF does not contain digital signature information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NON_WINDOWS_DRIVER">
            <summary>
The driver selected for this device does not support Windows.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NON_WINDOWS_NT_DRIVER">
            <summary>
The driver selected for this device does not support Windows Vista.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_INVALID_FILTER_DRIVER">
            <summary>
One of the filter drivers installed for this device is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DI_DONT_INSTALL">
            <summary>
The class installer has denied the request to install or upgrade this device.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_INVALID_INF_LOGCONFIG">
            <summary>
A logical configuration specified in this INF is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_DEVICE_ICON">
            <summary>
There is no icon that represents this device or device type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_COMPAT_DRIVERS">
            <summary>
There are no compatible drivers for this device.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_INVALID_COINSTALLER">
            <summary>
The device's co-installer is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DI_POSTPROCESSING_REQUIRED">
            <summary>
The device's co-installer has additional work to perform after installation is complete.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_SUCH_DEVICE_INTERFACE">
            <summary>
The requested device interface is not present in the system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_INVALID_PROPPAGE_PROVIDER">
            <summary>
The property page provider registry entry is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_CONFIGMGR_SERVICES">
            <summary>
The Plug and Play service is not available on the remote machine.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_MACHINE_UNAVAILABLE">
            <summary>
The machine selected for remote communication is not available at this time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_REMOTE_COMM_FAILURE">
            <summary>
A general remote communication error occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_INVALID_MACHINENAME">
            <summary>
The specified machine name does not conform to UNC naming conventions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_INVALID_REFERENCE_STRING">
            <summary>
The reference string supplied for this interface device is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_SUCH_INTERFACE_CLASS">
            <summary>
This interface class does not exist in the system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_BAD_INTERFACE_INSTALLSECT">
            <summary>
An interface installation section in this INF is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DEVICE_INTERFACE_REMOVED">
            <summary>
The operation cannot be performed because the device interface has been removed from the system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DEVICE_INTERFACE_ACTIVE">
            <summary>
The operation cannot be performed because the device interface is currently active.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE">
            <summary>
There is presently no default device interface designated for this interface class.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_ASSOCIATED_SERVICE">
            <summary>
The installation failed because a function driver was not specified for this device instance.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_CLASS_DRIVER_LIST">
            <summary>
There is no class driver list for the device information element.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_BAD_SERVICE_INSTALLSECT">
            <summary>
A service installation section in this INF is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_FILEQUEUE_LOCKED">
            <summary>
The operation cannot be performed because the file queue is locked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_CLASSINSTALL_PARAMS">
            <summary>
No class installer parameters have been set for the device information set or element.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DI_BAD_PATH">
            <summary>
The specified path does not contain any applicable device INFs.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DEVINFO_DATA_LOCKED">
            <summary>
The operation cannot be performed because the device information element is locked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DEVINFO_LIST_LOCKED">
            <summary>
The operation cannot be performed because the device information set is locked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_DEVICE_SELECTED">
            <summary>
There is no device information element currently selected for this device information set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_INVALID_HWPROFILE">
            <summary>
The specified hardware profile does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DI_NOFILECOPY">
            <summary>
The operation does not require any files to be copied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DI_DO_DEFAULT">
            <summary>
The class installer has indicated that the default action should be performed for this installation request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_INVALID_CLASS_INSTALLER">
            <summary>
The class installer registry entry is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_CANT_LOAD_CLASS_ICON">
            <summary>
The icon representing this install class cannot be loaded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_SUCH_DEVINST">
            <summary>
The device instance does not exist in the hardware tree.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_INF">
            <summary>
The INF from which a driver list is to be built does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_INVALID_REG_PROPERTY">
            <summary>
The device property code is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DEVINFO_NOT_REGISTERED">
            <summary>
The operation cannot be performed on a device information element that has not been registered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DEVINST_ALREADY_EXISTS">
            <summary>
The device instance cannot be created because it already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_INVALID_CLASS">
            <summary>
The install class is not present or is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_INVALID_DEVINST_NAME">
            <summary>
The device instance name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_KEY_DOES_NOT_EXIST">
            <summary>
The requested device registry key does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_DRIVER_SELECTED">
            <summary>
There is no driver selected for the device information set or element.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_DUPLICATE_FOUND">
            <summary>
An existing device was found that is a duplicate of the device being manually installed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_CLASS_MISMATCH">
            <summary>
The INF or the device information set or element does not match the specified install class.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_ASSOCIATED_CLASS">
            <summary>
The INF or the device information set or element does not have an associated install class.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_NO_BACKUP">
            <summary>
The files affected by the installation of this file queue have not been backed up for uninstall.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_LINE_NOT_FOUND">
            <summary>
The required line was not found in the INF.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_SECTION_NOT_FOUND">
            <summary>
The required section was not found in the INF.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_WRONG_INF_STYLE">
            <summary>
The style of the INF is different than what was requested.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_GENERAL_SYNTAX">
            <summary>
The syntax of the INF is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_SECTION_NAME_TOO_LONG">
            <summary>
An INF section was encountered whose name exceeds the maximum section name length.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_BAD_SECTION_NAME_LINE">
            <summary>
A section name marker in the INF is not complete, or does not exist on a line by itself.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SPAPI_E_EXPECTED_SECTION_NAME">
            <summary>
A non-empty line was encountered in the INF before the start of a section.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_INVALID_NAME">
            <summary>
The certificate has an invalid name. The name is not included in the permitted list or is explicitly excluded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_INVALID_POLICY">
            <summary>
The certificate has invalid policy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_UNTRUSTEDCA">
            <summary>
A certification chain processed correctly, but one of the CA certificates is not trusted by the policy provider.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TRUST_E_EXPLICIT_DISTRUST">
            <summary>
The certificate was explicitly marked as untrusted by the user.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_WRONG_USAGE">
            <summary>
The certificate is not valid for the requested usage.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_CN_NO_MATCH">
            <summary>
The certificate's CN name does not match the passed value.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_REVOCATION_FAILURE">
            <summary>
The revocation process could not continue - the certificate(s) could not be checked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_UNTRUSTEDTESTROOT">
            <summary>
The certification path terminates with the test root which is not trusted with the current policy settings.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_REVOKED">
            <summary>
A certificate was explicitly revoked by its issuer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TRUST_E_FAIL">
            <summary>
Generic trust failure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_CHAINING">
            <summary>
A certificate chain could not be built to a trusted root authority.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_UNTRUSTEDROOT">
            <summary>
A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_MALFORMED">
            <summary>
A certificate is missing or has an empty value for an important field, such as a subject or issuer name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_ISSUERCHAINING">
            <summary>
A parent of a given certificate in fact did not issue that child certificate.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_PURPOSE">
            <summary>
A certificate being used for a purpose other than the ones specified by its CA.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_CRITICAL">
            <summary>
A certificate contains an unknown extension that is marked 'critical'.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_PATHLENCONST">
            <summary>
A path length constraint in the certification chain has been violated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_ROLE">
            <summary>
A certificate that can only be used as an end-entity is being used as a CA or visa versa.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_VALIDITYPERIODNESTING">
            <summary>
The validity periods of the certification chain do not nest correctly.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERT_E_EXPIRED">
            <summary>
A required certificate is not within its validity period when verifying against the current system clock or the timestamp in the signed file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TRUST_E_NOSIGNATURE">
            <summary>
No signature was present in the subject.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PERSIST_E_NOTSELFSIZING">
            <summary>
This object does not read and write self-sizing data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PERSIST_E_SIZEINDEFINITE">
            <summary>
The size of the indefinite-sized data could not be determined.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.PERSIST_E_SIZEDEFINITE">
            <summary>
The size of the data could not be determined.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DIGSIG_E_CRYPTO">
            <summary>
Unspecified cryptographic failure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DIGSIG_E_EXTENSIBILITY">
            <summary>
Reading / writing Extensions where Attributes are appropriate, and visa versa.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DIGSIG_E_DECODE">
            <summary>
Error due to problem in ASN.1 decoding process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DIGSIG_E_ENCODE">
            <summary>
Error due to problem in ASN.1 encoding process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TRUST_E_SUBJECT_NOT_TRUSTED">
            <summary>
The subject is not trusted for the specified action.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TRUST_E_SUBJECT_FORM_UNKNOWN">
            <summary>
The form specified for the subject is not one supported or known by the specified trust provider.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TRUST_E_ACTION_UNKNOWN">
            <summary>
The trust verification action specified is not supported by the specified trust provider.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TRUST_E_PROVIDER_UNKNOWN">
            <summary>
Unknown trust provider.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CRED_REQUIRES_CONFIRMATION">
            <summary>
The requested credential requires confirmation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_STRUCTURE">
            <summary>
Some kind of structural error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_PCONST_CHECK">
            <summary>
A check failed in a partially constant table.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_DSIG_STRUCTURE">
            <summary>
The structure of the DSIG table is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_BADVERSION">
            <summary>
There is a bad version number in the file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_CRYPT">
            <summary>
A call to a CryptoAPI function failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_FILE">
            <summary>
Failed on a file operation (open, map, read, write).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_NOT_OPENTYPE">
            <summary>
The file is not an OpenType file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_FAILED_HINTS_CHECK">
            <summary>
The file did not pass the hints check.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_FAILED_POLICY">
            <summary>
The signature does not have the correct attributes for the policy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_FILE_CHECKSUM">
            <summary>
The file checksum is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_TABLE_CHECKSUM">
            <summary>
A table checksum is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_FILETOOSMALL">
            <summary>
File is too small to contain the last table.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_TABLE_PADBYTES">
            <summary>
Too many pad bytes between tables or pad bytes are not 0.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_TABLES_OVERLAP">
            <summary>
Two or more tables overlap.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_BAD_FIRST_TABLE_PLACEMENT">
            <summary>
First table does not appear after header information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_TABLE_LONGWORD">
            <summary>
A table does not start on a long word boundary.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_TABLE_TAGORDER">
            <summary>
Duplicate table tags or tags out of alphabetical order.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_BAD_OFFSET_TABLE">
            <summary>
The offset table has incorrect values.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_BAD_MAGICNUMBER">
            <summary>
The magic number in the head table is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_NOHEADTABLE">
            <summary>
Could not find the head table in the file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_CANTGETOBJECT">
            <summary>
Could not retrieve an object from the file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MSSIPOTF_E_OUTOFMEMRANGE">
            <summary>
Tried to reference a part of the file outside the proper range.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TRUST_E_FINANCIAL_CRITERIA">
            <summary>
The certificate does not meet or contain the Authenticode(tm) financial extensions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TRUST_E_BASIC_CONSTRAINTS">
            <summary>
A certificate's basic constraint extension has not been observed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TRUST_E_BAD_DIGEST">
            <summary>
The digital signature of the object did not verify.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TRUST_E_TIME_STAMP">
            <summary>
The timestamp signature and/or certificate could not be verified or is malformed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TRUST_E_CERT_SIGNATURE">
            <summary>
The signature of the certificate cannot be verified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TRUST_E_COUNTER_SIGNER">
            <summary>
One of the counter signatures was invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TRUST_E_NO_SIGNER_CERT">
            <summary>
The certificate for the signer of the message is invalid or not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TRUST_E_SYSTEM_ERROR">
            <summary>
A system-level error occurred while verifying trust.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XENROLL_E_KEYSPEC_SMIME_MISMATCH">
            <summary>
Signing certificate cannot include SMIME extension.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XENROLL_E_RESPONSE_KA_HASH_MISMATCH">
            <summary>
There is a key archival hash mismatch between the request and the response.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XENROLL_E_RESPONSE_UNEXPECTED_KA_HASH">
            <summary>
An unexpected key archival hash attribute was found in the response.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XENROLL_E_RESPONSE_KA_HASH_NOT_FOUND">
            <summary>
The key archival hash attribute was not found in the response.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XENROLL_E_CANNOT_ADD_ROOT_CERT">
            <summary>
You cannot add the root CA certificate into your local store.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XENROLL_E_KEY_NOT_EXPORTABLE">
            <summary>
The key is not exportable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_TOO_MANY_SIGNATURES">
            <summary>
The certificate template requires too many RA signatures. Only one RA signature is allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_CERT_TYPE_OVERLAP">
            <summary>
The certificate template renewal period is longer than the certificate validity period. The template should be reconfigured or the CA certificate renewed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_UNKNOWN_CERT_TYPE">
            <summary>
One or more certificate templates to be enabled on this certification authority could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_SUBJECT_EMAIL_REQUIRED">
            <summary>
The EMail name is unavailable and cannot be added to the Subject or Subject Alternate name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_KEY_LENGTH">
            <summary>
The public key does not meet the minimum size required by the specified certificate template.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_ARCHIVED_KEY_UNEXPECTED">
            <summary>
The request includes a private key for archival by the server, but key archival is not enabled for the specified certificate template.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_SUBJECT_DNS_REQUIRED">
            <summary>
The DNS name is unavailable and cannot be added to the Subject Alternate name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_SUBJECT_DIRECTORY_GUID_REQUIRED">
            <summary>
The Active Directory GUID is unavailable and cannot be added to the Subject Alternate name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_SUBJECT_UPN_REQUIRED">
            <summary>
The UPN is unavailable and cannot be added to the Subject Alternate name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_ISSUANCE_POLICY_REQUIRED">
            <summary>
The request is missing one or more required signature issuance policies.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_SIGNATURE_REJECTED">
            <summary>
One or more signatures did not include the required application or issuance policies. The request is missing one or more required valid signatures.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_SIGNATURE_COUNT">
            <summary>
The request is missing one or more required signatures.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_SIGNATURE_POLICY_REQUIRED">
            <summary>
The request is missing required signature policy information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_TEMPLATE_POLICY_REQUIRED">
            <summary>
The template is missing a required signature policy attribute.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_BAD_TEMPLATE_VERSION">
            <summary>
The request template version is newer than the supported template version.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_BAD_RENEWAL_SUBJECT">
            <summary>
The request was made on behalf of a subject other than the caller. The certificate template must be configured to require at least one signature to authorize the request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_SMIME_REQUIRED">
            <summary>
The request is missing a required SMIME capabilities extension.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_ARCHIVED_KEY_REQUIRED">
            <summary>
The request is missing a required private key for archival by the server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_SUBJECT_ALT_NAME_REQUIRED">
            <summary>
The request is missing a required Subject Alternate name extension.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_TEMPLATE_CONFLICT">
            <summary>
The request contains conflicting template information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_NO_CERT_TYPE">
            <summary>
The request contains no certificate template information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_UNSUPPORTED_CERT_TYPE">
            <summary>
The requested certificate template is not supported by this CA.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_DOWNLEVEL_DC_SSL_OR_UPGRADE">
            <summary>
The contacted domain controller cannot support signed LDAP traffic. Update the domain controller or configure Certificate Services to use SSL for Active Directory access.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_TEMPLATE_DENIED">
            <summary>
The permissions on the certificate template do not allow the current user to enroll for this type of certificate.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_ENROLL_DENIED">
            <summary>
The permissions on this certification authority do not allow the current user to enroll for certificates.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_ALIGNMENT_FAULT">
            <summary>
A memory reference caused a data alignment fault.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_NO_DB_SESSIONS">
            <summary>
An attempt was made to open a Certification Authority database session, but there are already too many active sessions. The server may need to be configured to allow additional sessions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_BAD_RENEWAL_CERT_ATTRIBUTE">
            <summary>
The request contains an invalid renewal certificate attribute.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_NO_CAADMIN_DEFINED">
            <summary>
At least one security principal must have the permission to manage this CA.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_BAD_REQUEST_KEY_ARCHIVAL">
            <summary>
The request is incorrectly formatted. The encrypted private key must be in an unauthenticated attribute in an outermost signature.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_NO_VALID_KRA">
            <summary>
Cannot archive private key. The certification authority could not verify one or more key recovery certificates.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_KEY_ARCHIVAL_NOT_CONFIGURED">
            <summary>
Cannot archive private key. The certification authority is not configured for key archival.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_RESTRICTEDOFFICER">
            <summary>
The operation is denied. It can only be performed by a certificate manager that is allowed to manage certificates for the current requester.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_ROLECONFLICT">
            <summary>
The operation is denied. The user has multiple roles assigned and the certification authority is configured to enforce role separation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_ENCODING_LENGTH">
            <summary>
The certificate contains an encoded length that is potentially incompatible with older enrollment software.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_SERVER_SUSPENDED">
            <summary>
Certificate service has been suspended for a database restore operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_INVALID_CA_CERTIFICATE">
            <summary>
The certification authority's certificate contains invalid data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_PROPERTY_EMPTY">
            <summary>
The requested property value is empty.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_BAD_REQUESTSTATUS">
            <summary>
The request's current status does not allow this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_NO_REQUEST">
            <summary>
The request does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CERTSRV_E_BAD_REQUESTSUBJECT">
            <summary>
The request subject name is invalid or too long.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_NOEOD">
            <summary>
ASN1 end of data expected
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_EXTENDED">
            <summary>
ASN1 skipped unknown extension(s).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_NYI">
            <summary>
ASN1 not yet implemented.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_PDU_TYPE">
            <summary>
ASN1 bad PDU type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_UTF8">
            <summary>
ASN1 bad unicode (UTF8).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_RULE">
            <summary>
ASN1 bad encoding rule.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_CHOICE">
            <summary>
ASN1 bad choice value.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_BADTAG">
            <summary>
ASN1 bad tag value met.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_BADREAL">
            <summary>
ASN1 bad real value.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_BADARGS">
            <summary>
ASN1 bad arguments to function call.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_BADPDU">
            <summary>
ASN1 function not supported for this PDU.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_OVERFLOW">
            <summary>
ASN1 buffer overflow.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_MEMORY">
            <summary>
ASN1 out of memory.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_CONSTRAINT">
            <summary>
ASN1 constraint violated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_LARGE">
            <summary>
ASN1 value too large.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_CORRUPT">
            <summary>
ASN1 corrupted data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_EOD">
            <summary>
ASN1 unexpected end of data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_INTERNAL">
            <summary>
ASN1 internal encode or decode error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ASN1_ERROR">
            <summary>
ASN1 Certificate encode/decode error code base. The ASN1 error values are offset by CRYPT_E_ASN1_ERROR.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_CANT_CLOSE_TRACE_FILE">
            <summary>
OSS ASN.1 Error: Trace file error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_MUTEX_NOT_CREATED">
            <summary>
OSS ASN.1 Error: System resource error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_OPEN_TYPE_ERROR">
            <summary>
OSS ASN.1 Error: Program link error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_PER_DLL_NOT_LINKED">
            <summary>
OSS ASN.1 Error: Program link error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_BERDER_DLL_NOT_LINKED">
            <summary>
OSS ASN.1 Error: Program link error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_API_DLL_NOT_LINKED">
            <summary>
OSS ASN.1 Error: Program link error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_PDV_CODE_NOT_LINKED">
            <summary>
OSS ASN.1 Error: Program link error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_PDV_DLL_NOT_LINKED">
            <summary>
OSS ASN.1 Error: Program link error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_MEM_MGR_DLL_NOT_LINKED">
            <summary>
OSS ASN.1 Error: Program link error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_COMPARATOR_CODE_NOT_LINKED">
            <summary>
OSS ASN.1 Error: Program link error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_COMPARATOR_DLL_NOT_LINKED">
            <summary>
OSS ASN.1 Error: Program link error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_CONSTRAINT_DLL_NOT_LINKED">
            <summary>
OSS ASN.1 Error: Program link error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_COPIER_DLL_NOT_LINKED">
            <summary>
OSS ASN.1 Error: Program link error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_OUT_OF_RANGE">
            <summary>
OSS ASN.1 Error: Program link error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_REAL_CODE_NOT_LINKED">
            <summary>
OSS ASN.1 Error: Program link error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_REAL_DLL_NOT_LINKED">
            <summary>
OSS ASN.1 Error: Program link error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_TYPE_NOT_SUPPORTED">
            <summary>
OSS ASN.1 Error: Invalid data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_TABLE_MISMATCH">
            <summary>
OSS ASN.1 Error: Invalid data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_TRACE_FILE_ALREADY_OPEN">
            <summary>
OSS ASN.1 Error: Trace file error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_CANT_OPEN_TRACE_FILE">
            <summary>
OSS ASN.1 Error: Trace file error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_OID_DLL_NOT_LINKED">
            <summary>
OSS ASN.1 Error: Program link error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_UNIMPLEMENTED">
            <summary>
OSS ASN.1 Error: Function not implemented.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_CANT_OPEN_TRACE_WINDOW">
            <summary>
OSS ASN.1 Error: Trace file error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_UNAVAIL_ENCRULES">
            <summary>
OSS ASN.1 Error: Encode/Decode function not implemented.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_BAD_ENCRULES">
            <summary>
OSS ASN.1 Error: Invalid data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_NULL_FCN">
            <summary>
OSS ASN.1 Error: Invalid data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_NULL_TBL">
            <summary>
OSS ASN.1 Error: Invalid data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_ACCESS_SERIALIZATION_ERROR">
            <summary>
OSS ASN.1 Error: Multi-threading conflict.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_FATAL_ERROR">
            <summary>
OSS ASN.1 Error: Internal Error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_CONSTRAINT_VIOLATED">
            <summary>
OSS ASN.1 Error: Invalid data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_TOO_LONG">
            <summary>
OSS ASN.1 Error: Invalid data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_BAD_TABLE">
            <summary>
OSS ASN.1 Error: Invalid data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_MEM_ERROR">
            <summary>
OSS ASN.1 Error: Access violation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_INDEFINITE_NOT_SUPPORTED">
            <summary>
OSS ASN.1 Error: Unsupported BER indefinite-length encoding.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_BAD_TIME">
            <summary>
OSS ASN.1 Error: Invalid data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_BAD_PTR">
            <summary>
OSS ASN.1 Error: Invalid data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_LIMITED">
            <summary>
OSS ASN.1 Error: Internal Error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_PDU_MISMATCH">
            <summary>
OSS ASN.1 Error: Encode/Decode Error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_OUT_MEMORY">
            <summary>
OSS ASN.1 Error: Out of memory.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_BAD_VERSION">
            <summary>
OSS ASN.1 Error: Encode/Decode version mismatch.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_BAD_ARG">
            <summary>
OSS ASN.1 Error: Invalid argument.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_DATA_ERROR">
            <summary>
OSS ASN.1 Error: Invalid data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_MORE_INPUT">
            <summary>
OSS ASN.1 Error: Output buffer is too small, the decoded data has been truncated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_PDU_RANGE">
            <summary>
OSS ASN.1 Error: Unknown ASN.1 data type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_NEGATIVE_UINTEGER">
            <summary>
OSS ASN.1 Error: Signed integer is encoded as a unsigned integer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OSS_MORE_BUF">
            <summary>
OSS ASN.1 Error: Output Buffer is too small.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_OSS_ERROR">
            <summary>
OSS Certificate encode/decode error code base
See asn1code.h for a definition of the OSS runtime errors. The OSS error values are offset by CRYPT_E_OSS_ERROR.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_MISSING_PUBKEY_PARA">
            <summary>
The public key's algorithm parameters are missing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_NO_TRUSTED_SIGNER">
            <summary>
None of the signers of the cryptographic message or certificate trust list is trusted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_NOT_IN_CTL">
            <summary>
The subject was not found in a Certificate Trust List (CTL).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_VERIFY_USAGE_OFFLINE">
            <summary>
Since the server was offline, the called function was unable to complete the usage check.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_NO_VERIFY_USAGE_CHECK">
            <summary>
The called function was unable to do a usage check on the subject.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_NO_VERIFY_USAGE_DLL">
            <summary>
No DLL or exported function was found to verify subject usage.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_SECURITY_SETTINGS">
            <summary>
The cryptographic operation failed due to a local security option setting.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_FILERESIZED">
            <summary>
The Put operation cannot continue. The file needs to be resized. However, there is already a signature present. A complete signing operation must be done.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_NOT_CHAR_STRING">
            <summary>
The dwValueType for the CERT_NAME_VALUE is not one of the character strings. Most likely it is either a CERT_RDN_ENCODED_BLOB or CERT_TDN_OCTED_STRING.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_INVALID_X500_STRING">
            <summary>
The string contains an invalid X500 name attribute key, oid, value or delimiter.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_INVALID_IA5_STRING">
            <summary>
The string contains a character not in the 7 bit ASCII character set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_INVALID_PRINTABLE_STRING">
            <summary>
The string contains a non-printable character.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_INVALID_NUMERIC_STRING">
            <summary>
The string contains a non-numeric character.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_NOT_IN_REVOCATION_DATABASE">
            <summary>
The certificate is not in the revocation server's database.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_REVOCATION_OFFLINE">
            <summary>
The revocation function was unable to check revocation because the revocation server was offline.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_NO_REVOCATION_CHECK">
            <summary>
The revocation function was unable to check revocation for the certificate.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_NO_REVOCATION_DLL">
            <summary>
No Dll or exported function was found to verify revocation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_REVOKED">
            <summary>
The certificate is revoked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_PENDING_CLOSE">
            <summary>
Final closure is pending until additional frees or closes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_NO_SIGNER">
            <summary>
The signed cryptographic message does not have a signer for the specified signer index.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_BAD_MSG">
            <summary>
Not a cryptographic message or the cryptographic message is not formatted correctly.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_NO_DECRYPT_CERT">
            <summary>
Cannot find the certificate and private key to use for decryption.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_NO_KEY_PROPERTY">
            <summary>
Cannot find the certificate and private key for decryption.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_UNEXPECTED_MSG_TYPE">
            <summary>
The certificate does not have a property that references a private key.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_NO_MATCH">
            <summary>
Cannot find the requested object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_DELETED_PREV">
            <summary>
The previous certificate or CRL context was deleted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_SELF_SIGNED">
            <summary>
The specified certificate is self signed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_NO_PROVIDER">
            <summary>
No provider was specified for the store or object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_EXISTS">
            <summary>
The object or property already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_NOT_FOUND">
            <summary>
Cannot find object or property.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_FILE_ERROR">
            <summary>
An error occurred while reading or writing to a file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_BAD_ENCODE">
            <summary>
An error occurred during encode or decode operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_BAD_LEN">
            <summary>
The length specified for the output data was insufficient.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_I_NEW_PROTECTION_REQUIRED">
            <summary>
The protected data needs to be re-protected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_STREAM_INSUFFICIENT_DATA">
            <summary>
The streamed cryptographic message requires more data to complete the decode operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_STREAM_MSG_NOT_READY">
            <summary>
The streamed cryptographic message is not ready to return data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ATTRIBUTES_MISSING">
            <summary>
The cryptographic message does not contain all of the requested attributes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_SIGNER_NOT_FOUND">
            <summary>
Cannot find the original signer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ISSUER_SERIALNUMBER">
            <summary>
Invalid issuer and/or serial number.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_CONTROL_TYPE">
            <summary>
Invalid control type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_RECIPIENT_NOT_FOUND">
            <summary>
The enveloped-data message does not contain the specified recipient.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_NOT_DECRYPTED">
            <summary>
The content of the cryptographic message has not been decrypted yet.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_ALREADY_DECRYPTED">
            <summary>
The content of the cryptographic message has already been decrypted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_INVALID_INDEX">
            <summary>
The index value is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_HASH_VALUE">
            <summary>
The hash value is not correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_AUTH_ATTR_MISSING">
            <summary>
The cryptographic message does not contain an expected authenticated attribute.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_UNEXPECTED_ENCODING">
            <summary>
Unexpected cryptographic message encoding.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_INVALID_MSG_TYPE">
            <summary>
Invalid cryptographic message type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_OID_FORMAT">
            <summary>
The object identifier is poorly formatted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_UNKNOWN_ALGO">
            <summary>
Unknown cryptographic algorithm.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CRYPT_E_MSG_ERROR">
            <summary>
An error occurred while performing an operation on a cryptographic message.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_I_NO_RENEGOTIATION">
            <summary>
The recipient rejected the renegotiation request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_POLICY_NLTM_ONLY">
            <summary>
Client policy does not allow credential delegation to target server with NLTM only authentication.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_DELEGATION_POLICY">
            <summary>
Client policy does not allow credential delegation to target server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_INVALID_PARAMETER">
            <summary>
One or more of the parameters passed to the function was invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_I_SIGNATURE_NEEDED">
            <summary>
A signature operation must be performed before the user can authenticate.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_KDC_CERT_REVOKED">
            <summary>
The domain controller certificate used for smartcard logon has been revoked. Please contact your system administrator with the contents of your system event log.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_KDC_CERT_EXPIRED">
            <summary>
The domain controller certificate used for smartcard logon has expired. Please contact your system administrator with the contents of your system event log.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_ISSUING_CA_UNTRUSTED_KDC">
            <summary>
An untrusted certificate authority was detected while processing the domain controller certificate used for authentication. There is additional information in the system event log. Please contact your system administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_REVOCATION_OFFLINE_KDC">
            <summary>
The revocation status of the domain controller certificate used for smartcard authentication could not be determined. There is additional information in the system event log. Please contact your system administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_CROSSREALM_DELEGATION_FAILURE">
            <summary>
An attempt was made by this server to make a Kerberos constrained delegation request for a target outside of the server's realm. This is not supported, and indicates a misconfiguration on this server's allowed to delegate to list. Please contact your administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_NO_S4U_PROT_SUPPORT">
            <summary>
The Kerberos subsystem encountered an error. A service for user protocol request was made against a domain controller which does not support service for user.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_SMARTCARD_CERT_EXPIRED">
            <summary>
The smartcard certificate used for authentication has expired. Please contact your system administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_PKINIT_CLIENT_FAILURE">
            <summary>
The smartcard certificate used for authentication was not trusted. Please contact your system administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_REVOCATION_OFFLINE_C">
            <summary>
The revocation status of the smartcard certificate used for authentication could not be determined. Please contact your system administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_ISSUING_CA_UNTRUSTED">
            <summary>
An untrusted certificate authority was detected While processing the smartcard certificate used for authentication. Please contact your system administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_SMARTCARD_CERT_REVOKED">
            <summary>
The smartcard certificate used for authentication has been revoked. Please contact your system administrator. There may be additional information in the event log.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_DOWNGRADE_DETECTED">
            <summary>
The system detected a possible attempt to compromise security. Please ensure that you can contact the server that authenticated you.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_CERT_WRONG_USAGE">
            <summary>
The certificate is not valid for the requested usage.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_NO_KERB_KEY">
            <summary>
 SEC_E_NO_KERB_KEY
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_MULTIPLE_ACCOUNTS">
            <summary>
The received certificate was mapped to multiple accounts.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_BAD_BINDINGS">
            <summary>
Client's supplied SSPI channel bindings were incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_DELEGATION_REQUIRED">
            <summary>
The requested operation cannot be completed. The computer must be trusted for delegation and the current user account must be configured to allow delegation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_UNSUPPORTED_PREAUTH">
            <summary>
An unsupported preauthentication mechanism was presented to the Kerberos package.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_KDC_UNKNOWN_ETYPE">
            <summary>
The encryption type requested is not supported by the KDC.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_KDC_UNABLE_TO_REFER">
            <summary>
The KDC was unable to generate a referral for the service requested.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_KDC_INVALID_REQUEST">
            <summary>
An invalid request was sent to the KDC.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_SHUTDOWN_IN_PROGRESS">
            <summary>
A system shutdown is in progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_SMARTCARD_LOGON_REQUIRED">
            <summary>
Smartcard logon is required and was not used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_PKINIT_NAME_MISMATCH">
            <summary>
The client certificate does not contain a valid UPN, or does not match the client name in the logon request. Please contact your administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_NO_PA_DATA">
            <summary>
Expected to find PA data for a hint of what etype to use, but it was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_TOO_MANY_PRINCIPALS">
            <summary>
The KDC reply contained more than one principal name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_STRONG_CRYPTO_NOT_SUPPORTED">
            <summary>
The other end of the security negotiation is requires strong crypto but it is not supported on the local machine.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_MUST_BE_KDC">
            <summary>
The local machine must be a Kerberos KDC (domain controller) and it is not.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_MAX_REFERRALS_EXCEEDED">
            <summary>
The number of maximum ticket referrals has been exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_CRYPTO_SYSTEM_INVALID">
            <summary>
The crypto system or checksum function is invalid because a required function is unavailable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_WRONG_CREDENTIAL_HANDLE">
            <summary>
The supplied credential handle does not match the credential associated with the security context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_NO_IP_ADDRESSES">
            <summary>
Unable to accomplish the requested task because the local machine does not have any IP addresses.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_NO_TGT_REPLY">
            <summary>
The client is trying to negotiate a context and the server requires user-to-user but didn't send a TGT reply.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_UNFINISHED_CONTEXT_DELETED">
            <summary>
A security context was deleted before the context was completed. This is considered a logon failure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_SECURITY_QOS_FAILED">
            <summary>
The security context could not be established due to a failure in the requested quality of service (e.g. mutual authentication or delegation).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_ALGORITHM_MISMATCH">
            <summary>
The client and server cannot communicate, because they do not possess a common algorithm.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_DECRYPT_FAILURE">
            <summary>
The specified data could not be decrypted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_ENCRYPT_FAILURE">
            <summary>
The specified data could not be encrypted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_CERT_EXPIRED">
            <summary>
The received certificate has expired.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_CERT_UNKNOWN">
            <summary>
An unknown error occurred while processing the certificate.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_ILLEGAL_MESSAGE">
            <summary>
The message received was unexpected or badly formatted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_UNTRUSTED_ROOT">
            <summary>
The certificate chain was issued by an authority that is not trusted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_TIME_SKEW">
            <summary>
The clocks on the client and server machines are skewed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_I_NO_LSA_CONTEXT">
            <summary>
There is no LSA mode context associated with this context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_WRONG_PRINCIPAL">
            <summary>
The target principal name is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_I_RENEGOTIATE">
            <summary>
The context data must be renegotiated with the peer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_I_INCOMPLETE_CREDENTIALS">
            <summary>
The credentials supplied were not complete, and could not be verified. Additional information can be returned from the context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_BUFFER_TOO_SMALL">
            <summary>
The buffers supplied to a function was too small.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_INCOMPLETE_CREDENTIALS">
            <summary>
The credentials supplied were not complete, and could not be verified. The context could not be initialized.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_INCOMPLETE_MESSAGE">
            <summary>
The supplied message is incomplete. The signature was not verified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_I_CONTEXT_EXPIRED">
            <summary>
The context has expired and can no longer be used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_CONTEXT_EXPIRED">
            <summary>
The context has expired and can no longer be used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_BAD_PKGID">
            <summary>
The requested security package does not exist
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_I_LOCAL_LOGON">
            <summary>
The logon was completed, but no network authority was available. The logon was made using locally known information
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_I_COMPLETE_AND_CONTINUE">
            <summary>
The function completed successfully, but both CompleteToken and this function must be called to complete the context
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_I_COMPLETE_NEEDED">
            <summary>
The function completed successfully, but CompleteToken must be called
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_I_CONTINUE_NEEDED">
            <summary>
The function completed successfully, but must be called again to complete the context
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_NO_AUTHENTICATING_AUTHORITY">
            <summary>
No authority could be contacted for authentication.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_OUT_OF_SEQUENCE">
            <summary>
The message supplied for verification is out of sequence
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_MESSAGE_ALTERED">
            <summary>
The message or signature supplied for verification has been altered
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_NO_CREDENTIALS">
            <summary>
No credentials are available in the security package
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_UNKNOWN_CREDENTIALS">
            <summary>
The credentials supplied to the package were not recognized
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_LOGON_DENIED">
            <summary>
The logon attempt failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_NO_IMPERSONATION">
            <summary>
The security context does not allow impersonation of the client
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_QOP_NOT_SUPPORTED">
            <summary>
The per-message Quality of Protection is not supported by the security package
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_CANNOT_PACK">
            <summary>
The security package is not able to marshall the logon buffer, so the logon attempt has failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_INVALID_TOKEN">
            <summary>
The token supplied to the function is invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_CANNOT_INSTALL">
            <summary>
The security package failed to initialize, and cannot be installed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_NOT_OWNER">
            <summary>
The caller is not the owner of the desired credentials
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_SECPKG_NOT_FOUND">
            <summary>
The requested security package does not exist
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_INTERNAL_ERROR">
            <summary>
The Local Security Authority cannot be contacted
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_TARGET_UNKNOWN">
            <summary>
The specified target is unknown or unreachable
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_UNSUPPORTED_FUNCTION">
            <summary>
The function requested is not supported
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_INVALID_HANDLE">
            <summary>
The handle specified is invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SEC_E_INSUFFICIENT_MEMORY">
            <summary>
Not enough memory is available to complete this request
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_HMAC_NOT_SUPPORTED">
            <summary>
The cryptographic provider does not support HMAC.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_UI_REQUIRED">
            <summary>
This operation requires input from the user.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_INTERNAL_ERROR">
            <summary>
An internal consistency check failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_DECRYPTION_FAILURE">
            <summary>
The specified data could not be decrypted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BUFFERS_OVERLAP">
            <summary>
The supplied buffers overlap incorrectly.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_NO_MORE_ITEMS">
            <summary>
No more data is available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_NOT_SUPPORTED">
            <summary>
The requested operation is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BUFFER_TOO_SMALL">
            <summary>
The buffer supplied to a function was too small.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_INVALID_PARAMETER">
            <summary>
The parameter is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_INVALID_HANDLE">
            <summary>
The supplied handle is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_FIXEDPARAMETER">
            <summary>
The key parameters could not be set because the CSP uses fixed parameters.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_TEMPORARY_PROFILE">
            <summary>
The profile for the user is a temporary profile.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_TOKEN_KEYSET_STORAGE_FULL">
            <summary>
The security token does not have storage space available for an additional container.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_SILENT_CONTEXT">
            <summary>
Provider could not perform the action since the context was acquired as silent.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_SYS_ERR">
            <summary>
A base error occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_FAIL">
            <summary>
An internal error occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_KEYSET_PARAM">
            <summary>
The Keyset parameter is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_PROV_DLL_NOT_FOUND">
            <summary>
Provider DLL could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_PROVIDER_DLL_FAIL">
            <summary>
Provider DLL failed to initialize correctly.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_SIGNATURE_FILE_BAD">
            <summary>
The digital signature file is corrupt.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_PROV_TYPE_NO_MATCH">
            <summary>
Provider type does not match registered value.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_KEYSET_ENTRY_BAD">
            <summary>
Keyset as registered is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_KEYSET_NOT_DEF">
            <summary>
The keyset is not defined.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_PROV_TYPE_ENTRY_BAD">
            <summary>
Provider type as registered is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_PROV_TYPE_NOT_DEF">
            <summary>
Provider type not defined.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_KEYSET">
            <summary>
Keyset does not exist
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_PUBLIC_KEY">
            <summary>
Provider's public key is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_PROV_TYPE">
            <summary>
Invalid provider type specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_PROVIDER">
            <summary>
Invalid provider specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_DOUBLE_ENCRYPT">
            <summary>
Data already encrypted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_NOT_FOUND">
            <summary>
Object was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_PERM">
            <summary>
Access denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_EXISTS">
            <summary>
Object already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_NO_MEMORY">
            <summary>
Insufficient memory available for the operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_NO_KEY">
            <summary>
Key does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_HASH_STATE">
            <summary>
Hash not valid for use in specified state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_KEY_STATE">
            <summary>
Key not valid for use in specified state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_TYPE">
            <summary>
Invalid type specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_FLAGS">
            <summary>
Invalid flags specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_ALGID">
            <summary>
Invalid algorithm specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_VER">
            <summary>
Bad Version of provider.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_SIGNATURE">
            <summary>
Invalid Signature.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_DATA">
            <summary>
Bad Data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_LEN">
            <summary>
Bad Length.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_KEY">
            <summary>
Bad Key.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_HASH">
            <summary>
Bad Hash.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.NTE_BAD_UID">
            <summary>
Bad UID.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BIZRULES_NOT_ENABLED">
            <summary>
Business rule scripts are disabled for the calling application.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALL_SIDS_FILTERED">
            <summary>
The SID filtering operation removed all SIDs.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_AUDITING_DISABLED">
            <summary>
The specified event is currently not being audited.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_UNEXPECTED">
            <summary>
An internal error occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_CANCEL_DISABLED">
            <summary>
Call Cancellation is disabled
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_ACNOTINITIALIZED">
            <summary>
The COM IAccessControl object is not initialized
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_DECODEFAILED">
            <summary>
Unable to decode the ACL in the stream provided by the user
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_FAILEDTOOPENPROCESSTOKEN">
            <summary>
Unable to open the access token of the server process
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INCOMPATIBLESTREAMVERSION">
            <summary>
The version of ACL format in the stream is not supported by this implementation of IAccessControl
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_ACESINWRONGORDER">
            <summary>
Not all the DENY_ACCESS ACEs are arranged in front of the GRANT_ACCESS ACEs in the stream.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_EXCEEDSYSACLLIMIT">
            <summary>
The number of ACEs in an ACL exceeds the system limit.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_FAILEDTOCLOSEHANDLE">
            <summary>
Unable to close a serialization handle or a file handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_FAILEDTOCREATEFILE">
            <summary>
Unable to create file
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_FAILEDTOGENUUID">
            <summary>
Unable to generate a uuid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_PATHTOOLONG">
            <summary>
Path too long
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_FAILEDTOGETWINDIR">
            <summary>
Unable to obtain the Windows directory
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_SETSERLHNDLFAILED">
            <summary>
Unable to set or reset a serialization handle
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_LOOKUPACCNAMEFAILED">
            <summary>
The system function, LookupAccountName, failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_NOMATCHINGNAMEFOUND">
            <summary>
Unable to find a trustee name that corresponds to a security identifier provided by the user
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_LOOKUPACCSIDFAILED">
            <summary>
The system function, LookupAccountSID, failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_NOMATCHINGSIDFOUND">
            <summary>
Unable to find a security identifier that corresponds to a trustee string provided by the user
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_CONVERSIONFAILED">
            <summary>
Unable to convert a wide character trustee string to a multibyte trustee string
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INVALIDSID">
            <summary>
One of the security identifiers provided by the user was invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_WRONGTRUSTEENAMESYNTAX">
            <summary>
One of the trustee strings provided by the user did not conform to the &lt;Domain&gt;\&lt;Name&gt; syntax and it was not the "*" string
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_NETACCESSAPIFAILED">
            <summary>
Either NetAccessDel or NetAccessAdd returned an error code.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_ACCESSCHECKFAILED">
            <summary>
The system function, AccessCheck, returned false
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_FAILEDTOSETDACL">
            <summary>
Unable to set a discretionary ACL into a security descriptor
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_FAILEDTOQUERYCLIENTBLANKET">
            <summary>
Unable to obtain the client's security blanket
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_TRUSTEEDOESNTMATCHCLIENT">
            <summary>
The client who called IAccessControl::IsAccessPermitted was not the trustee provided to the method
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_FAILEDTOGETTOKENINFO">
            <summary>
Unable to obtain user info from an access token
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_FAILEDTOOPENTHREADTOKEN">
            <summary>
Unable to open the access token of the current thread
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_FAILEDTOGETSECCTX">
            <summary>
Unable to obtain server's security context
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_FAILEDTOIMPERSONATE">
            <summary>
Unable to impersonate DCOM client
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_INVALID_STD_NAME">
            <summary>
Principal name is not a valid MSSTD name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_FULLSIC_REQUIRED">
            <summary>
Full subject issuer chain SSL principal name expected from the server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_NO_SYNC">
            <summary>
There are no synchronize objects to wait on.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_TIMEOUT">
            <summary>
This operation returned because the timeout period expired.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_NO_CONTEXT">
            <summary>
No context is associated with this call. This happens for some custom marshalled calls and on the client side of the call.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_INVALID_OBJREF">
            <summary>
The marshaled interface data packet (OBJREF) has an invalid or unknown format.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_REMOTE_DISABLED">
            <summary>
Remote calls are not allowed for this process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_ACCESS_DENIED">
            <summary>
Access is denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_NO_GOOD_SECURITY_PACKAGES">
            <summary>
No security packages are installed on this machine or the user is not logged on or there are no compatible security packages between the client and server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_TOO_LATE">
            <summary>
Security must be initialized before any interfaces are marshalled or unmarshalled. It cannot be changed once initialized.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_UNSECURE_CALL">
            <summary>
Impersonate on unsecure calls is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_CALL_COMPLETE">
            <summary>
Call context cannot be accessed after call completed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_WAITONTIMER">
            <summary>
OLE is waiting before retrying a request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_CALLPENDING">
            <summary>
OLE has sent a request and is waiting for a reply.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_INVALID_OBJECT">
            <summary>
The requested object does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_INVALID_IPID">
            <summary>
The requested object or interface does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_INVALID_EXTENSION">
            <summary>
OLE received a packet with an invalid extension.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_INVALID_HEADER">
            <summary>
OLE received a packet with an invalid header.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_VERSION_MISMATCH">
            <summary>
The version of OLE on the client and server machines does not match.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_THREAD_NOT_INIT">
            <summary>
CoInitialize has not been called on the current thread.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_WRONG_THREAD">
            <summary>
The application called an interface that was marshalled for a different thread.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_CANTCALLOUT_ININPUTSYNCCALL">
            <summary>
An outgoing call cannot be made since the application is dispatching an input-synchronous call.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_INVALID_CALLDATA">
            <summary>
A call control interfaces was called with invalid data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_SERVERCALL_REJECTED">
            <summary>
The message filter rejected the call.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_SERVERCALL_RETRYLATER">
            <summary>
The message filter indicated that the application is busy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_RETRY">
            <summary>
The object invoked chose not to process the call now. Try again later.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_DISCONNECTED">
            <summary>
The object invoked has disconnected from its clients.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_INVALIDMETHOD">
            <summary>
The method called does not exist on the server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_CHANGED_MODE">
            <summary>
Cannot change thread mode after it is set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_SERVERFAULT">
            <summary>
The server threw an exception.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_FAULT">
            <summary>
RPC could not call the server or could not return the results of calling the server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_NOT_REGISTERED">
            <summary>
The requested interface is not registered on the server object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_ATTEMPTED_MULTITHREAD">
            <summary>
Attempted to make calls on more than one thread in single threaded mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_OUT_OF_RESOURCES">
            <summary>
Could not allocate some required resource (memory, events, ...)
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_SYS_CALL_FAILED">
            <summary>
System call failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_SERVER_DIED_DNE">
            <summary>
The callee (server [not server application]) is not available and disappeared; all connections are invalid. The call did not execute.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_CANTCALLOUT_AGAIN">
            <summary>
There is no second outgoing call on same channel in DDE conversation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_INVALID_PARAMETER">
            <summary>
A particular parameter is invalid and cannot be (un)marshalled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_INVALID_DATA">
            <summary>
Received data is invalid; could be server or client data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_SERVER_CANTUNMARSHAL_DATA">
            <summary>
The server (callee) cannot unmarshall the parameter data - low memory, etc.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_SERVER_CANTMARSHAL_DATA">
            <summary>
The server (callee) cannot marshall the return data - low memory, etc.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_CLIENT_CANTUNMARSHAL_DATA">
            <summary>
The client (caller) cannot unmarshall the return data - low memory, etc.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_CLIENT_CANTMARSHAL_DATA">
            <summary>
The client (caller) cannot marshall the parameter data - low memory, etc.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_CANTTRANSMIT_CALL">
            <summary>
The call was not transmitted properly; the message queue was full and was not emptied after yielding.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_INVALID_DATAPACKET">
            <summary>
The data packet with the marshalled parameter data is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_CLIENT_DIED">
            <summary>
The caller (client) disappeared while the callee (server) was processing a call.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_SERVER_DIED">
            <summary>
The callee (server [not server application]) is not available and disappeared; all connections are invalid. The call may have executed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_CONNECTION_TERMINATED">
            <summary>
The connection terminated or is in a bogus state and cannot be used any more. Other connections are still valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_CANTCALLOUT_INEXTERNALCALL">
            <summary>
It is illegal to call out while inside message filter.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_CANTCALLOUT_INASYNCCALL">
            <summary>
The caller is dispatching an asynchronous call and cannot make an outgoing call on behalf of this call.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_CANTPOST_INSENDCALL">
            <summary>
The caller is dispatching an intertask SendMessage call and cannot call out via PostMessage.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_CALL_CANCELED">
            <summary>
Call was canceled by the message filter.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_E_CALL_REJECTED">
            <summary>
Call was rejected by callee.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_RESETS_EXHAUSTED">
            <summary>
Copy Protection Error - The drive's region setting may be permanent or the number of user resets has been exhausted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_CSS_REGION_MISMATCH">
            <summary>
Copy Protection Error - The current DVD's region does not correspond to the region setting of the drive.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_CSS_SCRAMBLED_SECTOR">
            <summary>
Copy Protection Error - The read failed because the sector is encrypted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_CSS_KEY_NOT_ESTABLISHED">
            <summary>
Copy Protection Error - DVD session key not established.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_CSS_KEY_NOT_PRESENT">
            <summary>
Copy Protection Error - The given sector does not have a valid CSS key.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_CSS_AUTHENTICATION_FAILURE">
            <summary>
Copy Protection Error - DVD CSS Authentication failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_STATUS_COPY_PROTECTION_FAILURE">
            <summary>
Generic Copy Protection Error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_S_CANNOTCONSOLIDATE">
            <summary>
Consolidation of the storage file is inappropriate. (commit succeeded).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_S_CONSOLIDATIONFAILED">
            <summary>
Consolidation of the storage file failed. (commit succeeded).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_S_MULTIPLEOPENS">
            <summary>
Multiple opens prevent consolidated. (commit succeeded).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_S_MONITORING">
            <summary>
The notified event sink will not influence the storage operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_S_RETRYNOW">
            <summary>
The storage operation should retry immediately.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_S_BLOCK">
            <summary>
The storage operation should block until more data is available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_S_CONVERTED">
            <summary>
The underlying file was converted to compound file format.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_TERMINATED">
            <summary>
The file download has been terminated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_INCOMPLETE">
            <summary>
The file download was aborted abnormally. The file is incomplete.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_NOTSIMPLEFORMAT">
            <summary>
The compound file was not created with the STGM_SIMPLE flag
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_DOCFILETOOLARGE">
            <summary>
The compound file is too large for the current implementation
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_BADBASEADDRESS">
            <summary>
OLE32.DLL has been loaded at the wrong address.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_DOCFILECORRUPT">
            <summary>
The docfile has been corrupted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_EXTANTMARSHALLINGS">
            <summary>
Illegal operation called on object with extant marshallings.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_NOTFILEBASEDSTORAGE">
            <summary>
Illegal operation called on non-file based storage.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_SHAREREQUIRED">
            <summary>
Share.exe or equivalent is required for operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_OLDDLL">
            <summary>
The compound file %1 was produced with a newer version of storage.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_OLDFORMAT">
            <summary>
The compound file %1 was produced with an incompatible version of storage.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_CANTSAVE">
            <summary>
Can't save.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_REVERTED">
            <summary>
Attempted to use an object that has ceased to exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_NOTCURRENT">
            <summary>
The storage has been changed since the last commit.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_INUSE">
            <summary>
Attempted to use an object that is busy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_INVALIDFLAG">
            <summary>
Invalid flag error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_UNIMPLEMENTEDFUNCTION">
            <summary>
That function is not implemented.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_UNKNOWN">
            <summary>
An unexpected error occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_INVALIDNAME">
            <summary>
The name %1 is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_INVALIDHEADER">
            <summary>
The file %1 is not a valid compound file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_ABNORMALAPIEXIT">
            <summary>
An API call exited abnormally.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_PROPSETMISMATCHED">
            <summary>
Illegal write of non-simple property to simple property set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_MEDIUMFULL">
            <summary>
There is insufficient disk space to complete operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_INVALIDPARAMETER">
            <summary>
Invalid parameter error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_FILEALREADYEXISTS">
            <summary>
%1 already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_LOCKVIOLATION">
            <summary>
A lock violation has occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_SHAREVIOLATION">
            <summary>
A share violation has occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_READFAULT">
            <summary>
A disk error occurred during a read operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_WRITEFAULT">
            <summary>
A disk error occurred during a write operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_SEEKERROR">
            <summary>
An error occurred during a seek operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_DISKISWRITEPROTECTED">
            <summary>
Disk is write-protected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_NOMOREFILES">
            <summary>
There are no more entries to return.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_INVALIDPOINTER">
            <summary>
Invalid pointer error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_INSUFFICIENTMEMORY">
            <summary>
There is insufficient memory available to complete operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_INVALIDHANDLE">
            <summary>
Attempted an operation on an invalid object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_ACCESSDENIED">
            <summary>
Access Denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_TOOMANYOPENFILES">
            <summary>
There are insufficient resources to open another file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_PATHNOTFOUND">
            <summary>
The path %1 could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_FILENOTFOUND">
            <summary>
%1 could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.STG_E_INVALIDFUNCTION">
            <summary>
Unable to perform requested operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_CIRCULARTYPE">
            <summary>
Circular dependency between types/modules.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_INCONSISTENTPROPFUNCS">
            <summary>
Inconsistent property functions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_CANTLOADLIBRARY">
            <summary>
Error loading type library/DLL.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_CANTCREATETMPFILE">
            <summary>
Error creating unique tmp file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_IOERROR">
            <summary>
I/O Error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_OUTOFBOUNDS">
            <summary>
Invalid number of arguments.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_TYPEMISMATCH">
            <summary>
Type mismatch.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_INVALIDID">
            <summary>
Incorrect inheritance depth in standard OLE hmember.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_DUPLICATEID">
            <summary>
Duplicate ID in inheritance hierarchy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_SIZETOOBIG">
            <summary>
Size may not exceed 64K.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_BADMODULEKIND">
            <summary>
Wrong module kind for the operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_DLLFUNCTIONNOTFOUND">
            <summary>
Function not defined in specified DLL.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_UNKNOWNLCID">
            <summary>
Unknown LCID.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_NAMECONFLICT">
            <summary>
Name already exists in the library.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_AMBIGUOUSNAME">
            <summary>
Ambiguous name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_ELEMENTNOTFOUND">
            <summary>
Element not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_WRONGTYPEKIND">
            <summary>
Type mismatch.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_INVALIDSTATE">
            <summary>
Invalid forward reference, or reference to uncompiled type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_QUALIFIEDNAMEDISALLOWED">
            <summary>
Qualified name disallowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_UNDEFINEDTYPE">
            <summary>
Bound to unknown type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_LIBNOTREGISTERED">
            <summary>
Library not registered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_REGISTRYACCESS">
            <summary>
Error accessing the OLE registry.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_UNSUPFORMAT">
            <summary>
Old format or invalid type library.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_INVDATAREAD">
            <summary>
Old format or invalid type library.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_FIELDNOTFOUND">
            <summary>
Field name not defined in the record.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.TYPE_E_BUFFERTOOSMALL">
            <summary>
Buffer too small.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_BUFFERTOOSMALL">
            <summary>
Buffer too small
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_DIVBYZERO">
            <summary>
Division by zero.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_NOTACOLLECTION">
            <summary>
Does not support a collection.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_BADCALLEE">
            <summary>
Invalid callee.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_PARAMNOTOPTIONAL">
            <summary>
Parameter not optional.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_BADPARAMCOUNT">
            <summary>
Invalid number of parameters.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_ARRAYISLOCKED">
            <summary>
Memory is locked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_UNKNOWNLCID">
            <summary>
Unknown language.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_BADINDEX">
            <summary>
Invalid index.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_OVERFLOW">
            <summary>
Out of present range.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_EXCEPTION">
            <summary>
Exception occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_BADVARTYPE">
            <summary>
Bad variable type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_NONAMEDARGS">
            <summary>
No named arguments.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_UNKNOWNNAME">
            <summary>
Unknown name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_TYPEMISMATCH">
            <summary>
Type mismatch.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_PARAMNOTFOUND">
            <summary>
Parameter not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_MEMBERNOTFOUND">
            <summary>
Member not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DISP_E_UNKNOWNINTERFACE">
            <summary>
Unknown interface.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_ELEVATION_DISABLED">
            <summary>
The class is not configured to support Elevated activation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_RUNAS_VALUE_MUST_BE_AAA">
            <summary>
The activation requires that the RunAs value for the application is Activate As Activator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_MISSING_DISPLAYNAME">
            <summary>
The activation requires a display name to be present under the CLSID key.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_S_MACHINENAMENOTFOUND">
            <summary>
The specified machine name was not found in the cache.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_S_NOTALLINTERFACES">
            <summary>
Not all the requested interfaces were available
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MEM_E_INVALID_SIZE">
            <summary>
The requested allocation size was too large
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MEM_E_INVALID_LINK">
            <summary>
An allocation chain contained an invalid link pointer
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MEM_E_INVALID_ROOT">
            <summary>
An invalid root block pointer was specified
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_SERVER_STOPPING">
            <summary>
Object server is stopping when OLE service contacts it
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_NO_NORMALIZED">
            <summary>
Moniker path could not be normalized
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_OBJSRV_RPC_FAILURE">
            <summary>
OLE service could not communicate with the object server
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_SERVER_EXEC_FAILURE">
            <summary>
Server execution failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_BAD_PATH">
            <summary>
Bad path to object
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_SCM_RPC_FAILURE">
            <summary>
RPC communication failed with OLE service
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_SCM_ERROR">
            <summary>
OLE service could not bind object
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_CLASS_CREATE_FAILED">
            <summary>
Attempt to create a class object failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_START_ON_DEMAND">
            <summary>
The task settings do not allow the task to start on demand.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_TASK_NOT_V1_COMPAT">
            <summary>
The task has properties that are not compatible with previous versions of Windows.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_TASK_DISABLED">
            <summary>
The task is disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_S_TASK_QUEUED">
            <summary>
The Task Scheduler service has asked the task to run.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_TASK_ATTEMPTED">
            <summary>
The Task Scheduler service attempted to run the task, but the task did not run due to one of the constraints in the task definition.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_SERVICE_TOO_BUSY">
            <summary>
The Task Scheduler service is too busy to handle your request. Please try again later.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_SERVICE_NOT_AVAILABLE">
            <summary>
The Task Scheduler service is not available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_INVALID_TASK_HASH">
            <summary>
The task image is corrupt or has been tampered with.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_USER_NOT_LOGGED_ON">
            <summary>
The task will not run because the user is not logged on.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_ALREADY_RUNNING">
            <summary>
An instance of this task is already running.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_PAST_END_BOUNDARY">
            <summary>
The task cannot be started after the trigger's end boundary.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_TOO_MANY_NODES">
            <summary>
The task XML contains too many nodes of the same type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_S_BATCH_LOGON_PROBLEM">
            <summary>
The task is registered, but may fail to start. Batch logon privilege needs to be enabled for the task principal.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_S_SOME_TRIGGERS_FAILED">
            <summary>
The task is registered, but not all specified triggers will start the task.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_MALFORMEDXML">
            <summary>
The task XML is malformed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_MISSINGNODE">
            <summary>
The task XML is missing a required element or attribute.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_INVALIDVALUE">
            <summary>
The task XML contains a value which is incorrectly formatted or out of range.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_NAMESPACE">
            <summary>
The task XML contains an element or attribute from an unexpected namespace.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_UNEXPECTEDNODE">
            <summary>
The task XML contains an unexpected node.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_SERVICE_NOT_RUNNING">
            <summary>
The Task Scheduler Service is not running.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_UNSUPPORTED_ACCOUNT_OPTION">
            <summary>
The task has been configured with an unsupported combination of account settings and run time options.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_UNKNOWN_OBJECT_VERSION">
            <summary>
The task object version is either unsupported or invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_NO_SECURITY_SERVICES">
            <summary>
Task Scheduler security services are available only on Windows NT.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_ACCOUNT_DBASE_CORRUPT">
            <summary>
Corruption was detected in the Task Scheduler security database; the database has been reset.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_ACCOUNT_NAME_NOT_FOUND">
            <summary>
Unable to establish existence of the account specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_ACCOUNT_INFORMATION_NOT_SET">
            <summary>
No account information could be found in the Task Scheduler security database for the task indicated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_INVALID_TASK">
            <summary>
The object is either an invalid task object or is not a task object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_CANNOT_OPEN_TASK">
            <summary>
The task object could not be opened.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_SERVICE_NOT_INSTALLED">
            <summary>
The Task Scheduler Service is not installed on this computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_TASK_NOT_RUNNING">
            <summary>
There is no running instance of the task.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_TASK_NOT_READY">
            <summary>
One or more of the properties that are needed to run this task have not been set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_TRIGGER_NOT_FOUND">
            <summary>
Trigger not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_S_EVENT_TRIGGER">
            <summary>
Event triggers don't have set run times.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_S_TASK_NO_VALID_TRIGGERS">
            <summary>
Either the task has no triggers or the existing triggers are disabled or not set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_S_TASK_TERMINATED">
            <summary>
The last run of the task was terminated by the user.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_S_TASK_NOT_SCHEDULED">
            <summary>
One or more of the properties that are needed to run this task on a schedule have not been set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_S_TASK_NO_MORE_RUNS">
            <summary>
There are no more runs scheduled for this task.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_S_TASK_HAS_NOT_RUN">
            <summary>
The task has not yet run.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_S_TASK_DISABLED">
            <summary>
The task will not run at the scheduled times because it has been disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_S_TASK_RUNNING">
            <summary>
The task is currently running.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_S_TASK_READY">
            <summary>
The task is ready to run at its next scheduled time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_S_MONIKERALREADYREGISTERED">
            <summary>
Moniker is already registered in running object table
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_S_US">
            <summary>
Common prefix is both monikers
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_S_HIM">
            <summary>
Common prefix is input moniker
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_S_ME">
            <summary>
Common prefix is this moniker
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_S_REDUCED_TO_SELF">
            <summary>
Moniker reduced to itself
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONVERT10_S_NO_PRESENTATION">
            <summary>
Unable to convert OLESTREAM to IStorage
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.INPLACE_S_TRUNCATED">
            <summary>
Message is too long; some of it had to be truncated before displaying
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLEOBJ_S_INVALIDHWND">
            <summary>
Invalid window handle passed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLEOBJ_S_CANNOT_DOVERB_NOW">
            <summary>
Verb number is valid but verb cannot be done now
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLEOBJ_S_INVALIDVERB">
            <summary>
Invalid verb for OLE object
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CACHE_S_SOMECACHES_NOTUPDATED">
            <summary>
Some cache(s) not updated
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CACHE_S_SAMECACHE">
            <summary>
Same cache
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CACHE_S_FORMATETC_NOTSUPPORTED">
            <summary>
FORMATETC not supported
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.VIEW_S_ALREADY_FROZEN">
            <summary>
View is already frozen
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DATA_S_SAMEFORMATETC">
            <summary>
Data has same FORMATETC
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DRAGDROP_S_USEDEFAULTCURSORS">
            <summary>
Use the default cursor
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DRAGDROP_S_CANCEL">
            <summary>
Drag-drop operation canceled
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DRAGDROP_S_DROP">
            <summary>
Successful drop took place
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_S_MAC_CLIPFORMAT">
            <summary>
Macintosh clipboard format
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_S_STATIC">
            <summary>
Success, but static
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_S_USEREG">
            <summary>
Use the registry database to provide the requested information
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_EXIT_TRANSACTION_SCOPE_NOT_CALLED">
            <summary>
The component made a call to EnterTransactionScope, but did not make a corresponding call to ExitTransactionScope before returning.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_CALL_OUT_OF_TX_SCOPE_NOT_ALLOWED">
            <summary>
The component attempted to make a cross-context call between invocations of EnterTransactionScopeand ExitTransactionScope. This is not allowed. Cross-context calls cannot be made while inside of a transaction scope.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_ISOLEVELMISMATCH">
            <summary>
The TxIsolation Level property for the COM+ component being created is stronger than the TxIsolationLevel for the "root" component for the transaction. The creation failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_NOSYNCHRONIZATION">
            <summary>
The COM+ component requires synchronization, and it is not configured for it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_NOTCONSTRUCTED">
            <summary>
The COM+ component you created must use object construction to work correctly.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_NOTPOOLED">
            <summary>
The COM+ component you created must use object pooling to work.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_DBERROR">
            <summary>
An attempt to use a database generated a database specific error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_NOCOOKIES">
            <summary>
An attempt to write a cookie failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_NOIISINTRINSICS">
            <summary>
IIS intrinsics not available. Start your work with IIS.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_THREADINGMODEL_CHANGED">
            <summary>
The components threading model has changed after install into a COM+ Application. Please re-install component.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONTEXT_E_NOTRANSACTION">
            <summary>
The requested operation requires that the current context have a Transaction, and it does not
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONTEXT_E_NOJIT">
            <summary>
The requested operation requires that JIT be in the current context and it is not
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INITIALIZATIONFAILED">
            <summary>
COM+ Activation failed because an initialization function failed. Check the event log for more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_ACTIVATIONFAILED_TIMEOUT">
            <summary>
COM+ activation failed because the activation could not be completed in the specified amount of time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_ACTIVATIONFAILED_CATALOGERROR">
            <summary>
COM+ Activation failed due to a catalog or configuration error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_ACTIVATIONFAILED_EVENTLOGGED">
            <summary>
COM+ Activation failed. Check the event log for more information
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_ACTIVATIONFAILED">
            <summary>
An unexpected error occurred during COM+ Activation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONTEXT_E_TMNOTAVAILABLE">
            <summary>
COM+ was unable to talk to the Microsoft Distributed Transaction Coordinator
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONTEXT_E_ROLENOTFOUND">
            <summary>
The specified role was not configured for the application
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONTEXT_E_OLDREF">
            <summary>
You made a method call on a COM+ component that has a transaction that has already committed or aborted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONTEXT_E_SYNCH_TIMEOUT">
            <summary>
The component is configured to use synchronization and a thread has timed out waiting to enter the context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONTEXT_E_WOULD_DEADLOCK">
            <summary>
The component is configured to use synchronization and this method call would cause a deadlock to occur.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONTEXT_E_NOCONTEXT">
            <summary>
There is no MTS object context
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONTEXT_E_ABORTING">
            <summary>
You made a method call on a COM+ component that has a transaction that has already aborted or in the process of aborting.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONTEXT_E_ABORTED">
            <summary>
The root transaction wanted to commit, but transaction aborted
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_S_LASTRESOURCEMANAGER">
            <summary>
The resource manager has requested to be the coordinator (last resource manager) for the transaction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_S_LOCALLY_OK">
            <summary>
The local transaction has not aborted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_S_SINGLEPHASE">
            <summary>
The resource manager has performed a single-phase commit of the transaction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_S_ABORTING">
            <summary>
An abort operation was already in progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_S_ALLNORETAIN">
            <summary>
The transaction was successfully aborted. However, the abort was non-retaining.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_S_MADECHANGESINFORM">
            <summary>
The sink is for the moment and wishes the transaction to proceed, but if other changes are made following this return by other event sinks then this sink wants another chance to look
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_S_MADECHANGESCONTENT">
            <summary>
The sink is content and wishes the transaction to proceed. Changes were made to one or more resources during this call.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_S_OKINFORM">
            <summary>
No changes were made during this call, but the sink wants another chance to look if any other sinks make further changes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_S_SOMENORETAIN">
            <summary>
The transaction was successfully aborted. However, this is a coordinated transaction, and some number of enlisted resources were aborted outright because they could not support abort-retaining semantics
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_S_READONLY">
            <summary>
The method call succeeded because the transaction was read-only.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_S_DEFECT">
            <summary>
 XACT_S_DEFECT
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_S_ASYNC">
            <summary>
An asynchronous operation was specified. The operation has begun, but its outcome is not known yet.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_REPLAYREQUEST">
            <summary>
 XACT_E_REPLAYREQUEST
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_INVALIDLSN">
            <summary>
 XACT_E_INVALIDLSN
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_TRANSACTIONCLOSED">
            <summary>
 XACT_E_TRANSACTIONCLOSED
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_RECOVERYINPROGRESS">
            <summary>
 XACT_E_RECOVERYINPROGRESS
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_CLERKEXISTS">
            <summary>
 XACT_E_CLERKEXISTS
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_CLERKNOTFOUND">
            <summary>
 XACT_E_CLERKNOTFOUND
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_ABORTING">
            <summary>
The local transaction has aborted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_UNABLE_TO_LOAD_DTC_PROXY">
            <summary>
MSDTC was unable to load the dtc proxy dll.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_UNABLE_TO_READ_DTC_CONFIG">
            <summary>
MSDTC was unable to read its configuration information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_XA_TX_DISABLED">
            <summary>
The transaction manager has disabled its support for XA transactions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_PARTNER_NETWORK_TX_DISABLED">
            <summary>
The partner transaction manager has disabled its support for remote/network transactions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_NETWORK_TX_DISABLED">
            <summary>
The transaction manager has disabled its support for remote/network transactions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_TIP_DISABLED">
            <summary>
The Transaction Manager has disabled its support for TIP.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_DEST_TMNOTAVAILABLE">
            <summary>
The Transaction Manager on the destination machine is not available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_TIP_PULL_FAILED">
            <summary>
This transaction manager could not propagate a transaction from another TIP transaction manager.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_TIP_PROTOCOL_ERROR">
            <summary>
This transaction manager encountered a protocol error with another TIP transaction manager.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_TIP_CONNECT_FAILED">
            <summary>
This transaction manager failed to establish a connection with another TIP transaction manager.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_REENLISTTIMEOUT">
            <summary>
Resource manager reenlistment to determine transaction status timed out.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_CONNECTION_DENIED">
            <summary>
A request to establish a connection with the transaction manager was denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_CONNECTION_DOWN">
            <summary>
A connection with the transaction manager was lost.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_TMNOTAVAILABLE">
            <summary>
The Transaction Manager is not available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_LOGFULL">
            <summary>
The Transaction Manager returned a log full error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_ABORTED">
            <summary>
The transaction has already been aborted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_ALREADYINPROGRESS">
            <summary>
The requested operation is already in progress for the transaction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_NOTIMEOUT">
            <summary>
A time-out was specified, but time-outs are not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_INDOUBT">
            <summary>
The transaction status is in doubt. A communication failure occurred, or a transaction manager or resource manager has failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_INVALIDCOOKIE">
            <summary>
The transaction cookie is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_NOIMPORTOBJECT">
            <summary>
An import object for the transaction could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_XTIONEXISTS">
            <summary>
An enlistment in a transaction already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_WRONGUOW">
            <summary>
The indicated unit of work does not match the unit of work expected by the resource manager.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_WRONGSTATE">
            <summary>
This method was called in the wrong state
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_UNKNOWNRMGRID">
            <summary>
The resource manager id is not associated with this transaction or the transaction manager.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_NOTSUPPORTED">
            <summary>
An invalid combination of flags was specified
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_NOTRANSACTION">
            <summary>
The transaction has already been implicitly or explicitly committed or aborted
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_NOTCURRENT">
            <summary>
The transaction failed to commit due to the failure of optimistic concurrency control in at least one of the resource managers.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_NORESOURCE">
            <summary>
There is no resource presently associated with this enlistment
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_NOISORETAIN">
            <summary>
The requested semantics of retention of isolation across retaining commit and abort boundaries cannot be supported by this transaction implementation, or isoFlags was not equal to zero.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_NOENLIST">
            <summary>
Unable to enlist in the transaction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_NOASYNC">
            <summary>
The transaction manager doesn't support an asynchronous operation for this method.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_ISOLATIONLEVEL">
            <summary>
The requested isolation level is not valid or supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_HEURISTICDANGER">
            <summary>
Some of the states of the resource may have been committed while others may have been aborted, likely because of heuristic decisions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_HEURISTICDAMAGE">
            <summary>
Some of the states of the resource were committed while others were aborted, likely because of heuristic decisions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_HEURISTICCOMMIT">
            <summary>
Instead of aborting, the resource heuristically committed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_HEURISTICABORT">
            <summary>
Instead of committing, the resource heuristically aborted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_COMMITPREVENTED">
            <summary>
Cannot call commit on this transaction object because the calling application did not initiate the transaction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_COMMITFAILED">
            <summary>
The transaction failed to commit for an unknown reason. The transaction was aborted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_CANTRETAIN">
            <summary>
A retaining commit or abort is not supported
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.XACT_E_ALREADYOTHERSINGLEPHASE">
            <summary>
Another single phase resource manager has already been enlisted in this transaction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_E_PER_USER_SID_NOT_LOGGED_ON">
            <summary>
The owner of the PerUser subscription is not logged on to the system specified
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_E_INVALID_EVENT_CLASS_PARTITION">
            <summary>
The event class for this subscription is in an invalid partition
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT">
            <summary>
Cannot modify or delete an object that was added using the COM+ Admin SDK
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT">
            <summary>
Cannot modify or delete an object that was not added using the COM+ Admin SDK
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_E_COMPLUS_NOT_INSTALLED">
            <summary>
COM+ is required for this operation, but is not installed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_E_NOT_ALL_REMOVED">
            <summary>
Not all the objects requested could be removed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_E_MISSING_EVENTCLASS">
            <summary>
A subscription cannot be stored unless its event class already exists
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_E_TOO_MANY_METHODS">
            <summary>
An interface has too many methods to fire events from
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_E_USER_EXCEPTION">
            <summary>
A user-supplied component or subscriber raised an exception
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_E_INVALID_PER_USER_SID">
            <summary>
The owner SID on a per-user subscription doesn't exist
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_E_INTERNALERROR">
            <summary>
An unexpected internal error was detected
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_E_INTERNALEXCEPTION">
            <summary>
An unexpected exception was raised
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_E_QUERYFIELD">
            <summary>
An invalid field name was used in a query string
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_E_QUERYSYNTAX">
            <summary>
A syntax error occurred trying to evaluate a query string
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_S_NOSUBSCRIBERS">
            <summary>
An event was delivered but there were no subscribers
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_E_ALL_SUBSCRIBERS_FAILED">
            <summary>
An event was unable to invoke any of the subscribers
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EVENT_S_SOME_SUBSCRIBERS_FAILED">
            <summary>
An event was able to invoke some but not all of the subscribers
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_RELEASED">
            <summary>
Object has been released
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_APPDIDNTREG">
            <summary>
Application was launched but it didn't register a class factory
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_OBJNOTCONNECTED">
            <summary>
Object is not connected to server
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_OBJISREG">
            <summary>
Object is already registered
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_OBJNOTREG">
            <summary>
Object is not registered
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_WRONGOSFORAPP">
            <summary>
Wrong OS or OS version for application
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_ERRORINDLL">
            <summary>
Error in the DLL
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_DLLNOTFOUND">
            <summary>
DLL for class not found
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_ERRORINAPP">
            <summary>
Some error in application program
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_APPSINGLEUSE">
            <summary>
Application cannot be run more than once
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_APPNOTFOUND">
            <summary>
Application not found
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_IIDSTRING">
            <summary>
Invalid interface string
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_CLASSSTRING">
            <summary>
Invalid class string
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_CANTDETERMINECLASS">
            <summary>
Class of object cannot be determined
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_ALREADYINITIALIZED">
            <summary>
CoInitialize has already been called.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_NOTINITIALIZED">
            <summary>
CoInitialize has not been called.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_ENUMERATION_FAILED">
            <summary>
Moniker could not be enumerated
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_NOPREFIX">
            <summary>
No common prefix
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_NOSTORAGE">
            <summary>
Moniker does not refer to storage
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_NOINVERSE">
            <summary>
Moniker class has no inverse
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_MUSTBOTHERUSER">
            <summary>
User input required for operation to succeed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_CANTOPENFILE">
            <summary>
Moniker cannot open file
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_NOTBOUND">
            <summary>
Moniker is not bound
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_NOTBINDABLE">
            <summary>
Moniker is not bindable
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_INTERMEDIATEINTERFACENOTSUPPORTED">
            <summary>
Intermediate operation failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_INVALIDEXTENSION">
            <summary>
Bad extension for file
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_NOOBJECT">
            <summary>
No object for moniker
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_SYNTAX">
            <summary>
Invalid syntax
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_UNAVAILABLE">
            <summary>
Operation unavailable
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_NEEDGENERIC">
            <summary>
Moniker needs to be generic
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_EXCEEDEDDEADLINE">
            <summary>
Operation exceeded deadline
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.MK_E_CONNECTMANUALLY">
            <summary>
Moniker needs to be connected manually
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CLIPBRD_E_CANT_CLOSE">
            <summary>
CloseClipboard Failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CLIPBRD_E_BAD_DATA">
            <summary>
Data on clipboard is invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CLIPBRD_E_CANT_SET">
            <summary>
SetClipboard Failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CLIPBRD_E_CANT_EMPTY">
            <summary>
EmptyClipboard Failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CLIPBRD_E_CANT_OPEN">
            <summary>
OpenClipboard Failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONVERT10_E_STG_DIB_TO_BITMAP">
            <summary>
There was an error in a Windows GDI call while converting the DIB to a bitmap.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONVERT10_E_STG_NO_STD_STREAM">
            <summary>
Contents of IStorage is missing one of the standard streams
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONVERT10_E_STG_FMT">
            <summary>
Contents of the IStorage not in correct format
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONVERT10_E_OLESTREAM_BITMAP_TO_DIB">
            <summary>
There was an error in a Windows GDI call while converting the bitmap to a DIB
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONVERT10_E_OLESTREAM_FMT">
            <summary>
Contents of the OLESTREAM not in correct format
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONVERT10_E_OLESTREAM_PUT">
            <summary>
OLESTREAM Put method failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CONVERT10_E_OLESTREAM_GET">
            <summary>
OLESTREAM Get method failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.INPLACE_E_NOTOOLSPACE">
            <summary>
Space for tools is not available
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.INPLACE_E_NOTUNDOABLE">
            <summary>
Undo is not available
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLEOBJ_E_INVALIDVERB">
            <summary>
Invalid verb for OLE object
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLEOBJ_E_NOVERBS">
            <summary>
No verbs for OLE object
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CACHE_E_NOCACHE_UPDATED">
            <summary>
Cache not updated
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CS_E_INTERNAL_ERROR">
            <summary>
An error occurred in the software installation data in the Active Directory.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CS_E_SCHEMA_MISMATCH">
            <summary>
The schema for the software installation data in the Active Directory does not match the required schema.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CS_E_ADMIN_LIMIT_EXCEEDED">
            <summary>
The size of this object exceeds the maximum size set by the Administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CS_E_NETWORK_ERROR">
            <summary>
A network error interrupted the operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CS_E_INVALID_PATH">
            <summary>
The path to the software installation data in the Active Directory is not correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CS_E_OBJECT_ALREADY_EXISTS">
            <summary>
The software installation data object in the Active Directory already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CS_E_OBJECT_NOTFOUND">
            <summary>
There is no software installation data object in the Active Directory.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CS_E_NO_CLASSSTORE">
            <summary>
There is no software installation data in the Active Directory.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CS_E_INVALID_VERSION">
            <summary>
The software installation data in the Active Directory is corrupt.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CS_E_CLASS_NOTFOUND">
            <summary>
The CLSID was not found in the software installation data in the Active Directory.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CS_E_NOT_DELETABLE">
            <summary>
Deleting this will break the referential integrity of the software installation data in the Active Directory.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CS_E_PACKAGE_NOTFOUND">
            <summary>
No package in the software installation data in the Active Directory meets this criteria.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CAT_E_NODESCRIPTION">
            <summary>
Description not found
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CAT_E_CATIDNOEXIST">
            <summary>
CATID does not exist
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.REGDB_E_BADTHREADINGMODEL">
            <summary>
Threading model entry is not valid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.REGDB_E_IIDNOTREG">
            <summary>
Interface not registered
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.REGDB_E_CLASSNOTREG">
            <summary>
Class not registered
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.REGDB_E_INVALIDVALUE">
            <summary>
Invalid value for registry
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.REGDB_E_KEYMISSING">
            <summary>
Could not find the key in the registry
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.REGDB_E_WRITEREGDB">
            <summary>
Could not write key to registry
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.REGDB_E_READREGDB">
            <summary>
Could not read key from registry
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.VIEW_E_DRAW">
            <summary>
Error drawing view
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CLASS_E_NOTLICENSED">
            <summary>
Class is not licensed for use
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CLASS_E_CLASSNOTAVAILABLE">
            <summary>
ClassFactory cannot supply requested class
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CLASS_E_NOAGGREGATION">
            <summary>
Class does not support aggregation (or class object is remote)
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DRAGDROP_E_INVALIDHWND">
            <summary>
Invalid window handle
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DRAGDROP_E_ALREADYREGISTERED">
            <summary>
This window has already been registered as a drop target
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DRAGDROP_E_NOTREGISTERED">
            <summary>
Trying to revoke a drop target that has not been registered
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DV_E_NOIVIEWOBJECT">
            <summary>
Object doesn't support IViewObject interface
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DV_E_DVTARGETDEVICE_SIZE">
            <summary>
tdSize parameter of the DVTARGETDEVICE structure is invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DV_E_DVASPECT">
            <summary>
Invalid aspect(s)
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DV_E_CLIPFORMAT">
            <summary>
Invalid clipboard format
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DV_E_TYMED">
            <summary>
Invalid tymed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DV_E_LINDEX">
            <summary>
Invalid lindex
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DV_E_STATDATA">
            <summary>
Invalid STATDATA structure
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DV_E_STGMEDIUM">
            <summary>
Invalid STDGMEDIUM structure
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DV_E_DVTARGETDEVICE">
            <summary>
Invalid DVTARGETDEVICE structure
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DV_E_FORMATETC">
            <summary>
Invalid FORMATETC structure
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_NOSTORAGE">
            <summary>
Not able to perform the operation because object is not given storage yet
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_CANTCONVERT">
            <summary>
Not able to convert object
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_NOT_INPLACEACTIVE">
            <summary>
Object is not in any of the inplace active states
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_INVALIDHWND">
            <summary>
Invalid window handle
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_WRONGCOMPOBJ">
            <summary>
compobj.dll is too old for the ole2.dll initialized
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_INVALIDRECT">
            <summary>
Invalid rectangle
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_PROMPTSAVECANCELLED">
            <summary>
User canceled out of save dialog
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_STATIC">
            <summary>
Object is static; operation not allowed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_CANT_BINDTOSOURCE">
            <summary>
Not able to bind to the source
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_CANT_GETMONIKER">
            <summary>
Not able to get the moniker of the object
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_CLASSDIFF">
            <summary>
Linked object's source class has changed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_BLANK">
            <summary>
Uninitialized object
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_NOCACHE">
            <summary>
There is no cache to operate on
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_NOTRUNNING">
            <summary>
Need to run the object to perform this operation
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_NOCONNECTION">
            <summary>
There is no connection for this connection ID
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_ADVISENOTSUPPORTED">
            <summary>
This implementation doesn't take advises
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_ENUM_NOMORE">
            <summary>
Can't enumerate any more, because the associated data is missing
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_ADVF">
            <summary>
Invalid advise flags
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OLE_E_OLEVERB">
            <summary>
Invalid OLEVERB structure
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_MALFORMED_SPN">
            <summary>
The server principal name (SPN) obtained during security negotiation is malformed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_SXS_CONFIG">
            <summary>
The provided side-by-side configuration is invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_THREADPOOL_CONFIG">
            <summary>
The provided thread pool configuration is invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_TRACKER_CONFIG">
            <summary>
The provided tracker configuration is invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_NO_SECCTX_IN_ACTIVATE">
            <summary>
Unable to complete the call since there is no COM+ security context inside IObjectControl.Activate.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_SERVER_INIT_TIMEOUT">
            <summary>
The server started, but did not finish initializing in a timely fashion.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_ASYNC_WORK_REJECTED">
            <summary>
The thread-pool rejected the submitted asynchronous work.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_CLRNOTAVAILABLE">
            <summary>
The common language runtime is not available
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_CLASS_DISABLED">
            <summary>
The component or application containing the component has been disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_SERVER_NOT_PAUSED">
            <summary>
Activations on the server are not paused.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_SERVER_PAUSED">
            <summary>
Activations on the server are paused.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT">
            <summary>
The specified activation could not occur in the client context as specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_MSI_ERROR">
            <summary>
A Microsoft Software Installer error was encountered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_RELOAD_DLL">
            <summary>
A dll must be loaded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_NOT_SUPPORTED">
            <summary>
The operation attempted is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_IIDREG_INCONSISTENT">
            <summary>
The registration information for this interface is inconsistent or incomplete.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_CLSREG_INCONSISTENT">
            <summary>
The registration information for this server is inconsistent or incomplete.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_SERVER_START_TIMEOUT">
            <summary>
The server did not respond after being launched.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_REMOTE_COMMUNICATION_FAILURE">
            <summary>
This computer was unable to communicate with the computer providing the server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_START_SERVICE_FAILURE">
            <summary>
The service providing this server could not be started.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_LAUNCH_PERMSSION_DENIED">
            <summary>
The client is not allowed to launch this server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_RUNAS_LOGON_FAILURE">
            <summary>
The server process could not be started because the configured identity is incorrect. Check the username and password.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_RUNAS_CREATEPROCESS_FAILURE">
            <summary>
The server process could not be started as the configured identity. The pathname may be incorrect or unavailable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_CREATEPROCESS_FAILURE">
            <summary>
The server process could not be started. The pathname may be incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_RUNAS_SYNTAX">
            <summary>
A RunAs specification must be &lt;domain name&gt;\&lt;user name&gt; or simply &lt;user name&gt;
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_OLE1DDE_DISABLED">
            <summary>
Use of Ole1 services requiring DDE windows is disabled
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_WRONG_SERVER_IDENTITY">
            <summary>
The class is configured to run as a security id different from the caller
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_BAD_SERVER_NAME">
            <summary>
A Remote activation was necessary but the server name provided was invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_CANT_REMOTE">
            <summary>
A Remote activation was necessary but was not allowed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INIT_ONLY_SINGLE_THREADED">
            <summary>
There was an attempt to call CoInitialize a second time while single threaded
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INIT_SCM_EXEC_FAILURE">
            <summary>
Failure attempting to launch OLE service
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INIT_SCM_MAP_VIEW_OF_FILE">
            <summary>
Unable to map view of file for OLE service
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INIT_SCM_FILE_MAPPING_EXISTS">
            <summary>
The OLE service file mapping already exists
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INIT_SCM_MUTEX_EXISTS">
            <summary>
The OLE service mutex already exists
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INIT_UNACCEPTED_USER_ALLOCATOR">
            <summary>
The user supplied memory allocator is unacceptable
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INIT_TLS_CHANNEL_CONTROL">
            <summary>
Could not allocate thread local storage channel control
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INIT_TLS_SET_CHANNEL_CONTROL">
            <summary>
Cannot set thread local storage channel control
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INIT_RPC_CHANNEL">
            <summary>
Unable to initialize RPC services
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INIT_CLASS_CACHE">
            <summary>
Unable to initialize class cache
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INIT_MEMORY_ALLOCATOR">
            <summary>
Get memory allocator failure
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INIT_SHARED_ALLOCATOR">
            <summary>
Get shared memory allocator failure
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.CO_E_INIT_TLS">
            <summary>
Thread local storage failure
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.E_PENDING">
            <summary>
The data necessary to complete this operation is not yet available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.E_ACCESSDENIED">
            <summary>
General access denied error
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.E_FAIL">
            <summary>
Unspecified error
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.E_ABORT">
            <summary>
Operation aborted
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.E_HANDLE">
            <summary>
Invalid handle
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.E_POINTER">
            <summary>
Invalid pointer
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.E_NOINTERFACE">
            <summary>
No such interface supported
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.E_INVALIDARG">
            <summary>
One or more arguments are invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.E_OUTOFMEMORY">
            <summary>
Ran out of memory
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.E_NOTIMPL">
            <summary>
Not implemented
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.E_UNEXPECTED">
            <summary>
Catastrophic failure
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SYSTEM_DEVICE_NOT_FOUND">
            <summary>
The requested system device cannot be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_AMBIGUOUS_SYSTEM_DEVICE">
            <summary>
The requested system device cannot be identified due to multiple indistinguishable devices potentially matching the identification criteria.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE">
            <summary>
The caller of SetMonitorColorTemperature specified a color temperature that the current monitor did not support. This error implies that the monitor violated the MCCS 2.0 or MCCS 2.0 Revision 1 specification.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED">
            <summary>
The monitor returned an invalid monitor technology type. CRT, Plasma and LCD (TFT) are examples of monitor technology types. This error implies that the monitor violated the MCCS 2.0 or MCCS 2.0 Revision 1 specification.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MCA_INTERNAL_ERROR">
            <summary>
An internal Monitor Configuration API error occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MCA_UNSUPPORTED_MCCS_VERSION">
            <summary>
The Monitor Configuration API only works with monitors that support the MCCS 1.0 specification, MCCS 2.0 specification or the MCCS 2.0 Revision 1 specification.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MCA_MCCS_VERSION_MISMATCH">
            <summary>
The MCCS version in a monitor's mccs_ver capability does not match the MCCS version the monitor reports when the VCP Version (0xDF) VCP code is used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION">
            <summary>
The monitor does not comply with the MCCS specification it claims to support.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MCA_INVALID_VCP_VERSION">
            <summary>
The monitor's VCP Version (0xDF) VCP code returned an invalid version value.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MCA_INVALID_CAPABILITIES_STRING">
            <summary>
The monitor returned a DDC/CI capabilities string that did not comply with the ACCESS.bus 3.0, DDC/CI 1.1 or MCCS 2 Revision 1 specification.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME">
            <summary>
Locale installation failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED">
            <summary>
UI language installation failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_ENUM_USER_STOP">
            <summary>
User stopped resource enumeration.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MUI_FILE_NOT_LOADED">
            <summary>
The resource loader cache doesn't have loaded MUI entry.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME">
            <summary>
The RC Manifest has invalid ultimatefallback name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MUI_INVALID_LOCALE_NAME">
            <summary>
The RC Manifest has invalid culture name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MUI_INVALID_RC_CONFIG">
            <summary>
The RC Manifest is corrupted with garbage data or unsupported version or missing required item.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MUI_INVALID_FILE">
            <summary>
The resource loader failed to load MUI file because the file fail to pass validation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MUI_FILE_NOT_FOUND">
            <summary>
The resource loader failed to find MUI file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EC_NO_ACTIVE_CHANNEL">
            <summary>
No active channel is found for the query.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EC_CRED_NOT_FOUND">
            <summary>
The credential used by this subscription can't be found in credential store.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EC_CREDSTORE_FULL">
            <summary>
The credential store that is used to save credentials is full.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EC_CIRCULAR_FORWARDING">
            <summary>
When forwarding events from local machine to itself, the query of the subscription can't contain target log of the subscription.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EC_LOG_DISABLED">
            <summary>
The log of the subscription is in disabled state, and can not be used to forward events to. The log must first be enabled before the subscription can be activated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE">
            <summary>
The subscription fails to activate.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_FILTER_OUT_OF_RANGE">
            <summary>
Attempted to create a numeric type that is outside of its valid range.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_PUBLISHER_DISABLED">
            <summary>
The publisher has been disabled and its resource is not avaiable. This usually occurs when the publisher is in the process of being uninstalled or upgraded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY">
            <summary>
The channel at index %1!d! of the query can't be opened.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_VERSION_TOO_NEW">
            <summary>
The resource is too new to be compatible.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_VERSION_TOO_OLD">
            <summary>
The resource is too old to be compatible.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND">
            <summary>
The locale specific resource for the desired message is not present.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_EVENT_DEFINITION_NOT_FOUND">
            <summary>
The event definition could not be found for event id (%1).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_MAX_INSERTS_REACHED">
            <summary>
The maximum number of replacements has been reached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_UNRESOLVED_PARAMETER_INSERT">
            <summary>
The description string for parameter reference (%1) could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_UNRESOLVED_VALUE_INSERT">
            <summary>
The substitution string for insert index (%1) could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_MESSAGE_ID_NOT_FOUND">
            <summary>
The message id for the desired message could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_MESSAGE_NOT_FOUND">
            <summary>
the message resource is present but the message is not found in the string/message table
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_FILTER_TOO_COMPLEX">
            <summary>
The xpath expression exceeded supported complexity. Please symplify it or split it into two or more simple expressions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_CHANNEL_CANNOT_ACTIVATE">
            <summary>
The channel fails to activate.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE">
            <summary>
Publisher property %1!s! contains invalid value. The value has invalid type, is outside of valid range, can't be updated or is not supported by this type of publisher.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE">
            <summary>
Channel property %1!s! contains invalid value. The value has invalid type, is outside of valid range, can't be updated or is not supported by this type of channel.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL">
            <summary>
The requested operation cannot be performed over an enabled direct channel. The channel must first be disabled before performing the requested operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_FILTER_UNEXPECTEDTOKEN">
            <summary>
The token encountered was unexpected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_FILTER_UNSUPPORTEDOP">
            <summary>
This operator is unsupported by this implementation of the filter.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_FILTER_PARSEERR">
            <summary>
A syntax error occurred at position %1!d!
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_FILTER_INVTYPE">
            <summary>
This data type is currently unsupported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_FILTER_INVTEST">
            <summary>
A step operation must involve either a node test or, in the case of a predicate, an algebraic expression against which to test each node in the node set identified by the preceeding node set can be evaluated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_FILTER_INVARG">
            <summary>
Left hand side arguments to binary operators must be either attributes, nodes or variables and right hand side arguments must be constants.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_FILTER_NOTELTSET">
            <summary>
Can't perform a step operation from a term that does not represent an element set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_FILTER_ALREADYSCOPED">
            <summary>
An expression can only be followed by a change of scope operation if it itself evaluates to a node set and is not already part of some other change of scope operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_NON_VALIDATING_MSXML">
            <summary>
Registered MSXML doesn't support validation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_QUERY_RESULT_INVALID_POSITION">
            <summary>
Query result is currently at an invalid position.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_QUERY_RESULT_STALE">
            <summary>
The query result is stale / invalid. This may be due to the log being cleared or rolling over after the query result was created. Users should handle this code by releasing the query result object and reissuing the query.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_CONFIGURATION_ERROR">
            <summary>
Configuration error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL">
            <summary>
The caller is trying to subscribe to a direct channel which is not allowed. The events for a direct channel go directly to a logfile and cannot be subscribed to.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_MALFORMED_XML_TEXT">
            <summary>
The specified xml text was not well-formed. See Extended Error for more details.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_CHANNEL_NOT_FOUND">
            <summary>
The specified channel could not be found. Check channel configuration.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_INVALID_EVENT_DATA">
            <summary>
The event data raised by the publisher is not compatible with the event template definition in the publisher's manifest
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_INVALID_PUBLISHER_NAME">
            <summary>
The specified publisher name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND">
            <summary>
The template for an event definition cannot be found in the resource (error = %1).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND">
            <summary>
The publisher metadata cannot be found in the resource.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_INVALID_QUERY">
            <summary>
The specified query is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVT_INVALID_CHANNEL_PATH">
            <summary>
The specified channel path is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_FILE_HASH_MISSING">
            <summary>
A component is missing file verification information in its manifest.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GENERIC_COMMAND_FAILED">
            <summary>
A generic command executable returned a result that indicates failure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SMI_PRIMITIVE_INSTALLER_FAILED">
            <summary>
The SMI primitive installer failed during setup or servicing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE">
            <summary>
One or more required members of the transaction are not present.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_SETTING_NOT_REGISTERED">
            <summary>
The setting is not registered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_MANIFEST_TOO_BIG">
            <summary>
The size of the manifest exceeds the maximum allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY">
            <summary>
The file is not a part of the assembly.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT">
            <summary>
The assembly is not a deployment.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_IDENTITIES_DIFFERENT">
            <summary>
The component identities are different.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT">
            <summary>
The identities of the manifests are identical but their contents are different.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_XML_ENCODING_MISMATCH">
            <summary>
The character encoding in the XML declaration did not match the encoding used in the document.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ADVANCED_INSTALLER_FAILED">
            <summary>
An advanced installer failed during setup or servicing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_COMPONENT_STORE_CORRUPT">
            <summary>
The component store has been corrupted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_ASSEMBLY_NOT_LOCKED">
            <summary>
The component must be locked before making the request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNMAPPED_SUBSTITUTION_STRING">
            <summary>
A substitution string had no mapping.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN">
            <summary>
The public key token does not correspond to the public key specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MALFORMED_SUBSTITUTION_STRING">
            <summary>
A string containing localized substitutable content was malformed. Either a dollar sign ($) was followed by something other than a left parenthesis or another dollar sign or an substitution's right parenthesis was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_IDENTITY_PARSE_ERROR">
            <summary>
The identity string is malformed. This may be due to a trailing comma, more than two unnamed attributes, missing attribute name or missing attribute value.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE">
            <summary>
An identity contains two definitions for the same attribute.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME">
            <summary>
The name of an attribute in an identity is not within the legal range.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE">
            <summary>
The value of an attribute in an identity is not within the legal range.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY">
            <summary>
The activation context of system default assembly could not be generated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_RELEASE_ACTIVATION_CONTEXT">
            <summary>
A kernel mode component is releasing a reference on an activation context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_PROCESS_TERMINATION_REQUESTED">
            <summary>
A component used by the isolation facility has requested to terminate the process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_MULTIPLE_DEACTIVATION">
            <summary>
The activation context being deactivated has already been deactivated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_INVALID_DEACTIVATION">
            <summary>
The activation context being deactivated is not active for the current thread of execution.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_EARLY_DEACTIVATION">
            <summary>
The activation context being deactivated is not the most recently activated one.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_CORRUPTION">
            <summary>
The application isolation metadata for this process or thread has become corrupt.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_CORRUPT_ACTIVATION_STACK">
            <summary>
The activation context activation stack for the running thread of execution is corrupt.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_ASSEMBLY_MISSING">
            <summary>
The referenced assembly could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME">
            <summary>
The supplied assembly identity has one or more attribute names that contain characters not permitted in XML names.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE">
            <summary>
The supplied assembly identity is missing one or more attributes which must be present in this context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING">
            <summary>
Assembly Protection Error : The catalog for an assembly is missing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_UNTRANSLATABLE_HRESULT">
            <summary>
An HRESULT could not be translated to a corresponding Win32 error code.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_PROTECTION_CATALOG_NOT_VALID">
            <summary>
Assembly Protection Error : The catalog for an assembly is not valid, or does not match the assembly's manifest.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT">
            <summary>
Assembly Protection Error : The public key for an assembly was too short to be allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_PROTECTION_RECOVERY_FAILED">
            <summary>
Assembly Protection Error : Unable to recover the specified assembly.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_MISSINGEQUALS">
            <summary>
Manifest Parse Error : Missing equals sign between attribute and attribute value.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_INVALID_VERSION">
            <summary>
Manifest Parse Error : Invalid version number.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_UNEXPECTED_STANDALONE">
            <summary>
Manifest Parse Error : The standalone attribute cannot be used in external entities.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_INVALID_STANDALONE">
            <summary>
Manifest Parse Error : The standalone attribute must have the value 'yes' or 'no'.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_BADXMLCASE">
            <summary>
Manifest Parse Error : The name 'xml' is reserved and must be lower case.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_INVALIDSWITCH">
            <summary>
Manifest Parse Error : Switch from current encoding to specified encoding not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_INVALIDENCODING">
            <summary>
Manifest Parse Error : System does not support the specified encoding.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_RESERVEDNAMESPACE">
            <summary>
Manifest Parse Error : The namespace prefix is not allowed to start with the reserved string "xml".
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_UNCLOSEDCDATA">
            <summary>
Manifest Parse Error : A CDATA section was not closed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_UNCLOSEDDECL">
            <summary>
Manifest Parse Error : A declaration was not closed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_UNCLOSEDCOMMENT">
            <summary>
Manifest Parse Error : A comment was not closed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_UNCLOSEDSTRING">
            <summary>
Manifest Parse Error : A string literal was not closed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_UNCLOSEDENDTAG">
            <summary>
Manifest Parse Error : End element was missing the character '&gt;'.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_UNCLOSEDSTARTTAG">
            <summary>
Manifest Parse Error : Element was not closed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_BADPEREFINSUBSET">
            <summary>
Manifest Parse Error : Parameter entities cannot be used inside markup declarations in an internal subset.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_UNEXPECTEDEOF">
            <summary>
Manifest Parse Error : Unexpected end of file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_MISSINGROOT">
            <summary>
Manifest Parse Error : XML document must have a top level element.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_BADXMLDECL">
            <summary>
Manifest Parse Error : Invalid xml declaration.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_INVALIDATROOTLEVEL">
            <summary>
Manifest Parse Error : Invalid at the top level of the document.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_MULTIPLEROOTS">
            <summary>
Manifest Parse Error : Only one top level element is allowed in an XML document.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_DUPLICATEATTRIBUTE">
            <summary>
Manifest Parse Error : Duplicate attribute.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_UNCLOSEDTAG">
            <summary>
Manifest Parse Error : The following tags were not closed: %1.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_UNEXPECTEDENDTAG">
            <summary>
Manifest Parse Error : End tag was not expected at this location.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK">
            <summary>
Manifest Parse Error : Expecting whitespace or '?'.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_INVALID_UNICODE">
            <summary>
Manifest Parse Error : Invalid unicode character value for this platform.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_INVALID_HEXIDECIMAL">
            <summary>
Manifest Parse Error : Invalid character for hexadecimal digit.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_INVALID_DECIMAL">
            <summary>
Manifest Parse Error : Invalid character for decimal digit.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_MULTIPLE_COLONS">
            <summary>
Manifest Parse Error : Multiple colons are not allowed in a name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE">
            <summary>
Manifest Parse Error : A single or double closing quote character (\' or \") is missing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_MISSING_PAREN">
            <summary>
Manifest Parse Error : Missing parenthesis.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_INCOMPLETE_ENCODING">
            <summary>
Manifest Parse Error : End of file reached in invalid state for current encoding.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE">
            <summary>
Manifest Parse Error : Whitespace is not allowed at this location.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_INTERNALERROR">
            <summary>
Manifest Parse Error : Internal error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_UNBALANCEDPAREN">
            <summary>
Manifest Parse Error : Unbalanced parentheses.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_MISSINGSEMICOLON">
            <summary>
Manifest Parse Error : A semi colon character was expected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_EXPECTINGTAGEND">
            <summary>
Manifest Parse Error : The character '&gt;' was expected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_MISSINGWHITESPACE">
            <summary>
Manifest Parse Error : Required white space was missing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_BADCHARDATA">
            <summary>
Manifest Parse Error : An Invalid character was found in text content.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_XMLDECLSYNTAX">
            <summary>
Manifest Parse Error : Invalid syntax for an xml declaration.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_BADCHARINSTRING">
            <summary>
Manifest Parse Error : A string literal contained an invalid character.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_BADNAMECHAR">
            <summary>
Manifest Parse Error : A name contained an invalid character.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_BADSTARTNAMECHAR">
            <summary>
Manifest Parse Error : A name was started with an invalid character.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_COMMENTSYNTAX">
            <summary>
Manifest Parse Error : Incorrect syntax was used in a comment.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_XML_E_MISSINGQUOTE">
            <summary>
Manifest Parse Error : A string literal was expected, but no opening quote character was found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_POLICY_PARSE_ERROR">
            <summary>
The policy manifest contains one or more syntax errors.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_FILE_HASH_MISMATCH">
            <summary>
A component's file does not match the verification information present in the component manifest.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_DUPLICATE_ASSEMBLY_NAME">
            <summary>
Two or more components referenced directly or indirectly by the application manifest are different versions of the same component which is not permitted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_DUPLICATE_PROGID">
            <summary>
Two or more components referenced directly or indirectly by the application manifest have the same COM ProgIDs.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_DUPLICATE_TLBID">
            <summary>
Two or more components referenced directly or indirectly by the application manifest have the same COM type library TLBIDs.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_DUPLICATE_IID">
            <summary>
Two or more components referenced directly or indirectly by the application manifest have proxies for the same COM interface IIDs.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_DUPLICATE_CLSID">
            <summary>
Two or more components referenced directly or indirectly by the application manifest have the same COM server CLSIDs.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME">
            <summary>
Two or more components referenced directly or indirectly by the application manifest have window classes with the same name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_DUPLICATE_DLL_NAME">
            <summary>
Two or more components referenced directly or indirectly by the application manifest have files by the same name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT">
            <summary>
The private manifest probed has crossed reparse-point-associated path
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE">
            <summary>
The manifest has a default namespace specified on the assembly element but its value is not "urn:schemas-microsoft-com:asm.v1".
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE">
            <summary>
The manifest is missing the required default namespace specification on the assembly element.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE">
            <summary>
The manifest contains an attribute for the assembly identity which is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED">
            <summary>
The manifest for an assembly used by the application has a reference to a dependent assembly which is not installed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED">
            <summary>
The application manifest contains a reference to a dependent assembly which is not installed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_INVALID_XML_NAMESPACE_URI">
            <summary>
The manifest contains a reference to an invalid URI.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_UNKNOWN_ENCODING">
            <summary>
The encoding requested is not recognized.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_UNKNOWN_ENCODING_GROUP">
            <summary>
The encoding group identifier specified is not recognized.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET">
            <summary>
An attempt to set the process default activation context failed because the process default activation context was already set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_THREAD_QUERIES_DISABLED">
            <summary>
Lack of system resources has required isolated activation to be disabled for the current thread of execution.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_WRONG_SECTION_TYPE">
            <summary>
The type requested activation context section does not match the query API used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_VERSION_CONFLICT">
            <summary>
A component version required by the application conflicts with another component version already active.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_KEY_NOT_FOUND">
            <summary>
The requested lookup key was not found in any active activation context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_ACTIVATION_CONTEXT_DISABLED">
            <summary>
The application attempted to activate a disabled activation context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_MANIFEST_PARSE_ERROR">
            <summary>
The manifest file contains one or more syntax errors.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_MANIFEST_FORMAT_ERROR">
            <summary>
The manifest file does not begin with the required tag and format information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_ASSEMBLY_NOT_FOUND">
            <summary>
The referenced assembly is not installed on your system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_INVALID_ACTCTXDATA_FORMAT">
            <summary>
The application binding data format is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_CANT_GEN_ACTCTX">
            <summary>
The application has failed to start because its side-by-side configuration is incorrect. Please see the application event log for more detail.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SXS_SECTION_NOT_FOUND">
            <summary>
The requested section was not present in the activation context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_CLEAR_TEXT_DROP">
            <summary>
IPsec dropped a clear text packet.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_INTEGRITY_CHECK_FAILED">
            <summary>
IPsec integrity check failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_INVALID_PACKET">
            <summary>
IPsec header and/or trailer in the packet is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_REPLAY_CHECK_FAILED">
            <summary>
Packet sequence number replay check failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_WRONG_SA">
            <summary>
Packet was received on an IPsec SA that doesn't match the packet characteristics.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_SA_LIFETIME_EXPIRED">
            <summary>
Packet was received on an IPsec SA whose lifetime has expired.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_BAD_SPI">
            <summary>
The SPI in the packet does not match a valid IPsec SA.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_NEG_STATUS_END">
            <summary>
 ERROR_IPSEC_IKE_NEG_STATUS_END
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_TOO_MANY_FILTERS">
            <summary>
Too many dynamically added IKEEXT filters were detected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_QM_EXPIRED">
            <summary>
Quick mode SA was expired by IPsec driver.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_MM_FOR_QM">
            <summary>
Parameters of the main mode are invalid for this quick mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PROCESS_ERR_NATOA">
            <summary>
Error processing NatOA payload.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_CGA_AUTH_FAILED">
            <summary>
Could not verify binding between CGA address and certificate.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_SHUTTING_DOWN">
            <summary>
IKE service is shutting down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_DOS_COOKIE_SENT">
            <summary>
Sent DOS cookie notify to initiator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD">
            <summary>
Received invalid authentication offers.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID">
            <summary>
Received unexpected message ID.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH">
            <summary>
Certificate doesn't chain to a trusted root in IPsec policy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID">
            <summary>
Main mode SA assumed to be invalid because peer stopped responding.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_MM_EXPIRED">
            <summary>
Main mode SA lifetime expired or peer sent a main mode delete.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_QM_LIMIT">
            <summary>
Reached maximum quick mode limit for the main mode. New main mode will be started.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_NEGOTIATION_DISABLED">
            <summary>
IKE received a policy that disables negotiation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_MM_LIMIT">
            <summary>
Max number of established MM SAs to peer exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN">
            <summary>
Key length in certificate is too small for configured security requirements.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY">
            <summary>
The lifetime value received in the Responder Lifetime Notify is below the Windows 2000 configured minimum value. Please fix the policy on the peer machine.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_BENIGN_REINIT">
            <summary>
Temporary state created to perform reinit. This is not a real failure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_RPC_DELETE">
            <summary>
Deleted via RPC call
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_LOAD_FAILED">
            <summary>
Load failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_SIG">
            <summary>
Invalid certificate signature
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_AUTH_ALG">
            <summary>
Invalid authentication algorithm
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG">
            <summary>
Invalid encryption algorithm
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_HASH_SIZE">
            <summary>
Invalid hash size
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_HASH_ALG">
            <summary>
Invalid hash algorithm
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_HASH">
            <summary>
Hash verification failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_UNSUPPORTED_ID">
            <summary>
Unsupported ID
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_POLICY_MATCH">
            <summary>
Policy match error
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_DECRYPT">
            <summary>
Error decrypting payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_ENCRYPT">
            <summary>
Error encrypting payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_GROUP">
            <summary>
Invalid Diffie-Hellman group
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_DH_FAILURE">
            <summary>
Diffie-Hellman failure
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_SITUATION">
            <summary>
Invalid situation
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_UNKNOWN_DOI">
            <summary>
Invalid DOI
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_POLICY">
            <summary>
Invalid policy
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED">
            <summary>
Failed to add Security Association to IPSec Driver. The most common cause for this is if the IKE negotiation took too long to complete. If the problem persists, reduce the load on the faulting machine.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_OUT_OF_MEMORY">
            <summary>
Memory allocation failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_FILTER">
            <summary>
Given filter is invalid
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_GETSPIFAIL">
            <summary>
Failed to obtain new SPI for the inbound SA from Ipsec driver. The most common cause for this is that the driver does not have the correct filter. Check your policy to verify the filters.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_SRVQUERYCRED">
            <summary>
Failed to determine SSPI principal name for ISAKMP/ERROR_IPSEC_IKE service (QueryCredentialsAttributes).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_SRVACQFAIL">
            <summary>
Failed to obtain Kerberos server credentials for ISAKMP/ERROR_IPSEC_IKE service. Kerberos authentication will not function. The most likely reason for this is lack of domain membership. This is normal if your computer is a member of a workgroup.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_FAILQUERYSSP">
            <summary>
Failed to query Kerberos package to obtain max token size.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_FAILSSPINIT">
            <summary>
Failed to obtain security function table dispatch address from SSPI.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_SECLOADFAIL">
            <summary>
Failed to load SECURITY.DLL.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_NOTCBPRIV">
            <summary>
Failed to enabled TCB privilege.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_NO_MM_POLICY">
            <summary>
There is no available Main Mode IKE policy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_POLICY_CHANGE">
            <summary>
New policy invalidated SAs formed with old policy
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PEER_CRL_FAILED">
            <summary>
Certification Revocation check of peer's certificate failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_NO_PEER_CERT">
            <summary>
Peer failed to send valid machine certificate
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_COOKIE">
            <summary>
Invalid cookie received.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN">
            <summary>
Soft SA torn down
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_LOAD_SOFT_SA">
            <summary>
Soft SA loaded
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_PAYLOAD">
            <summary>
Invalid payload received
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR">
            <summary>
Error processing VendorId payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PROCESS_ERR_DELETE">
            <summary>
Error processing Delete Payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY">
            <summary>
Error processing Notify payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PROCESS_ERR_NONCE">
            <summary>
Error processing Nonce payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PROCESS_ERR_SIG">
            <summary>
Error processing Signature payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PROCESS_ERR_HASH">
            <summary>
Error processing Hash payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ">
            <summary>
Error processing Certificate Request payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PROCESS_ERR_CERT">
            <summary>
Error processing Cert payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PROCESS_ERR_ID">
            <summary>
Error processing ID payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PROCESS_ERR_KE">
            <summary>
Error processing KE payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PROCESS_ERR_TRANS">
            <summary>
Error processing Transform payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PROCESS_ERR_PROP">
            <summary>
Error processing Proposal payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PROCESS_ERR_SA">
            <summary>
Error processing SA payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_PROCESS_ERR">
            <summary>
Error processing error payload
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_NO_PUBLIC_KEY">
            <summary>
Peer's certificate did not have a public key
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_KERBEROS_ERROR">
            <summary>
Failed to authenticate using Kerberos
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_SIGNATURE">
            <summary>
Failed to verify signature
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_NO_POLICY">
            <summary>
No policy configured
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_HEADER">
            <summary>
Invalid header
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_DH_FAIL">
            <summary>
Failure in Diffie-Hellman computation
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_NO_PRIVATE_KEY">
            <summary>
IKE negotiation failed because the machine certificate used does not have a private key. IPsec certificates require a private key. Contact your Network Security administrator about replacing with a certificate that has a private key.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_CERT_TYPE">
            <summary>
Invalid certificate type
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_INVALID_KEY_USAGE">
            <summary>
Invalid certificate key usage
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_CRL_FAILED">
            <summary>
Certificate Revocation Check failed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_ERROR">
            <summary>
Unknown error occurred
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_QM_DELAY_DROP">
            <summary>
Negotiation took too long
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_MM_DELAY_DROP">
            <summary>
Negotiation took too long
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_DROP_NO_RESPONSE">
            <summary>
No response from peer
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM">
            <summary>
Negotiation request sat in Queue too long
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_QUEUE_DROP_MM">
            <summary>
Negotiation request sat in Queue too long
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_QM_ACQUIRE_DROP">
            <summary>
Negotiation request sat in Queue too long
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_MM_ACQUIRE_DROP">
            <summary>
Negotiation request sat in Queue too long
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_SA_REAPED">
            <summary>
IKE SA deleted before establishment completed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_SA_DELETED">
            <summary>
IKE SA deleted by peer before establishment completed
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_NO_CERT">
            <summary>
IKE failed to find valid machine certificate. Contact your Network Security Administrator about installing a valid certificate in the appropriate Certificate Store.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_TIMED_OUT">
            <summary>
Negotiation timed out
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR">
            <summary>
General processing error
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_NEGOTIATION_PENDING">
            <summary>
IKE Negotiation in progress
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_ATTRIB_FAIL">
            <summary>
IKE security attributes are unacceptable
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_AUTH_FAIL">
            <summary>
IKE authentication credentials are unacceptable
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_IKE_NEG_STATUS_BEGIN">
            <summary>
 ERROR_IPSEC_IKE_NEG_STATUS_BEGIN
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WARNING_IPSEC_QM_POLICY_PRUNED">
            <summary>
The Quick Mode policy was successfully added, but some of the requested offers are not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WARNING_IPSEC_MM_POLICY_PRUNED">
            <summary>
The Main Mode policy was successfully added, but some of the requested offers are not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_QM_POLICY_PENDING_DELETION">
            <summary>
The Quick Mode policy is pending deletion.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_MM_AUTH_PENDING_DELETION">
            <summary>
The Main Mode authentication bundle is pending deletion.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_MM_POLICY_PENDING_DELETION">
            <summary>
The Main Mode policy is pending deletion.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION">
            <summary>
The tunnel filter is pending deletion.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION">
            <summary>
The transport filter is pending deletion.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_MM_FILTER_PENDING_DELETION">
            <summary>
The Main Mode filter is pending deletion.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND">
            <summary>
The specified tunnel mode filter was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_TUNNEL_FILTER_EXISTS">
            <summary>
The specified tunnel mode filter exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND">
            <summary>
The specified default quick mode policy was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND">
            <summary>
The specified default main mode authentication list was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND">
            <summary>
The specified default main mode policy was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_MM_AUTH_IN_USE">
            <summary>
The specified main mode authentication list is being used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_MM_AUTH_NOT_FOUND">
            <summary>
The specified main mode authentication list was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_MM_AUTH_EXISTS">
            <summary>
The specified main mode authentication list exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND">
            <summary>
The specified transport mode filter does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_TRANSPORT_FILTER_EXISTS">
            <summary>
The specified transport mode filter already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_MM_FILTER_NOT_FOUND">
            <summary>
The specified main mode filter was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_MM_FILTER_EXISTS">
            <summary>
The specified main mode filter already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_MM_POLICY_IN_USE">
            <summary>
The specified main mode policy is being used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_MM_POLICY_NOT_FOUND">
            <summary>
The specified main mode policy was not found
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_MM_POLICY_EXISTS">
            <summary>
The specified main mode policy already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_QM_POLICY_IN_USE">
            <summary>
The specified quick mode policy is being used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_QM_POLICY_NOT_FOUND">
            <summary>
The specified quick mode policy was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IPSEC_QM_POLICY_EXISTS">
            <summary>
The specified quick mode policy already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_RESERVED_PETYPE">
            <summary>
A reserved policy element was found in the QOS provider-specific buffer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_ESHAPERATEOBJ">
            <summary>
An invalid shaping rate object was found in the QOS provider-specific buffer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_ESDMODEOBJ">
            <summary>
An invalid shape discard mode object was found in the QOS provider specific buffer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_EPSFILTERSPEC">
            <summary>
An invalid FILTERSPEC was found in the QOS provider-specific buffer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_EPSFLOWSPEC">
            <summary>
An invalid or inconsistent flowspec was found in the QOS provider specific buffer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_EFLOWDESC">
            <summary>
An invalid QOS flow descriptor was found in the flow descriptor list.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_EPOLICYOBJ">
            <summary>
An invalid policy object was found in the QOS provider-specific buffer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_EUNKOWNPSOBJ">
            <summary>
An unrecognized object was found in the QOS provider-specific buffer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_EFLOWCOUNT">
            <summary>
An incorrect number of flow descriptors was specified in the QOS structure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_EOBJLENGTH">
            <summary>
An object with an invalid ObjectLength field was specified in the QOS provider-specific buffer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_EFILTERCOUNT">
            <summary>
An incorrect number of QOS FILTERSPECs were specified in the FLOWDESCRIPTOR.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_EFILTERTYPE">
            <summary>
An invalid QOS filter type was used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_EFILTERSTYLE">
            <summary>
An invalid QOS filter style was used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_EPROVSPECBUF">
            <summary>
Invalid QOS provider-specific buffer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_EFLOWSPEC">
            <summary>
An invalid or inconsistent flowspec was found in the QOS structure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_ESERVICETYPE">
            <summary>
An invalid or unrecognized service type was found in the flowspec.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_GENERIC_ERROR">
            <summary>
General QOS error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_TRAFFIC_CTRL_ERROR">
            <summary>
Problem with some part of the flowspec.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_BAD_OBJECT">
            <summary>
Problem with some part of the filterspec or providerspecific buffer in general.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_BAD_STYLE">
            <summary>
Unknown or conflicting style.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_POLICY_FAILURE">
            <summary>
Rejected for administrative reasons - bad credentials.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_ADMISSION_FAILURE">
            <summary>
Error due to lack of resources.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_REQUEST_CONFIRMED">
            <summary>
Reserve has been confirmed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_NO_RECEIVERS">
            <summary>
There are no receivers.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_NO_SENDERS">
            <summary>
There are no senders.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_SENDERS">
            <summary>
At least one path has arrived.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_QOS_RECEIVERS">
            <summary>
At least one reserve has arrived.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSANO_DATA">
            <summary>
The requested name is valid, but no data of the requested type was found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSANO_RECOVERY">
            <summary>
A non-recoverable error occurred during a database lookup.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSATRY_AGAIN">
            <summary>
This is usually a temporary error during hostname resolution and means that the local server did not receive a response from an authoritative server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAHOST_NOT_FOUND">
            <summary>
No such host is known.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEREFUSED">
            <summary>
A database query failed because it was actively refused.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_E_CANCELLED">
            <summary>
A call to WSALookupServiceEnd was made while this call was still processing. The call has been canceled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSA_E_NO_MORE">
            <summary>
No more results can be returned by WSALookupServiceNext.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSATYPE_NOT_FOUND">
            <summary>
The specified class was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSASERVICE_NOT_FOUND">
            <summary>
No such service is known. The service cannot be found in the specified name space.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSASYSCALLFAILURE">
            <summary>
A system call that should never fail has failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEPROVIDERFAILEDINIT">
            <summary>
The requested service provider could not be loaded or initialized.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEINVALIDPROVIDER">
            <summary>
The requested service provider is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEINVALIDPROCTABLE">
            <summary>
The procedure call table is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAECANCELLED">
            <summary>
A call to WSALookupServiceEnd was made while this call was still processing. The call has been canceled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAENOMORE">
            <summary>
No more results can be returned by WSALookupServiceNext.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEDISCON">
            <summary>
Returned by WSARecv or WSARecvFrom to indicate the remote party has initiated a graceful shutdown sequence.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSANOTINITIALISED">
            <summary>
Either the application has not called WSAStartup, or WSAStartup failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAVERNOTSUPPORTED">
            <summary>
The Windows Sockets version requested is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSASYSNOTREADY">
            <summary>
WSAStartup cannot function at this time because the underlying system it uses to provide network services is currently unavailable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEREMOTE">
            <summary>
Item is not available locally.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAESTALE">
            <summary>
File handle reference is no longer available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEDQUOT">
            <summary>
Ran out of disk quota.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEUSERS">
            <summary>
Ran out of quota.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEPROCLIM">
            <summary>
A Windows Sockets implementation may have a limit on the number of applications that may use it simultaneously.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAENOTEMPTY">
            <summary>
Cannot remove a directory that is not empty.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEHOSTUNREACH">
            <summary>
A socket operation was attempted to an unreachable host.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEHOSTDOWN">
            <summary>
A socket operation failed because the destination host was down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAENAMETOOLONG">
            <summary>
Name component or name was too long.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAELOOP">
            <summary>
Cannot translate name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAECONNREFUSED">
            <summary>
No connection could be made because the target machine actively refused it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAETIMEDOUT">
            <summary>
A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAETOOMANYREFS">
            <summary>
Too many references to some kernel object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAESHUTDOWN">
            <summary>
A request to send or receive data was disallowed because the socket had already been shut down in that direction with a previous shutdown call.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAENOTCONN">
            <summary>
A request to send or receive data was disallowed because the socket is not connected and (when sending on a datagram socket using a sendto call) no address was supplied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEISCONN">
            <summary>
A connect request was made on an already connected socket.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAENOBUFS">
            <summary>
An operation on a socket could not be performed because the system lacked sufficient buffer space or because a queue was full.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAECONNRESET">
            <summary>
An existing connection was forcibly closed by the remote host.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAECONNABORTED">
            <summary>
An established connection was aborted by the software in your host machine.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAENETRESET">
            <summary>
The connection has been broken due to keep-alive activity detecting a failure while the operation was in progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAENETUNREACH">
            <summary>
A socket operation was attempted to an unreachable network.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAENETDOWN">
            <summary>
A socket operation encountered a dead network.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEADDRNOTAVAIL">
            <summary>
The requested address is not valid in its context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEADDRINUSE">
            <summary>
Only one usage of each socket address (protocol/network address/port) is normally permitted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEAFNOSUPPORT">
            <summary>
An address incompatible with the requested protocol was used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEPFNOSUPPORT">
            <summary>
The protocol family has not been configured into the system or no implementation for it exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEOPNOTSUPP">
            <summary>
The attempted operation is not supported for the type of object referenced.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAESOCKTNOSUPPORT">
            <summary>
The support for the specified socket type does not exist in this address family.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEPROTONOSUPPORT">
            <summary>
The requested protocol has not been configured into the system, or no implementation for it exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAENOPROTOOPT">
            <summary>
An unknown, invalid, or unsupported option or level was specified in a getsockopt or setsockopt call.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEPROTOTYPE">
            <summary>
A protocol was specified in the socket function call that does not support the semantics of the socket type requested.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEMSGSIZE">
            <summary>
A message sent on a datagram socket was larger than the internal message buffer or some other network limit, or the buffer used to receive a datagram into was smaller than the datagram itself.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEDESTADDRREQ">
            <summary>
A required address was omitted from an operation on a socket.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAENOTSOCK">
            <summary>
An operation was attempted on something that is not a socket.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEALREADY">
            <summary>
An operation was attempted on a non-blocking socket that already had an operation in progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEINPROGRESS">
            <summary>
A blocking operation is currently executing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEWOULDBLOCK">
            <summary>
A non-blocking socket operation could not be completed immediately.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEMFILE">
            <summary>
Too many open sockets.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEINVAL">
            <summary>
An invalid argument was supplied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEFAULT">
            <summary>
The system detected an invalid pointer address in attempting to use a pointer argument in a call.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEACCES">
            <summary>
An attempt was made to access a socket in a way forbidden by its access permissions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEBADF">
            <summary>
The file handle supplied is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WSAEINTR">
            <summary>
A blocking operation was interrupted by a call to WSACancelBlockingCall.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_DP_FSMO_ERROR">
            <summary>
The application directory partition operation failed. The domain controller holding the domain naming master role is down or unable to service the request or is not running Windows Server 2003.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_DP_NOT_AVAILABLE">
            <summary>
The directory partition is not available at this time. Please wait a few minutes and try again.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_DP_ALREADY_ENLISTED">
            <summary>
This DNS server is already enlisted in the specified directory partition.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_DP_NOT_ENLISTED">
            <summary>
This DNS server is not enlisted in the specified directory partition.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_DP_ALREADY_EXISTS">
            <summary>
The specified directory partition already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_DP_DOES_NOT_EXIST">
            <summary>
The specified directory partition does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NO_DNS_SERVERS">
            <summary>
No DNS servers configured for local system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NO_TCPIP">
            <summary>
TCP/IP network protocol not installed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_STATUS_CONTINUE_NEEDED">
            <summary>
Secure update call needs to continue update request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_INFO_ADDED_LOCAL_WINS">
            <summary>
Added local WINS server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_AXFR">
            <summary>
DNS zone transfer failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_INFO_AXFR_COMPLETE">
            <summary>
DNS AXFR (zone transfer) complete.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_ALIAS_LOOP">
            <summary>
An alias loop has been detected with either CNAME or DNAME records.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_DNAME_COLLISION">
            <summary>
A DNAME record already exists for given name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NODE_IS_DNAME">
            <summary>
Node is a DNAME DNS record.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE">
            <summary>
DNS server not creating or reading the boot file for the directory service integrated DNS zone.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_DS_ZONE_ALREADY_EXISTS">
            <summary>
DNS zone already exists in the directory service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_DS_UNAVAILABLE">
            <summary>
The directory service is unavailable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_WARNING_DOMAIN_UNDELETED">
            <summary>
DNS domain was undeleted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_WARNING_PTR_CREATE_FAILED">
            <summary>
Could not create pointer (PTR) record.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NAME_DOES_NOT_EXIST">
            <summary>
DNS name does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NO_CREATE_CACHE_DATA">
            <summary>
Could not create DNS cache data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_SECONDARY_DATA">
            <summary>
Secondary DNS zone data error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RECORD_ALREADY_EXISTS">
            <summary>
DNS record already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT">
            <summary>
Record only at DNS zone root.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_CNAME_COLLISION">
            <summary>
A CNAME record already exists for given name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NODE_IS_CNAME">
            <summary>
Node is a CNAME DNS record.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_CNAME_LOOP">
            <summary>
CNAME loop detected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NAME_NOT_IN_ZONE">
            <summary>
Name not in DNS zone.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RECORD_TIMED_OUT">
            <summary>
DNS record timed out.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_UNKNOWN_RECORD_TYPE">
            <summary>
Unknown DNS record type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NODE_CREATION_FAILED">
            <summary>
Node creation failure in DNS.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RECORD_FORMAT">
            <summary>
DNS record format error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RECORD_DOES_NOT_EXIST">
            <summary>
DNS record does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_DATAFILE_PARSING">
            <summary>
Failure while reading datafile for DNS zone.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_FILE_WRITEBACK_FAILED">
            <summary>
Failed to write datafile for DNS zone.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_DATAFILE_OPEN_FAILURE">
            <summary>
Failed to open datafile for DNS zone.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_INVALID_DATAFILE_NAME">
            <summary>
Invalid datafile name for DNS zone.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_PRIMARY_REQUIRES_DATAFILE">
            <summary>
Primary DNS zone requires datafile.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_ZONE_IS_SHUTDOWN">
            <summary>
The operation cannot be performed because this zone is shutdown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_ZONE_REQUIRES_MASTER_IP">
            <summary>
This zone must be configured with one or more master DNS server IP addresses.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_FORWARDER_ALREADY_EXISTS">
            <summary>
A conditional forwarding zone already exists for that name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_SOA_DELETE_INVALID">
            <summary>
Invalid delete of start of authority (SOA)
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NBSTAT_INIT_FAILED">
            <summary>
NBTSTAT initialization call failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NEED_WINS_SERVERS">
            <summary>
Need WINS servers.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_WINS_INIT_FAILED">
            <summary>
WINS initialization failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NEED_SECONDARY_ADDRESSES">
            <summary>
Need secondary IP address.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_ZONE_NOT_SECONDARY">
            <summary>
DNS zone not secondary.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP">
            <summary>
Secondary DNS zone requires master IP address.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_INVALID_ZONE_TYPE">
            <summary>
Invalid DNS zone type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_AUTOZONE_ALREADY_EXISTS">
            <summary>
DNS automatic zone already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_ZONE_ALREADY_EXISTS">
            <summary>
DNS zone already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_ZONE_CREATION_FAILED">
            <summary>
DNS zone creation failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_ZONE_LOCKED">
            <summary>
DNS zone is locked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_ZONE_HAS_NO_NS_RECORDS">
            <summary>
DNS zone has no Name Server (NS) record.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_ZONE_HAS_NO_SOA_RECORD">
            <summary>
DNS zone has no start of authority (SOA) record.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_ZONE_CONFIGURATION_ERROR">
            <summary>
Invalid DNS zone configuration.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_INVALID_ZONE_OPERATION">
            <summary>
Invalid operation for DNS zone.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NO_ZONE_INFO">
            <summary>
DNS zone information not available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_ZONE_DOES_NOT_EXIST">
            <summary>
DNS zone does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_DELEGATION_REQUIRED">
            <summary>
This operation requires credentials delegation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NOT_ALLOWED_UNDER_DNAME">
            <summary>
No data is allowed to exist underneath a DNAME record.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NOT_ALLOWED_ON_RODC">
            <summary>
The operation requested is not permitted on against a DNS server running on a read-only DC.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_BACKGROUND_LOADING">
            <summary>
This operation is not allowed while the DNS server is loading zones in the background. Please try again later.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_DWORD_VALUE_TOO_LARGE">
            <summary>
The specified value is too large for this parameter.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_DWORD_VALUE_TOO_SMALL">
            <summary>
The specified value is too small for this parameter.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_INCONSISTENT_ROOT_HINTS">
            <summary>
The DNS server found root hints but they were not consistent across all adapters.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_CANNOT_FIND_ROOT_HINTS">
            <summary>
The DNS server could not find a set of root hints.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION">
            <summary>
The record could not be created because this part of the DNS namespace has been delegated to another server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER">
            <summary>
The operation requested is not permitted on a DNS root server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NUMERIC_NAME">
            <summary>
DNS name is entirely numeric.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_INVALID_NAME_CHAR">
            <summary>
DNS name contains an invalid character.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_STATUS_SINGLE_PART_NAME">
            <summary>
DNS name is a single-part name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_STATUS_DOTTED_NAME">
            <summary>
DNS name is dotted (multi-label).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_STATUS_FQDN">
            <summary>
DNS name is a fully-qualified DNS name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NON_RFC_NAME">
            <summary>
DNS name does not comply with RFC specifications.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NOT_UNIQUE">
            <summary>
Record for given name and type is not unique.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_TRY_AGAIN_LATER">
            <summary>
Try DNS operation again later.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_INVALID_PROPERTY">
            <summary>
Invalid property.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_INVALID_IP_ADDRESS">
            <summary>
Invalid IP address.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_INVALID_TYPE">
            <summary>
Invalid DNS type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_UNSECURE_PACKET">
            <summary>
Unsecured DNS packet.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RCODE">
            <summary>
DNS error, check rcode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_NO_PACKET">
            <summary>
No DNS packet.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_BAD_PACKET">
            <summary>
Bad DNS packet.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_INFO_NO_RECORDS">
            <summary>
No records found for given DNS query.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RCODE_BADTIME">
            <summary>
DNS signature validity expired.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RCODE_BADKEY">
            <summary>
DNS bad key.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RCODE_BADSIG">
            <summary>
DNS signature failed to verify.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RCODE_NOTZONE">
            <summary>
DNS name in update or prereq is not in zone.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RCODE_NOTAUTH">
            <summary>
DNS server not authoritative for zone.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RCODE_NXRRSET">
            <summary>
DNS RR set that ought to exist, does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RCODE_YXRRSET">
            <summary>
DNS RR set that ought not exist, does exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RCODE_YXDOMAIN">
            <summary>
DNS name that ought not exist, does exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RCODE_REFUSED">
            <summary>
DNS operation refused.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RCODE_NOT_IMPLEMENTED">
            <summary>
DNS request not supported by name server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RCODE_NAME_ERROR">
            <summary>
DNS name does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RCODE_SERVER_FAILURE">
            <summary>
DNS server failure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.DNS_ERROR_RCODE_FORMAT_ERROR">
            <summary>
DNS server unable to interpret format.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_MISSING_KRBTGT_SECRET">
            <summary>
The replication operation failed because the required attributes of the local krbtgt object are missing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_MAPI_ID_NOT_AVAILABLE">
            <summary>
Schema update failed: There are no MAPI identifiers available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_RESERVED_MAPI_ID">
            <summary>
Schema update failed: The MAPI identifier is reserved.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_SECRETS_DENIED">
            <summary>
The request to replicate secrets is denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_CORRUPT_UTD_VECTOR">
            <summary>
The specified up-to-date-ness vector is corrupt.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_HIERARCHY_TABLE_TOO_DEEP">
            <summary>
The address books are nested too deeply. Failed to build the hierarchy table.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INVALID_SEARCH_FLAG_TUPLE">
            <summary>
The search flags for the attribute are invalid. The tuple index bit is valid only on attributes of Unicode strings.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE">
            <summary>
The search flags for the attribute are invalid. The subtree index bit is valid only on single valued attributes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_AUDIT_FAILURE">
            <summary>
A required audit event could not be generated for the operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NON_ASQ_SEARCH">
            <summary>
The requested search operation is not supported for ASQ searches.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_NTDSA_OBJECT">
            <summary>
The NTDS Settings object for the domain controller does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_SERVER_OBJECT">
            <summary>
The server object for the domain controller does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_WRITABLE_DC_FOUND">
            <summary>
Could not find a writable domain controller in the domain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SECRETS">
            <summary>
The local account store does not contain secret material for the specified account.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SITE_SETTINGS_OBJECT">
            <summary>
The site settings object for the specified site does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_POLICY_NOT_KNOWN">
            <summary>
At this time, it cannot be determined if the branch replication policy is available on the hub domain controller. Please retry at a later time to account for replication latencies.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_OUT_SCHEDULE_WINDOW">
            <summary>
The scheduled replication did not take place because the system was too busy to execute the request within the schedule window. The replication queue is overloaded. Consider reducing the number of partners or decreasing the scheduled replication frequency.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_LDAP_SEND_QUEUE_FULL">
            <summary>
The LDAP servers network send queue has filled up because the client is not processing the results of it's requests fast enough. No more requests will be processed until the client catches up. If the client does not catch up then it will be disconnected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER">
            <summary>
The requested operation is not allowed on an object under the system container.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_REPL_LIFETIME_EXCEEDED">
            <summary>
The directory service cannot replicate with this server because the time since the last replication with this server has exceeded the tombstone lifetime.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_EXISTING_AD_CHILD_NC">
            <summary>
The directory service detected a child partition below the requested partition name. The partition hierarchy must be created in a top down method.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DOMAIN_RENAME_IN_PROGRESS">
            <summary>
The Directory Service cannot perform the requested operation because a domain rename operation is in progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL">
            <summary>
The target container for a redirection of a well known object container cannot already be a special container.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ROLE_NOT_VERIFIED">
            <summary>
The FSMO role ownership could not be verified because its directory partition has not replicated successfully with atleast one replication partner.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_MOVE_APP_QUERY_GROUP">
            <summary>
Cross-domain move of non-empty query based application groups is not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_MOVE_APP_BASIC_GROUP">
            <summary>
Cross-domain move of non-empty basic application groups is not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_GROUP_CONVERSION_ERROR">
            <summary>
The group cannot be converted due to attribute restrictions on the requested group type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT">
            <summary>
Insufficient attributes were given to create an object. This object may not exist because it may have been deleted and already garbage collected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DUPLICATE_ID_FOUND">
            <summary>
The requested object has a non-unique identifier and cannot be retrieved.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC">
            <summary>
Writeable NCs prevent this DC from demoting.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN">
            <summary>
The DS cannot derive a service principal name (SPN) with which to mutually authenticate the target server because the server's domain has been deleted from the forest.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CROSS_REF_BUSY">
            <summary>
A cross reference is in use locally with the same name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_REMOTE_CROSSREF_OP_FAILED">
            <summary>
The remote create cross reference operation failed on the Domain Naming Master FSMO. The operation's error is in the extended data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INVALID_SCRIPT">
            <summary>
The Directory Service cannot process the script because it is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_AUTHORIZATION_FAILED">
            <summary>
The directory service failed to authorize the request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_EXISTS_IN_RDNATTID">
            <summary>
Schema deletion failed: attribute is used in rDNAttID.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DUP_MSDS_INTID">
            <summary>
Schema update failed: Duplicate msDS-INtId. Retry the operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_MSDS_INTID">
            <summary>
Schema update failed: No values for msDS-IntId are available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR">
            <summary>
Operation not allowed on a disabled cross ref.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRS_EXTENSIONS_CHANGED">
            <summary>
The directory service binding must be renegotiated due to a change in the server extensions information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DIFFERENT_REPL_EPOCHS">
            <summary>
The directory service cannot perform the requested operation because the servers involved are of different replication epochs (which is usually related to a domain rename that is in progress).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NTDSCRIPT_PROCESS_ERROR">
            <summary>
The Directory Service cannot process the script because of an error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NTDSCRIPT_SYNTAX_ERROR">
            <summary>
The Directory Service cannot parse the script because of a syntax error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SINGLE_USER_MODE_FAILED">
            <summary>
The Directory Service failed to enter single user mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF">
            <summary>
The DS cannot derive a service principal name (SPN) with which to mutually authenticate the target server because the corresponding server object in the local DS database has no serverReference attribute.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NOT_CLOSEST">
            <summary>
The Global catalog server is not in the closest site.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_THREAD_LIMIT_EXCEEDED">
            <summary>
The thread limit for this request was exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2">
            <summary>
The directory cannot validate the proposed naming context (or partition) name because it does not hold a replica nor can it contact a replica of the naming context above the proposed naming context. Please ensure that the parent naming context is properly registered in DNS, and at least one replica of this naming context is reachable by the Domain Naming master.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD">
            <summary>
Could not access a partition of the directory service located on a remote server. Make sure at least one server is running for the partition in question.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER">
            <summary>
The requested action is not supported on standard server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAME_ERROR_TRUST_REFERRAL">
            <summary>
Unable to resolve completely, a referral to another forest is generated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_MODIFYDN_WRONG_GRANDPARENT">
            <summary>
This object is not allowed to change its grandparent container. Moves are not forbidden on this object, but are restricted to sibling containers.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG">
            <summary>
A system flag has been set on the object and does not allow the object to be moved or renamed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC">
            <summary>
Move operations on objects in the schema naming context are not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE">
            <summary>
Rename or move operations on naming context heads or read-only objects are not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER">
            <summary>
An account group cannot have a universal group as a member.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_LINK_ID_NOT_AVAILABLE">
            <summary>
Schema update failed: There are no link identifiers available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_RESERVED_LINK_ID">
            <summary>
Schema update failed: The link identifier is reserved.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_REF_DOMAIN">
            <summary>
Unable to find a valid security descriptor reference domain for this partition.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INCOMPATIBLE_CONTROLS_USED">
            <summary>
Unable to continue operation because multiple conflicting controls were used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_OUT_OF_VERSION_STORE">
            <summary>
The database is out of version store.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4">
            <summary>
The machine account was created pre-NT4. The account needs to be recreated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAME_NOT_UNIQUE">
            <summary>
The requested name already exists as a unique identifier.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NOT_SUPPORTED_SORT_ORDER">
            <summary>
The sort order requested is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN">
            <summary>
The forest functional level cannot be raised to the requested value since one or more domains are still in mixed domain mode. All domains in the forest must be in native mode, for you to raise the forest functional level.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_LOW_DSA_VERSION">
            <summary>
The functional level of the domain (or forest) cannot be raised to the requested value, because there exist one or more domain controllers in the domain (or forest) that are at a lower incompatible functional level.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INCOMPATIBLE_VERSION">
            <summary>
The version of the operating system installed on this server is incompatible with the functional level of the domain or forest.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DOMAIN_VERSION_TOO_LOW">
            <summary>
The version of the operating system installed on this server no longer supports the current domain functional level. You must raise the domain functional level before this server can become a domain controller in this domain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_FOREST_VERSION_TOO_LOW">
            <summary>
The version of the operating system installed on this server no longer supports the current forest functional level. You must raise the forest functional level before this server can become a domain controller in this forest.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DOMAIN_VERSION_TOO_HIGH">
            <summary>
The version of the operating system installed is incompatible with the current domain functional level. You must upgrade to a new version of the operating system before this server can become a domain controller in this domain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_FOREST_VERSION_TOO_HIGH">
            <summary>
The version of the operating system installed is incompatible with the current forest functional level. You must upgrade to a new version of the operating system before this server can become a domain controller in this forest.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SAM_INIT_FAILURE_CONSOLE">
            <summary>
Security Accounts Manager initialization failed because of the following error: %1.
Error Status: 0x%2. Please click OK to shutdown the system. You can use the recovery console to diagnose the system further.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INIT_FAILURE_CONSOLE">
            <summary>
Directory Services could not start because of the following error: %1.
Error Status: 0x%2. Please click OK to shutdown the system. You can use the recovery console to diagnose the system further.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ">
            <summary>
Critical Directory Service System objects cannot be deleted during tree delete operations. The tree delete may have been partially performed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER">
            <summary>
For security reasons, the source DC must be NT4SP4 or greater.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_MUST_BE_RUN_ON_DST_DC">
            <summary>
For security reasons, the operation must be run on the destination DC.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED">
            <summary>
Your computer could not be joined to the domain. You have exceeded the maximum number of computer accounts you are allowed to create in this domain. Contact your system administrator to have this limit reset or increased.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_UNICODEPWD_NOT_IN_QUOTES">
            <summary>
The unicodePwd attribute value must be enclosed in double quotes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS">
            <summary>
A Filter was passed that uses constructed attributes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INVALID_NAME_FOR_SPN">
            <summary>
A Service Principal Name (SPN) could not be constructed because the provided hostname is not in the necessary format.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC">
            <summary>
Security principal objects can only be created inside domain naming contexts.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SOURCE_AUDITING_NOT_ENABLED">
            <summary>
The operation requires that source domain auditing be enabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_CHECKPOINT_WITH_PDC">
            <summary>
The checkpoint with the PDC could not be taken because there too many modifications being processed currently.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_ADD_TO_GC">
            <summary>
The attribute is not allowed to be replicated to the GC because of security reasons.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS">
            <summary>
Foreign security principals cannot be members of universal groups.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY">
            <summary>
A local group can only be a member of other local groups in the same domain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_GC_REQUIRED">
            <summary>
The requested operation can be performed only on a global catalog server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NC_STILL_HAS_DSAS">
            <summary>
The requested domain could not be deleted because there exist domain controllers that still host this domain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_OBJ_NC_MISMATCH">
            <summary>
The replication update could not be applied because either the source or the destination has not yet received information regarding a recent cross-domain move operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT">
            <summary>
The replication operation could not be completed due to a previous schema incompatibility.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_SCHEMA_CONFLICT">
            <summary>
The replication operation could not be completed due to a schema incompatibility.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_SCHEMA_INFO_SHIP">
            <summary>
Schema information could not be included in the replication request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SAM_INIT_FAILURE">
            <summary>
Security Accounts Manager initialization failed because of the following error: %1.
Error Status: 0x%2. Click OK to shut down the system and reboot into Safe Mode. Check the event log for detailed information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH">
            <summary>
The source and destination object must be of the same type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SRC_SID_EXISTS_IN_FOREST">
            <summary>
The source object's SID already exists in destination forest.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER">
            <summary>
The source object must be a group or user.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN">
            <summary>
The operation couldn't locate a DC for the source domain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED">
            <summary>
The operation requires that destination domain auditing be enabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST">
            <summary>
The destination domain must be in the forest.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SOURCE_DOMAIN_IN_FOREST">
            <summary>
The source domain may not be in the same forest as destination.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION">
            <summary>
The connection between client and server requires packet privacy or better.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INIT_FAILURE">
            <summary>
Directory Services could not start.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_START">
            <summary>
Directory Service cannot start.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY">
            <summary>
Security Account Manager needs to get the boot key from floppy disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD">
            <summary>
Security Account Manager needs to get the boot password.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_WRONG_LINKED_ATT_SYNTAX">
            <summary>
The syntax of the linked attribute being added is incorrect. Forward links can only have syntax 2.5.5.1, 2.5.5.7, and 2.5.5.14, and backlinks can only have syntax 2.5.5.1
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_KEY_NOT_UNIQUE">
            <summary>
The object requested was not found, but an object with that key was found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_RETRIEVE_SD">
            <summary>
The Security Descriptor attribute could not be read.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_COULDNT_UPDATE_SPNS">
            <summary>
While processing a change to the DNS Host Name for an object, the Service Principal Name values could not be kept in sync.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DNS_LOOKUP_FAILURE">
            <summary>
The DSA operation is unable to proceed because of a DNS lookup failure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAMING_MASTER_GC">
            <summary>
Only DSAs configured to be Global Catalog servers should be allowed to hold the Domain Naming Master FSMO role. (Applies only to Windows 2000 servers)
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_STRING_SD_CONVERSION_FAILED">
            <summary>
The schema cache load failed to convert the string default SD on a class-schema object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_HAVE_PRIMARY_MEMBERS">
            <summary>
A group with primary members cannot change to a security-disabled group.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER">
            <summary>
A local group cannot have another cross domain local group as a member.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER">
            <summary>
A global group cannot have a cross-domain member.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER">
            <summary>
A universal group cannot have a local group as a member.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER">
            <summary>
A global group cannot have a universal group as a member.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER">
            <summary>
A global group cannot have a local group as a member.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN">
            <summary>
You cannot nest local groups in a mixed domain if the group is security-enabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN">
            <summary>
You cannot nest global groups in a mixed domain if the group is security-enabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INVALID_GROUP_TYPE">
            <summary>
The specified group type is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE">
            <summary>
The replica/child install failed to read the objectVersion attribute in the SCHEMA section of the file schema.ini in the system32 directory.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INSTALL_NO_SRC_SCH_VERSION">
            <summary>
The replica/child install failed to get the objectVersion attribute on the schema container on the source DC. Either the attribute is missing on the schema container or the credentials supplied do not have permission to read it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_CREATE_UNDER_SCHEMA">
            <summary>
An object of this class cannot be created under the schema container. You can only create attribute-schema and class-schema objects under the schema container.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SCHEMA_UPDATE_DISALLOWED">
            <summary>
Schema update is not allowed on this DC because the DC is not the schema FSMO Role Owner.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NONSAFE_SCHEMA_CHANGE">
            <summary>
Adding a new mandatory attribute to an existing class, deleting a mandatory attribute from an existing class, or adding an optional attribute to the special class Top that is not a backlink attribute (directly or through inheritance, for example, by adding or deleting an auxiliary class) is not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD">
            <summary>
An attempt is made to modify the base schema.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_MOD_PRIMARYGROUPID">
            <summary>
Cannot change the primary group ID of a domain controller account.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SENSITIVE_GROUP_VIOLATION">
            <summary>
Only an administrator can modify the membership list of an administrative group.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SAM_INIT_FAILURE">
            <summary>
Security Accounts Manager initialization failed because of the following error: %1.
Error Status: 0x%2. Click OK to shut down the system and reboot into Directory Services Restore Mode. Check the event log for detailed information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE">
            <summary>
The directory service failed to identify the list of objects to delete while attempting a tree deletion.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE">
            <summary>
The directory service failed to lock a tree in preparation for a tree deletion because the tree was in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_TREE_DELETE_ABOVE_NC">
            <summary>
Tree deletions starting at an object which has an NC head as a descendant are not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INVALID_SEARCH_FLAG">
            <summary>
The search flags for the attribute are invalid. The ANR bit is valid only on attributes of Unicode or Teletex strings.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_MOVE_RESOURCE_GROUP">
            <summary>
Cross-domain move of non-empty resource groups is not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_MOVE_ACCOUNT_GROUP">
            <summary>
Cross-domain move of non-empty account groups is not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER">
            <summary>
The operation cannot be performed because the server does not have an infrastructure container in the domain of interest.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DST_DOMAIN_NOT_NATIVE">
            <summary>
Destination domain must be in native mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE">
            <summary>
The directory cannot validate the proposed naming context name because it does not hold a replica of the naming context above the proposed naming context. Please ensure that the domain naming master role is held by a server that is configured as a global catalog server, and that the server is up to date with its replication partners. (Applies only to Windows 2000 Domain Naming masters)
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NC_MUST_HAVE_NC_PARENT">
            <summary>
A naming context head must be the immediate child of another naming context head, not of an interior node.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS">
            <summary>
Can't move objects with memberships across domain boundaries as once moved, this would violate the membership conditions of the account group. Remove the object from any account group memberships and retry.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION">
            <summary>
This object may not be moved across domain boundaries either because cross-domain moves for this class are disallowed, or the object has some special characteristics, e.g.: trust account or restricted RID, which prevent its move.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD">
            <summary>
A cross-domain move operation failed such that two versions of the moved object exist - one each in the source and destination domains. The destination object needs to be removed to restore the system to a consistent state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_PDC_OPERATION_IN_PROGRESS">
            <summary>
Another operation which requires exclusive access to the PDC FSMO is already in progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_MOVE_DELETED_OBJECT">
            <summary>
Object being moved across-domains is already known to be deleted by the destination server. The source server does not have the latest version of the source object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SRC_GUID_MISMATCH">
            <summary>
Source and destination of a cross-domain move do not agree on the identity of the source object. Either source or destination does not have the latest version of the source object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC">
            <summary>
Destination of a cross-domain move is not authoritative for the destination naming context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DST_NC_MISMATCH">
            <summary>
Source and destination for a cross-domain move are not in agreement on the naming contexts in the forest. Either source or destination does not have the latest version of the Partitions container.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SRC_AND_DST_NC_IDENTICAL">
            <summary>
Source and destination for the cross-domain move operation are identical. Caller should use local move operation instead of cross-domain move operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SRC_NAME_MISMATCH">
            <summary>
Source and destination of a cross-domain move do not agree on the object's current name. Either source or destination does not have the latest version of the object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_EPOCH_MISMATCH">
            <summary>
Source and destination of a cross-domain move do not agree on the object's epoch number. Either source or destination does not have the latest version of the object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_BACKLINK_WITHOUT_LINK">
            <summary>
The schema update operation tried to add a backward link attribute that has no corresponding forward link.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_RETRIEVE_ATTS">
            <summary>
The search failed to retrieve attributes from the database.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NON_BASE_SEARCH">
            <summary>
The requested search operation is only supported for base searches.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INVALID_LDAP_DISPLAY_NAME">
            <summary>
The LDAP display name of the class or attribute contains non-ASCII characters.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DS_REQUIRED">
            <summary>
The requested operation requires a directory service, and none was available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_REPL_PENDING">
            <summary>
The replication request has been posted; waiting for reply.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_WRONG_OM_OBJ_CLASS">
            <summary>
The OM-Object-Class specified is incorrect for an attribute with the specified syntax.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CONSTRUCTED_ATT_MOD">
            <summary>
Modification of a constructed attribute is not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING">
            <summary>
Name translation: Unable to perform purely syntactical mapping at the client without going out to the wire.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAME_ERROR_DOMAIN_ONLY">
            <summary>
Name translation: Unable to resolve completely, only the domain was found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAME_ERROR_NO_MAPPING">
            <summary>
Name translation: Input name found, but not the associated output format.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAME_ERROR_NOT_UNIQUE">
            <summary>
Name translation: Input name mapped to more than one output name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAME_ERROR_NOT_FOUND">
            <summary>
Name translation: Could not find the name or insufficient right to see name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAME_ERROR_RESOLVING">
            <summary>
Name translation: Generic processing error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DUP_LINK_ID">
            <summary>
Schema update failed: An attribute with the same link identifier already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INSTALL_SCHEMA_MISMATCH">
            <summary>
The version of the directory service schema of the source forest is not compatible with the version of directory service on this computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_EXTN_CONNECTION_FAILED">
            <summary>
The server specified for this replication operation was contacted, but that server was unable to contact an additional server needed to complete the operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA">
            <summary>
The replication synchronization attempt failed because a master replica attempted to sync from a partial replica.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET">
            <summary>
Synchronization attempt failed because the destination DC is currently waiting to synchronize new partial attributes from source. This condition is normal if a recent schema change modified the partial attribute set. The destination partial attribute set is not a subset of source partial attribute set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_SHUTDOWN">
            <summary>
The replication operation was terminated because the system is shutting down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_ABANDON_SYNC">
            <summary>
The replication synchronization attempt was abandoned because of a lack of updates.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_PREEMPTED">
            <summary>
The replication operation was preempted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_MISSING_PARENT">
            <summary>
The replication operation failed because a required parent object is missing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_SOURCE_REINSTALLED">
            <summary>
The replication source has been reinstalled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_NAME_COLLISION">
            <summary>
The replication operation failed due to a collision of object names.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_SINK_DISABLED">
            <summary>
The destination server is currently rejecting replication requests.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_SOURCE_DISABLED">
            <summary>
The source server is currently rejecting replication requests.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_RPC_CANCELLED">
            <summary>
The replication remote procedure call was cancelled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_NOT_SUPPORTED">
            <summary>
The requested operation is not supported by this version of the directory service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_ACCESS_DENIED">
            <summary>
Replication access was denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_NO_REPLICA">
            <summary>
The naming context is in the process of being removed or is not replicated from the specified server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_DB_ERROR">
            <summary>
The replication operation encountered a database error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_OBJ_IS_REP_SOURCE">
            <summary>
The naming context cannot be removed because it is replicated to another server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_REF_NOT_FOUND">
            <summary>
The replication reference information for the target server does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_REF_ALREADY_EXISTS">
            <summary>
The replication reference information for the target server already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_MAIL_PROBLEM">
            <summary>
The replication operation encountered an error with the mail system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_OUT_OF_MEM">
            <summary>
The replication operation failed to allocate memory.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_BAD_INSTANCE_TYPE">
            <summary>
The replication operation encountered an object with an invalid instance type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_CONNECTION_FAILED">
            <summary>
The server specified for this replication operation could not be contacted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_INCONSISTENT_DIT">
            <summary>
The replication operation encountered a database inconsistency.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_INTERNAL_ERROR">
            <summary>
The replication system encountered an internal error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_DN_EXISTS">
            <summary>
The distinguished name specified for this replication operation already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_BAD_NC">
            <summary>
The naming context specified for this replication operation is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_BAD_DN">
            <summary>
The distinguished name specified for this replication operation is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_BUSY">
            <summary>
The directory service is too busy to complete the replication operation at this time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_INVALID_PARAMETER">
            <summary>
An invalid parameter was specified for this replication operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_GENERIC">
            <summary>
The replication operation failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_UNABLE_TO_SURRENDER_ROLES">
            <summary>
The directory service was unable to transfer ownership of one or more floating single-master operation roles to other servers.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_MISSING_FSMO_SETTINGS">
            <summary>
The directory service is missing mandatory configuration information, and is unable to determine the ownership of floating single-master operation roles.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_REFUSING_FSMO_ROLES">
            <summary>
This directory server is shutting down, and cannot take ownership of new floating single-master operation roles.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ROOT_REQUIRES_CLASS_TOP">
            <summary>
A root object requires a class of 'top'.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_UNKNOWN_ERROR">
            <summary>
The directory service encountered an unknown failure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INTERNAL_FAILURE">
            <summary>
The directory service encountered an internal failure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED">
            <summary>
The allocation of the hierarchy table failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_COUNTING_AB_INDICES_FAILED">
            <summary>
The attempt to count the address book indices failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CONFIG_PARAM_MISSING">
            <summary>
The directory configuration parameter is missing from the registry.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED">
            <summary>
The attempt to build the hierarchy table failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_BAD_HIERARCHY_FILE">
            <summary>
The hierarchy file is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_REPLACE_HIDDEN_REC">
            <summary>
The operation cannot replace the hidden record.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SECURITY_ILLEGAL_MODIFY">
            <summary>
The modification was not permitted for security reasons.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_RETRIEVE_CHILD">
            <summary>
The child object could not be retrieved.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_FIND_NC_IN_CACHE">
            <summary>
The naming context could not be found in the cache.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_FIND_EXPECTED_NC">
            <summary>
The naming context could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_FIND_DSA_OBJ">
            <summary>
The DSA object could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DRA_SCHEMA_MISMATCH">
            <summary>
The replication operation failed because of a schema mismatch between the servers involved.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_GCVERIFY_ERROR">
            <summary>
The global catalog verification failed. The global catalog is not available or does not support the operation. Some part of the directory is currently not available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ATT_SCHEMA_REQ_SYNTAX">
            <summary>
Failed to obtain the required syntax for the attribute schema.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SCHEMA_ALLOC_FAILED">
            <summary>
Schema allocation failed. Please check if the machine is running low on memory.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SCHEMA_NOT_LOADED">
            <summary>
The schema is not loaded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SECURITY_CHECKING_ERROR">
            <summary>
A security checking error has occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NCNAME_MISSING_CR_REF">
            <summary>
The specified naming context is missing a cross reference.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_MISSING_EXPECTED_ATT">
            <summary>
An expected attribute is missing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_GOVERNSID_MISSING">
            <summary>
The attribute GOVERNSID is missing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DATABASE_ERROR">
            <summary>
A database error has occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CODE_INCONSISTENCY">
            <summary>
An internal error has occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_RETRIEVE_INSTANCE">
            <summary>
The instance type attribute could not be retrieved.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_MISSING_SUPREF">
            <summary>
No superior reference has been configured for the directory service. The directory service is therefore unable to issue referrals to objects outside this forest.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_RETRIEVE_DN">
            <summary>
The distinguished name attribute could not be read.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_REMOVE_CLASS_CACHE">
            <summary>
The class could not be removed from the cache.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_REMOVE_ATT_CACHE">
            <summary>
The attribute could not be removed from the cache.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_CACHE_CLASS">
            <summary>
The class could not be cached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_CACHE_ATT">
            <summary>
The attribute could not be cached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_BAD_ATT_SCHEMA_SYNTAX">
            <summary>
The attribute schema has bad syntax.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ATT_SCHEMA_REQ_ID">
            <summary>
Cannot read the governs class identifier for the schema record.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_DELETE">
            <summary>
The requested delete operation could not be performed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_TREE_DELETE_NOT_FINISHED">
            <summary>
The tree deletion is not finished. The request must be made again to continue deleting the tree.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_RECALCSCHEMA_FAILED">
            <summary>
Schema update failed in recalculating validation cache.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_EXISTS_IN_POSS_SUP">
            <summary>
Schema deletion failed: class is used as poss superior.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_EXISTS_IN_SUB_CLS">
            <summary>
Schema deletion failed: class is used as sub class.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_EXISTS_IN_AUX_CLS">
            <summary>
Schema deletion failed: class is used as auxiliary class.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_BAD_RDN_ATT_ID_SYNTAX">
            <summary>
Schema update failed: Rdn-Att-Id has wrong syntax.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SUB_CLS_TEST_FAIL">
            <summary>
Schema update failed: class in subclassof list does not exist or does not satisfy hierarchy rules.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NONEXISTENT_POSS_SUP">
            <summary>
Schema update failed: class in poss-superiors does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_AUX_CLS_TEST_FAIL">
            <summary>
Schema update failed: class in aux-class list does not exist or is not an auxiliary class.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NONEXISTENT_MUST_HAVE">
            <summary>
Schema update failed: attribute in must-contain does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NONEXISTENT_MAY_HAVE">
            <summary>
Schema update failed: attribute in may-contain does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_EXISTS_IN_MAY_HAVE">
            <summary>
Schema deletion failed: attribute is used in may-contain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_EXISTS_IN_MUST_HAVE">
            <summary>
Schema deletion failed: attribute is used in must-contain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SYNTAX_MISMATCH">
            <summary>
Schema update failed: syntax mismatch.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SEMANTIC_ATT_TEST">
            <summary>
Schema update failed: range-lower less than range upper.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DUP_LDAP_DISPLAY_NAME">
            <summary>
Schema update failed: duplicate LDAP display name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DUP_SCHEMA_ID_GUID">
            <summary>
Schema update failed: duplicate schema-id GUID.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DUP_MAPI_ID">
            <summary>
Schema update failed: duplicate MAPI identifier.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DUP_OID">
            <summary>
Schema update failed: duplicate OID.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DUP_RDN">
            <summary>
Schema update failed: duplicate RDN.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX">
            <summary>
Notification filter is too complex.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD">
            <summary>
Subtree notifications are only supported on NC heads.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_DEL_MASTER_CROSSREF">
            <summary>
It is not permitted to delete a master cross reference.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CROSS_REF_EXISTS">
            <summary>
A cross reference already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAME_REFERENCE_INVALID">
            <summary>
The name reference is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_OBJ_CLASS_NOT_SUBCLASS">
            <summary>
The specified class is not a subclass.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_OBJ_CLASS_NOT_DEFINED">
            <summary>
The specified class is not defined.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_REPLICATOR_ONLY">
            <summary>
Only the replicator can perform this function.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_MOD_SYSTEM_ONLY">
            <summary>
The attribute cannot be modified because it is owned by the system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CROSS_NC_DN_RENAME">
            <summary>
Modification of a DN across a naming context is not permitted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_COULDNT_CONTACT_FSMO">
            <summary>
The requested FSMO operation failed. The current FSMO holder could not be contacted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INVALID_ROLE_OWNER">
            <summary>
The role owner attribute could not be read.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_UNKNOWN_OPERATION">
            <summary>
The directory service request is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SHUTTING_DOWN">
            <summary>
The operation could not be performed because the directory service is shutting down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_CROSSREF_FOR_NC">
            <summary>
The cross reference for the specified naming context could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NOT_ON_BACKLINK">
            <summary>
The operation cannot be performed on a back link.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_OBJ_GUID_EXISTS">
            <summary>
A local object with this GUID (dead or alive) already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INVALID_DMD">
            <summary>
The schema object could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CLASS_MUST_BE_CONCRETE">
            <summary>
The class of the object must be structural; you cannot instantiate an abstract class.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_ADD_SYSTEM_ONLY">
            <summary>
It is not permitted to add an attribute which is owned by the system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NCNAME_MUST_BE_NC">
            <summary>
The object must be a naming context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SUBREF_MUST_HAVE_PARENT">
            <summary>
The parent of a new subref must exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_DELETED_NAME">
            <summary>
Failed to create name for deleted object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SEC_DESC_INVALID">
            <summary>
The security descriptor is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SEC_DESC_TOO_SHORT">
            <summary>
The security descriptor is too short.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NOT_AN_OBJECT">
            <summary>
The name does not identify an object; the name identifies a phantom.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAME_TYPE_UNKNOWN">
            <summary>
The directory service cannot get the attribute type for a name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAME_UNPARSEABLE">
            <summary>
The directory service encountered an error parsing a name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAME_VALUE_TOO_LONG">
            <summary>
The name value is too long.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAME_TOO_LONG">
            <summary>
The name is too long.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAME_TOO_MANY_PARTS">
            <summary>
The name has too many parts.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ATTRIBUTE_OWNED_BY_SAM">
            <summary>
Access to the attribute is not permitted because the attribute is owned by the Security Accounts Manager (SAM).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ILLEGAL_SUPERIOR">
            <summary>
The object cannot be added because the parent is not on the list of possible superiors.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INSUFF_ACCESS_RIGHTS">
            <summary>
Insufficient access rights to perform the operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CLASS_NOT_DSA">
            <summary>
The object must be of class DSA.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DSA_MUST_BE_INT_MASTER">
            <summary>
The operation can only be performed on an internal master DSA object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_GENERIC_ERROR">
            <summary>
A directory service error has occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_DELETE_DSA_OBJ">
            <summary>
The DSA object cannot be deleted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_OBJECT_BEING_REMOVED">
            <summary>
The operation cannot continue because the object is in the process of being removed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_OUT_OF_SCOPE">
            <summary>
The operation is out of scope.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_DEREF_ALIAS">
            <summary>
The alias cannot be dereferenced.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ALIAS_POINTS_TO_ALIAS">
            <summary>
It is not permitted for an alias to refer to another alias.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_BAD_NAME_SYNTAX">
            <summary>
The object name has bad syntax.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ALIASED_OBJ_MISSING">
            <summary>
The aliased object is missing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_OBJ_NOT_FOUND">
            <summary>
Directory object not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CHILDREN_EXIST">
            <summary>
The operation cannot be performed because child objects exist. This operation can only be performed on a leaf object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_MIX_MASTER_AND_REPS">
            <summary>
The object and parent must be of the same type, either both masters or both replicas.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_PARENT_IS_AN_ALIAS">
            <summary>
Having a parent that is an alias is not permitted. Aliases are leaf objects.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_PARENT_OBJECT">
            <summary>
The operation could not be performed because the object's parent is either uninstantiated or deleted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_CHAINED_EVAL">
            <summary>
Chained evaluation is not permitted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_CHAINING">
            <summary>
Chaining is not permitted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ROOT_CANT_BE_SUBREF">
            <summary>
The specified root object cannot be a subref.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_REM_MISSING_ATT_VAL">
            <summary>
The attribute value cannot be removed because it is not present on the object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_REM_MISSING_ATT">
            <summary>
The attribute cannot be removed because it is not present on the object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ATT_VAL_ALREADY_EXISTS">
            <summary>
The specified value already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_RANGE_CONSTRAINT">
            <summary>
A value for the attribute was not in the acceptable range of values.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SINGLE_VALUE_CONSTRAINT">
            <summary>
Multiple values were specified for an attribute that can have only one value.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_ADD_ATT_VALUES">
            <summary>
The specified attribute is not present, or has no values.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ATT_ALREADY_EXISTS">
            <summary>
The specified attribute is already present on the object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ATT_NOT_DEF_FOR_CLASS">
            <summary>
An attempt was made to modify an object to include an attribute that is not legal for its class.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_MISSING_REQUIRED_ATT">
            <summary>
A required attribute is missing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_OBJECT_CLASS_REQUIRED">
            <summary>
The object class attribute must be specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_MASTERDSA_REQUIRED">
            <summary>
The operation must be performed at a master DSA.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_BAD_INSTANCE_TYPE">
            <summary>
The specified instance type is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_OBJ_TOO_LARGE">
            <summary>
The specified object is too large.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ILLEGAL_MOD_OPERATION">
            <summary>
Illegal modify operation. Some aspect of the modification is not permitted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ATT_IS_NOT_ON_OBJ">
            <summary>
The attribute specified in the operation is not present on the object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_USER_BUFFER_TO_SMALL">
            <summary>
The user buffer is too small.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_REQUESTED_ATTS_FOUND">
            <summary>
None of the requested attributes were found on the objects.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_RDN_DOESNT_MATCH_SCHEMA">
            <summary>
An attempt was made to add an object using an RDN that is not the RDN defined in the schema.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA">
            <summary>
An attempt was made to add an object of a class that does not have an RDN defined in the schema.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_OBJ_STRING_NAME_EXISTS">
            <summary>
An attempt was made to add an object to the directory with a name that is already in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_MAX_OBJ_SIZE_EXCEEDED">
            <summary>
The maximum size of an object has been exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ATT_NOT_DEF_IN_SCHEMA">
            <summary>
A reference to an attribute that is not defined in the schema occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ADD_REPLICA_INHIBITED">
            <summary>
The add replica operation cannot be performed. The naming context must be writeable in order to create the replica.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ROOT_MUST_BE_NC">
            <summary>
The root object must be the head of a naming context. The root object cannot have an instantiated parent.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_OFFSET_RANGE_ERROR">
            <summary>
The search results exceed the offset range specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SORT_CONTROL_MISSING">
            <summary>
The search requires a SORT control.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_REFERRAL_LIMIT_EXCEEDED">
            <summary>
The preset referral limit was exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CLIENT_LOOP">
            <summary>
A referral loop was detected by the client.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CONTROL_NOT_FOUND">
            <summary>
The specified control is not supported by the server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_RESULTS_RETURNED">
            <summary>
No results were returned.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NOT_SUPPORTED">
            <summary>
The specified method is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_PARAM_ERROR">
            <summary>
One or more parameters are illegal.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_FILTER_UNKNOWN">
            <summary>
The search filter cannot be recognized.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_DECODING_ERROR">
            <summary>
A decoding error has occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ENCODING_ERROR">
            <summary>
An encoding error has occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_LOCAL_ERROR">
            <summary>
A local error has occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SERVER_DOWN">
            <summary>
The server is not operational.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_AFFECTS_MULTIPLE_DSAS">
            <summary>
The operation affects multiple DSAs
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_OBJECT_RESULTS_TOO_LARGE">
            <summary>
The result set is too large.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NAMING_VIOLATION">
            <summary>
There is a naming violation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_LOOP_DETECT">
            <summary>
A loop has been detected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_UNWILLING_TO_PERFORM">
            <summary>
The server is unwilling to process the request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ALIAS_DEREF_PROBLEM">
            <summary>
There is an alias dereferencing problem.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_IS_LEAF">
            <summary>
The object is a leaf object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INVALID_DN_SYNTAX">
            <summary>
An invalid dn syntax has been specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ALIAS_PROBLEM">
            <summary>
There is an alias problem.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_SUCH_OBJECT">
            <summary>
There is no such object on the server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CONSTRAINT_VIOLATION">
            <summary>
A constraint violation occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INAPPROPRIATE_MATCHING">
            <summary>
Inappropriate matching.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CONFIDENTIALITY_REQUIRED">
            <summary>
This request requires a secure connection.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_UNAVAILABLE_CRIT_EXTENSION">
            <summary>
The server does not support the requested critical extension.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_REFERRAL">
            <summary>
A referral was returned from the server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_AUTH_UNKNOWN">
            <summary>
The authentication mechanism is unknown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INAPPROPRIATE_AUTH">
            <summary>
Inappropriate authentication.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_STRONG_AUTH_REQUIRED">
            <summary>
A more secure authentication method is required for this server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_AUTH_METHOD_NOT_SUPPORTED">
            <summary>
The requested authentication method is not supported by the server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_COMPARE_TRUE">
            <summary>
The compare response was true.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_COMPARE_FALSE">
            <summary>
The compare response was false.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ADMIN_LIMIT_EXCEEDED">
            <summary>
The administrative limit for this request was exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_SIZELIMIT_EXCEEDED">
            <summary>
The size limit for this request was exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_TIMELIMIT_EXCEEDED">
            <summary>
The time limit for this request was exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_PROTOCOL_ERROR">
            <summary>
A protocol error occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_OPERATIONS_ERROR">
            <summary>
An operations error occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_PROMOTION_ACTIVE">
            <summary>
A domain controller promotion is not currently active
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PROMOTION_ACTIVE">
            <summary>
A domain controller promotion is currently active.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_POLICY_ONLY_IN_DS">
            <summary>
The requested policy information is only in the directory service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_POLICY_OBJECT_NOT_FOUND">
            <summary>
The policy object does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SHARED_POLICY">
            <summary>
The policy object is shared and can only be modified at the root.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_GC_NOT_AVAILABLE">
            <summary>
Unable to contact the global catalog server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CROSS_DOM_MOVE_ERROR">
            <summary>
The requested cross-domain move operation could not be performed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_MOD_OBJ_CLASS">
            <summary>
The directory service detected an attempt to modify the object class of an object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_ON_RDN">
            <summary>
The directory service cannot perform the requested operation on the RDN attribute of an object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_CANT_ON_NON_LEAF">
            <summary>
The directory service can perform the requested operation only on a leaf object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_OBJ_CLASS_VIOLATION">
            <summary>
The requested operation did not satisfy one or more constraints associated with the class of the object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_RIDMGR_INIT_ERROR">
            <summary>
The directory service was unable to initialize the subsystem that allocates relative identifiers.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INCORRECT_ROLE_OWNER">
            <summary>
The requested operation could not be performed because the directory service is not the master for that type of operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_MORE_RIDS">
            <summary>
The directory service has exhausted the pool of relative identifiers.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_RIDS_ALLOCATED">
            <summary>
The directory service was unable to allocate a relative identifier.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_UNAVAILABLE">
            <summary>
The directory service is unavailable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_BUSY">
            <summary>
The directory service is busy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS">
            <summary>
The specified directory service attribute or value already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED">
            <summary>
The attribute type specified to the directory service is not defined.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_INVALID_ATTRIBUTE_SYNTAX">
            <summary>
The attribute syntax specified to the directory service is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NO_ATTRIBUTE_OR_VALUE">
            <summary>
The specified directory service attribute or value does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY">
            <summary>
The directory service evaluated group memberships locally.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_NOT_INSTALLED">
            <summary>
An error occurred while installing the directory service. For more information, see the event log.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_INVALID_SERVICE_PARAMETER">
            <summary>
The file replication service detected an invalid parameter.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_SYSVOL_DEMOTE">
            <summary>
The file replication service cannot stop replicating the system volume because of an internal error. The event log may have more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_SYSVOL_IS_BUSY">
            <summary>
The file replication service cannot process the request. The system volume is busy with a previous request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_SYSVOL_POPULATE_TIMEOUT">
            <summary>
The file replication service cannot populate the system volume because of an internal timeout. The event log may have more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_SYSVOL_POPULATE">
            <summary>
The file replication service cannot populate the system volume because of an internal error. The event log may have more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_PARENT_TO_CHILD_COMM">
            <summary>
The file replication service on the domain controller cannot communicate with the file replication service on this computer. The event log may have more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_CHILD_TO_PARENT_COMM">
            <summary>
The file replication service cannot communicate with the file replication service on the domain controller. The event log may have more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_PARENT_AUTHENTICATION">
            <summary>
The file replication service cannot satisfy the request because authenticated RPC is not available on the domain controller. The event log may have more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_PARENT_INSUFFICIENT_PRIV">
            <summary>
The file replication service cannot satisfy the request because the user has insufficient privileges on the domain controller. The event log may have more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_AUTHENTICATION">
            <summary>
The file replication service cannot satisfy the request because authenticated RPC is not available. The event log may have more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_INSUFFICIENT_PRIV">
            <summary>
The file replication service cannot satisfy the request because the user has insufficient privileges. The event log may have more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_SERVICE_COMM">
            <summary>
The file replication service cannot be contacted. The event log may have more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_INTERNAL">
            <summary>
The file replication service terminated the request. The event log may have more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_INTERNAL_API">
            <summary>
The file replication service API terminated the request. The event log may have more information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_STOPPING_SERVICE">
            <summary>
The file replication service cannot be stopped.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_STARTING_SERVICE">
            <summary>
The file replication service cannot be started.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.FRS_ERR_INVALID_API_SEQUENCE">
            <summary>
The file replication service API was called incorrectly.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TS_INCOMPATIBLE_SESSIONS">
            <summary>
The target session is incompatible with the current session.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_SECURITY_LAYER_ERROR">
            <summary>
The Terminal Server security layer detected an error in the protocol stream and has disconnected the client.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_CDM_DISCONNECT">
            <summary>
The Client Drive Mapping Service Has Disconnected on Terminal Connection.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_CDM_CONNECT">
            <summary>
The Client Drive Mapping Service Has Connected on Terminal Connection.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RDP_PROTOCOL_ERROR">
            <summary>
The RDP protocol component %2 detected an error in the protocol stream and has disconnected the client.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_ACCOUNT_RESTRICTION">
            <summary>
Unable to log you on because of an account restriction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_NO_FORCE_LOGOFF">
            <summary>
The user %s\\%s is already logged on to the console of this computer. You do not have permission to log in at this time. To resolve this issue, contact %s\\%s and have them log off.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_SESSION_IN_USE">
            <summary>
The user %s\\%s is currently logged on to this computer. Only the current user or an administrator can log on to this computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED">
            <summary>
You do not have the proper encryption level to access this Session.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_WINSTATIONS_DISABLED">
            <summary>
Remote logins are currently disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ACTIVATION_COUNT_EXCEEDED">
            <summary>
Activation has already been reset the maximum number of times for this installation. Your activation timer will not be cleared.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE">
            <summary>
The remote control of the console was terminated because the display mode was changed. Changing the display mode in a remote control session is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_SHADOW_NOT_RUNNING">
            <summary>
Remote control could not be terminated because the specified session is not currently being remotely controlled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_LICENSE_EXPIRED">
            <summary>
The system license has expired. Your logon request is denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_LICENSE_CLIENT_INVALID">
            <summary>
The client you are using is not licensed to use this system. Your logon request is denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_LICENSE_NOT_AVAILABLE">
            <summary>
The number of connections to this computer is limited and all connections are in use right now. Try connecting later or contact your system administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_CLIENT_LICENSE_NOT_SET">
            <summary>
Your request to connect to this Terminal Server has been rejected. Your Terminal Server client license number has not been entered for this copy of the Terminal Server client. Please contact your system administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_CLIENT_LICENSE_IN_USE">
            <summary>
Your request to connect to this Terminal Server has been rejected. Your Terminal Server client license number is currently being used by another user. Please call your system administrator to obtain a unique license number.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_SHADOW_DISABLED">
            <summary>
The requested session is not configured to allow remote control.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_SHADOW_INVALID">
            <summary>
The requested session cannot be controlled remotely.
This may be because the session is disconnected or does not currently have a user logged on.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_INVALID_WD">
            <summary>
The specified terminal connection driver is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_WINSTATION_ACCESS_DENIED">
            <summary>
The requested session access is denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_SHADOW_DENIED">
            <summary>
The request to control another session remotely was denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_CONSOLE_CONNECT">
            <summary>
Reconnecting a disconnected session to the console is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_CONSOLE_DISCONNECT">
            <summary>
Disconnecting the console session is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_CLIENT_QUERY_TIMEOUT">
            <summary>
The client failed to respond to the server connect message.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_NOT_CONSOLE">
            <summary>
The requested operation can be performed only on the system console. This is most often the result of a driver or system DLL requiring direct console access.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_LOGON_DISABLED">
            <summary>
Your interactive logon privilege has been disabled. Please contact your administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_GRAPHICS_INVALID">
            <summary>
The application attempted to enable DOS graphics mode. DOS graphics mode is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_BAD_VIDEO_MODE">
            <summary>
An attempt has been made to connect to a session whose video mode is not supported by the current client.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_WINSTATION_BUSY">
            <summary>
The requested operation cannot be completed because the terminal connection is currently busy processing a connect, disconnect, reset, or delete operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_WINSTATION_ALREADY_EXISTS">
            <summary>
The specified session name is already in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_WINSTATION_NOT_FOUND">
            <summary>
The specified session cannot be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_TD_ERROR">
            <summary>
Transport driver error
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_MODEM_RESPONSE_VOICE">
            <summary>
Voice detected at remote site on callback.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_MODEM_RESPONSE_BUSY">
            <summary>
Busy signal detected at remote site on callback.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE">
            <summary>
Dial tone not detected within the required time. Verify that the phone cable is properly attached and functional.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_MODEM_RESPONSE_NO_CARRIER">
            <summary>
Carrier detect has failed or carrier has been dropped due to disconnect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_MODEM_RESPONSE_TIMEOUT">
            <summary>
The modem did not respond to the command sent to it. Verify that the modem is properly cabled and powered on.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_MODEM_RESPONSE_ERROR">
            <summary>
The modem did not accept the command sent to it. Verify that the configured modem name matches the attached modem.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_INVALID_MODEMNAME">
            <summary>
The modem name was not found in MODEM.INF.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_MODEM_INF_NOT_FOUND">
            <summary>
The MODEM.INF file was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_NO_OUTBUF">
            <summary>
There are no free output buffers available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_CLOSE_PENDING">
            <summary>
A close operation is pending on the session.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_SERVICE_NAME_COLLISION">
            <summary>
A service with the same name already exists on the system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY">
            <summary>
A registry key for event logging could not be created for this session.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_WD_NOT_FOUND">
            <summary>
The specified terminal connection driver was not found in the system path.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_PD_NOT_FOUND">
            <summary>
The specified protocol driver was not found in the system path.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_INVALID_PD">
            <summary>
The specified protocol driver is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CTX_WINSTATION_NAME_INVALID">
            <summary>
The specified session name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION">
            <summary>
This operation cannot be performed in a transaction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_LINK_TRACKING_IN_TRANSACTION">
            <summary>
The link tracking operation could not be completed because a transaction is active.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLUME_DIRTY">
            <summary>
The operation could not be completed because the volume is dirty. Please run chkdsk and try again.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION">
            <summary>
The compression operation could not be completed because a transaction is active on the file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_CLUSTERS">
            <summary>
The operation could not be completed due to bad clusters on disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANNOT_ABORT_TRANSACTIONS">
            <summary>
The transactional resource manager had too many tranactions outstanding that could not be aborted. The transactional resource manger has been shut down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANNOT_ACCEPT_TRANSACTED_WORK">
            <summary>
The transactional resource manager cannot currently accept transacted work due to a transient condition such as low resources.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLOATED_SECTION">
            <summary>
I/O was attempted on a section object that has been floated as a result of a transaction ending. There is no valid data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TM_IDENTITY_MISMATCH">
            <summary>
The call to create a TransactionManager object failed because the Tm Identity stored in the logfile does not match the Tm Identity that was passed in as an argument.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION">
            <summary>
The sparse operation could not be completed because a transaction is active on the file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DATA_LOST_REPAIR">
            <summary>
Windows has discovered corruption in a file, and that file has since been repaired. Data loss may have occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SAVEPOINT_WITH_OPEN_FILES">
            <summary>
The savepoint operation failed because files are open on the transaction. This is not permitted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_SNAPSHOT_VOLUME">
            <summary>
The target volume is not a snapshot volume. This operation is only valid on a volume mounted as a snapshot.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_FREEZE_IN_PROGRESS">
            <summary>
Transactions cannot be frozen because a freeze is already in progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTIONS_NOT_FROZEN">
            <summary>
The request to thaw frozen transactions was ignored because transactions had not previously been frozen.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION">
            <summary>
This file is open for modification in an unresolved transaction and may be opened for execute only by a transacted reader.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_REQUIRED_PROMOTION">
            <summary>
Promotion was required in order to allow the resource manager to enlist, but the transaction was set to disallow it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET">
            <summary>
A transaction scope could not be entered because the scope handler has not been initialized.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TXF_METADATA_ALREADY_PRESENT">
            <summary>
Transaction metadata is already present on this file and cannot be superseded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE">
            <summary>
Memory mapping (creating a mapped section) a remote file under a transaction is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_GROWTH_FAILED">
            <summary>
An attempt to create space in the transactional resource manager's log failed. The failure status has been recorded in the event log.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED">
            <summary>
This object is not allowed to be opened in a transaction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION">
            <summary>
The encryption operation could not be completed because a transaction is active.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TXF_ATTRIBUTE_CORRUPT">
            <summary>
The transactional metadata attribute on the file or directory is corrupt and unreadable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ROLLBACK_TIMER_EXPIRED">
            <summary>
A rollback could not be scheduled because a previously scheduled rollback has already executed or been queued for execution.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TM_VOLATILE">
            <summary>
The operation could not be completed because the transaction manager does not have a log.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INDOUBT_TRANSACTIONS_EXIST">
            <summary>
The operation would leave a transactional resource manager in an inconsistent state and is therefore not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TXF_DIR_NOT_EMPTY">
            <summary>
The $Txf directory must be empty for this operation to succeed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANT_CROSS_RM_BOUNDARY">
            <summary>
The operation would involve a single file with two transactional resource managers and is therefore not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY">
            <summary>
The operation cannot be performed because another transaction is depending on the fact that this property will not change.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FILE_IDENTITY_NOT_PERSISTENT">
            <summary>
The file cannot be opened transactionally, because its identity depends on the outcome of an unresolved transaction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RM_ALREADY_STARTED">
            <summary>
The transactional resource manager has already been started.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RECOVERY_NOT_NEEDED">
            <summary>
The transactional resource manager is already consistent. Recovery is not needed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ENLISTMENT_NOT_SUPERIOR">
            <summary>
The request was rejected because the enlistment in question is not a superior enlistment.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RM_DISCONNECTED">
            <summary>
The transaction outcome is unavailable because the resource manager responsible for it has disconnected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANT_RECOVER_WITH_HANDLE_OPEN">
            <summary>
The file can't be recovered because there is a handle still open on it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_CORRUPTION_DETECTED">
            <summary>
The log data is corrupt.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_TXF_METADATA">
            <summary>
There is no transaction metadata on the file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HANDLE_NO_LONGER_VALID">
            <summary>
The handle has been invalidated by a transaction. The most likely cause is the presence of memory mapping on a file or an open handle when the transaction ended or rolled back to savepoint.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REMOTE_FILE_VERSION_MISMATCH">
            <summary>
The remote server sent mismatching version number or Fid for a file opened with transactions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS">
            <summary>
It is not possible to create any more miniversions for this stream.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT">
            <summary>
It is not possible to open a miniversion with modify access.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION">
            <summary>
A miniversion may only be opened in the context of the transaction that created it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_STREAM_MINIVERSION_NOT_VALID">
            <summary>
The specified file miniversion was found but has been invalidated. Most likely cause is a transaction savepoint rollback.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_STREAM_MINIVERSION_NOT_FOUND">
            <summary>
The specified file miniversion was not found for this transacted file open.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OBJECT_NO_LONGER_EXISTS">
            <summary>
The object (file, stream, link) corresponding to the handle has been deleted by a Transaction Savepoint Rollback.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_RESIZE_INVALID_SIZE">
            <summary>
The requested log size is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE">
            <summary>
The remote server or share does not support transacted file operations.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DIRECTORY_NOT_RM">
            <summary>
The specified directory does not contain a resource manager.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RM_METADATA_CORRUPT">
            <summary>
The metadata of the RM has been corrupted. The RM will not function.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RM_NOT_ACTIVE">
            <summary>
Transaction support within the specified file system resource manager is not started or was shutdown due to an error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTIONAL_CONFLICT">
            <summary>
The function attempted to use a name that is reserved for use by another transaction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_NO_SUPERIOR">
            <summary>
The transaction does not have a superior enlistment.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_MUST_WRITETHROUGH">
            <summary>
The transaction cannot be enlisted on with the specified EnlistmentMask, because the transaction has already completed the PrePrepare phase.  In order to ensure correctness, the ResourceManager must switch to a write-through mode and cease caching data within this transaction.  Enlisting for only subsequent transaction phases may still succeed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT">
            <summary>
This snapshot operation cannot continue because a transactional resource manager cannot be frozen in its current state.  Please try again.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH">
            <summary>
The TransactionManager identity that was supplied did not match the one recorded in the TransactionManager's log file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_INTEGRITY_VIOLATED">
            <summary>
The kernel transaction manager had to abort or forget the transaction because it blocked forward progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED">
            <summary>
Implicit transaction are not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_RECORD_TOO_LONG">
            <summary>
The specified operation could not be performed, because the record that would be logged was too long. This can occur because of two conditions: either there are too many Enlistments on this Transaction, or the combined RecoveryInformation being logged on behalf of those Enlistments is too long.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED">
            <summary>
The specified operation could not be performed on this Superior enlistment, because the enlistment was not created with the corresponding completion response in the NotificationMask.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_OBJECT_EXPIRED">
            <summary>
Because the associated transaction manager or resource manager has been closed, the handle is no longer valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_NOT_ROOT">
            <summary>
The call to create a superior Enlistment on this Transaction object could not be completed, because the Transaction object specified for the enlistment is a subordinate branch of the Transaction. Only the root of the Transaction can be enlisted on as a superior.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION">
            <summary>
The specified TransactionManager was unable to create the objects contained in its logfile in the Ob namespace. Therefore, the TransactionManager was unable to recover.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTIONMANAGER_NOT_ONLINE">
            <summary>
The object specified could not be created or opened, because its associated TransactionManager is not online.  The TransactionManager must be brought fully Online by calling RecoverTransactionManager to recover to the end of its LogFile before objects in its Transaction or ResourceManager namespaces can be opened.  In addition, errors in writing records to its LogFile can cause a TransactionManager to go offline.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTIONMANAGER_NOT_FOUND">
            <summary>
The specified TransactionManager object could not be opened, because it was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ENLISTMENT_NOT_FOUND">
            <summary>
The specified Enlistment object could not be opened, because it was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCEMANAGER_NOT_FOUND">
            <summary>
The specified ResourceManager object could not be opened, because it was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_NOT_FOUND">
            <summary>
The specified Transaction object could not be opened, because it was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CURRENT_TRANSACTION_NOT_VALID">
            <summary>
The current transaction context associated with the thread is not a valid handle to a transaction object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER">
            <summary>
The buffer passed in to PushTransaction or PullTransaction is not in a valid format.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CRM_PROTOCOL_NOT_FOUND">
            <summary>
The requested propagation protocol was not registered as a CRM.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_PROPAGATION_FAILED">
            <summary>
The attempt to propagate the Transaction failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CRM_PROTOCOL_ALREADY_EXISTS">
            <summary>
The RM tried to register a protocol that already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_SUPERIOR_EXISTS">
            <summary>
The Transaction object already has a superior enlistment, and the caller attempted an operation that would have created a new superior. Only a single superior enlistment is allow.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_NOT_JOINED">
            <summary>
The resource manager has attempted to prepare a transaction that it has not successfully joined.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCEMANAGER_READ_ONLY">
            <summary>
The specified ResourceManager made no changes or updates to the resource under this transaction.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TM_INITIALIZATION_FAILED">
            <summary>
The Transaction Manager was unable to be successfully initialized. Transacted operations are not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_ALREADY_COMMITTED">
            <summary>
It is too late to perform the requested operation, since the Transaction has already been committed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_ALREADY_ABORTED">
            <summary>
It is too late to perform the requested operation, since the Transaction has already been aborted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_NOT_REQUESTED">
            <summary>
The caller has called a response API, but the response is not expected because the TM did not issue the corresponding request to the caller.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_REQUEST_NOT_VALID">
            <summary>
The requested operation is not valid on the Transaction object in its current state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSACTION_NOT_ACTIVE">
            <summary>
The requested operation was made in the context of a transaction that is no longer active.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_TRANSACTION">
            <summary>
The transaction handle associated with this operation is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_PINNED_RESERVATION">
            <summary>
The log is pinned due to reservation consuming most of the log space. Free some reserved records to make space available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_APPENDED_FLUSH_FAILED">
            <summary>
Records were appended to the log or reservation changes were made, but the log could not be flushed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_INCONSISTENT_SECURITY">
            <summary>
Security on the log and its containers is inconsistent.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_METADATA_FLUSH_FAILED">
            <summary>
Log metadata flush failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_PINNED">
            <summary>
Log space cannot be reclaimed because the log is pinned.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_STATE_INVALID">
            <summary>
Log service is not in the correct state to perform a requested action.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_CONTAINER_STATE_INVALID">
            <summary>
Log service encountered an invalid container state when attempting a requested action.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_CONTAINER_OPEN_FAILED">
            <summary>
Log service encountered an error when attempting open a log container.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_CONTAINER_WRITE_FAILED">
            <summary>
Log service encountered an error when attempting to write to a log container.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_CONTAINER_READ_FAILED">
            <summary>
Log service encountered an error when attempting to read from a log container.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_FULL_HANDLER_IN_PROGRESS">
            <summary>
A request has already been made to handle the log full condition.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_CLIENT_NOT_REGISTERED">
            <summary>
A log client has not been registered on the stream.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_CLIENT_ALREADY_REGISTERED">
            <summary>
A log client has already registered on the stream.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_NOT_ENOUGH_CONTAINERS">
            <summary>
The log must have at least two containers before it can be read from or written to.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_EPHEMERAL">
            <summary>
The operation requires a non-ephemeral log, but the log is ephemeral.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_ARCHIVE_IN_PROGRESS">
            <summary>
Log archival is in progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS">
            <summary>
The operation requires an archive context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_DEDICATED">
            <summary>
The operation failed because the log is a dedicated log.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_MULTIPLEXED">
            <summary>
Log is multiplexed, no direct writes to the physical log is allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_COULD_NOT_RESIZE_LOG">
            <summary>
The log could not be set to the requested size.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_FULL">
            <summary>
Log space is exhausted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_TAIL_INVALID">
            <summary>
An new or existing archive tail or base of the active log is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_SPACE_RESERVED_INVALID">
            <summary>
Reserved log space or the adjustment of the log space is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_RECORDS_RESERVED_INVALID">
            <summary>
Number of reserved log records or the adjustment of the number of reserved log records is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_RECORD_NONEXISTENT">
            <summary>
Log record is not a record in the log file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_PINNED_ARCHIVE_TAIL">
            <summary>
Log space cannot be reclaimed because the log is pinned by the archive tail.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_POLICY_CONFLICT">
            <summary>
A policy on the log in question prevented the operation from completing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_POLICY_INVALID">
            <summary>
The installed set of policies on the log is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_POLICY_NOT_INSTALLED">
            <summary>
Log policy in question was not installed at the time of the request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_POLICY_ALREADY_INSTALLED">
            <summary>
Log policy could not be installed because a policy of the same type is already present.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_START_OF_LOG">
            <summary>
Log service has attempted to read or write backward past the start of the log.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_CONTAINER_LIMIT_EXCEEDED">
            <summary>
Log service has reached the maximum allowable containers allocated to a log file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_CANT_DELETE">
            <summary>
Log service cannot delete log file or file system container.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_RESERVATION_INVALID">
            <summary>
Log service encountered an attempt to erroneous allocate or dispose reservation space.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_METADATA_INCONSISTENT">
            <summary>
Log service encountered a metadata file with inconsistent data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_METADATA_INVALID">
            <summary>
Log service encountered a metadata file that could not be created by the log file system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_METADATA_CORRUPT">
            <summary>
Log service encountered a corrupted metadata file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_NO_RESTART">
            <summary>
Log service encountered a log stream with no restart area.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_READ_MODE_INVALID">
            <summary>
Log service encountered an attempt to read the log with an invalid read mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_BLOCK_INVALID">
            <summary>
Log service encountered an invalid log block.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_BLOCK_VERSION">
            <summary>
Log service encountered an invalid log block version.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_RESTART_INVALID">
            <summary>
Log service encountered an invalid log restart area.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_READ_CONTEXT_INVALID">
            <summary>
Log service encountered an attempt read from a marshalling area with an invalid read context.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_BLOCKS_EXHAUSTED">
            <summary>
Log service user marshalling buffers are exhausted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_INVALID_RANGE">
            <summary>
Log service encountered an attempt access data outside the active log range.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_BLOCK_INCOMPLETE">
            <summary>
Log service encountered a partial or incomplete log block.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_SECTOR_REMAPPED">
            <summary>
Log service encountered a remapped log sector.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_SECTOR_PARITY_INVALID">
            <summary>
Log service encountered a log sector with invalid block parity.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_SECTOR_INVALID">
            <summary>
Log service encountered an invalid log sector.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.SCHED_E_SERVICE_NOT_LOCALSYSTEM">
            <summary>
The Task Scheduler service must be configured to run in the System account to function properly. Individual tasks may be configured to run in other accounts.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_BROWSER_SERVERS_FOUND">
            <summary>
The list of servers for this workgroup is not currently available
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CS_ENCRYPTION_FILE_NOT_CSE">
            <summary>
The SMB client requested a CSE FSCTL on a non-CSE file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE">
            <summary>
A new encrypted file is being created and a $EFS needs to be provided.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE">
            <summary>
File is encrypted and should be opened in Client Side Encryption mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER">
            <summary>
Client Side Encryption is not supported by the remote server even though it claims to support it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE">
            <summary>
The remote server sent an invalid response for a file being opened with Client Side Encryption.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EFS_VERSION_NOT_SUPPORT">
            <summary>
A newer system is required to decrypt this encrypted file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EFS_DISABLED">
            <summary>
This machine is disabled for file encryption.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLUME_NOT_SUPPORT_EFS">
            <summary>
The disk partition does not support file encryption.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EFS_ALG_BLOB_TOO_BIG">
            <summary>
The encryption algorithm used on the source file needs a bigger key buffer than the one on the destination file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_RECOVERY_POLICY">
            <summary>
Recovery policy configured for this system contains invalid recovery certificate.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EFS_SERVER_NOT_TRUSTED">
            <summary>
The server is not trusted for remote encryption operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DIR_EFS_DISALLOWED">
            <summary>
The directory has been disabled for encryption.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FILE_READ_ONLY">
            <summary>
The specified file is read only.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_EXPORT_FORMAT">
            <summary>
The specified file is not in the defined EFS export format.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FILE_NOT_ENCRYPTED">
            <summary>
The specified file is not encrypted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_USER_KEYS">
            <summary>
There are no EFS keys defined for the user.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WRONG_EFS">
            <summary>
The file was encrypted with a different encryption driver than is currently loaded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_EFS">
            <summary>
The required encryption driver is not loaded for this system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_RECOVERY_POLICY">
            <summary>
There is no valid encryption recovery policy configured for this system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FILE_ENCRYPTED">
            <summary>
The specified file is encrypted and the user does not have the ability to decrypt it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DECRYPTION_FAILED">
            <summary>
The specified file could not be decrypted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ENCRYPTION_FAILED">
            <summary>
The specified file could not be encrypted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_RESOURCE_CONFIGURATION_ERROR">
            <summary>
The resource has indicated that it cannot come online on any node.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_RESOURCE_PROVIDER_FAILED">
            <summary>
The resource failed to come online due to the failure of one or more provider resources.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_GROUP_SINGLETON_RESOURCE">
            <summary>
Only one instance of this resource type is allowed per resource group.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_SINGLETON_RESOURCE">
            <summary>
Only one instance of this resource type is allowed in the cluster.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_EVICT_INVALID_REQUEST">
            <summary>
Eviction of this node is invalid at this time. Due to quorum requirements node eviction will result in cluster shutdown.
If it is the last node in the cluster, destroy cluster command should be used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FILE_SHARE_RESOURCE_CONFLICT">
            <summary>
File share associated with file share witness resource cannot be hosted by this cluster or any of its nodes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NONCORE_GROUPS_FOUND">
            <summary>
This cluster cannot be destroyed. It has non-core application groups which must be deleted before the cluster can be destroyed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_OBJECT_ALREADY_USED">
            <summary>
An attempt to use the specified cluster name failed because an enabled computer object with the given name already exists in the domain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_TOO_MANY_NODES">
            <summary>
This cluster can not be created since the specified number of nodes exceeds the maximum allowed limit.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_MAX_NODES_IN_CLUSTER">
            <summary>
A new node can not be added since this cluster is already at its maximum number of nodes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODE">
            <summary>
The resources must be online on the same node for this operation
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NOT_INSTALLED">
            <summary>
The Failover Clustering feature is not installed on this node.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_RHS_FAILED_INITIALIZATION">
            <summary>
The RHS process failed to initialize.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EXCEPTION_IN_RESOURCE_CALL">
            <summary>
The call into the resource DLL raised an unhandled exception.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEPENDENCY_TREE_TOO_COMPLEX">
            <summary>
The dependencies for this resource are nested too deeply.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP">
            <summary>
Quorum resource cannot reside in the Available Storage group.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK">
            <summary>
The cluster network is not valid for an IPv6 Tunnel resource. Check the configuration of the IP Address resource on which the IPv6 Tunnel resource depends.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_INVALID_IPV6_NETWORK">
            <summary>
The cluster network is not valid for an IPv6 Address resource, or it does not match the configured address.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NO_QUORUM">
            <summary>
A quorum of cluster nodes was not present to form a cluster.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT">
            <summary>
One or more property values for this resource are in conflict with one or more property values associated with its dependent resource(s).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_CANT_DESERIALIZE_DATA">
            <summary>
An error occurred while deserializing a stream of cluster data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_PARTIAL_WRITE">
            <summary>
An error occurred while writing to a stream of data. The required number of bytes could not be written.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_PARTIAL_READ">
            <summary>
An error occurred while reading from a stream of data. An unexpected number of bytes was returned.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NULL_DATA">
            <summary>
An internal cluster error occurred. Data was not properly initialized.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS">
            <summary>
An internal cluster error occurred. There was an attempt to commit a cluster database transaction while no transaction was in progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS">
            <summary>
An internal cluster error occurred. A cluster database transaction was attempted while a transaction was already in progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_INVALID_STRING_FORMAT">
            <summary>
An input string of characters is not in a valid format for the data it represents.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_INVALID_STRING_TERMINATION">
            <summary>
An input string of characters is not properly terminated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION">
            <summary>
An invalid cluster registry operation was attempted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_PARTIAL_SEND">
            <summary>
A network error occurred while sending data to another node in the cluster. The number of bytes transmitted was less than required.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS">
            <summary>
A parameter value is out of acceptable range.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION">
            <summary>
An internal cluster error occurred. A call to an invalid function was attempted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_CLUSTER_IPV6_ADDRESS">
            <summary>
The address is not valid for an IPv6 Address resource. A global IPv6 address is required, and it must match a cluster network. Compatibility addresses are not permitted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_CALL_TIMED_OUT">
            <summary>
The call to the cluster resource DLL timed out.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_RESOURCE_TYPE_BUSY">
            <summary>
The resource type cannot accept the request since is too busy performing another operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_GROUP_MOVING">
            <summary>
The group is unable to accept the request since it is moving to another node.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_POISONED">
            <summary>
The cluster node has been poisoned.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NO_NET_ADAPTERS">
            <summary>
No network adapters are available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME">
            <summary>
The name of the corresponding computer account doesn't match the Network Name for this resource.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_OLD_VERSION">
            <summary>
One or more nodes in the cluster are running a version of Windows that does not support this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT">
            <summary>
The drive letter assigned to a system disk on one node conflicted with the drive letter assigned to a disk on another node.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSCFG_ROLLBACK_FAILED">
            <summary>
The cluster configuration action could not be rolled back.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSCFG_ALREADY_COMMITTED">
            <summary>
The cluster configuration action has already been committed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME">
            <summary>
A cluster cannot be created with the specified cluster name because that cluster name is already in use. Specify a different name for the cluster.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_WRONG_OS_VERSION">
            <summary>
This computer cannot be made a member of a cluster because it does not have the correct version of Windows installed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NODE_CANNOT_BE_CLUSTERED">
            <summary>
This computer cannot be made a member of a cluster.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_PARAMETER_MISMATCH">
            <summary>
Two or more parameter values specified for a resource's properties are in conflict.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP">
            <summary>
The cluster node was evicted from the cluster successfully, but the node was not cleaned up. To determine what cleanup steps failed and how to recover, see the Failover Clustering application event log using Event Viewer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH">
            <summary>
The actual data type of the property did not match the expected data type of the property.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP">
            <summary>
A matching cluster network for the specified IP address could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_INSTANCE_ID_MISMATCH">
            <summary>
The join operation failed because the cluster instance ID of the joining node does not match the cluster instance ID of the sponsor node.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_MEMBERSHIP_HALT">
            <summary>
The membership engine requested shutdown of the cluster service on this node.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_QUORUMLOG_NOT_FOUND">
            <summary>
The quorum resource does not contain the quorum log.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE">
            <summary>
An operation was attempted that is incompatible with the current membership state of the node.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_PROPERTY_UNCHANGEABLE">
            <summary>
An attempt to modify a resource property failed because it conflicts with another existing property.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT">
            <summary>
A DFS root already exists in this cluster node.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DATABASE_BACKUP_CORRUPT">
            <summary>
The backed up cluster database is possibly corrupt.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_QUORUM_DISK_NOT_FOUND">
            <summary>
The quorum disk could not be located by the cluster service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_GUM_NOT_LOCKER">
            <summary>
A non locker code got a request to reserve the lock for making global updates.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESMON_INVALID_STATE">
            <summary>
The resource monitor will not allow the fail operation to be performed while the resource is in its current state. This may happen if the resource is in a pending state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_DATABASE_SEQMISMATCH">
            <summary>
The join operation failed because the cluster database sequence number has changed or is incompatible with the locker node. This may happen during a join operation if the cluster database was changing during the join.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST">
            <summary>
You cannot bring the group online because the owner of the group is not in the preferred list for the group. To change the owner node for the group, move the group.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED">
            <summary>
No authentication package could be registered with the RPC server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_RESNAME_NOT_FOUND">
            <summary>
The specified resource name is not supported by this resource DLL. This may be due to a bad (or changed) name supplied to the resource DLL.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED">
            <summary>
The specified node does not support a resource of this type. This may be due to version inconsistencies or due to the absence of the resource DLL on this node.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND">
            <summary>
The specified resource type was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED">
            <summary>
The system configuration changed during the cluster join or form operation. The join or form operation was aborted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED">
            <summary>
This resource cannot be created because the cluster has reached the limit on the number of resources it can monitor.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_INCOMPATIBLE_VERSIONS">
            <summary>
The cluster join operation failed due to incompatible software versions between the joining node and its sponsor.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_JOIN_ABORTED">
            <summary>
The cluster join operation was aborted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NODE_SHUTTING_DOWN">
            <summary>
The cluster node is shutting down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NODE_NOT_READY">
            <summary>
The cluster node is not ready to perform the requested operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NODE_CANT_HOST_RESOURCE">
            <summary>
The cluster resource cannot be brought online. The owner node cannot run this resource.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NODE_PAUSED">
            <summary>
The cluster node is paused.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEPENDENCY_NOT_ALLOWED">
            <summary>
The cluster quorum resource is not allowed to have any dependencies.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_OPERATION_ON_QUORUM">
            <summary>
This operation cannot be performed on the cluster resource as it the quorum resource. You may not bring the quorum resource offline or modify its possible owners list.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS">
            <summary>
One or more cluster resources depend on the network to provide service to clients. The client access capability cannot be removed from the network.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_LAST_INTERNAL_NETWORK">
            <summary>
The cluster network is the only one configured for internal cluster communication between two or more active cluster nodes. The internal communication capability cannot be removed from the network.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NODE_ALREADY_MEMBER">
            <summary>
The cluster node is already a member of the cluster.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE">
            <summary>
The cluster network is already offline.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NETWORK_ALREADY_ONLINE">
            <summary>
The cluster network is already online.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NODE_ALREADY_DOWN">
            <summary>
The cluster node is already down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NODE_ALREADY_UP">
            <summary>
The cluster node is already up.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NETWORK_NOT_INTERNAL">
            <summary>
The cluster network is not configured for internal cluster communication.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NO_SECURITY_CONTEXT">
            <summary>
No cluster security context is available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NODE_NOT_PAUSED">
            <summary>
The cluster node is not paused.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_IPADDR_IN_USE">
            <summary>
The cluster IP address is already in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NODE_UP">
            <summary>
The cluster node is up.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_INVALID_NETWORK">
            <summary>
The cluster network is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS">
            <summary>
A cluster join operation is not in progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NODE_NOT_MEMBER">
            <summary>
The cluster node is not a member of the cluster.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NODE_UNREACHABLE">
            <summary>
The cluster node is not reachable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NODE_DOWN">
            <summary>
The cluster node is down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_INVALID_NETWORK_PROVIDER">
            <summary>
The cluster network provider is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_INVALID_REQUEST">
            <summary>
The cluster request is not valid for this object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NETINTERFACE_NOT_FOUND">
            <summary>
The cluster network interface was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NETINTERFACE_EXISTS">
            <summary>
The cluster network interface already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NETWORK_NOT_FOUND">
            <summary>
The cluster network was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NETWORK_EXISTS">
            <summary>
The cluster network already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND">
            <summary>
The cluster local node information was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NODE_NOT_FOUND">
            <summary>
The cluster node was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_JOIN_IN_PROGRESS">
            <summary>
A node is in the process of joining the cluster.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_NODE_EXISTS">
            <summary>
The cluster node already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_INVALID_NODE">
            <summary>
The cluster node is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_FAILED">
            <summary>
A cluster resource failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALL_NODES_NOT_AVAILABLE">
            <summary>
All cluster nodes must be running to perform this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NODE_NOT_AVAILABLE">
            <summary>
A cluster node is not available for this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NETWORK_NOT_AVAILABLE">
            <summary>
A cluster network is not available for this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_QUORUM_OWNER_ALIVE">
            <summary>
The cluster node failed to take control of the quorum resource because the resource is owned by another active node.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE">
            <summary>
The minimum required disk space needed for logging is not available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND">
            <summary>
No checkpoint record was found in the cluster log.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE">
            <summary>
The cluster log exceeds its maximum size.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE">
            <summary>
The record could not be written to the cluster log since it exceeds the maximum size.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTERLOG_CORRUPT">
            <summary>
The cluster log is corrupt.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_QUORUMLOG_OPEN_FAILED">
            <summary>
The quorum log could not be created or mounted successfully.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_QUORUM_RESOURCE_ONLINE_FAILED">
            <summary>
The quorum resource failed to come online.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CORE_RESOURCE">
            <summary>
The cluster resource could not be deleted since it is a core resource.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_QUORUM_CLASS">
            <summary>
The cluster could not make the specified resource a quorum resource because it does not belong to a shared storage class.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_PROPERTIES_STORED">
            <summary>
The properties were stored but not all changes will take effect until the next time the resource is brought online.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_STATE">
            <summary>
The group or resource is not in the correct state to perform the requested operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLUSTER_SHUTTING_DOWN">
            <summary>
The cluster software is shutting down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_QUORUM_CAPABLE">
            <summary>
The cluster could not make the specified resource a quorum resource because it is not capable of being a quorum resource.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_QUORUM_RESOURCE">
            <summary>
The cluster resource could not be deleted or brought offline because it is the quorum resource.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_ONLINE">
            <summary>
The operation could not be completed because the cluster resource is online.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESMON_ONLINE_FAILED">
            <summary>
The cluster resource could not be brought online by the resource monitor.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESMON_CREATE_FAILED">
            <summary>
The cluster resource could not be created in the specified resource monitor.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HOST_NODE_NOT_GROUP_OWNER">
            <summary>
The operation failed because either the specified cluster node is not the owner of the group, or the node
is not a possible owner of the group.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HOST_NODE_NOT_RESOURCE_OWNER">
            <summary>
The operation failed because either the specified cluster node is not the owner of the resource, or the node
is not a possible owner of the resource.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GROUP_NOT_ONLINE">
            <summary>
The operation could not be completed because the cluster group is not online.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GROUP_NOT_FOUND">
            <summary>
The cluster group could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GROUP_NOT_AVAILABLE">
            <summary>
The cluster group is not available for any new requests.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OBJECT_IN_LIST">
            <summary>
The object is already in the list.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OBJECT_ALREADY_EXISTS">
            <summary>
The object already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANT_EVICT_ACTIVE_NODE">
            <summary>
A cluster node cannot be evicted from the cluster unless the node is down or it is the last node.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SHUTDOWN_CLUSTER">
            <summary>
The cluster is being shut down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_NOT_FOUND">
            <summary>
The cluster resource could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_NOT_AVAILABLE">
            <summary>
The cluster resource is not available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HOST_NODE_NOT_AVAILABLE">
            <summary>
A cluster node is not available for this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_NOT_ONLINE">
            <summary>
The cluster resource is not online.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEPENDENCY_ALREADY_EXISTS">
            <summary>
The cluster resource cannot be made dependent on the specified resource because it is already dependent.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEPENDENCY_NOT_FOUND">
            <summary>
The cluster resource dependency cannot be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEPENDENT_RESOURCE_EXISTS">
            <summary>
The operation cannot be completed because other resources are dependent on this resource.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLUME_NOT_SIS_ENABLED">
            <summary>
Single Instance Storage is not available on this volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REPARSE_TAG_MISMATCH">
            <summary>
There is a mismatch between the tag specified in the request and the tag present in the reparse point.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REPARSE_TAG_INVALID">
            <summary>
The tag present in the reparse point buffer is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_REPARSE_DATA">
            <summary>
The data present in the reparse point buffer is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REPARSE_ATTRIBUTE_CONFLICT">
            <summary>
The reparse point attribute cannot be set because it conflicts with an existing attribute.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_A_REPARSE_POINT">
            <summary>
The file or directory is not a reparse point.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REMOTE_STORAGE_MEDIA_ERROR">
            <summary>
The remote storage service encountered a media error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REMOTE_STORAGE_NOT_ACTIVE">
            <summary>
The remote storage service is not operational at this time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FILE_OFFLINE">
            <summary>
This file is currently not available for use on this computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IEPORT_FULL">
            <summary>
Cannot use the inject/eject port because it is not empty.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLEANER_CARTRIDGE_INSTALLED">
            <summary>
A cleaner cartridge is present in the tape library.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SUPPORTING_DRIVES">
            <summary>
This offline media cannot be mounted on this system since no enabled drives are present which can be used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INDIGENOUS_TYPE">
            <summary>
The media type cannot be removed from this library since at least one drive in the library reports it can support this media type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLUME_CONTAINS_SYS_FILES">
            <summary>
The volume contains system or paging files.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MESSAGE_EXCEEDS_MAX_SIZE">
            <summary>
The message provided exceeds the maximum size allowed for this parameter.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANT_DELETE_LAST_ITEM">
            <summary>
The last remaining item in this group or resource cannot be deleted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNEXPECTED_OMID">
            <summary>
Unexpected on-medium identifier.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLEANER_CARTRIDGE_SPENT">
            <summary>
The cleaner cartridge has performed the maximum number of drive cleanings.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLEANER_SLOT_NOT_SET">
            <summary>
A cleaner slot is not reserved.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLEANER_SLOT_SET">
            <summary>
A cleaner slot is already reserved.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA">
            <summary>
Unable to eject the medium because it is in a drive.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CONTROLLING_IEPORT">
            <summary>
Unable to open or close the inject/eject port.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSPORT_FULL">
            <summary>
Cannot use the transport because it is already in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNABLE_TO_INVENTORY_TRANSPORT">
            <summary>
Unable to retrieve status about the transport.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNABLE_TO_INVENTORY_SLOT">
            <summary>
Unable to retrieve the slot status.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNABLE_TO_INVENTORY_DRIVE">
            <summary>
Unable to retrieve the drive status.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNABLE_TO_LOAD_MEDIUM">
            <summary>
Unable to load the medium into the drive.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MEDIUM_NOT_ACCESSIBLE">
            <summary>
The transport cannot access the medium.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LIBRARY_FULL">
            <summary>
Library is full. No slot is available for use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_DRIVE_OBJECT">
            <summary>
The drive identifier does not represent a valid drive.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REQUEST_REFUSED">
            <summary>
The operator or administrator has refused the request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEVICE_NOT_AVAILABLE">
            <summary>
The device is not ready for use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MEDIA_NOT_AVAILABLE">
            <summary>
The media is not mounted or ready for use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_OPERATION">
            <summary>
The operation identifier is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_NOT_PRESENT">
            <summary>
The resource required for this operation does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MEDIA_INCOMPATIBLE">
            <summary>
The medium is not compatible with the device or media pool.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DATABASE_FULL">
            <summary>
The database is full.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DATABASE_FAILURE">
            <summary>
Unable to read from or write to the database.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OBJECT_NOT_FOUND">
            <summary>
The object identifier does not represent a valid object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNABLE_TO_CLEAN">
            <summary>
The drive cannot be cleaned or does not support cleaning.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_CLEANER">
            <summary>
The media identifier does not represent a valid cleaner.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_DISABLED">
            <summary>
A resource required for this operation is disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MEDIA_UNAVAILABLE">
            <summary>
No media is currently available in this media pool or library.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_EMPTY">
            <summary>
The library, drive, or media pool must be empty to perform this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EMPTY">
            <summary>
The library, drive, or media pool is empty.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LIBRARY_OFFLINE">
            <summary>
The operation cannot be performed on an offline library.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MEDIA_OFFLINE">
            <summary>
The medium currently exists in an offline library and must be online to perform this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DRIVE_MEDIA_MISMATCH">
            <summary>
The drive and medium are not compatible or exist in different libraries.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_MEDIA_POOL">
            <summary>
The media pool identifier does not represent a valid media pool.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_LIBRARY">
            <summary>
The library identifier does not represent a valid library.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_MEDIA">
            <summary>
The media identifier does not represent a valid medium.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WMI_SET_FAILURE">
            <summary>
The WMI data item or data block could not be changed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WMI_READ_ONLY">
            <summary>
The WMI data item or data block is read only.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WMI_ALREADY_DISABLED">
            <summary>
The WMI data block or event notification has already been disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WMI_INVALID_REGINFO">
            <summary>
The WMI registration information is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WMI_INVALID_MOF">
            <summary>
The WMI MOF information is not valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WMI_DP_FAILED">
            <summary>
The WMI data provider failed to carry out the request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WMI_SERVER_UNAVAILABLE">
            <summary>
The WMI data service is not available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WMI_GUID_DISCONNECTED">
            <summary>
The WMI data block is no longer available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WMI_ALREADY_ENABLED">
            <summary>
The WMI data block or event notification has already been enabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WMI_UNRESOLVED_INSTANCE_REF">
            <summary>
The WMI data provider references an instance set that has not been registered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WMI_DP_NOT_FOUND">
            <summary>
The WMI data provider could not be located.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WMI_TRY_AGAIN">
            <summary>
The WMI request could not be completed and should be retried.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WMI_ITEMID_NOT_FOUND">
            <summary>
The data item ID passed was not recognized as valid by a WMI data provider.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WMI_INSTANCE_NOT_FOUND">
            <summary>
The instance name passed was not recognized as valid by a WMI data provider.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WMI_GUID_NOT_FOUND">
            <summary>
The GUID passed was not recognized as valid by a WMI data provider.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DHCP_ADDRESS_CONFLICT">
            <summary>
The DHCP client has obtained an IP address that is already in use on the network. The local interface will be disabled until the DHCP client can obtain a new address.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RPL_NOT_ALLOWED">
            <summary>
Replication with a nonconfigured partner is not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REC_NON_EXISTENT">
            <summary>
The name does not exist in the WINS database.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FULL_BACKUP">
            <summary>
The backup failed. Check the directory to which you are backing the database.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INC_BACKUP">
            <summary>
The backup failed. Was a full backup done before?
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_STATIC_INIT">
            <summary>
The importation from the file failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CAN_NOT_DEL_LOCAL_WINS">
            <summary>
The local WINS cannot be deleted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WINS_INTERNAL">
            <summary>
WINS encountered an error while processing the command.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IO_REISSUE_AS_CACHED">
            <summary>
Reissue the given operation as a cached IO operation
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINT_JOB_RESTART_REQUIRED">
            <summary>
The requested print job has failed to print. A print system update requires the job to be resubmitted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED">
            <summary>
The specified printer driver was not found on the system and needs to be downloaded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FAIL_REBOOT_INITIATED">
            <summary>
The requested operation failed. A system reboot has been initiated to roll back changes made.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FAIL_REBOOT_REQUIRED">
            <summary>
The requested operation failed. A system reboot is required to roll back changes made.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND">
            <summary>
Unable to find a core driver package that is required by the printer driver package.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINTER_DRIVER_PACKAGE_IN_USE">
            <summary>
The specified printer driver package is currently in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINTER_DRIVER_BLOCKED">
            <summary>
The printer driver is known to harm the system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINTER_DRIVER_WARNED">
            <summary>
The printer driver is known to be unreliable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINTER_NOT_FOUND">
            <summary>
No printers were found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SUCCESS_RESTART_REQUIRED">
            <summary>
The requested operation is successful. Changes will not be effective until the service is restarted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SUCCESS_REBOOT_REQUIRED">
            <summary>
The requested operation is successful. Changes will not be effective until the system is rebooted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINTER_HAS_JOBS_QUEUED">
            <summary>
The requested operation is not allowed when there are jobs queued to the printer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINT_MONITOR_IN_USE">
            <summary>
The specified print monitor is currently in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_PRINT_MONITOR">
            <summary>
The specified print monitor does not have the required functions.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINT_MONITOR_ALREADY_INSTALLED">
            <summary>
The specified print monitor has already been installed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED">
            <summary>
The specified print processor has already been installed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SPL_NO_ADDJOB">
            <summary>
An AddJob call was not issued.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SPL_NO_STARTDOC">
            <summary>
A StartDocPrinter call was not issued.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SPOOL_FILE_NOT_FOUND">
            <summary>
The spool file was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINTER_DRIVER_IN_USE">
            <summary>
The specified printer driver is currently in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNKNOWN_PRINT_MONITOR">
            <summary>
The specified print monitor is unknown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEVICE_IN_USE">
            <summary>
The device is in use by an active process and cannot be disconnected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ACTIVE_CONNECTIONS">
            <summary>
Active connections still exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OPEN_FILES">
            <summary>
This network connection has files open or requests pending.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_CONNECTED">
            <summary>
This network connection does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_USERNAME">
            <summary>
The specified username is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT">
            <summary>
The network connection was made successfully using default credentials.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CONNECTED_OTHER_PASSWORD">
            <summary>
The network connection was made successfully, but the user had to be prompted for a password other than the one originally specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PROFILE_DOES_NOT_MATCH_DEVICE">
            <summary>
The specified profile is intended for a device of a different type than the specified device.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_COLORINDEX">
            <summary>
The specified named color index is not present in the profile.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_COLORSPACE_MISMATCH">
            <summary>
The specified transform does not match the bitmap's color space.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_TRANSFORM">
            <summary>
The specified color transform is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DELETING_ICM_XFORM">
            <summary>
There was an error while deleting the color transform.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ICM_NOT_ENABLED">
            <summary>
Image Color Management is not enabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_COLORSPACE">
            <summary>
The specified color space is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PROFILE_NOT_FOUND">
            <summary>
The specified color profile was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE">
            <summary>
The specified color profile is not associated with the specified device.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DUPLICATE_TAG">
            <summary>
The specified tag is already present.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TAG_NOT_PRESENT">
            <summary>
A required tag is not present.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TAG_NOT_FOUND">
            <summary>
The specified tag was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_PROFILE">
            <summary>
The specified color profile is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_CMM">
            <summary>
The specified color management module is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLIPPING_NOT_SUPPORTED">
            <summary>
The requested clipping operation is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSFORM_NOT_SUPPORTED">
            <summary>
The requested transformation operation is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_METAFILE_NOT_SUPPORTED">
            <summary>
The requested metafile operation is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_WINDOW_STYLE">
            <summary>
The window style or class attribute is invalid for this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_DRIVER">
            <summary>
The specified driver is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_PIXEL_FORMAT">
            <summary>
The pixel format is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NTLM_BLOCKED">
            <summary>
Logon Failure: Authentication failed because NTLM authentication has been disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED">
            <summary>
Remote connections to the Print Spooler are blocked by a policy set on your machine.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_AUTHENTICATION_FIREWALL_FAILED">
            <summary>
Logon Failure: The machine you are logging onto is protected by an authentication firewall. The specified account is not allowed to authenticate to the machine.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED">
            <summary>
The current user's delegated trust deletion quota has been exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED">
            <summary>
The total delegated trust creation quota has been exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PER_USER_TRUST_QUOTA_EXCEEDED">
            <summary>
The current user's delegated trust creation quota has been exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CONTEXT_EXPIRED">
            <summary>
The context has expired and can no longer be used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_KM_DRIVER_BLOCKED">
            <summary>
The printer driver is not compatible with a policy enabled on your computer that blocks NT 4.0 drivers.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_GRP_ELT_NOT_REMOVED">
            <summary>
The group element could not be removed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_GRP_ELT_NOT_ADDED">
            <summary>
The group element could not be added.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_PRF_ELT_NOT_REMOVED">
            <summary>
The specified profile element could not be removed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_PRF_ELT_NOT_ADDED">
            <summary>
The specified profile element could not be added.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_PROFILE_NOT_ADDED">
            <summary>
The specified profile entry could not be added.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INTERFACE_NOT_EXPORTED">
            <summary>
Interface could not be exported to the specified entry.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NOT_ALL_OBJS_EXPORTED">
            <summary>
Not all object UUIDs could be exported to the specified entry.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_ENTRY_TYPE_MISMATCH">
            <summary>
The entry is not of the expected type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANT_RESOLVE_FILENAME">
            <summary>
The name of the file cannot be resolved by the system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANT_ACCESS_FILE">
            <summary>
The file cannot be accessed by the system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SITENAME">
            <summary>
No site name is available for this machine.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_PIPE_EMPTY">
            <summary>
No more data is available from the RPC pipe.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_PIPE_DISCIPLINE_ERROR">
            <summary>
The RPC call completed before all pipes were processed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_PIPE_CLOSED">
            <summary>
The RPC pipe object has already been closed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_ASYNC_CALL">
            <summary>
Invalid asynchronous RPC call handle for this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_ASYNC_HANDLE">
            <summary>
Invalid asynchronous remote procedure call handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_SEND_INCOMPLETE">
            <summary>
Some data remains to be sent in the request buffer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OR_INVALID_SET">
            <summary>
The object resolver set specified was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OR_INVALID_OID">
            <summary>
The object specified was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.OR_INVALID_OXID">
            <summary>
The object exporter specified was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ACCOUNT_LOCKED_OUT">
            <summary>
The referenced account is currently locked out and may not be logged on to.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DOMAIN_CONTROLLER_NOT_FOUND">
            <summary>
Could not find the domain controller for this domain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PASSWORD_MUST_CHANGE">
            <summary>
The user's password must be changed before logging on the first time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_PRINTER_STATE">
            <summary>
The state of the printer is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINTER_DELETED">
            <summary>
The specified printer has been deleted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALREADY_WAITING">
            <summary>
The specified printer handle is already being waited on
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_FORM_SIZE">
            <summary>
The specified form size is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_FORM_NAME">
            <summary>
The specified form name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_TIME">
            <summary>
The specified time is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_OBJECT">
            <summary>
The object universal unique identifier (UUID) is the nil UUID.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EPT_S_CANT_CREATE">
            <summary>
The endpoint mapper database entry could not be created.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_GROUP_MEMBER_NOT_FOUND">
            <summary>
The group member was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_COOKIE_AUTH_FAILED">
            <summary>
HTTP proxy server rejected the connection because the cookie authentication failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_WRONG_PIPE_VERSION">
            <summary>
Unsupported RPC pipe version.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_WRONG_PIPE_ORDER">
            <summary>
An invalid operation was attempted on an RPC pipe object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_INVALID_PIPE_OBJECT">
            <summary>
The RPC pipe object is invalid or corrupted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_WRONG_STUB_VERSION">
            <summary>
Incompatible version of the RPC stub.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_WRONG_ES_VERSION">
            <summary>
Incompatible version of the serializing package.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_INVALID_ES_ACTION">
            <summary>
Invalid operation on the encoding/decoding handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NOT_CANCELLED">
            <summary>
Thread is not canceled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_SEC_PKG_ERROR">
            <summary>
A security package specific error occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_UUID_LOCAL_ONLY">
            <summary>
A UUID that is valid only on this computer has been allocated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NOT_RPC_ERROR">
            <summary>
The error specified is not a valid Windows RPC error code.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NO_PRINC_NAME">
            <summary>
No principal name registered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_UNSUPPORTED_AUTHN_LEVEL">
            <summary>
The requested authentication level is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_COMM_FAILURE">
            <summary>
A communications failure occurred during a remote procedure call.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_BINDING_INCOMPLETE">
            <summary>
The binding handle does not contain all required information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_CALL_CANCELLED">
            <summary>
The remote procedure call was cancelled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NO_INTERFACES">
            <summary>
No interfaces have been registered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_ENOUGH_QUOTA">
            <summary>
Not enough quota is available to process this command.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_LANG_NOT_FOUND">
            <summary>
The specified resource language ID cannot be found in the image file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_NAME_NOT_FOUND">
            <summary>
The specified resource name cannot be found in the image file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_TYPE_NOT_FOUND">
            <summary>
The specified resource type cannot be found in the image file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_DATA_NOT_FOUND">
            <summary>
The specified image file did not contain a resource section.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVER_HAS_OPEN_HANDLES">
            <summary>
The server is in use and cannot be unloaded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DOMAIN_TRUST_INCONSISTENT">
            <summary>
The name or security ID (SID) of the domain specified is inconsistent with the trust information for that domain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOLOGON_SERVER_TRUST_ACCOUNT">
            <summary>
The account used is a server trust account. Use your global user account or local user account to access this server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT">
            <summary>
The account used is a computer account. Use your global user account or local user account to access this server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT">
            <summary>
The account used is an interdomain trust account. Use your global user account or local user account to access this server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NO_MORE_BINDINGS">
            <summary>
There are no more bindings.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_ENVIRONMENT">
            <summary>
The environment specified is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_DATATYPE">
            <summary>
The specified datatype is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_PRINTER_COMMAND">
            <summary>
The printer command is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINTER_ALREADY_EXISTS">
            <summary>
The printer already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_PRINTER_NAME">
            <summary>
The printer name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_PRIORITY">
            <summary>
The specified priority is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SEPARATOR_FILE">
            <summary>
The specified separator file is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNKNOWN_PRINTPROCESSOR">
            <summary>
The print processor is unknown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNKNOWN_PRINTER_DRIVER">
            <summary>
The printer driver is unknown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNKNOWN_PORT">
            <summary>
The specified port is unknown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINTER_DRIVER_ALREADY_INSTALLED">
            <summary>
The specified printer driver is already installed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REDIRECTOR_HAS_OPEN_HANDLES">
            <summary>
The redirector is in use and cannot be unloaded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ACCOUNT_EXPIRED">
            <summary>
The user's account has expired.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NETLOGON_NOT_STARTED">
            <summary>
An attempt was made to logon, but the network logon service was not started.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_CALL_IN_PROGRESS">
            <summary>
A remote procedure call is already in progress for this thread.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRUST_FAILURE">
            <summary>
The network logon failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRUSTED_RELATIONSHIP_FAILURE">
            <summary>
The trust relationship between this workstation and the primary domain failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRUSTED_DOMAIN_FAILURE">
            <summary>
The trust relationship between the primary domain and the trusted domain failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_TRUST_SAM_ACCOUNT">
            <summary>
The security database on the server does not have a computer account for this workstation trust relationship.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_TRUST_LSA_SECRET">
            <summary>
The workstation does not have a trust secret.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNRECOGNIZED_MEDIA">
            <summary>
The disk media is not recognized. It may not be formatted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_USER_BUFFER">
            <summary>
The supplied user buffer is not valid for the requested operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_BAD_STUB_DATA">
            <summary>
The stub received bad data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_BYTE_COUNT_TOO_SMALL">
            <summary>
The byte count is too small.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_ENUM_VALUE_OUT_OF_RANGE">
            <summary>
The enumeration value is out of range.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_NULL_REF_POINTER">
            <summary>
A null reference pointer was passed to the stub.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_SS_CANNOT_GET_CALL_HANDLE">
            <summary>
The stub is unable to get the remote procedure call handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_SS_HANDLES_MISMATCH">
            <summary>
The binding handles passed to a remote procedure call do not match.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_SS_CONTEXT_DAMAGED">
            <summary>
The context handle changed during a remote procedure call.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_SS_IN_NULL_CONTEXT">
            <summary>
A null context handle was passed from the client to the host during a remote procedure call.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_SS_CHAR_TRANS_SHORT_FILE">
            <summary>
The file containing the character translation table has fewer than 512 bytes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_SS_CHAR_TRANS_OPEN_FAIL">
            <summary>
Unable to open the character translation table file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_X_NO_MORE_ENTRIES">
            <summary>
The list of RPC servers available for the binding of auto handles has been exhausted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_FP_OVERFLOW">
            <summary>
A floating-point overflow occurred at the RPC server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_FP_UNDERFLOW">
            <summary>
A floating-point underflow occurred at the RPC server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_FP_DIV_ZERO">
            <summary>
A floating-point operation at the RPC server caused a division by zero.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_ADDRESS_ERROR">
            <summary>
An addressing error occurred in the RPC server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_ZERO_DIVIDE">
            <summary>
The RPC server attempted an integer division by zero.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INTERNAL_ERROR">
            <summary>
An internal error occurred in a remote procedure call (RPC).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NO_CONTEXT_AVAILABLE">
            <summary>
No security context is available to allow impersonation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_CANNOT_SUPPORT">
            <summary>
The requested operation is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_NAF_ID">
            <summary>
The network address family is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NAME_SERVICE_UNAVAILABLE">
            <summary>
The name service is unavailable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_ENTRY_NOT_FOUND">
            <summary>
The entry is not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_ENTRY_ALREADY_EXISTS">
            <summary>
The entry already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INTERFACE_NOT_FOUND">
            <summary>
The interface was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NOT_ALL_OBJS_UNEXPORTED">
            <summary>
There is nothing to unexport.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NO_MORE_MEMBERS">
            <summary>
There are no more members.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_VERS_OPTION">
            <summary>
The version option is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INCOMPLETE_NAME">
            <summary>
The entry name is incomplete.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NOTHING_TO_EXPORT">
            <summary>
No interfaces have been exported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EPT_S_NOT_REGISTERED">
            <summary>
There are no more endpoints available from the endpoint mapper.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EPT_S_CANT_PERFORM_OP">
            <summary>
The server endpoint cannot perform the operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.EPT_S_INVALID_ENTRY">
            <summary>
The entry is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_UNKNOWN_AUTHZ_SERVICE">
            <summary>
The authorization service is unknown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_AUTH_IDENTITY">
            <summary>
The security context is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_UNKNOWN_AUTHN_LEVEL">
            <summary>
The authentication level is unknown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_UNKNOWN_AUTHN_SERVICE">
            <summary>
The authentication service is unknown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_BINDING_HAS_NO_AUTH">
            <summary>
The binding does not contain any authentication information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_PROCNUM_OUT_OF_RANGE">
            <summary>
The procedure number is out of range.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_PROTSEQ_NOT_FOUND">
            <summary>
The RPC protocol sequence was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_STRING_TOO_LONG">
            <summary>
The string is too long.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_MAX_CALLS_TOO_SMALL">
            <summary>
The maximum number of calls is too small.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_UNKNOWN_AUTHN_TYPE">
            <summary>
The authentication type is unknown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_DUPLICATE_ENDPOINT">
            <summary>
The endpoint is a duplicate.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_UUID_NO_ADDRESS">
            <summary>
No network address is available to use to construct a universal unique identifier (UUID).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_UNSUPPORTED_NAME_SYNTAX">
            <summary>
The name syntax is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_NAME_SYNTAX">
            <summary>
The name syntax is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NO_ENTRY_NAME">
            <summary>
The binding does not contain an entry name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_BOUND">
            <summary>
The array bounds are invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_TAG">
            <summary>
The tag is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_UNSUPPORTED_TYPE">
            <summary>
The universal unique identifier (UUID) type is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_UNSUPPORTED_TRANS_SYN">
            <summary>
The transfer syntax is not supported by the RPC server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_PROXY_ACCESS_DENIED">
            <summary>
Access to the HTTP proxy is denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_PROTOCOL_ERROR">
            <summary>
A remote procedure call (RPC) protocol error occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_CALL_FAILED_DNE">
            <summary>
The remote procedure call failed and did not execute.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_CALL_FAILED">
            <summary>
The remote procedure call failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NO_CALL_ACTIVE">
            <summary>
There are no remote procedure calls active on this thread.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_NETWORK_OPTIONS">
            <summary>
The network options are invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_SERVER_TOO_BUSY">
            <summary>
The RPC server is too busy to complete this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_SERVER_UNAVAILABLE">
            <summary>
The RPC server is unavailable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_OUT_OF_RESOURCES">
            <summary>
Not enough resources are available to complete this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_CANT_CREATE_ENDPOINT">
            <summary>
The endpoint cannot be created.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NO_PROTSEQS">
            <summary>
There are no protocol sequences.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NO_BINDINGS">
            <summary>
There are no bindings.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_UNKNOWN_IF">
            <summary>
The interface is unknown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_UNKNOWN_MGR_TYPE">
            <summary>
The manager type is unknown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NOT_LISTENING">
            <summary>
The RPC server is not listening.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NO_PROTSEQS_REGISTERED">
            <summary>
No protocol sequences have been registered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_ALREADY_LISTENING">
            <summary>
The RPC server is already listening.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_TYPE_ALREADY_REGISTERED">
            <summary>
The type universal unique identifier (UUID) has already been registered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_ALREADY_REGISTERED">
            <summary>
The object universal unique identifier (UUID) has already been registered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_OBJECT_NOT_FOUND">
            <summary>
The object universal unique identifier (UUID) was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_TIMEOUT">
            <summary>
The timeout value is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_NO_ENDPOINT_FOUND">
            <summary>
No endpoint was found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_NET_ADDR">
            <summary>
The network address is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_ENDPOINT_FORMAT">
            <summary>
The endpoint format is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_STRING_UUID">
            <summary>
The string universal unique identifier (UUID) is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_RPC_PROTSEQ">
            <summary>
The RPC protocol sequence is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_PROTSEQ_NOT_SUPPORTED">
            <summary>
The RPC protocol sequence is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_BINDING">
            <summary>
The binding handle is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_WRONG_KIND_OF_BINDING">
            <summary>
The binding handle is not the correct type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.RPC_S_INVALID_STRING_BINDING">
            <summary>
The string binding is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_SERVICE_SAFEBOOT">
            <summary>
The Windows Installer service is not accessible in Safe Mode. Please try again when your computer is not in Safe Mode or you can use System Restore to return your machine to a previous good state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT">
            <summary>
Windows Installer does not permit updating of managed advertised products. At least one feature of the product must be installed before applying the update.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_PATCH_XML">
            <summary>
The XML update data is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PATCH_REMOVAL_DISALLOWED">
            <summary>
Update removal was disallowed by policy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PATCH_NO_SEQUENCE">
            <summary>
No valid sequence could be found for the set of updates.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNKNOWN_PATCH">
            <summary>
The update is not applied to this product.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PATCH_REMOVAL_UNSUPPORTED">
            <summary>
Uninstallation of the update package is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_REMOTE_PROHIBITED">
            <summary>
The Windows Installer does not permit installation from a Remote Desktop Connection.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_TRANSFORM_REJECTED">
            <summary>
One or more customizations are not permitted by software restriction policy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PATCH_PACKAGE_REJECTED">
            <summary>
The update package is not permitted by software restriction policy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PATCH_TARGET_NOT_FOUND">
            <summary>
The upgrade cannot be installed by the Windows Installer service because the program to be upgraded may be missing, or the upgrade may update a different version of the program. Verify that the program to be upgraded exists on your computer and that you have the correct upgrade.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SUCCESS_REBOOT_INITIATED">
            <summary>
The requested operation completed successfully. The system will be restarted so the changes can take effect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_REMOTE_DISALLOWED">
            <summary>
Only administrators have permission to add, remove, or configure server software during a Terminal services remote session. If you want to install or configure software on the server, contact your network administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_COMMAND_LINE">
            <summary>
Invalid command line argument. Consult the Windows Installer SDK for detailed command line help.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRODUCT_VERSION">
            <summary>
Another version of this product is already installed. Installation of this version cannot continue. To configure or remove the existing version of this product, use Add/Remove Programs on the Control Panel.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PATCH_PACKAGE_UNSUPPORTED">
            <summary>
This update package cannot be processed by the Windows Installer service. You must install a Windows service pack that contains a newer version of the Windows Installer service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PATCH_PACKAGE_INVALID">
            <summary>
This update package could not be opened. Contact the application vendor to verify that this is a valid Windows Installer update package.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PATCH_PACKAGE_OPEN_FAILED">
            <summary>
This update package could not be opened. Verify that the update package exists and that you can access it, or contact the application vendor to verify that this is a valid Windows Installer update package.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_NOTUSED">
            <summary>
Component not used on this computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_PLATFORM_UNSUPPORTED">
            <summary>
This installation package is not supported by this processor type. Contact your product vendor.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_TEMP_UNWRITABLE">
            <summary>
The Temp folder is on a drive that is full or is inaccessible. Free up space on the drive or verify that you have write permission on the Temp folder.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CREATE_FAILED">
            <summary>
The Windows Installer service failed to start. Contact your support personnel.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNSUPPORTED_TYPE">
            <summary>
Data of this type is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DATATYPE_MISMATCH">
            <summary>
Data supplied is of wrong type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_TABLE">
            <summary>
Invalid or unknown table specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FUNCTION_FAILED">
            <summary>
Function failed during execution.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FUNCTION_NOT_CALLED">
            <summary>
Function could not be executed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_PACKAGE_REJECTED">
            <summary>
This installation is forbidden by system policy. Contact your system administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_TRANSFORM_FAILURE">
            <summary>
Error applying transforms. Verify that the specified transform paths are valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_LANGUAGE_UNSUPPORTED">
            <summary>
The language of this installation package is not supported by your system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_LOG_FAILURE">
            <summary>
Error opening installation log file. Verify that the specified log file location exists and that you can write to it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_UI_FAILURE">
            <summary>
There was an error starting the Windows Installer service user interface. Contact your support personnel.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_PACKAGE_INVALID">
            <summary>
This installation package could not be opened. Contact the application vendor to verify that this is a valid Windows Installer package.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_PACKAGE_OPEN_FAILED">
            <summary>
This installation package could not be opened. Verify that the package exists and that you can access it, or contact the application vendor to verify that this is a valid Windows Installer package.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_ALREADY_RUNNING">
            <summary>
Another installation is already in progress. Complete that installation before proceeding with this install.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEVICE_REMOVED">
            <summary>
The device has been removed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_FIELD">
            <summary>
Record field does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_QUERY_SYNTAX">
            <summary>
SQL query syntax invalid or unsupported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRODUCT_UNINSTALLED">
            <summary>
Product is uninstalled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_PACKAGE_VERSION">
            <summary>
This installation package cannot be installed by the Windows Installer service. You must install a Windows service pack that contains a newer version of the Windows Installer service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_SOURCE_ABSENT">
            <summary>
The installation source for this product is not available. Verify that the source exists and that you can access it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INDEX_ABSENT">
            <summary>
Component qualifier not present.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_CONFIGURATION">
            <summary>
The configuration data for this product is corrupt. Contact your support personnel.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_HANDLE_STATE">
            <summary>
Handle is in an invalid state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNKNOWN_PROPERTY">
            <summary>
Unknown property.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNKNOWN_COMPONENT">
            <summary>
Component ID not registered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNKNOWN_FEATURE">
            <summary>
Feature ID not registered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNKNOWN_PRODUCT">
            <summary>
This action is only valid for products that are currently installed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_SUSPEND">
            <summary>
Installation suspended, incomplete.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_FAILURE">
            <summary>
Fatal error during installation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_USEREXIT">
            <summary>
User cancelled installation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTALL_SERVICE_FAILURE">
            <summary>
The Windows Installer Service could not be accessed. This can occur if the Windows Installer is not correctly installed. Contact your support personnel for assistance.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_THREAD_ALREADY_IN_TASK">
            <summary>
The specified thread is already joining a task.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_TASK_INDEX">
            <summary>
The specified task index is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_TASK_NAME">
            <summary>
The specified task name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVENTLOG_FILE_CHANGED">
            <summary>
The event log file has changed between read operations.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_FILE_FULL">
            <summary>
The event log file is full.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVENTLOG_CANT_START">
            <summary>
No event log file could be opened, so the event logging service did not start.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVENTLOG_FILE_CORRUPT">
            <summary>
The event log file is corrupted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_AUTHIP_FAILURE">
            <summary>
There was an AuthIP failure when attempting to connect to the remote host.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WRONG_COMPARTMENT">
            <summary>
The caller made the connection request in the wrong routing compartment.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESTART_APPLICATION">
            <summary>
This application must be restarted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_XMLDSIG_ERROR">
            <summary>
An error was encountered while processing an XML digital signature.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_XML_PARSE_ERROR">
            <summary>
Windows was unable to parse the requested XML data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SYMLINK_NOT_SUPPORTED">
            <summary>
This application does not support the current operation on symbolic links.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SYMLINK_CLASS_DISABLED">
            <summary>
The symbolic link cannot be followed because its type is disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INCORRECT_SIZE">
            <summary>
Incorrect size argument.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_MONITOR_HANDLE">
            <summary>
Invalid monitor handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TIMEOUT">
            <summary>
This operation returned because the timeout period expired.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION">
            <summary>
This operation requires an interactive window station.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HOOK_TYPE_NOT_ALLOWED">
            <summary>
Hook type not allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_KEYBOARD_HANDLE">
            <summary>
Invalid keyboard layout handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MENU_ITEM_NOT_FOUND">
            <summary>
A menu item was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_COMMITMENT_LIMIT">
            <summary>
The paging file is too small for this operation to complete.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PAGEFILE_QUOTA">
            <summary>
Insufficient quota to complete the requested service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WORKING_SET_QUOTA">
            <summary>
Insufficient quota to complete the requested service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PAGED_SYSTEM_RESOURCES">
            <summary>
Insufficient system resources exist to complete the requested service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NONPAGED_SYSTEM_RESOURCES">
            <summary>
Insufficient system resources exist to complete the requested service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SYSTEM_RESOURCES">
            <summary>
Insufficient system resources exist to complete the requested service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SHOWWIN_COMMAND">
            <summary>
Cannot show or remove the window in the way specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SCROLLBAR_RANGE">
            <summary>
Scroll bar range cannot be greater than MAXLONG.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SCROLLBARS">
            <summary>
The window does not have scroll bars.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_POPUP_ALREADY_ACTIVE">
            <summary>
Popup menu already active.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NON_MDICHILD_WINDOW">
            <summary>
Cannot process a message from a window that is not a multiple document interface (MDI) window.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_THREAD_ID">
            <summary>
Invalid thread identifier.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_GW_COMMAND">
            <summary>
Invalid GW_* command.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_CHILD_WINDOW">
            <summary>
The window is not a child window.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HWNDS_HAVE_DIFF_PARENT">
            <summary>
All handles to windows in a multiple-window position structure must have the same parent.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SCREEN_ALREADY_LOCKED">
            <summary>
Screen already locked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SPI_VALUE">
            <summary>
Invalid system-wide (SPI_*) parameter.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_MSGBOX_STYLE">
            <summary>
Invalid message box style.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SYSTEM_MENU">
            <summary>
The window does not have a system menu.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CHILD_WINDOW_MENU">
            <summary>
Child windows cannot have menus.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DESTROY_OBJECT_OF_OTHER_THREAD">
            <summary>
Cannot destroy object created by another thread.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LB_WITHOUT_TABSTOPS">
            <summary>
This list box does not support tab stops.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SETCOUNT_ON_BAD_LB">
            <summary>
LB_SETCOUNT sent to non-lazy list box.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_LB_MESSAGE">
            <summary>
Invalid message for single-selection list box.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HOOK_NOT_INSTALLED">
            <summary>
The hook procedure is not installed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_JOURNAL_HOOK_SET">
            <summary>
The journal hook procedure is already installed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GLOBAL_ONLY_HOOK">
            <summary>
This hook procedure can only be set globally.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HOOK_NEEDS_HMOD">
            <summary>
Cannot set nonlocal hook without a module handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_FILTER_PROC">
            <summary>
Invalid hook procedure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_HOOK_FILTER">
            <summary>
Invalid hook procedure type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DC_NOT_FOUND">
            <summary>
Invalid device context (DC) handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_EDIT_HEIGHT">
            <summary>
Height must be less than 256.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WINDOW_NOT_COMBOBOX">
            <summary>
The window is not a combo box.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_COMBOBOX_MESSAGE">
            <summary>
Invalid message for a combo box because it does not have an edit control.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CONTROL_ID_NOT_FOUND">
            <summary>
Control ID not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WINDOW_NOT_DIALOG">
            <summary>
The window is not a valid dialog window.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HOTKEY_NOT_REGISTERED">
            <summary>
Hot key is not registered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLIPBOARD_NOT_OPEN">
            <summary>
Thread does not have a clipboard open.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_WILDCARD_CHARACTERS">
            <summary>
No wildcards were found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LISTBOX_ID_NOT_FOUND">
            <summary>
The list box identifier was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRIVATE_DIALOG_INDEX">
            <summary>
Using private DIALOG window words.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_ICON_HANDLE">
            <summary>
Invalid icon handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_INDEX">
            <summary>
Invalid index.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLASS_HAS_WINDOWS">
            <summary>
Class still has open windows.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLASS_DOES_NOT_EXIST">
            <summary>
Class does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLASS_ALREADY_EXISTS">
            <summary>
Class already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HOTKEY_ALREADY_REGISTERED">
            <summary>
Hot key is already registered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WINDOW_OF_OTHER_THREAD">
            <summary>
Invalid window; it belongs to other thread.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANNOT_FIND_WND_CLASS">
            <summary>
Cannot find window class.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TLW_WITH_WSCHILD">
            <summary>
Cannot create a top-level child window.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_DWP_HANDLE">
            <summary>
Invalid handle to a multiple-window position structure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_HOOK_HANDLE">
            <summary>
Invalid hook handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_ACCEL_HANDLE">
            <summary>
Invalid accelerator table handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_CURSOR_HANDLE">
            <summary>
Invalid cursor handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_MENU_HANDLE">
            <summary>
Invalid menu handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_WINDOW_HANDLE">
            <summary>
Invalid window handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CURRENT_DOMAIN_NOT_ALLOWED">
            <summary>
This operation cannot be performed on the current domain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TIME_SKEW">
            <summary>
There is a time and/or date difference between the client and server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MUTUAL_AUTH_FAILED">
            <summary>
Mutual Authentication failed. The server's password is out of date at the domain controller.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WRONG_TARGET_NAME">
            <summary>
Logon Failure: The target account name is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LICENSE_QUOTA_EXCEEDED">
            <summary>
The service being accessed is licensed for a particular number of connections. No more connections can be made to the service at this time because there are already as many connections as the service can accept.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_USER_SESSION_KEY">
            <summary>
There is no user session key for the specified logon session.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DISK_CORRUPT">
            <summary>
The disk structure is corrupted and unreadable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FILE_CORRUPT">
            <summary>
The file or directory is corrupted and unreadable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_INHERITANCE">
            <summary>
Indicates an ACL contains no inheritable components.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LM_CROSS_ENCRYPTION_REQUIRED">
            <summary>
A cross-encrypted password is necessary to change this user password.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_SIDS">
            <summary>
Too many security IDs have been specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_MEMBER">
            <summary>
A new member could not be added to a local group because the member has the wrong account type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SUCH_MEMBER">
            <summary>
A member could not be added to or removed from the local group because the member does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NT_CROSS_ENCRYPTION_REQUIRED">
            <summary>
A cross-encrypted password is necessary to change a user password.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOGON_TYPE_NOT_GRANTED">
            <summary>
Logon failure: the user has not been granted the requested logon type at this computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_CONTEXT_IDS">
            <summary>
During a logon attempt, the user's security context accumulated too many security IDs.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INTERNAL_DB_ERROR">
            <summary>
The local security authority database contains an internal inconsistency.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SECRET_TOO_LONG">
            <summary>
The length of a secret exceeds the maximum length allowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_SECRETS">
            <summary>
The maximum number of secrets that may be stored in a single system has been exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOGON_NOT_GRANTED">
            <summary>
Logon failure: the user has not been granted the requested logon type at this computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALIAS_EXISTS">
            <summary>
The specified local group already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MEMBER_IN_ALIAS">
            <summary>
The specified account name is already a member of the group.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MEMBER_NOT_IN_ALIAS">
            <summary>
The specified account name is not a member of the group.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SUCH_ALIAS">
            <summary>
The specified local group does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOKEN_ALREADY_IN_USE">
            <summary>
The token is already in use as a primary token.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MEMBERS_PRIMARY_GROUP">
            <summary>
The user cannot be removed from a group because the group is currently the user's primary group.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SPECIAL_USER">
            <summary>
Cannot perform this operation on this built-in special user.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SPECIAL_GROUP">
            <summary>
Cannot perform this operation on this built-in special group.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SPECIAL_ACCOUNT">
            <summary>
Cannot perform this operation on built-in accounts.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RXACT_COMMIT_FAILURE">
            <summary>
An internal security database corruption has been encountered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RXACT_INVALID_STATE">
            <summary>
The transaction state of a registry subtree is incompatible with the requested operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANNOT_IMPERSONATE">
            <summary>
Unable to impersonate using a named pipe until data has been read from that pipe.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_LOGON_TYPE">
            <summary>
A logon request contained an invalid logon type value.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOGON_SESSION_COLLISION">
            <summary>
The logon session ID is already in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_LOGON_SESSION_STATE">
            <summary>
The logon session is not in a state that is consistent with the requested operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SUCH_PACKAGE">
            <summary>
A specified authentication package is unknown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOGON_SESSION_EXISTS">
            <summary>
Cannot start a new logon session with an ID that is already in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_LOGON_PROCESS">
            <summary>
The requested action is restricted for use by logon processes only. The calling process has not registered as a logon process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_DESCRIPTOR_FORMAT">
            <summary>
A security descriptor is not in the right format (absolute or self-relative).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GENERIC_NOT_MAPPED">
            <summary>
Generic access types were contained in an access mask which should already be mapped to nongeneric types.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INTERNAL_ERROR">
            <summary>
An internal error occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INTERNAL_DB_CORRUPTION">
            <summary>
Unable to complete the requested operation because of either a catastrophic media failure or a data structure corruption on the disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DOMAIN_LIMIT_EXCEEDED">
            <summary>
An attempt was made to exceed the limit on the number of domains per server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DOMAIN_EXISTS">
            <summary>
The specified domain already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SUCH_DOMAIN">
            <summary>
The specified domain either does not exist or could not be contacted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_DOMAIN_ROLE">
            <summary>
This operation is only allowed for the Primary Domain Controller of the domain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_DOMAIN_STATE">
            <summary>
The domain was in the wrong state to perform the security operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SERVER_STATE">
            <summary>
The security account manager (SAM) or local security authority (LSA) server was in the wrong state to perform the security operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANT_ACCESS_DOMAIN_INFO">
            <summary>
Configuration information could not be read from the domain controller, either because the machine is unavailable, or access has been denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SECURITY_ON_OBJECT">
            <summary>
Unable to perform a security operation on an object that has no associated security.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_TOKEN_TYPE">
            <summary>
The type of the token is inappropriate for its attempted use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_VALIDATION_CLASS">
            <summary>
The validation information class requested was invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANT_OPEN_ANONYMOUS">
            <summary>
Cannot open an anonymous level security token.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_IMPERSONATION_LEVEL">
            <summary>
Either a required impersonation level was not provided, or the provided impersonation level is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_GROUP_ATTRIBUTES">
            <summary>
The specified attributes are invalid, or incompatible with the attributes for the group as a whole.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALLOTTED_SPACE_EXCEEDED">
            <summary>
No more memory is available for security information updates.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_ID_AUTHORITY">
            <summary>
The value provided was an invalid value for an identifier authority.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVER_NOT_DISABLED">
            <summary>
The server is currently enabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVER_DISABLED">
            <summary>
The server is currently disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_INHERITANCE_ACL">
            <summary>
The inherited access control list (ACL) or access control entry (ACE) could not be built.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SECURITY_DESCR">
            <summary>
The security descriptor structure is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SID">
            <summary>
The security ID structure is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_ACL">
            <summary>
The access control list (ACL) structure is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SUB_AUTHORITY">
            <summary>
The subauthority part of a security ID is invalid for this particular use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LUIDS_EXHAUSTED">
            <summary>
No more local user identifiers (LUIDs) are available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_LUIDS_REQUESTED">
            <summary>
Too many local user identifiers (LUIDs) were requested at one time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NONE_MAPPED">
            <summary>
No mapping between account names and security IDs was done.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ACCOUNT_DISABLED">
            <summary>
Logon failure: account currently disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PASSWORD_EXPIRED">
            <summary>
Logon failure: the specified account password has expired.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_WORKSTATION">
            <summary>
Logon failure: user not allowed to log on to this computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_LOGON_HOURS">
            <summary>
Logon failure: account logon time restriction violation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ACCOUNT_RESTRICTION">
            <summary>
Logon failure: user account restriction. Possible reasons are blank passwords not allowed, logon hour restrictions, or a policy restriction has been enforced.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOGON_FAILURE">
            <summary>
Logon failure: unknown user name or bad password.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PASSWORD_RESTRICTION">
            <summary>
Unable to update the password. The value provided for the new password does not meet the length, complexity, or history requirements of the domain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ILL_FORMED_PASSWORD">
            <summary>
Unable to update the password. The value provided for the new password contains values that are not allowed in passwords.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WRONG_PASSWORD">
            <summary>
Unable to update the password. The value provided as the current password is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LAST_ADMIN">
            <summary>
The last remaining administration account cannot be disabled or deleted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MEMBER_NOT_IN_GROUP">
            <summary>
The specified user account is not a member of the specified group account.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MEMBER_IN_GROUP">
            <summary>
Either the specified user account is already a member of the specified group, or the specified group cannot be deleted because it contains a member.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SUCH_GROUP">
            <summary>
The specified group does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GROUP_EXISTS">
            <summary>
The specified group already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SUCH_USER">
            <summary>
The specified account does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_USER_EXISTS">
            <summary>
The specified account already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_ACCOUNT_NAME">
            <summary>
The name provided is not a properly formed account name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRIVILEGE_NOT_HELD">
            <summary>
A required privilege is not held by the client.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SUCH_PRIVILEGE">
            <summary>
A specified privilege does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SUCH_LOGON_SESSION">
            <summary>
A specified logon session does not exist. It may already have been terminated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_LOGON_SERVERS">
            <summary>
There are currently no logon servers available to service the logon request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANT_DISABLE_MANDATORY">
            <summary>
The group may not be disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_IMPERSONATION_TOKEN">
            <summary>
An attempt has been made to operate on an impersonation token by a thread that is not currently impersonating a client.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_PRIMARY_GROUP">
            <summary>
This security ID may not be assigned as the primary group of an object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_OWNER">
            <summary>
This security ID may not be assigned as the owner of this object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REVISION_MISMATCH">
            <summary>
Indicates two revision levels are incompatible.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNKNOWN_REVISION">
            <summary>
The revision level is unknown.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NULL_LM_PASSWORD">
            <summary>
The password is too complex to be converted to a LAN Manager password. The LAN Manager password returned is a NULL string.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOCAL_USER_SESSION_KEY">
            <summary>
No encryption key is available. A well-known encryption key was returned.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_QUOTAS_FOR_ACCOUNT">
            <summary>
No system quota limits are specifically set for this account.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SOME_NOT_MAPPED">
            <summary>
Some mapping between account names and security IDs was not done.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_ALL_ASSIGNED">
            <summary>
Not all privileges or groups referenced are assigned to the caller.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_LABEL">
            <summary>
Indicates a particular Security ID may not be assigned as the label of an object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE">
            <summary>
A privilege that the service requires to function properly does not exist in the service account configuration.
You may use the Services Microsoft Management Console (MMC) snap-in (services.msc) and the Local Security Settings MMC snap-in (secpol.msc) to view the service configuration and the account configuration.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CONTENT_BLOCKED">
            <summary>
The requested file operation failed because the storage policy blocks that type of file. For more information, contact your system administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DISK_QUOTA_EXCEEDED">
            <summary>
The requested file operation failed because the storage quota was exceeded.
To free up disk space, move files to a different location or delete unnecessary files. For more information, contact your system administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_NOTIFY_CLIENT_LAGGING">
            <summary>
The service notification client is lagging too far behind the current state of services in the machine.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PROCESS_IS_PROTECTED">
            <summary>
Either the target process, or the target thread's containing process, is a protected process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IMPLEMENTATION_LIMIT">
            <summary>
An operation attempted to exceed an implementation-defined limit.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DRIVER_PROCESS_TERMINATED">
            <summary>
The process hosting the driver for this device has been terminated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INCOMPATIBLE_SERVICE_SID_TYPE">
            <summary>
The service start failed since one or more services in the same process have an incompatible service SID type setting. A service with restricted service SID type can only coexist in the same process with other services with a restricted SID type. If the service SID type for this service was just configured, the hosting process must be restarted in order to start this service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BEYOND_VDL">
            <summary>
The operation occurred beyond the valid data length of the file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_CRUNTIME_PARAMETER">
            <summary>
The parameter passed to a C runtime function is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNIDENTIFIED_ERROR">
            <summary>
Insufficient information exists to identify the cause of failure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VDM_DISALLOWED">
            <summary>
%1 is a 16-bit application. You do not have permissions to execute 16-bit applications. Check your permissions with your system administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DELAY_LOAD_FAILED">
            <summary>
An attempt to delay-load a .dll or get a function address in a delay-loaded .dll failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEBUGGER_INACTIVE">
            <summary>
An attempt to do an operation on a debug object failed because the object is in the process of being deleted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PARAMETER_QUOTA_EXCEEDED">
            <summary>
Data present in one of the parameters is more than the function can operate on.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_STACK_BUFFER_OVERRUN">
            <summary>
The system detected an overrun of a stack-based buffer in this application. This overrun could potentially allow a malicious user to gain control of this application.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALREADY_THREAD">
            <summary>
The current thread has already been converted from a fiber.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALREADY_FIBER">
            <summary>
The current thread has already been converted to a fiber.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RECOVERY_FAILURE">
            <summary>
A transaction recover failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER">
            <summary>
Windows cannot open this program because the license enforcement system has been tampered with or become corrupted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ACCESS_DISABLED_WEBBLADE">
            <summary>
Windows cannot open this program since it has been disabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_IMPORT_OF_NON_DLL">
            <summary>
A dynamic link library (DLL) referenced a module that was neither a DLL nor the process's executable image.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DRIVER_BLOCKED">
            <summary>
This driver has been blocked from loading
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED">
            <summary>
The group policy framework should call the extension in the synchronous foreground policy refresh.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CALLBACK_SUPPLIED_INVALID_DATA">
            <summary>
An application-defined callback gave invalid data when called.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MACHINE_LOCKED">
            <summary>
The machine is locked and cannot be shut down without the force option.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DOWNGRADE_DETECTED">
            <summary>
The system detected a possible attempt to compromise security. Please ensure that you can contact the server that authenticated you.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SMARTCARD_SUBSYSTEM_FAILURE">
            <summary>
The Kerberos protocol encountered an error while attempting to utilize the smartcard subsystem.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PKINIT_FAILURE">
            <summary>
The Kerberos protocol encountered an error while validating the KDC certificate during smartcard logon. There is more information in the system event log.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CSCSHARE_OFFLINE">
            <summary>
The share is currently offline or does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REG_NAT_CONSUMPTION">
            <summary>
A program attempt to use an invalid register value. Normally caused by an uninitialized register. This error is Itanium specific.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ACCESS_DISABLED_BY_POLICY">
            <summary>
This program is blocked by group policy. For more information, contact your system administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_APPHELP_BLOCK">
            <summary>
AppHelp dialog canceled thus preventing the application from starting.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NON_DOMAIN_SID">
            <summary>
The security identifier provided does not have a domain component.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NON_ACCOUNT_SID">
            <summary>
The security identifier provided is not from an account domain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HOST_DOWN">
            <summary>
The remote system is not available. For information about network troubleshooting, see Windows Help.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVER_SHUTDOWN_IN_PROGRESS">
            <summary>
The server machine is shutting down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_SUPPORTED_ON_SBS">
            <summary>
This operation is not supported on a computer running Windows Server 2003 for Small Business Server
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_USER_PROFILE">
            <summary>
The specified user does not have a valid profile.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OVERRIDE_NOCHANGES">
            <summary>
The group policy framework should call the extension even if there are no changes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ONLY_IF_CONNECTED">
            <summary>
This operation is supported only when you are connected to the server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DOMAIN_CONTROLLER_EXISTS">
            <summary>
A domain controller with the specified name already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SUCH_SITE">
            <summary>
The specified site does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_MORE_DEVICES">
            <summary>
No more local devices.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALREADY_INITIALIZED">
            <summary>
An attempt was made to perform an initialization operation when initialization has already been completed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CONTINUE">
            <summary>
Continue with work in progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_LOGGED_ON">
            <summary>
The operation being requested was not performed because the user has not logged on to the network. The specified service does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_AUTHENTICATED">
            <summary>
The operation being requested was not performed because the user has not been authenticated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_NOT_FOUND">
            <summary>
The specified service does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALREADY_REGISTERED">
            <summary>
The service is already registered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INCORRECT_ADDRESS">
            <summary>
The network address could not be used for the operation requested.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOGIN_WKSTA_RESTRICTION">
            <summary>
The account is not authorized to log in from this station.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOGIN_TIME_RESTRICTION">
            <summary>
Attempting to log in during an unauthorized time of day for this account.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CONNECTION_COUNT_LIMIT">
            <summary>
A connection to the server could not be made because the limit on the number of concurrent connections for this account has been reached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RETRY">
            <summary>
The operation could not be completed. A retry should be performed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CONNECTION_ABORTED">
            <summary>
The network connection was aborted by the local system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REQUEST_ABORTED">
            <summary>
The request was aborted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PORT_UNREACHABLE">
            <summary>
No service is operating at the destination network endpoint on the remote system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PROTOCOL_UNREACHABLE">
            <summary>
The network location cannot be reached. For information about network troubleshooting, see Windows Help.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HOST_UNREACHABLE">
            <summary>
The network location cannot be reached. For information about network troubleshooting, see Windows Help.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NETWORK_UNREACHABLE">
            <summary>
The network location cannot be reached. For information about network troubleshooting, see Windows Help.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CONNECTION_ACTIVE">
            <summary>
An invalid operation was attempted on an active network connection.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CONNECTION_INVALID">
            <summary>
An operation was attempted on a nonexistent network connection.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ADDRESS_NOT_ASSOCIATED">
            <summary>
An address has not yet been associated with the network endpoint.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ADDRESS_ALREADY_ASSOCIATED">
            <summary>
The network transport endpoint already has an address associated with it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GRACEFUL_DISCONNECT">
            <summary>
The network connection was gracefully closed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CONNECTION_REFUSED">
            <summary>
The remote computer refused the network connection.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_USER_MAPPED_FILE">
            <summary>
The requested operation cannot be performed on a file with a user-mapped section open.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANCELLED">
            <summary>
The operation was canceled by the user.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_NETWORK">
            <summary>
The network is not present or not started.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DUP_DOMAINNAME">
            <summary>
The workgroup or domain name is already in use by another computer on the network.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REMOTE_SESSION_LIMIT_EXCEEDED">
            <summary>
An attempt was made to establish a session to a network server, but there are already too many sessions established to that server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SESSION_CREDENTIAL_CONFLICT">
            <summary>
Multiple connections to a server or shared resource by the same user, using more than one user name, are not allowed. Disconnect all previous connections to the server or shared resource and try again.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_MESSAGEDEST">
            <summary>
The format of the specified message destination is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_MESSAGENAME">
            <summary>
The format of the specified message name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_PASSWORDNAME">
            <summary>
The format of the specified password is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SHARENAME">
            <summary>
The format of the specified share name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_NETNAME">
            <summary>
The format of the specified network name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SERVICENAME">
            <summary>
The format of the specified service name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_DOMAINNAME">
            <summary>
The format of the specified domain name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_EVENTNAME">
            <summary>
The format of the specified event name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_COMPUTERNAME">
            <summary>
The format of the specified computer name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_GROUPNAME">
            <summary>
The format of the specified group name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EXTENDED_ERROR">
            <summary>
An extended error has occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_CONTAINER">
            <summary>
Cannot enumerate a noncontainer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_PROFILE">
            <summary>
The network connection profile is corrupted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANNOT_OPEN_PROFILE">
            <summary>
Unable to open the network connection profile.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_PROVIDER">
            <summary>
The specified network provider name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_NET_OR_BAD_PATH">
            <summary>
The network path was either typed incorrectly, does not exist, or the network provider is not currently available. Please try retyping the path or contact your network administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEVICE_ALREADY_REMEMBERED">
            <summary>
The local device name has a remembered connection to another network resource.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CONNECTION_UNAVAIL">
            <summary>
The device is not currently connected but it is a remembered connection.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_DEVICE">
            <summary>
The specified device name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SHUTDOWN_USERS_LOGGED_ON">
            <summary>
The system shutdown cannot be initiated because there are other users logged on to the computer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SHUTDOWN_IS_SCHEDULED">
            <summary>
A system shutdown has already been scheduled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_JOURNAL_ENTRY_DELETED">
            <summary>
The journal entry has been deleted from the journal.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_POTENTIAL_FILE_FOUND">
            <summary>
A file was found, but it may not be the correct file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_JOURNAL_NOT_ACTIVE">
            <summary>
The volume change journal is not active.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_JOURNAL_DELETE_IN_PROGRESS">
            <summary>
The volume change journal is being deleted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNABLE_TO_MOVE_REPLACEMENT_2">
            <summary>
Unable to move the replacement file to the file to be replaced. The file to be replaced has been renamed using the backup name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNABLE_TO_MOVE_REPLACEMENT">
            <summary>
Unable to move the replacement file to the file to be replaced. The file to be replaced has retained its original name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNABLE_TO_REMOVE_REPLACED">
            <summary>
Unable to remove the file to be replaced.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_VOLUME_ID">
            <summary>
The Volume ID could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_TRACKING_SERVICE">
            <summary>
The tracking (workstation) service is not running.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_POINT_NOT_FOUND">
            <summary>
The point passed to GetMouseMovePoints is not in the buffer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SET_NOT_FOUND">
            <summary>
The property set specified does not exist on the object.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_MATCH">
            <summary>
There was no match for the specified key in the index.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_FOUND">
            <summary>
Element not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEVICE_NOT_CONNECTED">
            <summary>
The device is not connected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEVICE_DOOR_OPEN">
            <summary>
The device has indicated that its door is open.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEVICE_REQUIRES_CLEANING">
            <summary>
The device has indicated that cleaning is required before further operations are attempted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEVICE_REINITIALIZATION_NEEDED">
            <summary>
The indicated device requires reinitialization due to hardware errors.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MAGAZINE_NOT_PRESENT">
            <summary>
The indicated element is part of a magazine that is not present.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ILLEGAL_ELEMENT_ADDRESS">
            <summary>
The indicated element does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DESTINATION_ELEMENT_FULL">
            <summary>
The indicated destination element already contains media.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SOURCE_ELEMENT_EMPTY">
            <summary>
The indicated source element has no media.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MESSAGE_SYNC_ONLY">
            <summary>
The message can be used only with synchronous operations.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_MORE_USER_HANDLES">
            <summary>
The current process has used all of its system allowance of handles for Window Manager objects.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DLL_NOT_FOUND">
            <summary>
One of the library files needed to run this application cannot be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DDE_FAIL">
            <summary>
An error occurred in sending the command to the application.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_ASSOCIATION">
            <summary>
No application is associated with the specified file for this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_DLL">
            <summary>
One of the library files needed to run this application is damaged.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RMODE_APP">
            <summary>
The specified program was written for an earlier version of Windows.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SINGLE_INSTANCE_APP">
            <summary>
Cannot start more than one instance of the specified program.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_APP_WRONG_OS">
            <summary>
The specified program is not a Windows or MS-DOS program.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OLD_WIN_VERSION">
            <summary>
The specified program requires a newer version of Windows.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_LINKS">
            <summary>
An attempt was made to create more links on a file than the file system supports.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SET_POWER_STATE_FAILED">
            <summary>
The system BIOS failed an attempt to change the system power state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SET_POWER_STATE_VETOED">
            <summary>
An attempt to change the system power state was vetoed by another application or driver.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MAPPED_ALIGNMENT">
            <summary>
The base address or the file offset specified does not have the proper alignment.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_POSSIBLE_DEADLOCK">
            <summary>
A potential deadlock condition has been detected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_ENOUGH_SERVER_MEMORY">
            <summary>
Not enough server storage is available to process this command.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EOM_OVERFLOW">
            <summary>
Physical end of tape encountered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DISK_RESET_FAILED">
            <summary>
While accessing the hard disk, a disk controller reset was needed, but even that failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DISK_OPERATION_FAILED">
            <summary>
While accessing the hard disk, a disk operation failed even after retries.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DISK_RECALIBRATE_FAILED">
            <summary>
While accessing the hard disk, a recalibrate operation failed, even after retries.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLOPPY_BAD_REGISTERS">
            <summary>
The floppy disk controller returned inconsistent results in its registers.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLOPPY_UNKNOWN_ERROR">
            <summary>
The floppy disk controller reported an error that is not recognized by the floppy disk driver.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLOPPY_WRONG_CYLINDER">
            <summary>
Mismatch between the floppy disk sector ID field and the floppy disk controller track address.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLOPPY_ID_MARK_NOT_FOUND">
            <summary>
No ID address mark was found on the floppy disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_COUNTER_TIMEOUT">
            <summary>
A serial I/O operation completed because the timeout period expired.
(The IOCTL_SERIAL_XOFF_COUNTER did not reach zero.)
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MORE_WRITES">
            <summary>
A serial I/O operation was completed by another write to the serial port.
(The IOCTL_SERIAL_XOFF_COUNTER reached zero.)
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IRQ_BUSY">
            <summary>
Unable to open a device that was sharing an interrupt request (IRQ) with other devices. At least one other device that uses that IRQ was already opened.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERIAL_NO_DEVICE">
            <summary>
No serial device was successfully initialized. The serial driver will unload.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IO_DEVICE">
            <summary>
The request could not be performed because of an I/O device error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SHUTDOWN_IN_PROGRESS">
            <summary>
Unable to abort the system shutdown because no shutdown was in progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SHUTDOWN_IN_PROGRESS">
            <summary>
A system shutdown is in progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DLL_INIT_FAILED">
            <summary>
A dynamic link library (DLL) initialization routine failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_UNICODE_TRANSLATION">
            <summary>
No mapping for the Unicode character exists in the target multi-byte code page.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_MEDIA_IN_DRIVE">
            <summary>
No media in drive.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BUS_RESET">
            <summary>
The I/O bus was reset.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MEDIA_CHANGED">
            <summary>
The media in the drive may have changed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNABLE_TO_UNLOAD_MEDIA">
            <summary>
Unable to unload the media.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNABLE_TO_LOCK_MEDIA">
            <summary>
Unable to lock the media eject mechanism.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEVICE_NOT_PARTITIONED">
            <summary>
Tape partition information could not be found when loading a tape.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_BLOCK_LENGTH">
            <summary>
When accessing a new tape of a multivolume partition, the current block size is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PARTITION_FAILURE">
            <summary>
Tape could not be partitioned.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_DATA_DETECTED">
            <summary>
No more data is on the tape.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SETMARK_DETECTED">
            <summary>
A tape access reached the end of a set of files.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BEGINNING_OF_MEDIA">
            <summary>
The beginning of the tape or a partition was encountered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FILEMARK_DETECTED">
            <summary>
A tape access reached a filemark.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_END_OF_MEDIA">
            <summary>
The physical end of the tape has been reached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_SAFEBOOT_SERVICE">
            <summary>
This service cannot be started in Safe Mode
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_NOT_IN_EXE">
            <summary>
The executable program that this service is configured to run in does not implement the service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_RECOVERY_PROGRAM">
            <summary>
No recovery program has been configured for this service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANNOT_DETECT_PROCESS_ABORT">
            <summary>
This service runs in the same process as the service control manager.
Therefore, the service control manager cannot take action if this service's process terminates unexpectedly.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANNOT_DETECT_DRIVER_FAILURE">
            <summary>
Failure actions can only be set for Win32 services, not for drivers.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DIFFERENT_SERVICE_ACCOUNT">
            <summary>
The account specified for this service is different from the account specified for other services running in the same process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DUPLICATE_SERVICE_NAME">
            <summary>
The name is already in use as either a service name or a service display name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_NEVER_STARTED">
            <summary>
No attempts to start the service have been made since the last boot.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BOOT_ALREADY_ACCEPTED">
            <summary>
The current boot has already been accepted for use as the last-known-good control set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_DEPENDENCY_DELETED">
            <summary>
The dependency service does not exist or has been marked for deletion.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALREADY_RUNNING_LKG">
            <summary>
The system is currently running with the last-known-good configuration.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_EXISTS">
            <summary>
The specified service already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_MARKED_FOR_DELETE">
            <summary>
The specified service has been marked for deletion.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SERVICE_LOCK">
            <summary>
The specified service database lock is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_START_HANG">
            <summary>
After starting, the service hung in a start-pending state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_LOGON_FAILED">
            <summary>
The service did not start due to a logon failure.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_DEPENDENCY_FAIL">
            <summary>
The dependency service or group failed to start.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PROCESS_ABORTED">
            <summary>
The process terminated unexpectedly.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_SPECIFIC_ERROR">
            <summary>
The service has returned a service-specific error code.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DATABASE_DOES_NOT_EXIST">
            <summary>
The database specified does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EXCEPTION_IN_SERVICE">
            <summary>
An exception occurred in the service when handling the control request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FAILED_SERVICE_CONTROLLER_CONNECT">
            <summary>
The service process could not connect to the service controller.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_NOT_ACTIVE">
            <summary>
The service has not been started.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_CANNOT_ACCEPT_CTRL">
            <summary>
The service cannot accept control messages at this time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_DOES_NOT_EXIST">
            <summary>
The specified service does not exist as an installed service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CIRCULAR_DEPENDENCY">
            <summary>
Circular service dependency was specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_DISABLED">
            <summary>
The service cannot be started, either because it is disabled or because it has no enabled devices associated with it.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SERVICE_ACCOUNT">
            <summary>
The account name is invalid or does not exist, or the password is invalid for the account name specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_ALREADY_RUNNING">
            <summary>
An instance of the service is already running.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_DATABASE_LOCKED">
            <summary>
The service database is locked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_NO_THREAD">
            <summary>
A thread could not be created for the service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_REQUEST_TIMEOUT">
            <summary>
The service did not respond to the start or control request in a timely fashion.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SERVICE_CONTROL">
            <summary>
The requested control is not valid for this service.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEPENDENT_SERVICES_RUNNING">
            <summary>
A stop control has been sent to a service that other running services are dependent on.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOTIFY_ENUM_DIR">
            <summary>
A notify change request is being completed and the information is not being returned in the caller's buffer. The caller now needs to enumerate the files to find the changes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CHILD_MUST_BE_VOLATILE">
            <summary>
Cannot create a stable subkey under a volatile parent key.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_KEY_HAS_CHILDREN">
            <summary>
Cannot create a symbolic link in a registry key that already has subkeys or values.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_LOG_SPACE">
            <summary>
System could not allocate the required space in a registry log.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_KEY_DELETED">
            <summary>
Illegal operation attempted on a registry key that has been marked for deletion.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_REGISTRY_FILE">
            <summary>
The system has attempted to load or restore a file into the registry, but the specified file is not in a registry file format.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REGISTRY_IO_FAILED">
            <summary>
An I/O operation initiated by the registry failed unrecoverably. The registry could not read in, or write out, or flush, one of the files that contain the system's image of the registry.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REGISTRY_CORRUPT">
            <summary>
The registry is corrupted. The structure of one of the files containing registry data is corrupted, or the system's memory image of the file is corrupted, or the file could not be recovered because the alternate copy or log was absent or corrupted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REGISTRY_RECOVERED">
            <summary>
One of the files in the registry database had to be recovered by use of a log or alternate copy. The recovery was successful.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANTWRITE">
            <summary>
The configuration registry key could not be written.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANTREAD">
            <summary>
The configuration registry key could not be read.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANTOPEN">
            <summary>
The configuration registry key could not be opened.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BADKEY">
            <summary>
The configuration registry key is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BADDB">
            <summary>
The configuration registry database is corrupt.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_TOKEN">
            <summary>
An attempt was made to reference a token that does not exist.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FULLSCREEN_MODE">
            <summary>
The requested operation cannot be performed in full-screen mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FILE_INVALID">
            <summary>
The volume for a file has been externally altered so that the opened file is no longer valid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNRECOGNIZED_VOLUME">
            <summary>
The volume does not contain a recognized file system.
Please make sure that all required file system drivers are loaded and that the volume is not corrupted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_FLAGS">
            <summary>
Invalid flags.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CAN_NOT_COMPLETE">
            <summary>
Cannot complete this function.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_MESSAGE">
            <summary>
The window cannot act on the sent message.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_STACK_OVERFLOW">
            <summary>
Recursion too deep; the stack overflowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SWAPERROR">
            <summary>
Error performing inpage operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOACCESS">
            <summary>
Invalid access to memory location.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IO_PENDING">
            <summary>
Overlapped I/O operation is in progress.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IO_INCOMPLETE">
            <summary>
Overlapped I/O event is not in a signaled state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OPERATION_ABORTED">
            <summary>
The I/O operation has been aborted because of either a thread exit or an application request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EA_ACCESS_DENIED">
            <summary>
Access to the extended attribute was denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_MCFG_TABLE">
            <summary>
The resources required for this device conflict with the MCFG table.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR">
            <summary>
{Delayed Write Failed}
Windows was unable to save all the data for the file %hs; the data has been lost.
This error may be caused if the device has been removed or the media is write-protected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR">
            <summary>
{Delayed Write Failed}
Windows was unable to save all the data for the file %hs; the data has been lost.
This error was returned by the server on which the file exists. Please try to save this file elsewhere.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED">
            <summary>
{Delayed Write Failed}
Windows was unable to save all the data for the file %hs; the data has been lost.
This error may be caused by network connectivity issues. Please try to save this file elsewhere.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ABANDON_HIBERFILE">
            <summary>
A valid hibernation file has been invalidated and should be abandoned.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY">
            <summary>
Access to %1 has been restricted by your Administrator by policy rule %2.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ACCESS_AUDIT_BY_POLICY">
            <summary>
Access to %1 is monitored by policy rule %2.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MCA_EXCEPTION">
            <summary>
A thread is getting dispatched with MCA EXCEPTION because of MCA.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION">
            <summary>
The system power state is transitioning from %2 to %3 but could enter %4.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SYSTEM_POWERSTATE_TRANSITION">
            <summary>
The system power state is transitioning from %2 to %3.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE">
            <summary>
The Desktop heap encountered an error while allocating session memory. There is more information in the system event log.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DISK_REPAIR_DISABLED">
            <summary>
The attempted operation required self healing to be enabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MEMORY_HARDWARE">
            <summary>
The hardware has reported an uncorrectable memory error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BADSTARTPOSITION">
            <summary>
The iterator's start position is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VERSION_PARSE_ERROR">
            <summary>
A version number could not be parsed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REQUEST_OUT_OF_SEQUENCE">
            <summary>
The client of a component requested an operation which is not valid given the state of the component instance.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_CAPABLE">
            <summary>
The implementation is not capable of performing the request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ERRORS_ENCOUNTERED">
            <summary>
One or more errors occurred while processing the request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_ACCESSOR_FLAGS">
            <summary>
The data provider was not able to interpret the flags set for a column binding in an accessor.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ROWSNOTRELEASED">
            <summary>
The data provider requires that previously fetched data is released before asking for more data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANTSCROLLBACKWARDS">
            <summary>
The data provider cannot scroll backwards through a result set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANTFETCHBACKWARDS">
            <summary>
The data provider cannot fetch backwards through a result set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_COMPRESSION_DISABLED">
            <summary>
Compression is disabled for this volume.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CALLBACK_POP_STACK">
            <summary>
An exception occurred in a user mode callback and the kernel callback frame should be removed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DBG_CONTINUE">
            <summary>
Debugger continued
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DBG_EXCEPTION_HANDLED">
            <summary>
Debugger handled exception
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WAIT_FOR_OPLOCK">
            <summary>
An operation is blocked waiting for an oplock.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INTERRUPT_STILL_CONNECTED">
            <summary>
The specified interrupt vector is still connected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED">
            <summary>
The specified interrupt vector was already connected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY">
            <summary>
A file system or file system filter driver has successfully completed an FsFilter operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLSNAP_HIBERNATE_READY">
            <summary>
{Volume Shadow Copy Service}
The system is now ready for hibernation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PROCESS_IN_JOB">
            <summary>
The specified process is part of a job.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PROCESS_NOT_IN_JOB">
            <summary>
The specified process is not part of a job.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOTHING_TO_TERMINATE">
            <summary>
A process being terminated has no threads to terminate.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TRANSLATION_COMPLETE">
            <summary>
The translator has translated these resources into the global space and no further translations should be performed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESOURCE_REQUIREMENTS_CHANGED">
            <summary>
The device has succeeded a query-stop and its resource requirements have changed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REPARSE_OBJECT">
            <summary>
A reparse should be performed by the Object Manager since the name of the file resulted in a symbolic link.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BUFFER_ALL_ZEROS">
            <summary>
Specified buffer contains all zeros.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CRASH_DUMP">
            <summary>
Crash dump exists in paging file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CACHE_PAGE_LOCKED">
            <summary>
Cached page was locked during operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PAGE_FAULT_PAGING_FILE">
            <summary>
Page fault was satisfied by reading from a secondary storage device.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PAGE_FAULT_GUARD_PAGE">
            <summary>
Page fault was a demand zero fault.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PAGE_FAULT_COPY_ON_WRITE">
            <summary>
Page fault was a demand zero fault.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PAGE_FAULT_DEMAND_ZERO">
            <summary>
Page fault was a demand zero fault.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PAGE_FAULT_TRANSITION">
            <summary>
Page fault was a transition fault.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED">
            <summary>
{Connect Failure on Primary Transport}
An attempt was made to connect to the remote server %hs on the primary transport, but the connection failed.
The computer WAS able to connect on a secondary transport.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOTIFY_CLEANUP">
            <summary>
This indicates that a notify change request has been completed due to closing the handle which made the notify change request.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RXACT_COMMITTED">
            <summary>
This success level status indicates that the transaction state already exists for the registry sub-tree, but that a transaction commit was previously aborted.
The commit has now been completed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLUME_MOUNTED">
            <summary>
A new volume has been mounted by a file system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OPLOCK_BREAK_IN_PROGRESS">
            <summary>
An open/create operation completed while an oplock break is underway.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REPARSE">
            <summary>
A reparse should be performed by the Object Manager since the name of the file resulted in a symbolic link.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ELEVATION_REQUIRED">
            <summary>
The requested operation requires elevation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALERTED">
            <summary>
 ERROR_ALERTED
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_KERNEL_APC">
            <summary>
 ERROR_KERNEL_APC
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_USER_APC">
            <summary>
 ERROR_USER_APC
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ABANDONED_WAIT_63">
            <summary>
 ERROR_ABANDONED_WAIT_63
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ABANDONED_WAIT_0">
            <summary>
 ERROR_ABANDONED_WAIT_0
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WAIT_63">
            <summary>
 ERROR_WAIT_63
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WAIT_3">
            <summary>
 ERROR_WAIT_3
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WAIT_2">
            <summary>
 ERROR_WAIT_2
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WAIT_1">
            <summary>
 ERROR_WAIT_1
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WAKE_SYSTEM">
            <summary>
The system has awoken
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DRIVERS_LEAKING_LOCKED_PAGES">
            <summary>
A device driver is leaking locked I/O pages causing system degradation. The system has automatically enabled tracking code in order to try and catch the culprit.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FIRMWARE_UPDATED">
            <summary>
Windows has detected that the system firmware (BIOS) was updated [previous firmware date = %2, current firmware date %3].
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RESUME_HIBERNATION">
            <summary>
The system was resumed from hibernation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HIBERNATED">
            <summary>
The system was put into hibernation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MP_PROCESSOR_MISMATCH">
            <summary>
The CPUs in this multiprocessor system are not all the same revision level. To use all processors the operating system restricts itself to the features of the least capable processor in the system. Should problems occur with this system, contact the CPU manufacturer to see if this mix of processors is supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CARDBUS_NOT_SUPPORTED">
            <summary>
The inserted CardBus device cannot be started because of a configuration error on "%hs".
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ARBITRATION_UNHANDLED">
            <summary>
The arbiter has deferred arbitration of these resources to its parent
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TIMER_RESUME_IGNORED">
            <summary>
The resumable flag to a timer API was ignored.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_YIELD_PERFORMED">
            <summary>
A yield execution was performed and no thread was available to run.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE">
            <summary>
{Machine Type Mismatch}
The image file %hs is valid, but is for a machine type other than the current machine.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALREADY_WIN32">
            <summary>
 ERROR_ALREADY_WIN32
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOG_HARD_ERROR">
            <summary>
Application popup: %1 : %2
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WAS_LOCKED">
            <summary>
{Page Locked}
One of the pages to lock was already locked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVICE_NOTIFICATION">
            <summary>
%hs
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WAS_UNLOCKED">
            <summary>
{Page Unlocked}
The page protection of a locked page was changed to 'No Access' and the page was unlocked from memory and from the process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PREDEFINED_HANDLE">
            <summary>
The specified registry key is referenced by a predefined handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FATAL_APP_EXIT">
            <summary>
{Fatal Application Exit}
%hs
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CHECKING_FILE_SYSTEM">
            <summary>
Checking file system on %wZ
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVENT_PENDING">
            <summary>
{TDI Event Pending}
The TDI indication has entered the pending state.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVENT_DONE">
            <summary>
{TDI Event Done}
The TDI indication has completed successfully.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RECEIVE_PARTIAL_EXPEDITED">
            <summary>
{Partial Expedited Data Received}
The network transport returned partial data to its client and this data was marked as expedited by the remote system. The remaining data will be sent later.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RECEIVE_EXPEDITED">
            <summary>
{Expedited Data Received}
The network transport returned data to its client that was marked as expedited by the remote system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RECEIVE_PARTIAL">
            <summary>
{Partial Data Received}
The network transport returned partial data to its client. The remaining data will be sent later.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IMAGE_MACHINE_TYPE_MISMATCH">
            <summary>
{Machine Type Mismatch}
The image file %hs is valid, but is for a machine type other than the current machine. Select OK to continue, or CANCEL to fail the DLL load.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FT_WRITE_RECOVERY">
            <summary>
{Redundant Write}
To satisfy a write request, the NT fault-tolerant file system successfully wrote a redundant copy of the information.
This was done because the file system encountered a failure on a member of the fault-tolerant volume, but was not able to reassign the failing area of the device.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FT_READ_RECOVERY_FROM_BACKUP">
            <summary>
{Redundant Read}
To satisfy a read request, the NT fault-tolerant file system successfully read the requested data from a redundant copy.
This was done because the file system encountered a failure on a member of the fault-tolerant volume, but was unable to reassign the failing area of the device.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_CURRENT_DIRECTORY">
            <summary>
{Invalid Current Directory}
The process cannot switch to the startup current directory %hs.
Select OK to set current directory to %hs, or select CANCEL to exit.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SEGMENT_NOTIFICATION">
            <summary>
{Segment Load}
A virtual DOS machine (VDM) is loading, unloading, or moving an MS-DOS or Win16 program segment image.
An exception is raised so a debugger can load, unload or track symbols and breakpoints within these 16-bit segments.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RXACT_STATE_CREATED">
            <summary>
This informational level status indicates that a specified registry sub-tree transaction state did not yet exist and had to be created.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IMAGE_NOT_AT_BASE">
            <summary>
{Image Relocated}
An image file could not be mapped at the address specified in the image file. Local fixups must be performed on this image.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_THREAD_WAS_SUSPENDED">
            <summary>
{Thread Suspended}
A thread termination occurred while the thread was suspended. The thread was resumed, and termination proceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OBJECT_NAME_EXISTS">
            <summary>
{Object Exists}
An attempt was made to create an object and the object name already existed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DBG_COMMAND_EXCEPTION">
            <summary>
Debugger command communication exception.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DBG_CONTROL_BREAK">
            <summary>
Debugger received control break.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DBG_RIPEXCEPTION">
            <summary>
Debugger received RIP exception.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DBG_PRINTEXCEPTION_C">
            <summary>
Debugger printed exception on control C.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DBG_CONTROL_C">
            <summary>
Debugger got control C.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DBG_TERMINATE_PROCESS">
            <summary>
Debugger terminated process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DBG_TERMINATE_THREAD">
            <summary>
Debugger terminated thread.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE">
            <summary>
Debugger cannot provide handle.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DBG_REPLY_LATER">
            <summary>
Debugger will reply later.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DBG_EXCEPTION_NOT_HANDLED">
            <summary>
Debugger did not handle the exception.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DLL_MIGHT_BE_INCOMPATIBLE">
            <summary>
The application is loading executable code from the module %hs. This is secure, but may be incompatible with previous releases of the operating system. An alternative, %hs, is available. Should the application use the secure module %hs?
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DLL_MIGHT_BE_INSECURE">
            <summary>
The application is attempting to run executable code from the module %hs. This may be insecure. An alternative, %hs, is available. Should the application use the secure module %hs?
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REGISTRY_HIVE_RECOVERED">
            <summary>
{Registry Hive Recovered}
Registry hive (file):
%hs
was corrupted and it has been recovered. Some data might have been lost.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNWIND_CONSOLIDATE">
            <summary>
A frame consolidation has been executed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PLUGPLAY_QUERY_VETOED">
            <summary>
The Plug and Play query operation was not successful.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LONGJUMP">
            <summary>
A long jump has been executed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_STOPPED_ON_SYMLINK">
            <summary>
The create operation stopped after reaching a symbolic link
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GUID_SUBSTITUTION_MADE">
            <summary>
{GUID Substitution}
During the translation of a global identifier (GUID) to a Windows security ID (SID), no administratively-defined GUID prefix was found.
A substitute prefix was used, which will not compromise system security. However, this may provide a more restrictive access than intended.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MEDIA_CHECK">
            <summary>
{Media Changed}
The media may have changed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RXACT_COMMIT_NECESSARY">
            <summary>
This warning level status indicates that the transaction state already exists for the registry sub-tree, but that a transaction commit was previously aborted.
The commit has NOT been completed, but has not been rolled back either (so it may still be committed if desired).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EXTRANEOUS_INFORMATION">
            <summary>
{Too Much Information}
The specified access control list (ACL) contained more information than was expected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HANDLES_CLOSED">
            <summary>
{Handles Closed}
Handles to objects have been automatically closed as a result of the requested operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WAKE_SYSTEM_DEBUGGER">
            <summary>
{Kernel Debugger Awakened}
the system debugger was awakened by an interrupt.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PNP_INVALID_ID">
            <summary>
Driver %2 returned invalid ID for a child device (%3).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PNP_IRQ_TRANSLATION_FAILED">
            <summary>
A IRQ translator failed to translate resources.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PNP_TRANSLATION_FAILED">
            <summary>
A translator failed to translate resources.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PNP_BAD_MPS_TABLE">
            <summary>
A device is missing in the system BIOS MPS table. This device will not be used.
Please contact your system vendor for system BIOS update.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WOW_ASSERTION">
            <summary>
WOW Assertion Error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ACPI_ERROR">
            <summary>
An error occurred in the ACPI subsystem.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ASSERTION_FAILURE">
            <summary>
An assertion failure has occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FILE_SYSTEM_LIMITATION">
            <summary>
The requested operation could not be completed due to a file system limitation
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HIBERNATION_FAILURE">
            <summary>
The system has failed to hibernate (The error code is %hs). Hibernation will be disabled until the system is restarted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VOLSNAP_PREPARE_HIBERNATE">
            <summary>
{Volume Shadow Copy Service}
Please wait while the Volume Shadow Copy Service prepares volume %hs for hibernation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DRIVER_FAILED_PRIOR_UNLOAD">
            <summary>
The driver could not be loaded because a previous version of the driver is still in memory.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SYSTEM_HIVE_TOO_LARGE">
            <summary>
System hive size has exceeded its limit.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DRIVER_DATABASE_ERROR">
            <summary>
There was error [%2] processing the driver database.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MCA_OCCURED">
            <summary>
A Machine Check Error has occurred. Please check the system eventlog for additional information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_DEVICE_OBJECT_PARAMETER">
            <summary>
The device object parameter is either not a valid device object or is not attached to the volume specified by the file name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MOUNT_POINT_NOT_RESOLVED">
            <summary>
The create operation failed because the name contained at least one mount point which resolves to a volume to which the specified device object is not attached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEVICE_ENUMERATION_ERROR">
            <summary>
The "%hs" encountered an error while applying power or reading the device configuration.
This may be caused by a failure of your hardware or by a poor connection.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FAILED_DRIVER_ENTRY">
            <summary>
The driver was not loaded because it failed it's initialization call.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_SAFE_MODE_DRIVER">
            <summary>
The driver was not loaded because the system is booting into safe mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RANGE_NOT_FOUND">
            <summary>
The specified range could not be found in the range list.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DS_VERSION_CHECK_FAILURE">
            <summary>
This version of Windows is not compatible with the behavior version of directory forest, domain or domain controller.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PORT_NOT_SET">
            <summary>
An attempt to remove a processes DebugPort was made, but a port was not already associated with the process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SYSTEM_SHUTDOWN">
            <summary>
The system is in the process of shutting down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MULTIPLE_FAULT_VIOLATION">
            <summary>
 ERROR_MULTIPLE_FAULT_VIOLATION
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSUFFICIENT_POWER">
            <summary>
There is not enough power to complete the requested operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PNP_REBOOT_REQUIRED">
            <summary>
Device will not start without a reboot.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SYSTEM_IMAGE_BAD_SIGNATURE">
            <summary>
{Fatal System Error}
The system image %s is not properly signed.
The file has been replaced with the signed file.
The system has been shut down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PNP_RESTART_ENUMERATION">
            <summary>
A device was removed so enumeration must be restarted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_COMMITMENT_MINIMUM">
            <summary>
{Virtual Memory Minimum Too Low}
Your system is low on virtual memory. Windows is increasing the size of your virtual memory paging file.
During this process, memory requests for some applications may be denied. For more information, see Help.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CORRUPT_SYSTEM_FILE">
            <summary>
The system file %1 has become corrupt and has been replaced.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DRIVER_FAILED_SLEEP">
            <summary>
{System Standby Failed}
The driver %hs does not support standby mode. Updating this driver may allow the system to go to standby mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOINTERFACE">
            <summary>
The requested interface is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLOAT_MULTIPLE_TRAPS">
            <summary>
{EXCEPTION}
Multiple floating point traps.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLOAT_MULTIPLE_FAULTS">
            <summary>
{EXCEPTION}
Multiple floating point faults.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANT_ENABLE_DENY_ONLY">
            <summary>
A group marked use for deny only cannot be enabled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SERVER_SID_MISMATCH">
            <summary>
The server process is running under a SID different than that required by client.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RANGE_LIST_CONFLICT">
            <summary>
The range could not be added to the range list because of a conflict.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_MORE_MATCHES">
            <summary>
There are no more matches for the current index enumeration.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VALIDATE_CONTINUE">
            <summary>
The validation process needs to continue on to the next step.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DLL_INIT_FAILED_LOGOFF">
            <summary>
{DLL Initialization Failed}
The application failed to initialize because the window station is shutting down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ILLEGAL_DLL_RELOCATION">
            <summary>
{Illegal System DLL Relocation}
The system DLL %hs was relocated in memory. The application will not run properly.
The relocation occurred because the DLL %hs occupied an address range reserved for Windows system DLLs. The vendor supplying the DLL should be contacted for a new DLL.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EVALUATION_EXPIRATION">
            <summary>
{Windows Evaluation Notification}
The evaluation period for this installation of Windows has expired. This system will shutdown in 1 hour. To restore access to this installation of Windows, please upgrade this installation using a licensed distribution of this product.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_QUOTA_LIST_INCONSISTENT">
            <summary>
The specified quota list is internally inconsistent with its descriptor.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_PLUGPLAY_DEVICE_PATH">
            <summary>
The specified Plug and Play registry device path is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_HW_PROFILE">
            <summary>
The specified hardware profile configuration is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNSUPPORTED_COMPRESSION">
            <summary>
The specified compression format is unsupported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PWD_HISTORY_CONFLICT">
            <summary>
You have attempted to change your password to one that you have used in the past.
The policy of your user account does not allow this. Please select a password that you have not previously used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PWD_TOO_RECENT">
            <summary>
The policy of your user account does not allow you to change passwords too frequently.
This is done to prevent users from changing back to a familiar, but potentially discovered, password.
If you feel your password has been compromised then please contact your administrator immediately to have a new one assigned.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PWD_TOO_SHORT">
            <summary>
The password provided is too short to meet the policy of your user account.
Please choose a longer password.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_CALLBACK_ACTIVE">
            <summary>
A callback return system service cannot be executed when no callback is active.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REGISTRY_QUOTA_LIMIT">
            <summary>
{Low On Registry Space}
The system has reached the maximum size allowed for the system part of the registry. Additional storage requests will be ignored.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IP_ADDRESS_CONFLICT2">
            <summary>
There is an IP address conflict with another system on the network
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IP_ADDRESS_CONFLICT1">
            <summary>
There is an IP address conflict with another system on the network
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_SERVICE_ENTRYPOINT">
            <summary>
{Invalid Service Callback Entrypoint}
The %hs service is not written correctly. The stack pointer has been left in an inconsistent state.
The callback entrypoint should be declared as WINAPI or STDCALL. Selecting OK will cause the service to continue operation. However, the service process may operate incorrectly.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_DLL_ENTRYPOINT">
            <summary>
{Invalid DLL Entrypoint}
The dynamic link library %hs is not written correctly. The stack pointer has been left in an inconsistent state.
The entrypoint should be declared as WINAPI or STDCALL. Select YES to fail the DLL load. Select NO to continue execution. Selecting NO may cause the application to operate incorrectly.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSUFFICIENT_LOGON_INFO">
            <summary>
There is insufficient account information to log you on.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TIMER_RESOLUTION_NOT_SET">
            <summary>
The timer resolution was not previously set by the current process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_AUDIT_FAILED">
            <summary>
{Audit Failed}
An attempt to generate a security audit failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_COMPRESSION_BUFFER">
            <summary>
The specified buffer contains ill-formed data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_VARIANT">
            <summary>
The supplied variant structure contains invalid data.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MARSHALL_OVERFLOW">
            <summary>
The user/kernel marshalling buffer has overflowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALLOCATE_BUCKET">
            <summary>
The bucket array must be grown. Retry transaction after doing so.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FOUND_OUT_OF_SCOPE">
            <summary>
The attempt to find the object found an object matching by ID on the volume but it is out of the scope of the handle used for the operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CONVERT_TO_LARGE">
            <summary>
Internal OFS status codes indicating how an allocation operation is handled. Either it is retried after the containing onode is moved or the extent stream is converted to a large stream.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_STACK_OVERFLOW_READ">
            <summary>
The request must be handled by the stack overflow code.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_TINY_STREAM">
            <summary>
The stream is not a tiny stream.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CLIENT_SERVER_PARAMETERS_INVALID">
            <summary>
The parameter(s) passed to the server in the client/server shared memory window were invalid. Too much data may have been put in the shared memory window.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOST_WRITEBEHIND_DATA">
            <summary>
{Delayed Write Failed}
Windows was unable to save all the data for the file %hs. The data has been lost.
This error may be caused by a failure of your computer hardware or network connection. Please try to save this file elsewhere.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REPLY_MESSAGE_MISMATCH">
            <summary>
{Reply Message Mismatch}
An attempt was made to reply to an LPC message, but the thread specified by the client ID in the message was not waiting on that message.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DRIVER_CANCEL_TIMEOUT">
            <summary>
{Cancel Timeout}
The driver %hs failed to complete a cancelled I/O request in the allotted time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VDM_HARD_ERROR">
            <summary>
NTVDM encountered a hard error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DATA_NOT_ACCEPTED">
            <summary>
{Data Not Accepted}
The TDI client could not handle the data received during an indication.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SYSTEM_PROCESS_TERMINATED">
            <summary>
{Fatal System Error}
The %hs system process terminated unexpectedly with a status of 0x%08x (0x%08x 0x%08x).
The system has been shut down.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEBUG_ATTACH_FAILED">
            <summary>
{Unexpected Failure in DebugActiveProcess}
An unexpected failure occurred while processing a DebugActiveProcess API request. You may choose OK to terminate the process, or Cancel to ignore the error.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANNOT_LOAD_REGISTRY_FILE">
            <summary>
{Registry File Failure}
The registry cannot load the hive (file):
%hs
or its log or alternate.
It is corrupt, absent, or not writable.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FS_DRIVER_REQUIRED">
            <summary>
A volume has been accessed for which a file system driver is required that has not yet been loaded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MUTANT_LIMIT_EXCEEDED">
            <summary>
An attempt was made to acquire a mutant such that its maximum count would have been exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BACKUP_CONTROLLER">
            <summary>
This operation is only allowed for the Primary Domain Controller of the domain.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT">
            <summary>
The system BIOS failed to connect a system interrupt to the device or bus for which the device is connected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FLOPPY_VOLUME">
            <summary>
The paging file cannot be created on a floppy diskette.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNDEFINED_CHARACTER">
            <summary>
The Unicode character is not defined in the Unicode character set installed on the system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ILLEGAL_CHARACTER">
            <summary>
An illegal character was encountered. For a multi-byte character set this includes a lead byte without a succeeding trail byte. For the Unicode character set this includes the characters 0xFFFF and 0xFFFE.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DOMAIN_CTRLR_CONFIG_ERROR">
            <summary>
A Windows Server has an incorrect configuration.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_EVENT_PAIR">
            <summary>
An event pair synchronization operation was performed using the thread specific client/server event pair object, but no event pair object was associated with the thread.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ILLEGAL_FLOAT_CONTEXT">
            <summary>
{EXCEPTION}
A real-mode application issued a floating-point instruction and floating-point hardware is not present.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_PAGEFILE">
            <summary>
{No Paging File Specified}
No paging file was specified in the system configuration.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_IMAGE_HASH">
            <summary>
Windows cannot verify the digital signature for this file. A recent hardware or software change might have installed a file that is signed incorrectly or damaged, or that might be malicious software from an unknown source.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PAGEFILE_CREATE_FAILED">
            <summary>
{Unable to Create Paging File}
The creation of the paging file %hs failed (%lx). The requested size was %ld.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_APP_INIT_FAILURE">
            <summary>
{Application Error}
The application failed to initialize properly (0x%lx). Click OK to terminate the application.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNHANDLED_EXCEPTION">
            <summary>
{Application Error}
The exception %s (0x%08lx) occurred in the application at location 0x%08lx.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MISSING_SYSTEMFILE">
            <summary>
{Missing System File}
The required system file %hs is bad or missing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CONTROL_C_EXIT">
            <summary>
{Application Exit by CTRL+C}
The application terminated as a result of a CTRL+C.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IO_PRIVILEGE_FAILED">
            <summary>
{Privilege Failed}
The I/O permissions for the process could not be changed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NET_OPEN_FAILED">
            <summary>
The NtCreateFile API failed. This error should never be returned to an application, it is a place holder for the Windows Lan Manager Redirector to use in its internal error mapping routines.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SYNCHRONIZATION_REQUIRED">
            <summary>
The SAM database on a Windows Server is significantly out of synchronization with the copy on the Domain Controller. A complete synchronization is required.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOGON_SERVER_CONFLICT">
            <summary>
The Netlogon service cannot start because another Netlogon service running in the domain conflicts with the specified role.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PAGEFILE_QUOTA_EXCEEDED">
            <summary>
Page file quota was exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_THREAD_NOT_IN_PROCESS">
            <summary>
An attempt was made to operate on a thread within a specific process, but the thread specified is not in the process specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_THREADS">
            <summary>
Indicates a process has too many threads to perform the requested action. For example, assignment of a primary token may only be performed when a process has zero or one threads.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_LDT_DESCRIPTOR">
            <summary>
Indicates that the user supplied an invalid descriptor when trying to set up Ldt descriptors.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_LDT_OFFSET">
            <summary>
Indicates that the starting value for the LDT information was not an integral multiple of the selector size.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_LDT_SIZE">
            <summary>
Indicates that an attempt was made to grow an LDT by setting its size, or that the size was not an even number of selectors.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_GUID_TRANSLATION">
            <summary>
Indicates that an attempt was made to assign protection to a file system file or directory and one of the SIDs in the security descriptor could not be translated into a GUID that could be stored by the file system.
This causes the protection attempt to fail, which may cause a file creation attempt to fail.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_FUNCTION_TABLE">
            <summary>
A malformed function table was encountered during an unwind operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNEXPECTED_MM_EXTEND_ERR">
            <summary>
If an MM error is returned which is not defined in the standard FsRtl filter, it is converted to one of the following errors which is guaranteed to be in the filter.
In this case information is lost, however, the filter correctly handles the exception.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNEXPECTED_MM_MAP_ERROR">
            <summary>
If an MM error is returned which is not defined in the standard FsRtl filter, it is converted to one of the following errors which is guaranteed to be in the filter.
In this case information is lost, however, the filter correctly handles the exception.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNEXPECTED_MM_CREATE_ERR">
            <summary>
If an MM error is returned which is not defined in the standard FsRtl filter, it is converted to one of the following errors which is guaranteed to be in the filter.
In this case information is lost, however, the filter correctly handles the exception.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANT_TERMINATE_SELF">
            <summary>
Indicates that a thread attempted to terminate itself by default (called NtTerminateThread with NULL) and it was the last thread in the current process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANT_WAIT">
            <summary>
Used to indicate that an operation cannot continue without blocking for I/O.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PROFILING_AT_LIMIT">
            <summary>
The number of active profiling objects is at the maximum and no more may be started.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_COULD_NOT_INTERPRET">
            <summary>
The passed ACL did not contain the minimum required information.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PROFILING_NOT_STOPPED">
            <summary>
Profiling not stopped.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PROFILING_NOT_STARTED">
            <summary>
Profiling not started.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSTRUCTION_MISALIGNMENT">
            <summary>
An attempt was made to execute an instruction at an unaligned address and the host system does not support unaligned instruction references.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEVICE_ALREADY_ATTACHED">
            <summary>
An attempt was made to attach to a device that was already attached to another device.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_QUOTA_LOWER">
            <summary>
An attempt was made to lower a quota limit below the current usage.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PORT_MESSAGE_TOO_LONG">
            <summary>
Length of message passed to NtRequestPort or NtRequestWaitReplyPort was longer than the maximum message allowed by the port.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_PORT_ATTRIBUTES">
            <summary>
Invalid Object Attributes specified to NtCreatePort or invalid Port Attributes specified to NtConnectPort
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_UNWIND_TARGET">
            <summary>
An invalid unwind target was encountered during an unwind operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_STACK">
            <summary>
An invalid or unaligned stack was encountered during an unwind operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNWIND">
            <summary>
Unwind exception code.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TIMER_NOT_CANCELED">
            <summary>
An attempt was made to cancel or set a timer that has an associated APC and the subject thread is not the thread that originally set the timer with an associated APC routine.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WX86_ERROR">
            <summary>
An error occurred in the WX86 subsystem.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WX86_WARNING">
            <summary>
A warning occurred in the WX86 subsystem.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ABIOS_ERROR">
            <summary>
An error occurred in the ABIOS subsystem.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VERIFIER_STOP">
            <summary>
Application verifier has found an error in the current process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PIPE_LISTENING">
            <summary>
Waiting for a process to open the other end of the pipe.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PIPE_CONNECTED">
            <summary>
There is a process on other end of the pipe.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ARITHMETIC_OVERFLOW">
            <summary>
Arithmetic result exceeded 32 bits.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_USER_PROFILE_LOAD">
            <summary>
User profile cannot be loaded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_ADDRESS">
            <summary>
Attempt to access invalid address.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PROCESS_MODE_NOT_BACKGROUND">
            <summary>
The process is not in background processing mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PROCESS_MODE_ALREADY_BACKGROUND">
            <summary>
The process is already in background processing mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_THREAD_MODE_NOT_BACKGROUND">
            <summary>
The thread is not in background processing mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_THREAD_MODE_ALREADY_BACKGROUND">
            <summary>
The thread is already in background processing mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MAX_SESSIONS_REACHED">
            <summary>
The maximum number of sessions has been reached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FAIL_RESTART">
            <summary>
The restart operation failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FAIL_SHUTDOWN">
            <summary>
The shutdown operation failed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FAIL_NOACTION_REBOOT">
            <summary>
No action was taken as a system reboot is required.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SCOPE_NOT_FOUND">
            <summary>
The scope specified was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MR_MID_NOT_FOUND">
            <summary>
The system cannot find message text for message number 0x%1 in the message file for %2.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DELETE_PENDING">
            <summary>
The file cannot be opened because it is in the process of being deleted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DISK_TOO_FRAGMENTED">
            <summary>
The volume is too fragmented to complete this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_OPLOCK_PROTOCOL">
            <summary>
An invalid oplock acknowledgment was received by the system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OPLOCK_NOT_GRANTED">
            <summary>
The oplock request is denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PARTIAL_COPY">
            <summary>
Only part of a ReadProcessMemory or WriteProcessMemory request was completed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_POSTS">
            <summary>
Too many posts were made to a semaphore.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_OWNER">
            <summary>
Attempt to release mutex not owned by caller.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EAS_NOT_SUPPORTED">
            <summary>
The mounted file system does not support extended attributes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_EA_HANDLE">
            <summary>
The specified extended attribute handle is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EA_TABLE_FULL">
            <summary>
The extended attribute table file is full.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EA_FILE_CORRUPT">
            <summary>
The extended attribute file on the mounted file system is corrupt.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EAS_DIDNT_FIT">
            <summary>
The extended attributes did not fit in the buffer.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DIRECTORY">
            <summary>
The directory name is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANNOT_COPY">
            <summary>
The copy functions cannot be used.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_MORE_ITEMS">
            <summary>
No more data is available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.WAIT_TIMEOUT">
            <summary>
The wait operation timed out.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EA_LIST_INCONSISTENT">
            <summary>
The extended attributes are inconsistent.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_EA_NAME">
            <summary>
The specified extended attribute name was invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VC_DISCONNECTED">
            <summary>
The session was canceled.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MORE_DATA">
            <summary>
More data is available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PIPE_NOT_CONNECTED">
            <summary>
No process is on the other end of the pipe.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_DATA">
            <summary>
The pipe is being closed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PIPE_BUSY">
            <summary>
All pipe instances are busy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_PIPE">
            <summary>
The pipe state is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PIPE_LOCAL">
            <summary>
The pipe is local.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VIRUS_DELETED">
            <summary>
This file contains a virus and cannot be opened. Due to the nature of this virus, the file has been removed from this location.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_VIRUS_INFECTED">
            <summary>
Operation did not complete successfully because the file contains a virus.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FORMS_AUTH_REQUIRED">
            <summary>
Access Denied. Before opening files in this location, you must first add the web site to your trusted sites list, browse to the web site, and select the option to login automatically.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FILE_TOO_LARGE">
            <summary>
The file size exceeds the limit allowed and cannot be saved.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_FILE_TYPE">
            <summary>
The file type being saved or retrieved has been blocked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CHECKOUT_REQUIRED">
            <summary>
The file must be checked out before saving changes.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FILE_CHECKED_OUT">
            <summary>
This file is checked out or locked for editing by another user.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY">
            <summary>
The image file %1 is strong signed, unable to modify.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY">
            <summary>
The image file %1 is signed, unable to modify.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EXE_MACHINE_TYPE_MISMATCH">
            <summary>
This version of %1 is not compatible with the version of Windows you're running. Check your computer's system information to see whether you need a x86 (32-bit) or x64 (64-bit) version of the program, and then contact the software publisher.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NESTING_NOT_ALLOWED">
            <summary>
Cannot nest calls to LoadModule.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_MODULES">
            <summary>
Too many dynamic-link modules are attached to this program or dynamic-link module.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOCKED">
            <summary>
The segment is locked and cannot be reallocated.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_THREAD_1_INACTIVE">
            <summary>
The signal handler cannot be set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SIGNAL_NUMBER">
            <summary>
The signal being posted is not correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_META_EXPANSION_TOO_LONG">
            <summary>
The global filename characters, * or ?, are entered incorrectly or too many global filename characters are specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RING2_STACK_IN_USE">
            <summary>
The ring 2 stack is in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FILENAME_EXCED_RANGE">
            <summary>
The filename or extension is too long.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SIGNAL_SENT">
            <summary>
No process in the command subtree has a signal handler.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ENVVAR_NOT_FOUND">
            <summary>
The system could not find the environment option that was entered.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INFLOOP_IN_RELOC_CHAIN">
            <summary>
The operating system cannot run %1.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RELOC_CHAIN_XEEDS_SEGLIM">
            <summary>
The operating system cannot run %1.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_RING2SEG_MUST_BE_MOVABLE">
            <summary>
The code segment cannot be greater than or equal to 64K.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_AUTODATASEG_EXCEEDS_64k">
            <summary>
The operating system cannot run this application program.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SEGDPL">
            <summary>
The operating system cannot run %1.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IOPL_NOT_ENABLED">
            <summary>
The operating system is not presently configured to run this application.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DYNLINK_FROM_INVALID_RING">
            <summary>
The operating system cannot run this application program.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_MINALLOCSIZE">
            <summary>
The operating system cannot run %1.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ITERATED_DATA_EXCEEDS_64k">
            <summary>
The operating system cannot run %1.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_EXE_FORMAT">
            <summary>
%1 is not a valid Win32 application.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EXE_MARKED_INVALID">
            <summary>
The operating system cannot run %1.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_EXE_SIGNATURE">
            <summary>
Cannot run %1 in Win32 mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_MODULETYPE">
            <summary>
The operating system cannot run %1.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_STACKSEG">
            <summary>
The operating system cannot run %1.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_STARTING_CODESEG">
            <summary>
The operating system cannot run %1.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SEM_NOT_FOUND">
            <summary>
The specified system semaphore name was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_FLAG_NUMBER">
            <summary>
The flag passed is not correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALREADY_EXISTS">
            <summary>
Cannot create a file when that file already exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_ORDINAL">
            <summary>
The operating system cannot run %1.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_SEGMENT_NUMBER">
            <summary>
The system detected a segment number that was not correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ATOMIC_LOCKS_NOT_SUPPORTED">
            <summary>
The file system does not support atomic changes to the lock type.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANCEL_VIOLATION">
            <summary>
A lock request was not outstanding for the supplied cancel region.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BUSY">
            <summary>
The requested resource is in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOCK_FAILED">
            <summary>
Unable to lock a region of a file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MAX_THRDS_REACHED">
            <summary>
No more threads can be created in the system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SIGNAL_PENDING">
            <summary>
A signal is already pending.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_PATHNAME">
            <summary>
The specified path is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_ARGUMENTS">
            <summary>
One or more arguments are not correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_THREADID_ADDR">
            <summary>
The address for the thread ID is not correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_LOCKED">
            <summary>
The segment is already unlocked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DISCARDED">
            <summary>
The segment is already discarded and cannot be locked.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SIGNAL_REFUSED">
            <summary>
The recipient process has refused the signal.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_TCBS">
            <summary>
Cannot create another thread.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LABEL_TOO_LONG">
            <summary>
The volume label you entered exceeds the label character limit of the target file system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_LIST_FORMAT">
            <summary>
The DosMuxSemWait list is not correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_MUXWAITERS">
            <summary>
DosMuxSemWait did not execute; too many semaphores are already set.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_EVENT_COUNT">
            <summary>
The number of specified semaphore events for DosMuxSemWait is not correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SYSTEM_TRACE">
            <summary>
System trace information was not specified in your CONFIG.SYS file, or tracing is disallowed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IS_SUBST_TARGET">
            <summary>
An attempt was made to join or substitute a drive for which a directory on the drive is the target of a previous substitute.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PATH_BUSY">
            <summary>
The path specified cannot be used at this time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IS_JOIN_PATH">
            <summary>
Not enough resources are available to process this command.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IS_SUBST_PATH">
            <summary>
The path specified is being used in a substitute.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DIR_NOT_EMPTY">
            <summary>
The directory is not empty.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DIR_NOT_ROOT">
            <summary>
The directory is not a subdirectory of the root directory.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SAME_DRIVE">
            <summary>
The system cannot join or substitute a drive to or for a directory on the same drive.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BUSY_DRIVE">
            <summary>
The system cannot perform a JOIN or SUBST at this time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SUBST_TO_JOIN">
            <summary>
The system tried to SUBST a drive to a directory on a joined drive.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_JOIN_TO_SUBST">
            <summary>
The system tried to join a drive to a directory on a substituted drive.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SUBST_TO_SUBST">
            <summary>
The system tried to substitute a drive to a directory on a substituted drive.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_JOIN_TO_JOIN">
            <summary>
The system tried to join a drive to a directory on a joined drive.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_SUBSTED">
            <summary>
The system tried to delete the substitution of a drive that is not substituted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_JOINED">
            <summary>
The system tried to delete the JOIN of a drive that is not joined.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IS_SUBSTED">
            <summary>
An attempt was made to use a JOIN or SUBST command on a drive that has already been substituted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IS_JOINED">
            <summary>
An attempt was made to use a JOIN or SUBST command on a drive that has already been joined.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_IS_JOIN_TARGET">
            <summary>
A JOIN or SUBST command cannot be used for a drive that contains previously joined drives.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SEEK_ON_DEVICE">
            <summary>
The file pointer cannot be set on the specified device or file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NEGATIVE_SEEK">
            <summary>
An attempt was made to move the file pointer before the beginning of the file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DIRECT_ACCESS_HANDLE">
            <summary>
Attempt to use a file handle to an open disk partition for an operation other than raw disk I/O.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CHILD_NOT_COMPLETE">
            <summary>
The %1 application cannot be run in Win32 mode.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WAIT_NO_CHILDREN">
            <summary>
There are no child processes to wait for.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PROC_NOT_FOUND">
            <summary>
The specified procedure could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_MOD_NOT_FOUND">
            <summary>
The specified module could not be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_VOLUME_LABEL">
            <summary>
The disk has no volume label.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_LEVEL">
            <summary>
The system call level is not correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_NAME">
            <summary>
The filename, directory name, or volume label syntax is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INSUFFICIENT_BUFFER">
            <summary>
The data area passed to a system call is too small.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SEM_TIMEOUT">
            <summary>
The semaphore timeout period has expired.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CALL_NOT_IMPLEMENTED">
            <summary>
This function is not supported on this system.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_DRIVER_LEVEL">
            <summary>
The system does not support the command requested.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_VERIFY_SWITCH">
            <summary>
The verify-on-write switch parameter value is not correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_CATEGORY">
            <summary>
The IOCTL call made by the application program is not correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_TARGET_HANDLE">
            <summary>
The target internal file identifier is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_MORE_SEARCH_HANDLES">
            <summary>
No more internal file identifiers available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DISK_FULL">
            <summary>
There is not enough space on the disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BUFFER_OVERFLOW">
            <summary>
The file name is too long.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OPEN_FAILED">
            <summary>
The system cannot open the device or file specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BROKEN_PIPE">
            <summary>
The pipe has been ended.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DRIVE_LOCKED">
            <summary>
The disk is in use or locked by another process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DISK_CHANGE">
            <summary>
The program stopped because an alternate diskette was not inserted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SEM_USER_LIMIT">
            <summary>
Insert the diskette for drive %1.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SEM_OWNER_DIED">
            <summary>
The previous ownership of this semaphore has ended.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_AT_INTERRUPT_TIME">
            <summary>
Cannot request exclusive semaphores at interrupt time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_SEM_REQUESTS">
            <summary>
The semaphore cannot be set again.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SEM_IS_SET">
            <summary>
The semaphore is set and cannot be closed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_EXCL_SEM_ALREADY_OWNED">
            <summary>
The exclusive semaphore is owned by another process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_SEMAPHORES">
            <summary>
Cannot create another system semaphore.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_PROC_SLOTS">
            <summary>
The system cannot start another process at this time.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NET_WRITE_FAULT">
            <summary>
A write fault occurred on the network.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_PARAMETER">
            <summary>
The parameter is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_PASSWORD">
            <summary>
The specified network password is not correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ALREADY_ASSIGNED">
            <summary>
The local device name is already in use.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OUT_OF_STRUCTURES">
            <summary>
Storage to process this request is not available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FAIL_I24">
            <summary>
Fail on INT 24.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CANNOT_MAKE">
            <summary>
The directory or file cannot be created.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FILE_EXISTS">
            <summary>
The file exists.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REDIR_PAUSED">
            <summary>
The specified printer or disk device has been paused.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REQ_NOT_ACCEP">
            <summary>
No more connections can be made to this remote computer at this time because there are already as many connections as the computer can accept.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SHARING_PAUSED">
            <summary>
The remote server has been paused or is in the process of being started.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_SESS">
            <summary>
The network BIOS session limit was exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_NAMES">
            <summary>
The name limit for the local computer network adapter card was exceeded.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_NET_NAME">
            <summary>
The network name cannot be found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_DEV_TYPE">
            <summary>
The network resource type is not correct.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NETWORK_ACCESS_DENIED">
            <summary>
Network access is denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NETNAME_DELETED">
            <summary>
The specified network name is no longer available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINT_CANCELLED">
            <summary>
Your file waiting to be printed was deleted.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_SPOOL_SPACE">
            <summary>
Space to store the file waiting to be printed is not available on the server.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PRINTQ_FULL">
            <summary>
The printer queue is full.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_REM_ADAP">
            <summary>
The remote adapter is not compatible.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_UNEXP_NET_ERR">
            <summary>
An unexpected network error occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_NET_RESP">
            <summary>
The specified server cannot perform the requested operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ADAP_HDW_ERR">
            <summary>
A network adapter hardware error occurred.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_CMDS">
            <summary>
The network BIOS command limit has been reached.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DEV_NOT_EXIST">
            <summary>
The specified network resource or device is no longer available.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NETWORK_BUSY">
            <summary>
The network is busy.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_NETPATH">
            <summary>
The network path was not found.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_DUP_NAME">
            <summary>
You were not connected because a duplicate name exists on the network. If joining a domain, go to System in Control Panel to change the computer name and try again. If joining a workgroup, choose another workgroup name.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_REM_NOT_LIST">
            <summary>
Windows cannot find the network path. Verify that the network path is correct and the destination computer is not busy or turned off. If Windows still cannot find the network path, contact your network administrator.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_SUPPORTED">
            <summary>
The request is not supported.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HANDLE_DISK_FULL">
            <summary>
The disk is full.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_HANDLE_EOF">
            <summary>
Reached the end of the file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SHARING_BUFFER_EXCEEDED">
            <summary>
Too many files opened for sharing.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WRONG_DISK">
            <summary>
The wrong diskette is in the drive.
Insert %2 (Volume Serial Number: %3) into drive %1.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_LOCK_VIOLATION">
            <summary>
The process cannot access the file because another process has locked a portion of the file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SHARING_VIOLATION">
            <summary>
The process cannot access the file because it is being used by another process.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_GEN_FAILURE">
            <summary>
A device attached to the system is not functioning.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_READ_FAULT">
            <summary>
The system cannot read from the specified device.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WRITE_FAULT">
            <summary>
The system cannot write to the specified device.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OUT_OF_PAPER">
            <summary>
The printer is out of paper.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SECTOR_NOT_FOUND">
            <summary>
The drive cannot find the sector requested.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_DOS_DISK">
            <summary>
The specified disk or diskette cannot be accessed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SEEK">
            <summary>
The drive cannot locate a specific area or track on the disk.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_LENGTH">
            <summary>
The program issued a command but the command length is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CRC">
            <summary>
Data error (cyclic redundancy check).
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_COMMAND">
            <summary>
The device does not recognize the command.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_READY">
            <summary>
The device is not ready.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_UNIT">
            <summary>
The system cannot find the device specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_WRITE_PROTECT">
            <summary>
The media is write protected.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NO_MORE_FILES">
            <summary>
There are no more files.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_SAME_DEVICE">
            <summary>
The system cannot move the file to a different disk drive.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_CURRENT_DIRECTORY">
            <summary>
The directory cannot be removed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_DRIVE">
            <summary>
The system cannot find the drive specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_OUTOFMEMORY">
            <summary>
Not enough storage is available to complete this operation.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_DATA">
            <summary>
The data is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_ACCESS">
            <summary>
The access code is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_FORMAT">
            <summary>
An attempt was made to load a program with an incorrect format.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_BAD_ENVIRONMENT">
            <summary>
The environment is incorrect.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_BLOCK">
            <summary>
The storage control block address is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_NOT_ENOUGH_MEMORY">
            <summary>
Not enough storage is available to process this command.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ARENA_TRASHED">
            <summary>
The storage control blocks were destroyed.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_HANDLE">
            <summary>
The handle is invalid.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_ACCESS_DENIED">
            <summary>
Access is denied.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_TOO_MANY_OPEN_FILES">
            <summary>
The system cannot open the file.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_PATH_NOT_FOUND">
            <summary>
The system cannot find the path specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_FILE_NOT_FOUND">
            <summary>
The system cannot find the file specified.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_INVALID_FUNCTION">
            <summary>
Incorrect function.
</summary>
        </member>
        <member name="F:SharpSvn.SvnWindowsErrorCode.ERROR_SUCCESS">
            <summary>
The operation completed successfully.
</summary>
        </member>
        <member name="T:SharpSvn.SvnErrorCategory">
            <summary>Gets the error category of the SvnException</summary>
        </member>
        <member name="T:SharpSvn.SvnErrorCode">
 @copyright
 ====================================================================
 Copyright (c) 2000-2009 CollabNet.  All rights reserved.

 This software is licensed as described in the file COPYING, which
 you should have received as part of this distribution.  The terms
 are also available at http://subversion.tigris.org/license-1.html.
 If newer versions of this license are posted there, you may use a
 newer version instead, at your option.

 This software consists of voluntary contributions made by many
 individuals.  For exact contribution history, see the revision
 history and logs, available at http://subversion.tigris.org/.
 ====================================================================
 @endcopyright

 @file svn_error_codes.h
 @brief Subversion error codes.

Collection of Subversion error code values, located within the
 * APR user error space. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_SQLITE_UNSUPPORTED_SCHEMA">
@since New in 1.6. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_SQLITE_READONLY">
@since New in 1.6. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_SQLITE_ERROR">
@since New in 1.6. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_ATOMIC_INIT_FAILURE">
@since New in 1.6. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_NO_APR_MEMCACHE">
@since New in 1.6. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_TEST_SKIPPED">
@since New in 1.6. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_UNKNOWN_CAPABILITY">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_RESERVED_FILENAME_SPECIFIED">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_UNKNOWN_CHANGELIST">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_ITER_BREAK">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_REVNUM_PARSE_FAILURE">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_CEASE_INVOCATION">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_MERGEINFO_PARSE_ERROR">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_VERSION_MISMATCH">
@since New in 1.1. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_CLIENT_FILE_EXTERNAL_OVERWRITE_VERSIONED">
@since New in 1.6. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_CLIENT_NOT_READY_TO_MERGE">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_CLIENT_NO_VERSIONED_PARENT">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_CLIENT_MULTIPLE_SOURCES_DISALLOWED">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_CLIENT_MISSING_LOCK_TOKEN">
@since New in 1.2. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_CLIENT_UNRELATED_RESOURCES">
@since New in 1.1. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_AUTHZ_UNWRITABLE">
@since New in 1.3 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_AUTHZ_PARTIALLY_READABLE">
@since New in 1.1. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_AUTHZ_UNREADABLE">
@since New in 1.1. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_AUTHN_FAILED">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_RA_SERF_SSL_CERT_UNTRUSTED">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_RA_SERF_SSPI_INITIALISATION_FAILED">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_RA_SVN_NO_MECHANISMS">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_RA_DAV_FORBIDDEN">
@since New in 1.6 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_RA_DAV_RELOCATED">
@since New in 1.5 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_RA_DAV_RESPONSE_HEADER_BADNESS">
@since New in 1.3 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_RA_DAV_MALFORMED_DATA">
@since New in 1.2. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_RA_DAV_PATH_NOT_FOUND">
@deprecated To improve consistency between ra layers, this error code
      is replaced in ra_{neon|serf} by SVN_ERR_FS_NOT_FOUND.
      Slated for removal in the next major release. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_RA_DAV_INVALID_CONFIG_VALUE">
@deprecated To improve consistency between ra layers, this error code
      is replaced by SVN_ERR_BAD_CONFIG_VALUE.
      Slated for removal in the next major release. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_RA_REPOS_ROOT_URL_MISMATCH">
@since New in 1.6. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_RA_UUID_MISMATCH">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_RA_PARTIAL_REPLAY_NOT_SUPPORTED">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_RA_NOT_LOCKED">
@since New in 1.2. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_REPOS_UNSUPPORTED_UPGRADE">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_REPOS_POST_UNLOCK_HOOK_FAILED">
@since New in 1.2. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_REPOS_POST_LOCK_HOOK_FAILED">
@since New in 1.2. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_NO_SUCH_CHECKSUM_REP">
@since New in 1.6. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_UNSUPPORTED_UPGRADE">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_NO_SUCH_NODE_ORIGIN">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_TXN_NAME_TOO_LONG">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_REP_BEING_WRITTEN">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_UNSUPPORTED_FORMAT">
@since New in 1.2.
   *
   * This is analogous to SVN_ERR_REPOS_UNSUPPORTED_VERSION.  To avoid
   * confusion with "versions" (i.e., releases) of Subversion, we've
   * started calling this the "format" number instead.  The old
   * SVN_ERR_REPOS_UNSUPPORTED_VERSION error predates this and so
   * retains its name.

</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_OUT_OF_DATE">
@since New in 1.2. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_LOCK_EXPIRED">
@since New in 1.2. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_NO_SUCH_LOCK">
@since New in 1.2. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_LOCK_OWNER_MISMATCH">
@since New in 1.2. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_NO_LOCK_TOKEN">
@since New in 1.2. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_BAD_LOCK_TOKEN">
@since New in 1.2. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_PATH_NOT_LOCKED">
@since New in 1.2. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_PATH_ALREADY_LOCKED">
@since New in 1.2. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_NO_USER">
@since New in 1.2. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_FS_UNKNOWN_FS_TYPE">
@since New in 1.1. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_WC_CANNOT_MOVE_FILE_EXTERNAL">
@since New in 1.6. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_WC_CANNOT_DELETE_FILE_EXTERNAL">
@since New in 1.6. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_WC_CHANGELIST_MOVE">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_WC_CONFLICT_RESOLVER_FAILURE">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_WC_MISMATCHED_CHANGELIST">
@since New in 1.5. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_WC_INVALID_SWITCH">
@since New in 1.3. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_WC_INVALID_RELOCATION">
@since New in 1.3. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_WC_INVALID_SCHEDULE">
@since New in 1.2. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_WC_INVALID_LOCK">
@deprecated Unused, slated for removal in the next major release. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_WC_UNWIND_NOT_EMPTY">
@deprecated Unused, slated for removal in the next major release. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_WC_UNWIND_EMPTY">
@deprecated Unused, slated for removal in the next major release. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_WC_UNWIND_MISMATCH">
@deprecated Unused, slated for removal in the next major release. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_IO_PIPE_READ_ERROR">
@deprecated Unused, slated for removal in the next major release. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_IO_PIPE_FRAME_ERROR">
@deprecated Unused, slated for removal in the next major release. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_IO_CORRUPT_EOL">
@deprecated Unused, slated for removal in the next major release. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_BAD_CONFIG_VALUE">
@since New in 1.6. 
</member>
        <member name="F:SharpSvn.SvnErrorCode.SVN_ERR_BAD_PROPERTY_VALUE">
@since New in 1.5.
   *
   * Note that there was an unused slot sitting here at
   * SVN_ERR_BAD_CATEGORY_START + 5, so error codes after this aren't
   * necessarily "New in 1.5" just because they come later.

</member>
        <member name="F:SharpSvn.SvnIgnoreSpacing.IgnoreAll">
            <summary>Ignore all whitespace characters</summary>
        </member>
        <member name="F:SharpSvn.SvnIgnoreSpacing.IgnoreSpace">
            <summary>Ignore changes in sequences of whitespace characters, treating each
sequence of whitespace characters as a single space</summary>
        </member>
        <member name="F:SharpSvn.SvnIgnoreSpacing.None">
            <summary>Ignore no whitespace</summary>
        </member>
        <member name="F:SharpSvn.SvnConflictAction.Delete">
            <summary>Attempting to delete object</summary>
        </member>
        <member name="F:SharpSvn.SvnConflictAction.Add">
            <summary>Attempting to add object</summary>
        </member>
        <member name="F:SharpSvn.SvnConflictAction.Edit">
            <summary>Attempting to change text or props</summary>
        </member>
        <member name="F:SharpSvn.SvnConflictReason.NotVersioned">
            <summary>object is unversioned</summary>
        </member>
        <member name="F:SharpSvn.SvnConflictReason.Missing">
            <summary>object is unknown or missing</summary>
        </member>
        <member name="F:SharpSvn.SvnConflictReason.Added">
            <summary>object is already added or schedule-add</summary>
        </member>
        <member name="F:SharpSvn.SvnConflictReason.Deleted">
            <summary>object is already schedule-delete</summary>
        </member>
        <member name="F:SharpSvn.SvnConflictReason.Obstructed">
            <summary>another object is in the way</summary>
        </member>
        <member name="F:SharpSvn.SvnConflictReason.Edited">
            <summary>local edits are already present</summary>
        </member>
        <member name="F:SharpSvn.SvnConflictType.TreeConflict">
            <summary>tree conflict (on a dir)</summary>
        </member>
        <member name="F:SharpSvn.SvnConflictType.Property">
            <summary>property conflict (on a file or dir)</summary>
        </member>
        <member name="F:SharpSvn.SvnConflictType.Content">
            <summary>textual conflict (on a file)</summary>
        </member>
        <member name="F:SharpSvn.SvnAccept.Working">
            <summary>Aliad for Merged</summary>
        </member>
        <member name="F:SharpSvn.SvnAccept.Merged">
            <summary>Choose the 'merged file'. The result file of the automatic merging; possibly with local edits</summary>
        </member>
        <member name="F:SharpSvn.SvnAccept.Mine">
            <summary>Choose local version on all conflicts; further use auto-merged</summary>
        </member>
        <member name="F:SharpSvn.SvnAccept.Theirs">
            <summary>Choose their on all conflicts; further use auto-merged</summary>
        </member>
        <member name="F:SharpSvn.SvnAccept.MineFull">
            <summary>Choose the local file</summary>
        </member>
        <member name="F:SharpSvn.SvnAccept.TheirsFull">
            <summary>Choose the incoming file</summary>
        </member>
        <member name="F:SharpSvn.SvnAccept.Base">
            <summary>Choose the base file</summary>
        </member>
        <member name="F:SharpSvn.SvnAccept.Postpone">
            <summary>Don't resolve the conflict now.  Let subversion mark the path
'conflicted', so user can run 'svn resolved' later</summary>
        </member>
        <member name="F:SharpSvn.SvnDiffKind.Deleted">
            <summary>A deleted item</summary>
        </member>
        <member name="F:SharpSvn.SvnDiffKind.Modified">
            <summary>An item with text modifications</summary>
        </member>
        <member name="F:SharpSvn.SvnDiffKind.Added">
            <summary>An added item</summary>
        </member>
        <member name="F:SharpSvn.SvnDiffKind.Normal">
            <summary>An item with no text modifications</summary>
        </member>
        <member name="F:SharpSvn.SvnRepositoryCompatibility.Subversion16">
            <summary>Create a repository in Subversion 1.6 compatible format</summary>
        </member>
        <member name="F:SharpSvn.SvnRepositoryCompatibility.Subversion15">
            <summary>Create a repository in Subversion 1.5 compatible format</summary>
        </member>
        <member name="F:SharpSvn.SvnRepositoryCompatibility.Subversion14">
            <summary>Create a repository in Subversion 1.4 compatible format</summary>
        </member>
        <member name="F:SharpSvn.SvnRepositoryCompatibility.Subversion10">
            <summary>Create a repository in a Subversion 1.0-1.3 compatible format</summary>
        </member>
        <member name="F:SharpSvn.SvnRepositoryCompatibility.Default">
            <summary>Create a repository with the latest available format</summary>
        </member>
        <member name="F:SharpSvn.SvnDirEntryItems.SvnListDefault">
            <summary>The fields loaded if no other value is specified</summary>
        </member>
        <member name="F:SharpSvn.SvnDirEntryItems.AllFieldsV15">
            <summary>A combination of all the dirent fields at Subversion 1.5</summary>
        </member>
        <member name="F:SharpSvn.SvnDirEntryItems.LastAuthor">
            <summary>An indication that you are interested in the @c last_author field</summary>
        </member>
        <member name="F:SharpSvn.SvnDirEntryItems.Time">
            <summary>An indication that you are interested in the @c time field</summary>
        </member>
        <member name="F:SharpSvn.SvnDirEntryItems.Revision">
            <summary>An indication that you are interested in the @c created_rev field</summary>
        </member>
        <member name="F:SharpSvn.SvnDirEntryItems.HasProperties">
            <summary>An indication that you are interested in the @c has_props field</summary>
        </member>
        <member name="F:SharpSvn.SvnDirEntryItems.Size">
            <summary>An indication that you are interested in the @c size field</summary>
        </member>
        <member name="F:SharpSvn.SvnDirEntryItems.Kind">
            <summary>An indication that you are interested in the Kind field</summary>
        </member>
        <member name="F:SharpSvn.SvnSchedule.Replace">
            <summary> Slated for replacement (delete + add) </summary>
        </member>
        <member name="F:SharpSvn.SvnSchedule.Delete">
            <summary> Slated for deletion </summary>
        </member>
        <member name="F:SharpSvn.SvnSchedule.Add">
            <summary> Slated for addition </summary>
        </member>
        <member name="F:SharpSvn.SvnSchedule.Normal">
            <summary> Nothing special here </summary>
        </member>
        <member name="F:SharpSvn.SvnStatus.Incomplete">
            <summary>a directory doesn't contain a complete entries list</summary>
        </member>
        <member name="F:SharpSvn.SvnStatus.External">
            <summary>an unversioned path populated by an svn:externals property</summary>
        </member>
        <member name="F:SharpSvn.SvnStatus.Obstructed">
            <summary>an unversioned resource is in the way of the versioned resource</summary>
        </member>
        <member name="F:SharpSvn.SvnStatus.Ignored">
            <summary>is unversioned but configured to be ignored</summary>
        </member>
        <member name="F:SharpSvn.SvnStatus.Conflicted">
            <summary>local mods received conflicting repos mods</summary>
        </member>
        <member name="F:SharpSvn.SvnStatus.Merged">
            <summary>local mods received repos mods</summary>
        </member>
        <member name="F:SharpSvn.SvnStatus.Modified">
            <summary>text or props have been modified</summary>
        </member>
        <member name="F:SharpSvn.SvnStatus.Replaced">
            <summary>was deleted and then re-added</summary>
        </member>
        <member name="F:SharpSvn.SvnStatus.Deleted">
            <summary>scheduled for deletion</summary>
        </member>
        <member name="F:SharpSvn.SvnStatus.Missing">
            <summary>under v.c., but is missing</summary>
        </member>
        <member name="F:SharpSvn.SvnStatus.Added">
            <summary>is scheduled for addition</summary>
        </member>
        <member name="F:SharpSvn.SvnStatus.Normal">
            <summary>exists, but uninteresting</summary>
        </member>
        <member name="F:SharpSvn.SvnStatus.NotVersioned">
            <summary>is not a versioned thing in this wc</summary>
        </member>
        <member name="F:SharpSvn.SvnStatus.None">
            <summary>does not exist</summary>
        </member>
        <member name="F:SharpSvn.SvnStatus.Zero">
            <summary>Zero value. Never used by Subversion</summary>
        </member>
        <member name="F:SharpSvn.SvnNotifyAction.RecordMergeInfo">
            <summary>[[[The mergeinfo on path was updated (Not guaranteed compatible with future Subversion versions!)]]]</summary>
        </member>
        <member name="F:SharpSvn.SvnNotifyAction.UpdateDeleted">
            <summary>[[[ A node below a deleted and tree conflicted directory was updated (Not guaranteed compatible with future Subversion versions!)]]]</summary>
        </member>
        <member name="F:SharpSvn.SvnNotifyAction.UpdateAddDeleted">
            <summary>[[[ A node below a deleted and tree conflicted directory was added (Not guaranteed compatible with future Subversion versions!)]]]</summary>
        </member>
        <member name="F:SharpSvn.SvnNotifyAction.ExternalRemoved">
            <summary>[[[ External removed (Not guaranteed compatible with future Subversion versions!)]]]</summary>
        </member>
        <member name="F:SharpSvn.SvnNotifyAction.UpdateObstruction">
            <summary>[[[ Unversioned obstruction error (Not guaranteed compatible with future Subversion versions!)]]]</summary>
        </member>
        <member name="F:SharpSvn.SvnDepth.Infinity">
            <summary>
D + all descendants (full recursion from D). Updates will pull in any
files or subdirectories not already present; those subdirectories'
this_dir entries will have depth-infinity. Equivalent to the pre-1.5
default update behavior.
</summary>
        </member>
        <member name="F:SharpSvn.SvnDepth.Children">
            <summary>
D + immediate children (D and its entries). Updates will pull in any
files or subdirectories not already present; those subdirectories'
this_dir entries will have depth-empty.
</summary>
        </member>
        <member name="F:SharpSvn.SvnDepth.Files">
            <summary>
D + its file children, but not subdirs.  Updates will pull in any files
not already present, but not subdirectories.
</summary>
        </member>
        <member name="F:SharpSvn.SvnDepth.Empty">
            <summary>
Just the named directory D, no entries. Updates will not pull in any
files or subdirectories not already present
</summary>
        </member>
        <member name="F:SharpSvn.SvnDepth.Exclude">
            <summary>Exclude (remove, whatever) directory D (Currently unused on the client layer)</summary>
        </member>
        <member name="F:SharpSvn.SvnDepth.Unknown">
            <summary>Depth undetermined or ignored</summary>
        </member>
        <member name="M:SharpSvn.Implementation.AprPool.#ctor(apr_pool_t*,System.Boolean)">
            <summary>Attaches to the specified pool</summary>
        </member>
        <member name="M:SharpSvn.Implementation.AprPool.#ctor">
            <summary>Creates a new root pool</summary>
        </member>
        <member name="M:SharpSvn.Implementation.AprPool.#ctor(SharpSvn.Implementation.AprPool)">
            <summary>Creates a childpool within the specified parent pool</summary>
        </member>
        <member name="M:SharpSvn.Implementation.SvnBase.IsNotUri(System.String)">
            <summary>Gets a boolean indicating whether the path is a file path (and not a Uri)</summary>
        </member>
        <member name="P:SharpSvn.Implementation.SvnBase.SmallThreadPool">
            <summary>Gets a small thread-local pool usable for small one shot actions</summary>
            <remarks>The memory allocated by the pool is only freed after the thread is closed; so use with care</remarks>
        </member>
        <member name="T:SharpSvn.Implementation.SvnBase">
            <summary>Main class of Subversion api. This class is responsible for loading the unmanaged api</summary>
            <threadsafety static="true" instance="false" />
        </member>
        <!-- Discarding badly formed XML document comment for member 'T:apr_mmap_t'. -->
        <!-- Discarding badly formed XML document comment for member 'M:serf_bucket_socket_set_read_progress_cb(serf_bucket_t*,=FUNC:System.Void(System.Void*,System.Int64,System.Int64),System.Void*)'. -->
        <!-- Discarding badly formed XML document comment for member 'T:apr_pool_t'. -->
        <!-- Discarding badly formed XML document comment for member 'T:apr_allocator_t'. -->
        <!-- Discarding badly formed XML document comment for member 'T:iovec'. -->
        <!-- Discarding badly formed XML document comment for member 'M:apr_table_overlap(apr_table_t*,apr_table_t!System.Runtime.CompilerServices.IsConst*,System.UInt32)'. -->
        <!-- Discarding badly formed XML document comment for member 'D:apr_fileattrs_t'. -->
        <!-- Discarding badly formed XML document comment for member 'M:svn_node_kind_to_word(svn_node_kind_t)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:svn_depth_to_word(svn_depth_t)'. -->
        <!-- Discarding badly formed XML document comment for member 'T:svn_commit_info_t'. -->
        <!-- Discarding badly formed XML document comment for member 'T:svn_lock_t'. -->
        <!-- Discarding badly formed XML document comment for member 'M:svn_io_open_uniquely_named(apr_file_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,svn_io_file_del_t,apr_pool_t*,apr_pool_t*)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:svn_txdelta_source'. -->
        <!-- Discarding badly formed XML document comment for member 'F:svn_txdelta_target'. -->
        <!-- Discarding badly formed XML document comment for member 'F:svn_txdelta_new'. -->
        <!-- Discarding badly formed XML document comment for member 'M:svn_txdelta_read_svndiff_window(svn_txdelta_window_t**,svn_stream_t*,System.Int32,apr_pool_t*)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:svn_txdelta_skip_svndiff_window(apr_file_t*,System.Int32,apr_pool_t*)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:svn_auth_get_platform_specific_provider(svn_auth_provider_object_t**,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,apr_pool_t*)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:svn_inheritance_to_word(svn_mergeinfo_inheritance_t)'. -->
        <!-- Discarding badly formed XML document comment for member 'F:svn_ra_reporter3_t.abort_report'. -->
        <!-- Discarding badly formed XML document comment for member 'F:svn_diff_fns_t.token_compare'. -->
    </members>
</doc>